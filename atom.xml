<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>简单易懂の现代魔法</title>
  
  
  <link href="https://galudisu.info/atom.xml" rel="self"/>
  
  <link href="https://galudisu.info/"/>
  <updated>2025-04-27T11:59:08.279Z</updated>
  <id>https://galudisu.info/</id>
  
  <author>
    <name>barudisshu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Pekko in Kubernetes, application level solution for Digital Transformation</title>
    <link href="https://galudisu.info/2024/06/13/pekko/pekko-in-kubernetes-for-coap/"/>
    <id>https://galudisu.info/2024/06/13/pekko/pekko-in-kubernetes-for-coap/</id>
    <published>2024-06-13T02:44:59.000Z</published>
    <updated>2025-04-27T11:59:08.279Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Digital-Reform"><a class="header-anchor" href="#Digital-Reform">¶</a>Digital Reform</h2><p>There was a vary circumstances from digital governance, industry, manufacture and medicine, and the booming of<br>new business models has stimulated enterprises to accelerate <strong>digital transformation</strong> for better company management<br>and customer service, which further promotes the upgrading and optimization of the Chinese digital economy.</p><span id="more"></span><h2 id="Solution-Cloud-Native"><a class="header-anchor" href="#Solution-Cloud-Native">¶</a>Solution - Cloud Native</h2><p>What’s internet essentially?</p><blockquote><p>移动互联网络应该是<br>一个异步的由事件流驱动的巨大的状态机</p></blockquote><p>There are many reason that we are migrating business service into Cloud Native. One of most important reason is that we<br>need to reduce our costs. Furthermore, as our productivity increases, we will have a vision on the IoT service.</p><p><img src="iot-visable.png" alt="Facets of design in IoT-a good product requires integrated thinking across all of these"></p><p>the digital reform indicate that in the future, the connected things shall be self-diagnosis, reliable, lower-bandwidth,<br>low-carbon, more intelligent, and have a better version management.</p><h2 id="Why-Pekko-if-you-have-kubernetes"><a class="header-anchor" href="#Why-Pekko-if-you-have-kubernetes">¶</a>Why Pekko if you have kubernetes?</h2><blockquote><p>Kubernetes is not the application layer.</p></blockquote><p>As we know, K8S is covering the cluster orchestration, supporting auto-scaling and resilience on the nodes or the pods<br>level.</p><p>How the auto-scaling and self-healing will be handled within the application instances or node?</p><p>Kubernetes will not be able to help with that, another layer such as Pekko need to look after the application<br>communication, remoting, concurrency &amp; parallel processing, responding to application failure, implementing resilience<br>design patterns such as bulk-heading and circuit-breakers on the application node level.</p><p>Non-function design in Kubernetes is stupid, such like GEO-Red, distributed-lock for business, transactions, entity-id<br>tracing, overload protect, data desensitization, Monitoring… etc.</p><p>In short, Kubernetes is looking after elasticity, auto-scaling and resilience outside the nodes while Pekko and other<br>reactive application tools are looking after those within the application layer and the nodes.</p><p>After all, Kubernetes will not be able to fix a poorly designed application that is prone to failure and lacking<br>resilience and elasticity.</p><p>We need a <strong>REAL</strong> <a href="https://www.reactivemanifesto.org/">reactive manifesto</a> application, and below Lightbend diagrams<br>help with understanding the concept:</p><p><img src="pekko-cloud.png" alt="Cloud Native"></p><p><img src="pekko-pod.png" alt="Cloud Pekko"></p><p>So, how to build stateful, resilient and responsive applications in the Cloud?</p><h2 id="Sharding-your-X"><a class="header-anchor" href="#Sharding-your-X">¶</a>Sharding your X</h2><h2 id="Pekko-roles-as-Kubernetes-resource-mapping"><a class="header-anchor" href="#Pekko-roles-as-Kubernetes-resource-mapping">¶</a>Pekko roles as Kubernetes resource mapping</h2><p>We use both Kubernetes Statefulset and Deployment. As we can use Statefulset for the seed nodes, mark as role <code>seed</code>,<br>and Deployment for scaling out worker nodes, marks role <code>worker</code>. In this way, we can maintaion stable and ordered DNS<br>names for the seed nodes, while retain the ability to start multiple Pekko nodes in parallel when scale with<br>Deployment.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  seeds  : Statefulset</span><br><span class="line">  workers: Deployment</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="Gossip.png" alt=""></p><p>We will setup env from Kubernetes and deliver into <code>application.conf</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cluster &#123;</span><br><span class="line">  # This can also be defined as Java system properties when starting the JVM using the following syntax:</span><br><span class="line">  #</span><br><span class="line">  # -Dpekko.cluster.seed-nodes.0=pekko://Pekko@seed1:2551</span><br><span class="line">  # -Dpekko.cluster.seed-nodes.1=pekko://Pekko@seed2:2551</span><br><span class="line">  #</span><br><span class="line">  seed-nodes = [</span><br><span class="line">    &quot;pekko://Pekko@127.0.0.1:2551&quot;,</span><br><span class="line">    &quot;pekko://Pekko@127.0.0.1:2552&quot;]</span><br><span class="line">  seed-nodes = $&#123;?SEED_NODES&#125;</span><br><span class="line">  roles = [&quot;seed&quot;, &quot;sharding&quot;]</span><br><span class="line">  roles = $&#123;?ROLES&#125;</span><br><span class="line">  sharding.role = &quot;sharding&quot;</span><br><span class="line">  sharding.role = $&#123;?SHARDING_ROLE&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Statefulset-for-entry-seeds"><a class="header-anchor" href="#Statefulset-for-entry-seeds">¶</a>Statefulset for entry -&gt; seeds</h3><p>especially, mTLS in istio. We will map it for traffic entries as a headless service. And the <code>seed</code>-ed service won’t<br>do anything. The resource definition looks like a regular service, but clusterIP set to None:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"> <span class="attr">name:</span> <span class="string">pekko-seed</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">2551</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">2551</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">5684</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">UDP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">5684</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">run:</span> <span class="string">pekko-seed</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="string">None</span></span><br></pre></td></tr></table></figure><p>Every Pekko seed node instance in the Statefulset can be addressed via DNS as <code>$&#123;SEED_NODE_NAME&#125;.pekko-seed</code>.</p><p>Then, create Statefulset of seed nodes:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">run:</span> <span class="string">pekko-seed</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pekko-seed</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">pekko-seed</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">pekko-seed</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">pekko-seed</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">pekko-seed</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">localhost:32000/pekko-jdk17-slim:latest</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAME</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">fieldRef:</span></span><br><span class="line">              <span class="attr">fieldPath:</span> <span class="string">metadata.name</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SEED_NODES.0</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">pekko://Pekko@pekko-seed-0.pekko-seed:2551</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SEED_NODES.1</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">pekko://Pekko@pekko-seed-1.pekko-seed:2551</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ROLES.0</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">seed</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SHARDING_ROLE</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">sharding</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">HOST_NAME</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">$(POD_NAME).kaxis-seed</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">HOST_PORT</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">&quot;4684&quot;</span></span><br><span class="line">        <span class="attr">command:</span> [<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;HOST_NAME=$&#123;POD_NAME&#125;.pekko-seed java -jar /app/app.jar&quot;</span>]</span><br><span class="line">        <span class="attr">livenessProbe:</span></span><br><span class="line">          <span class="attr">tcpSocket:</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">2551</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">2551</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">5684</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">UDP</span></span><br></pre></td></tr></table></figure><p>First of all, every seed node will have a stable name (e.g. pekko-seed-0, pekko-ssed-1). This name is known as the<br>Kubernetes pod name. And then use it to construct the addressable DNS name, such as <code>pekko-seed-0.pekko-seed</code>.</p><p>Once deployment the Pekko seed nodes:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f pekko-seeds.yaml</span><br></pre></td></tr></table></figure><p>We will seed the seeds that were created sequentially:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pods</span><br><span class="line">NAME                          READY     STATUS    RESTARTS   AGE</span><br><span class="line">pekko-seed-0                   1/1       Running   0          15h</span><br><span class="line">pekko-seed-1                   1/1       Running   0          15h</span><br></pre></td></tr></table></figure><p>As mentioned before, the seed nodes won’t do anything, below diagram show it just play the role for traffic transform,<br>cluster communication and cluster init.</p><p>This part is very-very important!! for vary business service, such like coap, diameter protocol based on udp that<br>Kubernetes doesn’t provide a full-stack support for loadbalancer.</p><h3 id="Deployment-for-loadbancer-workers"><a class="header-anchor" href="#Deployment-for-loadbancer-workers">¶</a>Deployment for loadbancer -&gt; workers</h3><p>Next, deploy the worker nodes using Deployment. It use the Downward API to assign the Pod IP address as te Pekko node’s<br>hostname.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pekko-worker</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">pekko-worker</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">pekko-worker</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">terminationGracePeriodSeconds:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">pekko-worker</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">localhost:32000/pekko-jdk17-slim:latest</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">Always</span></span><br><span class="line">          <span class="attr">resources:</span></span><br><span class="line">            <span class="attr">requests:</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">&quot;1Gi&quot;</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">&quot;250m&quot;</span></span><br><span class="line">            <span class="attr">limits:</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">&quot;2Gi&quot;</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">&quot;500m&quot;</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAME</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">status.podIP</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SEED_NODES.0</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">pekko://Pekko@pekko-seed-0.pekko-seed:4684</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SEED_NODES.1</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">pekko://Pekko@pekko-seed-1.pekko-seed:4684</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ROLES.0</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">sharding</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SHARDING_ROLE</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">sharding</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">HOST_NAME</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&quot;$(POD_NAME)&quot;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">HOST_PORT</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&quot;4684&quot;</span></span><br><span class="line">          <span class="attr">livenessProbe:</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">6684</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">health/alive</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">30</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">20</span></span><br><span class="line">          <span class="attr">readinessProbe:</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">6684</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">health/ready</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">30</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">20</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">5684</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">tcp-udp</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">4684</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">http-gossip</span></span><br><span class="line">      <span class="attr">dnsPolicy:</span> <span class="string">ClusterFirst</span></span><br><span class="line">      <span class="attr">imagePullSecrets:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">regcred</span></span><br></pre></td></tr></table></figure><p>Once deloyed, you can validate that all nodes are up and running:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">kubectl get pods</span></span><br><span class="line">NAME                           READY     STATUS    RESTARTS   AGE</span><br><span class="line">pekko-seed-0                    1/1       Running   0          8s</span><br><span class="line">pekko-seed-1                    1/1       Running   0          6s</span><br><span class="line">pekko-worker-2263404214-8c266   1/1       Running   0          8s</span><br><span class="line">pekko-worker-2263404214-9ws3k   1/1       Running   0          8s</span><br><span class="line">pekko-worker-2263404214-f2tp3   1/1       Running   0          8s</span><br><span class="line">pekko-worker-2263404214-lkvz3   1/1       Running   0          8s</span><br></pre></td></tr></table></figure><p>You can validate that the nodes have joined the cluster by inspecting the logs of any of the Pekko nodes. For<br>example, to tail the first seed node’s log:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">kubect logs -f pekko-seed-0</span><br><span class="line">[INFO] [02/12/2017 15:36:53.568] [main] [pekko.remote.Remoting] Starting remoting</span><br><span class="line">[INFO] [02/12/2017 15:36:53.707] [main] [pekko.remote.Remoting] Remoting started; listening on addresses :[pekko.tcp://Pekko@pekko-seed-0.akka-seed:2551]</span><br><span class="line">...</span><br><span class="line">[INFO] [02/12/2017 15:37:05.101] [ClusterSystem-pekko.actor.default-dispatcher-16] [pekko.cluster.Cluster(pekko://ClusterSystem)] Cluster Node [pekko.tcp://Pekko@pekko-seed-0.pekko-seed:2551] - Node [pekko.tcp://Pekko@pekko-seed-1.pekko-seed:2551] is JOINING, roles []</span><br><span class="line">[INFO] [02/12/2017 15:37:06.854] [ClusterSystem-pekko.actor.default-dispatcher-16] [pekko://ClusterSystem/user/$a] Member is Up: Member(address = akka.tcp://Pekko@10.44.2.10:2551, status = Up)</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>Also, you can simply attach Kubernetes HPA:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: autoscaling/v1</span><br><span class="line">kind: HorizontalPodAutoscaler</span><br><span class="line">metadata:</span><br><span class="line">  name: pekko-worker</span><br><span class="line">spec:</span><br><span class="line">  maxReplicas: 3</span><br><span class="line">  minReplicas: 1</span><br><span class="line">  scaleTargetRef:</span><br><span class="line">    apiVersion: apps/v1</span><br><span class="line">    kind: Deployment</span><br><span class="line">    name: pekko-worker</span><br><span class="line">  targetCPUUtilizationPercentage: 15</span><br></pre></td></tr></table></figure><h2 id="Health-check"><a class="header-anchor" href="#Health-check">¶</a>Health check</h2><p>Pekko already implementation cluster health check management:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">management</span></span><br><span class="line">management &#123;</span><br><span class="line">  http.hostname = 127.0.0.1</span><br><span class="line">  http.hostname = $&#123;?HOST_NAME&#125;</span><br><span class="line">  http.bind-hostname = 0.0.0.0</span><br><span class="line">  http.bind-hostname = $&#123;?HOST_NAME&#125;</span><br><span class="line">  health-checks &#123;</span><br><span class="line">    readiness-path = &quot;health/ready&quot;</span><br><span class="line">    liveness-path = &quot;health/alive&quot;</span><br><span class="line">    readiness-checks &#123;</span><br><span class="line">      # Default health check for cluster.</span><br><span class="line">      cluster-membership = &quot;org.apache.pekko.management.cluster.javadsl.ClusterMembershipCheck&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Summary"><a class="header-anchor" href="#Summary">¶</a>Summary</h2><p>Please check my own repo in <a href="https://github.com/barudisshu/kaxis">GitHub</a>, if you need more investigate.</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Digital-Reform&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#Digital-Reform&quot;&gt;¶&lt;/a&gt;Digital Reform&lt;/h2&gt;
&lt;p&gt;There was a vary circumstances from digital governance, industry, manufacture and medicine, and the booming of&lt;br&gt;
new business models has stimulated enterprises to accelerate &lt;strong&gt;digital transformation&lt;/strong&gt; for better company management&lt;br&gt;
and customer service, which further promotes the upgrading and optimization of the Chinese digital economy.&lt;/p&gt;</summary>
    
    
    <content src="https://galudisu.info/%3Ch2%20id=%22Digital-Reform%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Digital-Reform%22%3E%C2%B6%3C/a%3EDigital%20Reform%3C/h2%3E%3Cp%3EThere%20was%20a%20vary%20circumstances%20from%20digital%20governance,%20industry,%20manufacture%20and%20medicine,%20and%20the%20booming%20of%3Cbr%3Enew%20business%20models%20has%20stimulated%20enterprises%20to%20accelerate%20%3Cstrong%3Edigital%20transformation%3C/strong%3E%20for%20better%20company%20management%3Cbr%3Eand%20customer%20service,%20which%20further%20promotes%20the%20upgrading%20and%20optimization%20of%20the%20Chinese%20digital%20economy.%3C/p%3E%3Cspan%20id=%22more%22%3E%3C/span%3E%3Ch2%20id=%22Solution-Cloud-Native%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Solution-Cloud-Native%22%3E%C2%B6%3C/a%3ESolution%20-%20Cloud%20Native%3C/h2%3E%3Cp%3EWhat%E2%80%99s%20internet%20essentially?%3C/p%3E%3Cblockquote%3E%3Cp%3E%E7%A7%BB%E5%8A%A8%E4%BA%92%E8%81%94%E7%BD%91%E7%BB%9C%E5%BA%94%E8%AF%A5%E6%98%AF%3Cbr%3E%E4%B8%80%E4%B8%AA%E5%BC%82%E6%AD%A5%E7%9A%84%E7%94%B1%E4%BA%8B%E4%BB%B6%E6%B5%81%E9%A9%B1%E5%8A%A8%E7%9A%84%E5%B7%A8%E5%A4%A7%E7%9A%84%E7%8A%B6%E6%80%81%E6%9C%BA%3C/p%3E%3C/blockquote%3E%3Cp%3EThere%20are%20many%20reason%20that%20we%20are%20migrating%20business%20service%20into%20Cloud%20Native.%20One%20of%20most%20important%20reason%20is%20that%20we%3Cbr%3Eneed%20to%20reduce%20our%20costs.%20Furthermore,%20as%20our%20productivity%20increases,%20we%20will%20have%20a%20vision%20on%20the%20IoT%20service.%3C/p%3E%3Cp%3E%3Cimg%20src=%22iot-visable.png%22%20alt=%22Facets%20of%20design%20in%20IoT-a%20good%20product%20requires%20integrated%20thinking%20across%20all%20of%20these%22%3E%3C/p%3E%3Cp%3Ethe%20digital%20reform%20indicate%20that%20in%20the%20future,%20the%20connected%20things%20shall%20be%20self-diagnosis,%20reliable,%20lower-bandwidth,%3Cbr%3Elow-carbon,%20more%20intelligent,%20and%20have%20a%20better%20version%20management.%3C/p%3E%3Ch2%20id=%22Why-Pekko-if-you-have-kubernetes%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Why-Pekko-if-you-have-kubernetes%22%3E%C2%B6%3C/a%3EWhy%20Pekko%20if%20you%20have%20kubernetes?%3C/h2%3E%3Cblockquote%3E%3Cp%3EKubernetes%20is%20not%20the%20application%20layer.%3C/p%3E%3C/blockquote%3E%3Cp%3EAs%20we%20know,%20K8S%20is%20covering%20the%20cluster%20orchestration,%20supporting%20auto-scaling%20and%20resilience%20on%20the%20nodes%20or%20the%20pods%3Cbr%3Elevel.%3C/p%3E%3Cp%3EHow%20the%20auto-scaling%20and%20self-healing%20will%20be%20handled%20within%20the%20application%20instances%20or%20node?%3C/p%3E%3Cp%3EKubernetes%20will%20not%20be%20able%20to%20help%20with%20that,%20another%20layer%20such%20as%20Pekko%20need%20to%20look%20after%20the%20application%3Cbr%3Ecommunication,%20remoting,%20concurrency%20&amp;amp;%20parallel%20processing,%20responding%20to%20application%20failure,%20implementing%20resilience%3Cbr%3Edesign%20patterns%20such%20as%20bulk-heading%20and%20circuit-breakers%20on%20the%20application%20node%20level.%3C/p%3E%3Cp%3ENon-function%20design%20in%20Kubernetes%20is%20stupid,%20such%20like%20GEO-Red,%20distributed-lock%20for%20business,%20transactions,%20entity-id%3Cbr%3Etracing,%20overload%20protect,%20data%20desensitization,%20Monitoring%E2%80%A6%20etc.%3C/p%3E%3Cp%3EIn%20short,%20Kubernetes%20is%20looking%20after%20elasticity,%20auto-scaling%20and%20resilience%20outside%20the%20nodes%20while%20Pekko%20and%20other%3Cbr%3Ereactive%20application%20tools%20are%20looking%20after%20those%20within%20the%20application%20layer%20and%20the%20nodes.%3C/p%3E%3Cp%3EAfter%20all,%20Kubernetes%20will%20not%20be%20able%20to%20fix%20a%20poorly%20designed%20application%20that%20is%20prone%20to%20failure%20and%20lacking%3Cbr%3Eresilience%20and%20elasticity.%3C/p%3E%3Cp%3EWe%20need%20a%20%3Cstrong%3EREAL%3C/strong%3E%20%3Ca%20href=%22https:/www.reactivemanifesto.org/%22%3Ereactive%20manifesto%3C/a%3E%20application,%20and%20below%20Lightbend%20diagrams%3Cbr%3Ehelp%20with%20understanding%20the%20concept:%3C/p%3E%3Cp%3E%3Cimg%20src=%22pekko-cloud.png%22%20alt=%22Cloud%20Native%22%3E%3C/p%3E%3Cp%3E%3Cimg%20src=%22pekko-pod.png%22%20alt=%22Cloud%20Pekko%22%3E%3C/p%3E%3Cp%3ESo,%20how%20to%20build%20stateful,%20resilient%20and%20responsive%20applications%20in%20the%20Cloud?%3C/p%3E%3Ch2%20id=%22Sharding-your-X%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Sharding-your-X%22%3E%C2%B6%3C/a%3ESharding%20your%20X%3C/h2%3E%3Ch2%20id=%22Pekko-roles-as-Kubernetes-resource-mapping%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Pekko-roles-as-Kubernetes-resource-mapping%22%3E%C2%B6%3C/a%3EPekko%20roles%20as%20Kubernetes%20resource%20mapping%3C/h2%3E%3Cp%3EWe%20use%20both%20Kubernetes%20Statefulset%20and%20Deployment.%20As%20we%20can%20use%20Statefulset%20for%20the%20seed%20nodes,%20mark%20as%20role%20%3Ccode%3Eseed%3C/code%3E,%3Cbr%3Eand%20Deployment%20for%20scaling%20out%20worker%20nodes,%20marks%20role%20%3Ccode%3Eworker%3C/code%3E.%20In%20this%20way,%20we%20can%20maintaion%20stable%20and%20ordered%20DNS%3Cbr%3Enames%20for%20the%20seed%20nodes,%20while%20retain%20the%20ability%20to%20start%20multiple%20Pekko%20nodes%20in%20parallel%20when%20scale%20with%3Cbr%3EDeployment.%3C/p%3E%3Cfigure%20class=%22highlight%20plaintext%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20seeds%20%20:%20Statefulset%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20workers:%20Deployment%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%3Cimg%20src=%22Gossip.png%22%20alt=%22%22%3E%3C/p%3E%3Cp%3EWe%20will%20setup%20env%20from%20Kubernetes%20and%20deliver%20into%20%3Ccode%3Eapplication.conf%3C/code%3E%3C/p%3E%3Cfigure%20class=%22highlight%20plaintext%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3Ecluster%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20#%20This%20can%20also%20be%20defined%20as%20Java%20system%20properties%20when%20starting%20the%20JVM%20using%20the%20following%20syntax:%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20#%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20#%20-Dpekko.cluster.seed-nodes.0=pekko:/Pekko@seed1:2551%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20#%20-Dpekko.cluster.seed-nodes.1=pekko:/Pekko@seed2:2551%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20#%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20seed-nodes%20=%20[%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;quot;pekko:/Pekko@127.0.0.1:2551&amp;quot;,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;quot;pekko:/Pekko@127.0.0.1:2552&amp;quot;]%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20seed-nodes%20=%20$&amp;#123;?SEED_NODES&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20roles%20=%20[&amp;quot;seed&amp;quot;,%20&amp;quot;sharding&amp;quot;]%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20roles%20=%20$&amp;#123;?ROLES&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20sharding.role%20=%20&amp;quot;sharding&amp;quot;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20sharding.role%20=%20$&amp;#123;?SHARDING_ROLE&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Ch3%20id=%22Statefulset-for-entry-seeds%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Statefulset-for-entry-seeds%22%3E%C2%B6%3C/a%3EStatefulset%20for%20entry%20-&amp;gt;%20seeds%3C/h3%3E%3Cp%3Eespecially,%20mTLS%20in%20istio.%20We%20will%20map%20it%20for%20traffic%20entries%20as%20a%20headless%20service.%20And%20the%20%3Ccode%3Eseed%3C/code%3E-ed%20service%20won%E2%80%99t%3Cbr%3Edo%20anything.%20The%20resource%20definition%20looks%20like%20a%20regular%20service,%20but%20clusterIP%20set%20to%20None:%3C/p%3E%3Cfigure%20class=%22highlight%20yaml%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22attr%22%3EapiVersion:%3C/span%3E%20%3Cspan%20class=%22string%22%3Ev1%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22attr%22%3Ekind:%3C/span%3E%20%3Cspan%20class=%22string%22%3EService%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22attr%22%3Emetadata:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%3Cspan%20class=%22attr%22%3Ename:%3C/span%3E%20%3Cspan%20class=%22string%22%3Epekko-seed%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22attr%22%3Espec:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%3Cspan%20class=%22attr%22%3Eports:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%3Cspan%20class=%22bullet%22%3E-%3C/span%3E%20%3Cspan%20class=%22attr%22%3Eport:%3C/span%3E%20%3Cspan%20class=%22number%22%3E2551%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22attr%22%3Eprotocol:%3C/span%3E%20%3Cspan%20class=%22string%22%3ETCP%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22attr%22%3EtargetPort:%3C/span%3E%20%3Cspan%20class=%22number%22%3E2551%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%3Cspan%20class=%22bullet%22%3E-%3C/span%3E%20%3Cspan%20class=%22attr%22%3Eport:%3C/span%3E%20%3Cspan%20class=%22number%22%3E5684%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22attr%22%3Eprotocol:%3C/span%3E%20%3Cspan%20class=%22string%22%3EUDP%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22attr%22%3EtargetPort:%3C/span%3E%20%3Cspan%20class=%22number%22%3E5684%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%3Cspan%20class=%22attr%22%3Eselector:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22attr%22%3Erun:%3C/span%3E%20%3Cspan%20class=%22string%22%3Epekko-seed%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%3Cspan%20class=%22attr%22%3EclusterIP:%3C/span%3E%20%3Cspan%20class=%22string%22%3ENone%3C/span%3E%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3EEvery%20Pekko%20seed%20node%20instance%20in%20the%20Statefulset%20can%20be%20addressed%20via%20DNS%20as%20%3Ccode%3E$&amp;#123;SEED_NODE_NAME&amp;#125;.pekko-seed%3C/code%3E.%3C/p%3E%3Cp%3EThen,%20create%20Statefulset%20of%20seed%20nodes:%3C/p%3E%3Cfigure%20class=%22highlight%20yaml%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E19%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E20%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E21%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E22%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E23%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E24%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E25%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E26%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E27%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E28%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E29%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E30%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E31%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E32%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E33%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E34%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E35%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E36%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E37%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E38%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E39%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E40%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E41%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E42%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E43%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E44%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E45%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E46%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22attr%22%3EapiVersion:%3C/span%3E%20%3Cspan%20class=%22string%22%3Eapps/v1beta1%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22attr%22%3Ekind:%3C/span%3E%20%3Cspan%20class=%22string%22%3EStatefulSet%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22attr%22%3Emetadata:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%3Cspan%20class=%22attr%22%3Elabels:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22attr%22%3Erun:%3C/span%3E%20%3Cspan%20class=%22string%22%3Epekko-seed%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%3Cspan%20class=%22attr%22%3Ename:%3C/span%3E%20%3Cspan%20class=%22string%22%3Epekko-seed%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22attr%22%3Espec:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%3Cspan%20class=%22attr%22%3EserviceName:%3C/span%3E%20%3Cspan%20class=%22string%22%3Epekko-seed%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%3Cspan%20class=%22attr%22%3Ereplicas:%3C/span%3E%20%3Cspan%20class=%22number%22%3E2%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%3Cspan%20class=%22attr%22%3Eselector:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22attr%22%3EmatchLabels:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Erun:%3C/span%3E%20%3Cspan%20class=%22string%22%3Epekko-seed%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%3Cspan%20class=%22attr%22%3Etemplate:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22attr%22%3Emetadata:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Elabels:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Erun:%3C/span%3E%20%3Cspan%20class=%22string%22%3Epekko-seed%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22attr%22%3Espec:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Econtainers:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%3Cspan%20class=%22bullet%22%3E-%3C/span%3E%20%3Cspan%20class=%22attr%22%3Ename:%3C/span%3E%20%3Cspan%20class=%22string%22%3Epekko-seed%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Eimage:%3C/span%3E%20%3Cspan%20class=%22string%22%3Elocalhost:32000/pekko-jdk17-slim:latest%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Eenv:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22bullet%22%3E-%3C/span%3E%20%3Cspan%20class=%22attr%22%3Ename:%3C/span%3E%20%3Cspan%20class=%22string%22%3EPOD_NAME%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3EvalueFrom:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3EfieldRef:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3EfieldPath:%3C/span%3E%20%3Cspan%20class=%22string%22%3Emetadata.name%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22bullet%22%3E-%3C/span%3E%20%3Cspan%20class=%22attr%22%3Ename:%3C/span%3E%20%3Cspan%20class=%22string%22%3ESEED_NODES.0%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Evalue:%3C/span%3E%20%3Cspan%20class=%22string%22%3Epekko:/Pekko@pekko-seed-0.pekko-seed:2551%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22bullet%22%3E-%3C/span%3E%20%3Cspan%20class=%22attr%22%3Ename:%3C/span%3E%20%3Cspan%20class=%22string%22%3ESEED_NODES.1%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Evalue:%3C/span%3E%20%3Cspan%20class=%22string%22%3Epekko:/Pekko@pekko-seed-1.pekko-seed:2551%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22bullet%22%3E-%3C/span%3E%20%3Cspan%20class=%22attr%22%3Ename:%3C/span%3E%20%3Cspan%20class=%22string%22%3EROLES.0%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Evalue:%3C/span%3E%20%3Cspan%20class=%22string%22%3Eseed%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22bullet%22%3E-%3C/span%3E%20%3Cspan%20class=%22attr%22%3Ename:%3C/span%3E%20%3Cspan%20class=%22string%22%3ESHARDING_ROLE%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Evalue:%3C/span%3E%20%3Cspan%20class=%22string%22%3Esharding%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22bullet%22%3E-%3C/span%3E%20%3Cspan%20class=%22attr%22%3Ename:%3C/span%3E%20%3Cspan%20class=%22string%22%3EHOST_NAME%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Evalue:%3C/span%3E%20%3Cspan%20class=%22string%22%3E$(POD_NAME).kaxis-seed%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22bullet%22%3E-%3C/span%3E%20%3Cspan%20class=%22attr%22%3Ename:%3C/span%3E%20%3Cspan%20class=%22string%22%3EHOST_PORT%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Evalue:%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;quot;4684&amp;quot;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Ecommand:%3C/span%3E%20[%3Cspan%20class=%22string%22%3E&amp;quot;/bin/sh&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;quot;-c&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;quot;HOST_NAME=$&amp;#123;POD_NAME&amp;#125;.pekko-seed%20java%20-jar%20/app/app.jar&amp;quot;%3C/span%3E]%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3ElivenessProbe:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3EtcpSocket:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Eport:%3C/span%3E%20%3Cspan%20class=%22number%22%3E2551%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Eports:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22bullet%22%3E-%3C/span%3E%20%3Cspan%20class=%22attr%22%3EcontainerPort:%3C/span%3E%20%3Cspan%20class=%22number%22%3E2551%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Eprotocol:%3C/span%3E%20%3Cspan%20class=%22string%22%3ETCP%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22bullet%22%3E-%3C/span%3E%20%3Cspan%20class=%22attr%22%3EcontainerPort:%3C/span%3E%20%3Cspan%20class=%22number%22%3E5684%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Eprotocol:%3C/span%3E%20%3Cspan%20class=%22string%22%3EUDP%3C/span%3E%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3EFirst%20of%20all,%20every%20seed%20node%20will%20have%20a%20stable%20name%20(e.g.%20pekko-seed-0,%20pekko-ssed-1).%20This%20name%20is%20known%20as%20the%3Cbr%3EKubernetes%20pod%20name.%20And%20then%20use%20it%20to%20construct%20the%20addressable%20DNS%20name,%20such%20as%20%3Ccode%3Epekko-seed-0.pekko-seed%3C/code%3E.%3C/p%3E%3Cp%3EOnce%20deployment%20the%20Pekko%20seed%20nodes:%3C/p%3E%3Cfigure%20class=%22highlight%20shell%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3Ekubectl%20apply%20-f%20pekko-seeds.yaml%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3EWe%20will%20seed%20the%20seeds%20that%20were%20created%20sequentially:%3C/p%3E%3Cfigure%20class=%22highlight%20shell%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3Ekubectl%20get%20pods%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ENAME%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20READY%20%20%20%20%20STATUS%20%20%20%20RESTARTS%20%20%20AGE%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Epekko-seed-0%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%201/1%20%20%20%20%20%20%20Running%20%20%200%20%20%20%20%20%20%20%20%20%2015h%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Epekko-seed-1%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%201/1%20%20%20%20%20%20%20Running%20%20%200%20%20%20%20%20%20%20%20%20%2015h%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3EAs%20mentioned%20before,%20the%20seed%20nodes%20won%E2%80%99t%20do%20anything,%20below%20diagram%20show%20it%20just%20play%20the%20role%20for%20traffic%20transform,%3Cbr%3Ecluster%20communication%20and%20cluster%20init.%3C/p%3E%3Cp%3EThis%20part%20is%20very-very%20important!!%20for%20vary%20business%20service,%20such%20like%20coap,%20diameter%20protocol%20based%20on%20udp%20that%3Cbr%3EKubernetes%20doesn%E2%80%99t%20provide%20a%20full-stack%20support%20for%20loadbalancer.%3C/p%3E%3Ch3%20id=%22Deployment-for-loadbancer-workers%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Deployment-for-loadbancer-workers%22%3E%C2%B6%3C/a%3EDeployment%20for%20loadbancer%20-&amp;gt;%20workers%3C/h3%3E%3Cp%3ENext,%20deploy%20the%20worker%20nodes%20using%20Deployment.%20It%20use%20the%20Downward%20API%20to%20assign%20the%20Pod%20IP%20address%20as%20te%20Pekko%20node%E2%80%99s%3Cbr%3Ehostname.%3C/p%3E%3Cfigure%20class=%22highlight%20yaml%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E19%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E20%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E21%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E22%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E23%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E24%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E25%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E26%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E27%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E28%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E29%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E30%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E31%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E32%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E33%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E34%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E35%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E36%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E37%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E38%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E39%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E40%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E41%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E42%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E43%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E44%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E45%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E46%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E47%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E48%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E49%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E50%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E51%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E52%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E53%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E54%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E55%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E56%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E57%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E58%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E59%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E60%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E61%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E62%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E63%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22attr%22%3EapiVersion:%3C/span%3E%20%3Cspan%20class=%22string%22%3Eapps/v1%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22attr%22%3Ekind:%3C/span%3E%20%3Cspan%20class=%22string%22%3EDeployment%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22attr%22%3Emetadata:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%3Cspan%20class=%22attr%22%3Ename:%3C/span%3E%20%3Cspan%20class=%22string%22%3Epekko-worker%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22attr%22%3Espec:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%3Cspan%20class=%22attr%22%3Eselector:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22attr%22%3EmatchLabels:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Eapp:%3C/span%3E%20%3Cspan%20class=%22string%22%3Epekko-worker%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%3Cspan%20class=%22attr%22%3Ereplicas:%3C/span%3E%20%3Cspan%20class=%22number%22%3E3%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%3Cspan%20class=%22attr%22%3Etemplate:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22attr%22%3Emetadata:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Elabels:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Eapp:%3C/span%3E%20%3Cspan%20class=%22string%22%3Epekko-worker%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22attr%22%3Espec:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3EterminationGracePeriodSeconds:%3C/span%3E%20%3Cspan%20class=%22number%22%3E10%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Econtainers:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22bullet%22%3E-%3C/span%3E%20%3Cspan%20class=%22attr%22%3Ename:%3C/span%3E%20%3Cspan%20class=%22string%22%3Epekko-worker%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Eimage:%3C/span%3E%20%3Cspan%20class=%22string%22%3Elocalhost:32000/pekko-jdk17-slim:latest%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3EimagePullPolicy:%3C/span%3E%20%3Cspan%20class=%22string%22%3EAlways%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Eresources:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Erequests:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Ememory:%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;quot;1Gi&amp;quot;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Ecpu:%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;quot;250m&amp;quot;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Elimits:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Ememory:%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;quot;2Gi&amp;quot;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Ecpu:%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;quot;500m&amp;quot;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Eenv:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22bullet%22%3E-%3C/span%3E%20%3Cspan%20class=%22attr%22%3Ename:%3C/span%3E%20%3Cspan%20class=%22string%22%3EPOD_NAME%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3EvalueFrom:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3EfieldRef:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3EfieldPath:%3C/span%3E%20%3Cspan%20class=%22string%22%3Estatus.podIP%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22bullet%22%3E-%3C/span%3E%20%3Cspan%20class=%22attr%22%3Ename:%3C/span%3E%20%3Cspan%20class=%22string%22%3ESEED_NODES.0%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Evalue:%3C/span%3E%20%3Cspan%20class=%22string%22%3Epekko:/Pekko@pekko-seed-0.pekko-seed:4684%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22bullet%22%3E-%3C/span%3E%20%3Cspan%20class=%22attr%22%3Ename:%3C/span%3E%20%3Cspan%20class=%22string%22%3ESEED_NODES.1%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Evalue:%3C/span%3E%20%3Cspan%20class=%22string%22%3Epekko:/Pekko@pekko-seed-1.pekko-seed:4684%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22bullet%22%3E-%3C/span%3E%20%3Cspan%20class=%22attr%22%3Ename:%3C/span%3E%20%3Cspan%20class=%22string%22%3EROLES.0%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Evalue:%3C/span%3E%20%3Cspan%20class=%22string%22%3Esharding%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22bullet%22%3E-%3C/span%3E%20%3Cspan%20class=%22attr%22%3Ename:%3C/span%3E%20%3Cspan%20class=%22string%22%3ESHARDING_ROLE%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Evalue:%3C/span%3E%20%3Cspan%20class=%22string%22%3Esharding%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22bullet%22%3E-%3C/span%3E%20%3Cspan%20class=%22attr%22%3Ename:%3C/span%3E%20%3Cspan%20class=%22string%22%3EHOST_NAME%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Evalue:%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;quot;$(POD_NAME)&amp;quot;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22bullet%22%3E-%3C/span%3E%20%3Cspan%20class=%22attr%22%3Ename:%3C/span%3E%20%3Cspan%20class=%22string%22%3EHOST_PORT%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Evalue:%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;quot;4684&amp;quot;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3ElivenessProbe:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3EhttpGet:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Eport:%3C/span%3E%20%3Cspan%20class=%22number%22%3E6684%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Epath:%3C/span%3E%20%3Cspan%20class=%22string%22%3Ehealth/alive%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3EinitialDelaySeconds:%3C/span%3E%20%3Cspan%20class=%22number%22%3E30%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3EperiodSeconds:%3C/span%3E%20%3Cspan%20class=%22number%22%3E20%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3EreadinessProbe:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3EhttpGet:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Eport:%3C/span%3E%20%3Cspan%20class=%22number%22%3E6684%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Epath:%3C/span%3E%20%3Cspan%20class=%22string%22%3Ehealth/ready%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3EinitialDelaySeconds:%3C/span%3E%20%3Cspan%20class=%22number%22%3E30%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3EperiodSeconds:%3C/span%3E%20%3Cspan%20class=%22number%22%3E20%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Eports:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22bullet%22%3E-%3C/span%3E%20%3Cspan%20class=%22attr%22%3EcontainerPort:%3C/span%3E%20%3Cspan%20class=%22number%22%3E5684%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Ename:%3C/span%3E%20%3Cspan%20class=%22string%22%3Etcp-udp%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22bullet%22%3E-%3C/span%3E%20%3Cspan%20class=%22attr%22%3EcontainerPort:%3C/span%3E%20%3Cspan%20class=%22number%22%3E4684%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3Ename:%3C/span%3E%20%3Cspan%20class=%22string%22%3Ehttp-gossip%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3EdnsPolicy:%3C/span%3E%20%3Cspan%20class=%22string%22%3EClusterFirst%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%3Cspan%20class=%22attr%22%3EimagePullSecrets:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22bullet%22%3E-%3C/span%3E%20%3Cspan%20class=%22attr%22%3Ename:%3C/span%3E%20%3Cspan%20class=%22string%22%3Eregcred%3C/span%3E%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3EOnce%20deloyed,%20you%20can%20validate%20that%20all%20nodes%20are%20up%20and%20running:%3C/p%3E%3Cfigure%20class=%22highlight%20shell%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22meta%20prompt_%22%3E$%20%3C/span%3E%3Cspan%20class=%22language-bash%22%3Ekubectl%20get%20pods%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ENAME%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20READY%20%20%20%20%20STATUS%20%20%20%20RESTARTS%20%20%20AGE%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Epekko-seed-0%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%201/1%20%20%20%20%20%20%20Running%20%20%200%20%20%20%20%20%20%20%20%20%208s%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Epekko-seed-1%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%201/1%20%20%20%20%20%20%20Running%20%20%200%20%20%20%20%20%20%20%20%20%206s%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Epekko-worker-2263404214-8c266%20%20%201/1%20%20%20%20%20%20%20Running%20%20%200%20%20%20%20%20%20%20%20%20%208s%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Epekko-worker-2263404214-9ws3k%20%20%201/1%20%20%20%20%20%20%20Running%20%20%200%20%20%20%20%20%20%20%20%20%208s%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Epekko-worker-2263404214-f2tp3%20%20%201/1%20%20%20%20%20%20%20Running%20%20%200%20%20%20%20%20%20%20%20%20%208s%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Epekko-worker-2263404214-lkvz3%20%20%201/1%20%20%20%20%20%20%20Running%20%20%200%20%20%20%20%20%20%20%20%20%208s%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3EYou%20can%20validate%20that%20the%20nodes%20have%20joined%20the%20cluster%20by%20inspecting%20the%20logs%20of%20any%20of%20the%20Pekko%20nodes.%20For%3Cbr%3Eexample,%20to%20tail%20the%20first%20seed%20node%E2%80%99s%20log:%3C/p%3E%3Cfigure%20class=%22highlight%20shell%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3Ekubect%20logs%20-f%20pekko-seed-0%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E[INFO]%20[02/12/2017%2015:36:53.568]%20[main]%20[pekko.remote.Remoting]%20Starting%20remoting%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E[INFO]%20[02/12/2017%2015:36:53.707]%20[main]%20[pekko.remote.Remoting]%20Remoting%20started;%20listening%20on%20addresses%20:[pekko.tcp:/Pekko@pekko-seed-0.akka-seed:2551]%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E...%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E[INFO]%20[02/12/2017%2015:37:05.101]%20[ClusterSystem-pekko.actor.default-dispatcher-16]%20[pekko.cluster.Cluster(pekko:/ClusterSystem)]%20Cluster%20Node%20[pekko.tcp:/Pekko@pekko-seed-0.pekko-seed:2551]%20-%20Node%20[pekko.tcp:/Pekko@pekko-seed-1.pekko-seed:2551]%20is%20JOINING,%20roles%20[]%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E[INFO]%20[02/12/2017%2015:37:06.854]%20[ClusterSystem-pekko.actor.default-dispatcher-16]%20[pekko:/ClusterSystem/user/$a]%20Member%20is%20Up:%20Member(address%20=%20akka.tcp:/Pekko@10.44.2.10:2551,%20status%20=%20Up)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E...%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3EAlso,%20you%20can%20simply%20attach%20Kubernetes%20HPA:%3C/p%3E%3Cfigure%20class=%22highlight%20shell%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3EapiVersion:%20autoscaling/v1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ekind:%20HorizontalPodAutoscaler%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Emetadata:%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20name:%20pekko-worker%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Espec:%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20maxReplicas:%203%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20minReplicas:%201%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20scaleTargetRef:%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20apiVersion:%20apps/v1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20kind:%20Deployment%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20name:%20pekko-worker%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20targetCPUUtilizationPercentage:%2015%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Ch2%20id=%22Health-check%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Health-check%22%3E%C2%B6%3C/a%3EHealth%20check%3C/h2%3E%3Cp%3EPekko%20already%20implementation%20cluster%20health%20check%20management:%3C/p%3E%3Cfigure%20class=%22highlight%20shell%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22meta%20prompt_%22%3E#%20%3C/span%3E%3Cspan%20class=%22language-bash%22%3Emanagement%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Emanagement%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20http.hostname%20=%20127.0.0.1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20http.hostname%20=%20$&amp;#123;?HOST_NAME&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20http.bind-hostname%20=%200.0.0.0%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20http.bind-hostname%20=%20$&amp;#123;?HOST_NAME&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20health-checks%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20readiness-path%20=%20&amp;quot;health/ready&amp;quot;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20liveness-path%20=%20&amp;quot;health/alive&amp;quot;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20readiness-checks%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20#%20Default%20health%20check%20for%20cluster.%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20cluster-membership%20=%20&amp;quot;org.apache.pekko.management.cluster.javadsl.ClusterMembershipCheck&amp;quot;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Ch2%20id=%22Summary%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Summary%22%3E%C2%B6%3C/a%3ESummary%3C/h2%3E%3Cp%3EPlease%20check%20my%20own%20repo%20in%20%3Ca%20href=%22https:/github.com/barudisshu/kaxis%22%3EGitHub%3C/a%3E,%20if%20you%20need%20more%20investigate.%3C/p%3E" type="image"/>
    
    
    
    <category term="kubernetes" scheme="https://galudisu.info/tags/kubernetes/"/>
    
    <category term="pekko" scheme="https://galudisu.info/tags/pekko/"/>
    
    <category term="udp" scheme="https://galudisu.info/tags/udp/"/>
    
    <category term="IIoT" scheme="https://galudisu.info/tags/IIoT/"/>
    
  </entry>
  
  <entry>
    <title>Pre-master Secret, Master Secret, Private Key, Shared Secret</title>
    <link href="https://galudisu.info/2024/06/05/cryptography/secret-identified/"/>
    <id>https://galudisu.info/2024/06/05/cryptography/secret-identified/</id>
    <published>2024-06-05T03:32:34.000Z</published>
    <updated>2025-04-27T11:59:08.276Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Introduction"><a class="header-anchor" href="#Introduction">¶</a>Introduction</h2><p>Keys are critical in <a href="https://www.baeldung.com/cs/cryptographic-algorithm-complexity">cryptographic</a> operations in <a href="https://www.baeldung.com/cs/introduction-to-cryptography">public-key infrastructure</a>(PKI). <strong><a href="https://www.baeldung.com/cs/connection-oriented-vs-connectionless-protocols">SSL handshake</a> invoke exchanging several pieces of information, such as <a href="https://www.baeldung.com/cs/public-private-keys-vs-certificates">public keys</a>, <a href="https://www.baeldung.com/cs/symmetric-cryptography">private keys</a>, shared secrets, pre-master secrets, and master secrets.</strong></p><p><strong>Let’s explore what happens between the key exchange and the data encryption and <a href="https://www.baeldung.com/cs/authentication-vs-authorization">authentication</a>.</strong></p><span id="more"></span><h2 id="SSL-TLS-Handshake"><a class="header-anchor" href="#SSL-TLS-Handshake">¶</a>SSL/TLS Handshake</h2><p>A secure SSL/TLS connection gets established in multiple steps. The client and the server must agree on the methods and data to share.</p><p>We’ll use a TLS 1.2 connection to illustrate this complex process. The method employed for all prior SSL/TLS versions is the same.</p><p><strong>The handshake initiates and establishes a secure connection between the server and the client:</strong></p><p><img src="/img/cryptography/1_SSL-TLS-Communication-setup-timeline-diagram.png" alt="1_SSL-TLS-Communication-setup-timeline-diagram.png"></p><p>The handshake involves the following:</p><ul><li><strong>Client Hello</strong>: This is a hello message from the client to the server having information such as client version, client random, session ID, <a href="https://www.baeldung.com/cs/stream-cipher-vs-block-cipher">cipher suites</a>, compression methods, and extensions</li><li><strong>Server Hello</strong>: This is a reply message from the server to the client having server version, server random, <a href="https://www.baeldung.com/cs/tokens-vs-sessions">session ID</a>, cipher suites, compression methods, and extensions</li><li><strong>Exchange Certificate</strong>: The server sends a signed TLS/SSL certificate and the server’s public key to prove its identity. Sometimes, the server may also require the client to authenticate with a certificate and seek the same from the client</li><li><strong>Server Hello Done</strong>: Server sends this message to the client to confirm that the server hello message has been executed and completed</li><li><strong>Client Key Exchange</strong>: This message is sent by the client once it receives the server hello done from the server. At this point, the client creates a pre-master secret. If the server’s certificate is insufficient for the client to share a pre-master secret, then the client needs a server key exchange message. The client and the server create the master secret key</li><li><strong>Change Cipher spec</strong>:  This protocol initiates symmetric encryption for data exchange using the shared keys</li><li><strong>Handshake Finished</strong>: The handshake process from both the client and server sides exchanges this message at the end.</li></ul><p><strong>Asymmetric and symmetric encryption is part of the SSL/TLS security protocols.</strong> Keys and secrets are for encryption, decryption, and authentication. In the rest of the article, we’ll cover details about when we use different keys.</p><h2 id="SSL-TLS-Keys"><a class="header-anchor" href="#SSL-TLS-Keys">¶</a>SSL/TLS Keys</h2><p>Let’s now discuss how the shared secret, pre-master secret, master secret, public key, and private keys work.</p><h3 id="Shared-Secret"><a class="header-anchor" href="#Shared-Secret">¶</a>Shared Secret</h3><p><strong>Generally, a shared secret is to generate one or more keys for message encryption and to authenticate users.</strong></p><p>In cryptography, this is a piece of information that is known only to the participating systems:</p><p><img src="/img/cryptography/1_Shared-Secret-1.png" alt="Describe the concept of shared secret"></p><p>The client and the server generate a public/private key pair and share each other’s public keys as per the <a href="https://www.baeldung.com/cs/symmetric-cryptography">Diffie-Hellman</a> key exchange protocol. Afterward, they can compute a shared secret offline.</p><p>It usually refers to the key of a symmetric cryptosystem, in which the same key encrypts and decrypts data.</p><p>Generally, we use the shared secret and an <a href="https://www.baeldung.com/cs/security-key-vs-vector-vs-nonce">initialization vector</a> (IV) to create the session and message keys. Lastly, a shared secret can be a password, passphrase, large integer, or a collection of bytes selected at random.</p><h3 id="Public-key"><a class="header-anchor" href="#Public-key">¶</a>Public key</h3><p><strong>The primary function of a public key is to encrypt messages before sending them.</strong></p><p>An asymmetric cryptosystem uses randomly generated public and private keys. Anybody can encrypt data using a public key, but only those with the corresponding private key can decode the data.</p><p><strong>The public and private keys are mathematically related. Only a related key pair can encrypt and decrypt data.</strong> The encrypted information will be unreadable if the corresponding private key for decryption is missing.</p><p>In PKI, the sender and receiver don’t share the same key. PKI is used only for short messages.</p><h3 id="Private-Key"><a class="header-anchor" href="#Private-Key">¶</a>Private Key</h3><p><strong>The private key is kept secret and is only accessible by the owner.</strong></p><p>In a symmetric cryptosystem, the same key (secret key) is used for encryption and decryption. In this cryptography scheme, the sender and receiver share the same key.</p><p>Furthermore, a private key decrypts the cipher text in the asymmetric cryptosystem. <strong>A digital signature created using the private key can be confirmed using the associated public key.</strong> A private key is faster than a public key and applicable to high-volume text content.</p><h3 id="Pre-master-Secret"><a class="header-anchor" href="#Pre-master-Secret">¶</a>Pre-master Secret</h3><p><strong>The client generates a 48-bit pre-master secret and sends it to the server mainly to compute master secrets.</strong></p><p>The client encrypts the pre-master secret using the server public key obtained from the server’s certificate. The server decrypts the message using the private key. The client and the server use the pre-master secret to produce the symmetric keys for the secured portion of the session.</p><p>The algorithm and parameters used during the data exchange affect the length of the message. <strong>We want a fixed-length value to derive the keys for any cipher suite. The pre-master secrets serve this purpose.</strong></p><h3 id="Master-Secret"><a class="header-anchor" href="#Master-Secret">¶</a>Master Secret</h3><p><strong>The client and server use the master secret to generate the session key.</strong></p><p>The server decrypts the pre-master secret key using its private key after receiving it.</p><p>The client and the server use a Pseudo-Random Function (<a href="https://en.wikipedia.org/wiki/Pseudorandom_function_family">PRF</a>) to calculate the master secret key. PRF is a deterministic algorithm with two inputs and a single output. PRF obtains its result by iterating a hash-based message authentication code (<a href="https://www.baeldung.com/java-hmac">HMAC</a>) based on the <a href="https://www.baeldung.com/sha-256-hashing-java">SHA256</a> hash function.</p><p>Let’s discuss how the pre-master secret creates the master secret key. The <a href="https://datatracker.ietf.org/doc/html/rfc7627">RFC</a> guideline to calculate the fixed-length value master secret using the pre-master secret is:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">master_secret=PRF(pre-master_secret, &quot;Master Secret&quot;,ClientHello.rando+ServerHello.random)</span><br></pre></td></tr></table></figure><p>The master secret is a function of the client and server randoms that were previously exchanged between the client and the server during the handshake stage.</p><p>Further, the first three inputs to PRF are string representations of byte sequences. So, the addition operator in the above code concatenates the random. <strong>A master secret key is 48 bytes long</strong> and computed using random values.</p><h2 id="When-to-Use-Different-Keys"><a class="header-anchor" href="#When-to-Use-Different-Keys">¶</a>When to Use Different Keys?</h2><p>The following table shows at what stage of communication between client and server the shared secret, pre-master secret, public key, private key, and master secret are used:</p><table><thead><tr><th style="text-align:left">Stage</th><th style="text-align:left">Keys Involved</th></tr></thead><tbody><tr><td style="text-align:left">Client-server hello</td><td style="text-align:left">Shared secret (Session ID)</td></tr><tr><td style="text-align:left">Certificate exchange</td><td style="text-align:left">Server’s public key</td></tr><tr><td style="text-align:left">Client key exchange</td><td style="text-align:left">The client creates a pre-master secret and uses a public key to encrypt it, while the server uses its private key to decrypt it</td></tr><tr><td style="text-align:left">Server key exchange</td><td style="text-align:left">Optional - required only if the server’s certificate is insufficient for authentication</td></tr><tr><td style="text-align:left">Post handshake</td><td style="text-align:left">Both client and server use master secret for symmetric encryption/decryption</td></tr></tbody></table><h2 id="Conclusion"><a class="header-anchor" href="#Conclusion">¶</a>Conclusion</h2><p>In this article, we talked about SSL handshakes, shared secrets, pre-master secrets, master secrets, and public/private keys.</p><p><strong>A key-agreement technique, such as PKI, is used to construct the shared secret at the beginning of the SSL/TLS communication session.</strong> The server uses its public key for encryption and its private key for decryption.</p><p>Once the client and the server receive a hello done message, the client sends a pre-master secret to the server to compute a master secret using PRF.</p><p>Lastly, after the handshake, for the rest of the session, the client and the server use the master secret to generate the session keys for symmetric data encryption/decryption.</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Introduction&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#Introduction&quot;&gt;¶&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Keys are critical in &lt;a href=&quot;https://www.baeldung.com/cs/cryptographic-algorithm-complexity&quot;&gt;cryptographic&lt;/a&gt; operations in &lt;a href=&quot;https://www.baeldung.com/cs/introduction-to-cryptography&quot;&gt;public-key infrastructure&lt;/a&gt;(PKI). &lt;strong&gt;&lt;a href=&quot;https://www.baeldung.com/cs/connection-oriented-vs-connectionless-protocols&quot;&gt;SSL handshake&lt;/a&gt; invoke exchanging several pieces of information, such as &lt;a href=&quot;https://www.baeldung.com/cs/public-private-keys-vs-certificates&quot;&gt;public keys&lt;/a&gt;, &lt;a href=&quot;https://www.baeldung.com/cs/symmetric-cryptography&quot;&gt;private keys&lt;/a&gt;, shared secrets, pre-master secrets, and master secrets.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Let’s explore what happens between the key exchange and the data encryption and &lt;a href=&quot;https://www.baeldung.com/cs/authentication-vs-authorization&quot;&gt;authentication&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    <content src="https://galudisu.info/%3Ch2%20id=%22Introduction%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Introduction%22%3E%C2%B6%3C/a%3EIntroduction%3C/h2%3E%3Cp%3EKeys%20are%20critical%20in%20%3Ca%20href=%22https:/www.baeldung.com/cs/cryptographic-algorithm-complexity%22%3Ecryptographic%3C/a%3E%20operations%20in%20%3Ca%20href=%22https:/www.baeldung.com/cs/introduction-to-cryptography%22%3Epublic-key%20infrastructure%3C/a%3E(PKI).%20%3Cstrong%3E%3Ca%20href=%22https:/www.baeldung.com/cs/connection-oriented-vs-connectionless-protocols%22%3ESSL%20handshake%3C/a%3E%20invoke%20exchanging%20several%20pieces%20of%20information,%20such%20as%20%3Ca%20href=%22https:/www.baeldung.com/cs/public-private-keys-vs-certificates%22%3Epublic%20keys%3C/a%3E,%20%3Ca%20href=%22https:/www.baeldung.com/cs/symmetric-cryptography%22%3Eprivate%20keys%3C/a%3E,%20shared%20secrets,%20pre-master%20secrets,%20and%20master%20secrets.%3C/strong%3E%3C/p%3E%3Cp%3E%3Cstrong%3ELet%E2%80%99s%20explore%20what%20happens%20between%20the%20key%20exchange%20and%20the%20data%20encryption%20and%20%3Ca%20href=%22https:/www.baeldung.com/cs/authentication-vs-authorization%22%3Eauthentication%3C/a%3E.%3C/strong%3E%3C/p%3E%3Cspan%20id=%22more%22%3E%3C/span%3E%3Ch2%20id=%22SSL-TLS-Handshake%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#SSL-TLS-Handshake%22%3E%C2%B6%3C/a%3ESSL/TLS%20Handshake%3C/h2%3E%3Cp%3EA%20secure%20SSL/TLS%20connection%20gets%20established%20in%20multiple%20steps.%20The%20client%20and%20the%20server%20must%20agree%20on%20the%20methods%20and%20data%20to%20share.%3C/p%3E%3Cp%3EWe%E2%80%99ll%20use%20a%20TLS%201.2%20connection%20to%20illustrate%20this%20complex%20process.%20The%20method%20employed%20for%20all%20prior%20SSL/TLS%20versions%20is%20the%20same.%3C/p%3E%3Cp%3E%3Cstrong%3EThe%20handshake%20initiates%20and%20establishes%20a%20secure%20connection%20between%20the%20server%20and%20the%20client:%3C/strong%3E%3C/p%3E%3Cp%3E%3Cimg%20src=%22/img/cryptography/1_SSL-TLS-Communication-setup-timeline-diagram.png%22%20alt=%221_SSL-TLS-Communication-setup-timeline-diagram.png%22%3E%3C/p%3E%3Cp%3EThe%20handshake%20involves%20the%20following:%3C/p%3E%3Cul%3E%3Cli%3E%3Cstrong%3EClient%20Hello%3C/strong%3E:%20This%20is%20a%20hello%20message%20from%20the%20client%20to%20the%20server%20having%20information%20such%20as%20client%20version,%20client%20random,%20session%20ID,%20%3Ca%20href=%22https:/www.baeldung.com/cs/stream-cipher-vs-block-cipher%22%3Ecipher%20suites%3C/a%3E,%20compression%20methods,%20and%20extensions%3C/li%3E%3Cli%3E%3Cstrong%3EServer%20Hello%3C/strong%3E:%20This%20is%20a%20reply%20message%20from%20the%20server%20to%20the%20client%20having%20server%20version,%20server%20random,%20%3Ca%20href=%22https:/www.baeldung.com/cs/tokens-vs-sessions%22%3Esession%20ID%3C/a%3E,%20cipher%20suites,%20compression%20methods,%20and%20extensions%3C/li%3E%3Cli%3E%3Cstrong%3EExchange%20Certificate%3C/strong%3E:%20The%20server%20sends%20a%20signed%20TLS/SSL%20certificate%20and%20the%20server%E2%80%99s%20public%20key%20to%20prove%20its%20identity.%20Sometimes,%20the%20server%20may%20also%20require%20the%20client%20to%20authenticate%20with%20a%20certificate%20and%20seek%20the%20same%20from%20the%20client%3C/li%3E%3Cli%3E%3Cstrong%3EServer%20Hello%20Done%3C/strong%3E:%20Server%20sends%20this%20message%20to%20the%20client%20to%20confirm%20that%20the%20server%20hello%20message%20has%20been%20executed%20and%20completed%3C/li%3E%3Cli%3E%3Cstrong%3EClient%20Key%20Exchange%3C/strong%3E:%20This%20message%20is%20sent%20by%20the%20client%20once%20it%20receives%20the%20server%20hello%20done%20from%20the%20server.%20At%20this%20point,%20the%20client%20creates%20a%20pre-master%20secret.%20If%20the%20server%E2%80%99s%20certificate%20is%20insufficient%20for%20the%20client%20to%20share%20a%20pre-master%20secret,%20then%20the%20client%20needs%20a%20server%20key%20exchange%20message.%20The%20client%20and%20the%20server%20create%20the%20master%20secret%20key%3C/li%3E%3Cli%3E%3Cstrong%3EChange%20Cipher%20spec%3C/strong%3E:%20%20This%20protocol%20initiates%20symmetric%20encryption%20for%20data%20exchange%20using%20the%20shared%20keys%3C/li%3E%3Cli%3E%3Cstrong%3EHandshake%20Finished%3C/strong%3E:%20The%20handshake%20process%20from%20both%20the%20client%20and%20server%20sides%20exchanges%20this%20message%20at%20the%20end.%3C/li%3E%3C/ul%3E%3Cp%3E%3Cstrong%3EAsymmetric%20and%20symmetric%20encryption%20is%20part%20of%20the%20SSL/TLS%20security%20protocols.%3C/strong%3E%20Keys%20and%20secrets%20are%20for%20encryption,%20decryption,%20and%20authentication.%20In%20the%20rest%20of%20the%20article,%20we%E2%80%99ll%20cover%20details%20about%20when%20we%20use%20different%20keys.%3C/p%3E%3Ch2%20id=%22SSL-TLS-Keys%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#SSL-TLS-Keys%22%3E%C2%B6%3C/a%3ESSL/TLS%20Keys%3C/h2%3E%3Cp%3ELet%E2%80%99s%20now%20discuss%20how%20the%20shared%20secret,%20pre-master%20secret,%20master%20secret,%20public%20key,%20and%20private%20keys%20work.%3C/p%3E%3Ch3%20id=%22Shared-Secret%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Shared-Secret%22%3E%C2%B6%3C/a%3EShared%20Secret%3C/h3%3E%3Cp%3E%3Cstrong%3EGenerally,%20a%20shared%20secret%20is%20to%20generate%20one%20or%20more%20keys%20for%20message%20encryption%20and%20to%20authenticate%20users.%3C/strong%3E%3C/p%3E%3Cp%3EIn%20cryptography,%20this%20is%20a%20piece%20of%20information%20that%20is%20known%20only%20to%20the%20participating%20systems:%3C/p%3E%3Cp%3E%3Cimg%20src=%22/img/cryptography/1_Shared-Secret-1.png%22%20alt=%22Describe%20the%20concept%20of%20shared%20secret%22%3E%3C/p%3E%3Cp%3EThe%20client%20and%20the%20server%20generate%20a%20public/private%20key%20pair%20and%20share%20each%20other%E2%80%99s%20public%20keys%20as%20per%20the%20%3Ca%20href=%22https:/www.baeldung.com/cs/symmetric-cryptography%22%3EDiffie-Hellman%3C/a%3E%20key%20exchange%20protocol.%20Afterward,%20they%20can%20compute%20a%20shared%20secret%20offline.%3C/p%3E%3Cp%3EIt%20usually%20refers%20to%20the%20key%20of%20a%20symmetric%20cryptosystem,%20in%20which%20the%20same%20key%20encrypts%20and%20decrypts%20data.%3C/p%3E%3Cp%3EGenerally,%20we%20use%20the%20shared%20secret%20and%20an%20%3Ca%20href=%22https:/www.baeldung.com/cs/security-key-vs-vector-vs-nonce%22%3Einitialization%20vector%3C/a%3E%20(IV)%20to%20create%20the%20session%20and%20message%20keys.%20Lastly,%20a%20shared%20secret%20can%20be%20a%20password,%20passphrase,%20large%20integer,%20or%20a%20collection%20of%20bytes%20selected%20at%20random.%3C/p%3E%3Ch3%20id=%22Public-key%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Public-key%22%3E%C2%B6%3C/a%3EPublic%20key%3C/h3%3E%3Cp%3E%3Cstrong%3EThe%20primary%20function%20of%20a%20public%20key%20is%20to%20encrypt%20messages%20before%20sending%20them.%3C/strong%3E%3C/p%3E%3Cp%3EAn%20asymmetric%20cryptosystem%20uses%20randomly%20generated%20public%20and%20private%20keys.%20Anybody%20can%20encrypt%20data%20using%20a%20public%20key,%20but%20only%20those%20with%20the%20corresponding%20private%20key%20can%20decode%20the%20data.%3C/p%3E%3Cp%3E%3Cstrong%3EThe%20public%20and%20private%20keys%20are%20mathematically%20related.%20Only%20a%20related%20key%20pair%20can%20encrypt%20and%20decrypt%20data.%3C/strong%3E%20The%20encrypted%20information%20will%20be%20unreadable%20if%20the%20corresponding%20private%20key%20for%20decryption%20is%20missing.%3C/p%3E%3Cp%3EIn%20PKI,%20the%20sender%20and%20receiver%20don%E2%80%99t%20share%20the%20same%20key.%20PKI%20is%20used%20only%20for%20short%20messages.%3C/p%3E%3Ch3%20id=%22Private-Key%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Private-Key%22%3E%C2%B6%3C/a%3EPrivate%20Key%3C/h3%3E%3Cp%3E%3Cstrong%3EThe%20private%20key%20is%20kept%20secret%20and%20is%20only%20accessible%20by%20the%20owner.%3C/strong%3E%3C/p%3E%3Cp%3EIn%20a%20symmetric%20cryptosystem,%20the%20same%20key%20(secret%20key)%20is%20used%20for%20encryption%20and%20decryption.%20In%20this%20cryptography%20scheme,%20the%20sender%20and%20receiver%20share%20the%20same%20key.%3C/p%3E%3Cp%3EFurthermore,%20a%20private%20key%20decrypts%20the%20cipher%20text%20in%20the%20asymmetric%20cryptosystem.%20%3Cstrong%3EA%20digital%20signature%20created%20using%20the%20private%20key%20can%20be%20confirmed%20using%20the%20associated%20public%20key.%3C/strong%3E%20A%20private%20key%20is%20faster%20than%20a%20public%20key%20and%20applicable%20to%20high-volume%20text%20content.%3C/p%3E%3Ch3%20id=%22Pre-master-Secret%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Pre-master-Secret%22%3E%C2%B6%3C/a%3EPre-master%20Secret%3C/h3%3E%3Cp%3E%3Cstrong%3EThe%20client%20generates%20a%2048-bit%20pre-master%20secret%20and%20sends%20it%20to%20the%20server%20mainly%20to%20compute%20master%20secrets.%3C/strong%3E%3C/p%3E%3Cp%3EThe%20client%20encrypts%20the%20pre-master%20secret%20using%20the%20server%20public%20key%20obtained%20from%20the%20server%E2%80%99s%20certificate.%20The%20server%20decrypts%20the%20message%20using%20the%20private%20key.%20The%20client%20and%20the%20server%20use%20the%20pre-master%20secret%20to%20produce%20the%20symmetric%20keys%20for%20the%20secured%20portion%20of%20the%20session.%3C/p%3E%3Cp%3EThe%20algorithm%20and%20parameters%20used%20during%20the%20data%20exchange%20affect%20the%20length%20of%20the%20message.%20%3Cstrong%3EWe%20want%20a%20fixed-length%20value%20to%20derive%20the%20keys%20for%20any%20cipher%20suite.%20The%20pre-master%20secrets%20serve%20this%20purpose.%3C/strong%3E%3C/p%3E%3Ch3%20id=%22Master-Secret%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Master-Secret%22%3E%C2%B6%3C/a%3EMaster%20Secret%3C/h3%3E%3Cp%3E%3Cstrong%3EThe%20client%20and%20server%20use%20the%20master%20secret%20to%20generate%20the%20session%20key.%3C/strong%3E%3C/p%3E%3Cp%3EThe%20server%20decrypts%20the%20pre-master%20secret%20key%20using%20its%20private%20key%20after%20receiving%20it.%3C/p%3E%3Cp%3EThe%20client%20and%20the%20server%20use%20a%20Pseudo-Random%20Function%20(%3Ca%20href=%22https:/en.wikipedia.org/wiki/Pseudorandom_function_family%22%3EPRF%3C/a%3E)%20to%20calculate%20the%20master%20secret%20key.%20PRF%20is%20a%20deterministic%20algorithm%20with%20two%20inputs%20and%20a%20single%20output.%20PRF%20obtains%20its%20result%20by%20iterating%20a%20hash-based%20message%20authentication%20code%20(%3Ca%20href=%22https:/www.baeldung.com/java-hmac%22%3EHMAC%3C/a%3E)%20based%20on%20the%20%3Ca%20href=%22https:/www.baeldung.com/sha-256-hashing-java%22%3ESHA256%3C/a%3E%20hash%20function.%3C/p%3E%3Cp%3ELet%E2%80%99s%20discuss%20how%20the%20pre-master%20secret%20creates%20the%20master%20secret%20key.%20The%20%3Ca%20href=%22https:/datatracker.ietf.org/doc/html/rfc7627%22%3ERFC%3C/a%3E%20guideline%20to%20calculate%20the%20fixed-length%20value%20master%20secret%20using%20the%20pre-master%20secret%20is:%3C/p%3E%3Cfigure%20class=%22highlight%20text%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3Emaster_secret=PRF(pre-master_secret,%20&amp;quot;Master%20Secret&amp;quot;,ClientHello.rando+ServerHello.random)%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3EThe%20master%20secret%20is%20a%20function%20of%20the%20client%20and%20server%20randoms%20that%20were%20previously%20exchanged%20between%20the%20client%20and%20the%20server%20during%20the%20handshake%20stage.%3C/p%3E%3Cp%3EFurther,%20the%20first%20three%20inputs%20to%20PRF%20are%20string%20representations%20of%20byte%20sequences.%20So,%20the%20addition%20operator%20in%20the%20above%20code%20concatenates%20the%20random.%20%3Cstrong%3EA%20master%20secret%20key%20is%2048%20bytes%20long%3C/strong%3E%20and%20computed%20using%20random%20values.%3C/p%3E%3Ch2%20id=%22When-to-Use-Different-Keys%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#When-to-Use-Different-Keys%22%3E%C2%B6%3C/a%3EWhen%20to%20Use%20Different%20Keys?%3C/h2%3E%3Cp%3EThe%20following%20table%20shows%20at%20what%20stage%20of%20communication%20between%20client%20and%20server%20the%20shared%20secret,%20pre-master%20secret,%20public%20key,%20private%20key,%20and%20master%20secret%20are%20used:%3C/p%3E%3Ctable%3E%3Cthead%3E%3Ctr%3E%3Cth%20style=%22text-align:left%22%3EStage%3C/th%3E%3Cth%20style=%22text-align:left%22%3EKeys%20Involved%3C/th%3E%3C/tr%3E%3C/thead%3E%3Ctbody%3E%3Ctr%3E%3Ctd%20style=%22text-align:left%22%3EClient-server%20hello%3C/td%3E%3Ctd%20style=%22text-align:left%22%3EShared%20secret%20(Session%20ID)%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:left%22%3ECertificate%20exchange%3C/td%3E%3Ctd%20style=%22text-align:left%22%3EServer%E2%80%99s%20public%20key%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:left%22%3EClient%20key%20exchange%3C/td%3E%3Ctd%20style=%22text-align:left%22%3EThe%20client%20creates%20a%20pre-master%20secret%20and%20uses%20a%20public%20key%20to%20encrypt%20it,%20while%20the%20server%20uses%20its%20private%20key%20to%20decrypt%20it%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:left%22%3EServer%20key%20exchange%3C/td%3E%3Ctd%20style=%22text-align:left%22%3EOptional%20-%20required%20only%20if%20the%20server%E2%80%99s%20certificate%20is%20insufficient%20for%20authentication%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:left%22%3EPost%20handshake%3C/td%3E%3Ctd%20style=%22text-align:left%22%3EBoth%20client%20and%20server%20use%20master%20secret%20for%20symmetric%20encryption/decryption%3C/td%3E%3C/tr%3E%3C/tbody%3E%3C/table%3E%3Ch2%20id=%22Conclusion%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Conclusion%22%3E%C2%B6%3C/a%3EConclusion%3C/h2%3E%3Cp%3EIn%20this%20article,%20we%20talked%20about%20SSL%20handshakes,%20shared%20secrets,%20pre-master%20secrets,%20master%20secrets,%20and%20public/private%20keys.%3C/p%3E%3Cp%3E%3Cstrong%3EA%20key-agreement%20technique,%20such%20as%20PKI,%20is%20used%20to%20construct%20the%20shared%20secret%20at%20the%20beginning%20of%20the%20SSL/TLS%20communication%20session.%3C/strong%3E%20The%20server%20uses%20its%20public%20key%20for%20encryption%20and%20its%20private%20key%20for%20decryption.%3C/p%3E%3Cp%3EOnce%20the%20client%20and%20the%20server%20receive%20a%20hello%20done%20message,%20the%20client%20sends%20a%20pre-master%20secret%20to%20the%20server%20to%20compute%20a%20master%20secret%20using%20PRF.%3C/p%3E%3Cp%3ELastly,%20after%20the%20handshake,%20for%20the%20rest%20of%20the%20session,%20the%20client%20and%20the%20server%20use%20the%20master%20secret%20to%20generate%20the%20session%20keys%20for%20symmetric%20data%20encryption/decryption.%3C/p%3E" type="image"/>
    
    
    
    <category term="cryptography" scheme="https://galudisu.info/tags/cryptography/"/>
    
    <category term="security" scheme="https://galudisu.info/tags/security/"/>
    
  </entry>
  
  <entry>
    <title>Termius Cracked</title>
    <link href="https://galudisu.info/2023/10/26/termius/cracked/"/>
    <id>https://galudisu.info/2023/10/26/termius/cracked/</id>
    <published>2023-10-26T14:14:34.000Z</published>
    <updated>2025-04-27T11:59:08.289Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="破解方法"><a class="header-anchor" href="#破解方法">¶</a>破解方法</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g asar</span><br></pre></td></tr></table></figure><p>所有平台破解方法大同小异</p><ul><li>解包</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/Termius/resources</span><br><span class="line">asar extract app.asar ./app # 修改完不需要重新打包</span><br><span class="line">mv app.asar app.asar.bak # 留个备份，或者直接rm</span><br><span class="line">rm app-update.yml # 防止自动更新</span><br></pre></td></tr></table></figure><ul><li>修改app/js/background-process.js</li></ul><p>搜索 <code>await this.api.bulkAccount</code></p><p><code>const e=await this.api.bulkAccount();</code> -&gt; <code>var e=wait this.api.bulkAccount()</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> e=<span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">api</span>.<span class="title function_">bulkAccount</span>();e.<span class="property">account</span>.<span class="property">pro_mode</span>=!<span class="number">0</span>,e.<span class="property">account</span>.<span class="property">need_to_update_subscription</span>=!<span class="number">1</span>,e.<span class="property">account</span>.<span class="property">current_period</span>=&#123;<span class="attr">from</span>:<span class="string">&quot;2022-01-01T00:00:00&quot;</span>,<span class="attr">until</span>:<span class="string">&quot;2099-01-01T00:00:00&quot;</span>&#125;,e.<span class="property">account</span>.<span class="property">plan_type</span>=<span class="string">&quot;Premium&quot;</span>,e.<span class="property">account</span>.<span class="property">user_type</span>=<span class="string">&quot;Premium&quot;</span>,e.<span class="property">student</span>=<span class="literal">null</span>,e.<span class="property">trial</span>=<span class="literal">null</span>,e.<span class="property">account</span>.<span class="property">authorized_features</span>.<span class="property">show_trial_section</span>=!<span class="number">1</span>,e.<span class="property">account</span>.<span class="property">authorized_features</span>.<span class="property">show_subscription_section</span>=!<span class="number">0</span>,e.<span class="property">account</span>.<span class="property">authorized_features</span>.<span class="property">show_github_account_section</span>=!<span class="number">1</span>,e.<span class="property">account</span>.<span class="property">expired_screen_type</span>=<span class="literal">null</span>,e.<span class="property">personal_subscription</span>=&#123;<span class="attr">now</span>:(<span class="keyword">new</span> <span class="title class_">Date</span>).<span class="title function_">toISOString</span>().<span class="title function_">slice</span>(<span class="number">0</span>,-<span class="number">5</span>),<span class="attr">status</span>:<span class="string">&quot;SUCCESS&quot;</span>,<span class="attr">platform</span>:<span class="string">&quot;stripe&quot;</span>,<span class="attr">current_period</span>:&#123;<span class="attr">from</span>:<span class="string">&quot;2022-01-01T00:00:00&quot;</span>,<span class="attr">until</span>:<span class="string">&quot;2099-01-01T00:00:00&quot;</span>&#125;,<span class="attr">revokable</span>:!<span class="number">0</span>,<span class="attr">refunded</span>:!<span class="number">1</span>,<span class="attr">cancelable</span>:!<span class="number">0</span>,<span class="attr">reactivatable</span>:!<span class="number">1</span>,<span class="attr">currency</span>:<span class="string">&quot;usd&quot;</span>,<span class="attr">created_at</span>:<span class="string">&quot;2022-01-01T00:00:00&quot;</span>,<span class="attr">updated_at</span>:(<span class="keyword">new</span> <span class="title class_">Date</span>).<span class="title function_">toISOString</span>().<span class="title function_">slice</span>(<span class="number">0</span>,-<span class="number">5</span>),<span class="attr">valid_until</span>:<span class="string">&quot;2099-01-01T00:00:00&quot;</span>,<span class="attr">auto_renew</span>:!<span class="number">0</span>,<span class="attr">price</span>:<span class="number">12</span>,<span class="attr">verbose_plan_name</span>:<span class="string">&quot;Termius Pro Monthly&quot;</span>,<span class="attr">plan_type</span>:<span class="string">&quot;SINGLE&quot;</span>,<span class="attr">is_expired</span>:!<span class="number">1</span>&#125;,e.<span class="property">access_objects</span>=[&#123;<span class="attr">period</span>:&#123;<span class="attr">start</span>:<span class="string">&quot;2022-01-01T00:00:00&quot;</span>,<span class="attr">end</span>:<span class="string">&quot;2099-01-01T00:00:00&quot;</span>&#125;,<span class="attr">title</span>:<span class="string">&quot;Pro&quot;</span>&#125;];<span class="keyword">return</span> ...</span><br></pre></td></tr></table></figure><p>启动Termius，登录帐号，重启Termius</p>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;
&lt;h2 id=&quot;破解方法&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#破解方法&quot;&gt;¶&lt;/a&gt;破解方法&lt;/h2&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl</summary>
      
    
    
    <content src="https://galudisu.info/%3Cspan%20id=%22more%22%3E%3C/span%3E%3Ch2%20id=%22%E7%A0%B4%E8%A7%A3%E6%96%B9%E6%B3%95%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#%E7%A0%B4%E8%A7%A3%E6%96%B9%E6%B3%95%22%3E%C2%B6%3C/a%3E%E7%A0%B4%E8%A7%A3%E6%96%B9%E6%B3%95%3C/h2%3E%3Cfigure%20class=%22highlight%20shell%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3Enpm%20install%20-g%20asar%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%89%80%E6%9C%89%E5%B9%B3%E5%8F%B0%E7%A0%B4%E8%A7%A3%E6%96%B9%E6%B3%95%E5%A4%A7%E5%90%8C%E5%B0%8F%E5%BC%82%3C/p%3E%3Cul%3E%3Cli%3E%E8%A7%A3%E5%8C%85%3C/li%3E%3C/ul%3E%3Cfigure%20class=%22highlight%20shell%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3Ecd%20/opt/Termius/resources%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Easar%20extract%20app.asar%20./app%20#%20%E4%BF%AE%E6%94%B9%E5%AE%8C%E4%B8%8D%E9%9C%80%E8%A6%81%E9%87%8D%E6%96%B0%E6%89%93%E5%8C%85%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Emv%20app.asar%20app.asar.bak%20#%20%E7%95%99%E4%B8%AA%E5%A4%87%E4%BB%BD%EF%BC%8C%E6%88%96%E8%80%85%E7%9B%B4%E6%8E%A5rm%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Erm%20app-update.yml%20#%20%E9%98%B2%E6%AD%A2%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cul%3E%3Cli%3E%E4%BF%AE%E6%94%B9app/js/background-process.js%3C/li%3E%3C/ul%3E%3Cp%3E%E6%90%9C%E7%B4%A2%20%3Ccode%3Eawait%20this.api.bulkAccount%3C/code%3E%3C/p%3E%3Cp%3E%3Ccode%3Econst%20e=await%20this.api.bulkAccount();%3C/code%3E%20-&amp;gt;%20%3Ccode%3Evar%20e=wait%20this.api.bulkAccount()%3C/code%3E%3C/p%3E%3Cfigure%20class=%22highlight%20javascript%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Evar%3C/span%3E%20e=%3Cspan%20class=%22keyword%22%3Eawait%3C/span%3E%20%3Cspan%20class=%22variable%20language_%22%3Ethis%3C/span%3E.%3Cspan%20class=%22property%22%3Eapi%3C/span%3E.%3Cspan%20class=%22title%20function_%22%3EbulkAccount%3C/span%3E();e.%3Cspan%20class=%22property%22%3Eaccount%3C/span%3E.%3Cspan%20class=%22property%22%3Epro_mode%3C/span%3E=!%3Cspan%20class=%22number%22%3E0%3C/span%3E,e.%3Cspan%20class=%22property%22%3Eaccount%3C/span%3E.%3Cspan%20class=%22property%22%3Eneed_to_update_subscription%3C/span%3E=!%3Cspan%20class=%22number%22%3E1%3C/span%3E,e.%3Cspan%20class=%22property%22%3Eaccount%3C/span%3E.%3Cspan%20class=%22property%22%3Ecurrent_period%3C/span%3E=&amp;#123;%3Cspan%20class=%22attr%22%3Efrom%3C/span%3E:%3Cspan%20class=%22string%22%3E&amp;quot;2022-01-01T00:00:00&amp;quot;%3C/span%3E,%3Cspan%20class=%22attr%22%3Euntil%3C/span%3E:%3Cspan%20class=%22string%22%3E&amp;quot;2099-01-01T00:00:00&amp;quot;%3C/span%3E&amp;#125;,e.%3Cspan%20class=%22property%22%3Eaccount%3C/span%3E.%3Cspan%20class=%22property%22%3Eplan_type%3C/span%3E=%3Cspan%20class=%22string%22%3E&amp;quot;Premium&amp;quot;%3C/span%3E,e.%3Cspan%20class=%22property%22%3Eaccount%3C/span%3E.%3Cspan%20class=%22property%22%3Euser_type%3C/span%3E=%3Cspan%20class=%22string%22%3E&amp;quot;Premium&amp;quot;%3C/span%3E,e.%3Cspan%20class=%22property%22%3Estudent%3C/span%3E=%3Cspan%20class=%22literal%22%3Enull%3C/span%3E,e.%3Cspan%20class=%22property%22%3Etrial%3C/span%3E=%3Cspan%20class=%22literal%22%3Enull%3C/span%3E,e.%3Cspan%20class=%22property%22%3Eaccount%3C/span%3E.%3Cspan%20class=%22property%22%3Eauthorized_features%3C/span%3E.%3Cspan%20class=%22property%22%3Eshow_trial_section%3C/span%3E=!%3Cspan%20class=%22number%22%3E1%3C/span%3E,e.%3Cspan%20class=%22property%22%3Eaccount%3C/span%3E.%3Cspan%20class=%22property%22%3Eauthorized_features%3C/span%3E.%3Cspan%20class=%22property%22%3Eshow_subscription_section%3C/span%3E=!%3Cspan%20class=%22number%22%3E0%3C/span%3E,e.%3Cspan%20class=%22property%22%3Eaccount%3C/span%3E.%3Cspan%20class=%22property%22%3Eauthorized_features%3C/span%3E.%3Cspan%20class=%22property%22%3Eshow_github_account_section%3C/span%3E=!%3Cspan%20class=%22number%22%3E1%3C/span%3E,e.%3Cspan%20class=%22property%22%3Eaccount%3C/span%3E.%3Cspan%20class=%22property%22%3Eexpired_screen_type%3C/span%3E=%3Cspan%20class=%22literal%22%3Enull%3C/span%3E,e.%3Cspan%20class=%22property%22%3Epersonal_subscription%3C/span%3E=&amp;#123;%3Cspan%20class=%22attr%22%3Enow%3C/span%3E:(%3Cspan%20class=%22keyword%22%3Enew%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EDate%3C/span%3E).%3Cspan%20class=%22title%20function_%22%3EtoISOString%3C/span%3E().%3Cspan%20class=%22title%20function_%22%3Eslice%3C/span%3E(%3Cspan%20class=%22number%22%3E0%3C/span%3E,-%3Cspan%20class=%22number%22%3E5%3C/span%3E),%3Cspan%20class=%22attr%22%3Estatus%3C/span%3E:%3Cspan%20class=%22string%22%3E&amp;quot;SUCCESS&amp;quot;%3C/span%3E,%3Cspan%20class=%22attr%22%3Eplatform%3C/span%3E:%3Cspan%20class=%22string%22%3E&amp;quot;stripe&amp;quot;%3C/span%3E,%3Cspan%20class=%22attr%22%3Ecurrent_period%3C/span%3E:&amp;#123;%3Cspan%20class=%22attr%22%3Efrom%3C/span%3E:%3Cspan%20class=%22string%22%3E&amp;quot;2022-01-01T00:00:00&amp;quot;%3C/span%3E,%3Cspan%20class=%22attr%22%3Euntil%3C/span%3E:%3Cspan%20class=%22string%22%3E&amp;quot;2099-01-01T00:00:00&amp;quot;%3C/span%3E&amp;#125;,%3Cspan%20class=%22attr%22%3Erevokable%3C/span%3E:!%3Cspan%20class=%22number%22%3E0%3C/span%3E,%3Cspan%20class=%22attr%22%3Erefunded%3C/span%3E:!%3Cspan%20class=%22number%22%3E1%3C/span%3E,%3Cspan%20class=%22attr%22%3Ecancelable%3C/span%3E:!%3Cspan%20class=%22number%22%3E0%3C/span%3E,%3Cspan%20class=%22attr%22%3Ereactivatable%3C/span%3E:!%3Cspan%20class=%22number%22%3E1%3C/span%3E,%3Cspan%20class=%22attr%22%3Ecurrency%3C/span%3E:%3Cspan%20class=%22string%22%3E&amp;quot;usd&amp;quot;%3C/span%3E,%3Cspan%20class=%22attr%22%3Ecreated_at%3C/span%3E:%3Cspan%20class=%22string%22%3E&amp;quot;2022-01-01T00:00:00&amp;quot;%3C/span%3E,%3Cspan%20class=%22attr%22%3Eupdated_at%3C/span%3E:(%3Cspan%20class=%22keyword%22%3Enew%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EDate%3C/span%3E).%3Cspan%20class=%22title%20function_%22%3EtoISOString%3C/span%3E().%3Cspan%20class=%22title%20function_%22%3Eslice%3C/span%3E(%3Cspan%20class=%22number%22%3E0%3C/span%3E,-%3Cspan%20class=%22number%22%3E5%3C/span%3E),%3Cspan%20class=%22attr%22%3Evalid_until%3C/span%3E:%3Cspan%20class=%22string%22%3E&amp;quot;2099-01-01T00:00:00&amp;quot;%3C/span%3E,%3Cspan%20class=%22attr%22%3Eauto_renew%3C/span%3E:!%3Cspan%20class=%22number%22%3E0%3C/span%3E,%3Cspan%20class=%22attr%22%3Eprice%3C/span%3E:%3Cspan%20class=%22number%22%3E12%3C/span%3E,%3Cspan%20class=%22attr%22%3Everbose_plan_name%3C/span%3E:%3Cspan%20class=%22string%22%3E&amp;quot;Termius%20Pro%20Monthly&amp;quot;%3C/span%3E,%3Cspan%20class=%22attr%22%3Eplan_type%3C/span%3E:%3Cspan%20class=%22string%22%3E&amp;quot;SINGLE&amp;quot;%3C/span%3E,%3Cspan%20class=%22attr%22%3Eis_expired%3C/span%3E:!%3Cspan%20class=%22number%22%3E1%3C/span%3E&amp;#125;,e.%3Cspan%20class=%22property%22%3Eaccess_objects%3C/span%3E=[&amp;#123;%3Cspan%20class=%22attr%22%3Eperiod%3C/span%3E:&amp;#123;%3Cspan%20class=%22attr%22%3Estart%3C/span%3E:%3Cspan%20class=%22string%22%3E&amp;quot;2022-01-01T00:00:00&amp;quot;%3C/span%3E,%3Cspan%20class=%22attr%22%3Eend%3C/span%3E:%3Cspan%20class=%22string%22%3E&amp;quot;2099-01-01T00:00:00&amp;quot;%3C/span%3E&amp;#125;,%3Cspan%20class=%22attr%22%3Etitle%3C/span%3E:%3Cspan%20class=%22string%22%3E&amp;quot;Pro&amp;quot;%3C/span%3E&amp;#125;];%3Cspan%20class=%22keyword%22%3Ereturn%3C/span%3E%20...%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%90%AF%E5%8A%A8Termius%EF%BC%8C%E7%99%BB%E5%BD%95%E5%B8%90%E5%8F%B7%EF%BC%8C%E9%87%8D%E5%90%AFTermius%3C/p%3E" type="image"/>
    
    
    
    <category term="termius" scheme="https://galudisu.info/tags/termius/"/>
    
  </entry>
  
  <entry>
    <title>rust基础入门[23] - More About Lifetimes</title>
    <link href="https://galudisu.info/2023/01/23/rust/beginning/chapter23_More%20About%20Lifetimes/"/>
    <id>https://galudisu.info/2023/01/23/rust/beginning/chapter23_More%20About%20Lifetimes/</id>
    <published>2023-01-23T07:50:46.000Z</published>
    <updated>2025-04-27T11:59:08.286Z</updated>
    
    <content type="html"><![CDATA[<p>本章覆盖有：</p><ul><li>简单、自由(free)函数和方法需要避免写入生命周期指示器(lifetime specifiers)，因为它们是被推断的</li><li>为什么包含引用的结构体(structs)、元组-结构体(tuple-structs)、枚举(enums)需要生命周期指示器(lifetime specifiers)</li><li>如何为结构体(structs)、元组-结构体(tuple-structs)、枚举(enums)编写生命周期指示器(lifetime specifiers)</li><li>为什么包含指向泛型参数的结构体需要生命周期边界(协变、逆协变)</li></ul><span id="more"></span><h2 id="Lifetime-Elision"><a class="header-anchor" href="#Lifetime-Elision">¶</a>Lifetime Elision</h2><p>上一章节，我们看到每个函数签名，都必须确定引用返回值，即要么是<code>'static</code>的lifetime specifier，要么是关联的函数参数的lifetime specifier。</p><p>有时避免编写这种烦人的注解。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">trait</span> <span class="title class_">Tr</span> &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">f</span>(x: &amp;<span class="type">u8</span>) <span class="punctuation">-&gt;</span> &amp;<span class="type">u8</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这代码是被允许的。返回的值是个引用，它没用指定生命周期，但它也不是<code>'static</code>的，因此这个隐式生命周期指示器(implicit lifetime specifier)必须是函数参数中的其中一个。因为函数参数仅有一个，因此它的lifetime specifier无可厚非就是该参数关联的lifetime specifier。换言之，这个声明函数等效于下面的写法：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">trait</span> <span class="title class_">Tr</span> &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">f</span>&lt;<span class="symbol">&#x27;a</span>&gt;(x: &amp;<span class="symbol">&#x27;a</span> <span class="type">u8</span>) <span class="punctuation">-&gt;</span> &amp;<span class="symbol">&#x27;a</span> <span class="type">u8</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>甚至下面的声明也是有效的：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">trait</span> <span class="title class_">Tr</span> &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">f</span>(b: <span class="type">bool</span>, x: (<span class="type">u32</span>, &amp;<span class="type">u8</span>)) <span class="punctuation">-&gt;</span> &amp;<span class="type">u8</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为仅有一个引用，因此可以推断出返回值指向的对象。</p><p>下面的代码也是有效的：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">trait</span> <span class="title class_">Tr</span> &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">f</span>(x: &amp;<span class="type">u8</span>) <span class="punctuation">-&gt;</span> (&amp;<span class="type">u8</span>, &amp;<span class="type">f64</span>, <span class="type">bool</span>, &amp;<span class="type">Vec</span>&lt;<span class="type">String</span>&gt;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这种情况，返回值有好几个引用，但参数的引用仍然仅有一种。</p><p>参数引用类型仅有一种时，你甚至可以省略其返回值类型，而用在其它类型中指定。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">trait</span> <span class="title class_">Tr</span> &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">f</span>&lt;<span class="symbol">&#x27;a</span>&gt;(x: &amp;<span class="symbol">&#x27;a</span> <span class="type">u8</span>) <span class="punctuation">-&gt;</span> (&amp;<span class="type">u8</span>, &amp;<span class="symbol">&#x27;a</span> <span class="type">f64</span>, <span class="type">bool</span>, &amp;<span class="symbol">&#x27;static</span> <span class="type">Vec</span>&lt;<span class="type">String</span>&gt;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的返回值包含三个引用：第一个没有指定，第二字段有<code>'a</code>，第三个用了<code>'static</code>生命周期指示器。然而，参数中仍然仅有一个引用，因此返回的第一个字段的引用有一个隐式<code>'a</code>生命周期指示器。</p><p>这种省略机制称为“<strong>lifetime elision</strong>”。为了简化语法，生命周期指示器遇到这种仅有一个非静态(non-static)值时，可以 <strong>删去(elided)</strong> 。</p><h2 id="Lifetime-Elision-with-Object-Oriented-Programming"><a class="header-anchor" href="#Lifetime-Elision-with-Object-Oriented-Programming">¶</a>Lifetime Elision with Object-Oriented Programming</h2><p>考虑下面：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">trait</span> <span class="title class_">Tr</span> &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">f</span>(&amp;<span class="keyword">self</span>, y: &amp;<span class="type">u8</span>) <span class="punctuation">-&gt;</span> (&amp;<span class="type">u8</span>, &amp;<span class="type">f64</span>, <span class="type">bool</span>, &amp;<span class="type">Vec</span>&lt;<span class="type">String</span>&gt;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为参数有两个引用，所以前面的规则不起作用。然而，当一个方法返回某些引用时，多数情况下这些引用会租借当前的对象，即由<code>&amp;self</code>指向的值。因此，为了简化表达式，前面的代码被看做是下面的等价：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">trait</span> <span class="title class_">Tr</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>&lt;<span class="symbol">&#x27;a</span>&gt;(&amp;<span class="symbol">&#x27;a</span> <span class="keyword">self</span>, y: &amp;<span class="type">u8</span>) <span class="punctuation">-&gt;</span> (&amp;<span class="symbol">&#x27;a</span> <span class="type">u8</span>, &amp;<span class="symbol">&#x27;a</span> <span class="type">f64</span>, <span class="type">bool</span>, &amp;<span class="symbol">&#x27;a</span> <span class="type">Vec</span>&lt;<span class="type">String</span>&gt;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>目前，你可以为特定引用重载行为。这种情况，你希望返回值的第二个字段生命周期关联参数<code>y</code>，你需要写，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">trait</span> <span class="title class_">Tr</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>&lt;<span class="symbol">&#x27;a</span>&gt;(&amp;<span class="keyword">self</span>, y: &amp;<span class="symbol">&#x27;a</span> <span class="type">u8</span>) <span class="punctuation">-&gt;</span> (&amp;<span class="type">u8</span>, &amp;<span class="symbol">&#x27;a</span> <span class="type">f64</span>, <span class="type">bool</span>, &amp;<span class="type">Vec</span>&lt;<span class="type">String</span>&gt;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里，tuple中第二个字段指向的对象，存活时间必须要少于<code>y</code>指向的对象，以及第一个字段和第四个字段指向的对象，存活时间必须要少于<code>self</code>指向的对象。</p><p>当然，这个规则同样作用于<code>&amp;mut self</code>参数。</p><h2 id="The-Need-of-Lifetime-Specifiers-for-Structs"><a class="header-anchor" href="#The-Need-of-Lifetime-Specifiers-for-Structs">¶</a>The Need of Lifetime Specifiers for Structs</h2><p>上一个章节中，我们看到这种代码是有效的：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">x</span>: <span class="type">i32</span> = <span class="number">12</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_y</span>: &amp;<span class="type">i32</span> = &amp;x;</span><br></pre></td></tr></table></figure><p>这是因为，尽管<code>_y</code>持有对<code>x</code>的引用，它存活少于<code>x</code>。</p><p>相反，下面是不合法的，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">_y</span>: &amp;<span class="type">i32</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">x</span>: <span class="type">i32</span> = <span class="number">12</span>;</span><br><span class="line">_y = &amp;x;</span><br></pre></td></tr></table></figure><p>因为<code>_y</code>先于<code>x</code>声明，所以它会在<code>x</code>后销毁，它存活长于<code>x</code>。</p><p>我们也看到了，对于函数签名，需要有合适的注解(即lifetime specifier)，来满足有效的租借检查(borrow checker)。</p><p>除了上一章介绍这些情况，对于结构体(struct)来说，包含某些引用的issue下也相似。</p><p>下面代码看起来是合法的(实际上不是)：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">S</span> &#123;</span><br><span class="line">_b: <span class="type">bool</span>,</span><br><span class="line">_ri: &amp;<span class="type">i32</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">x</span>: <span class="type">i32</span> = <span class="number">12</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_y</span>: S = S &#123; _b: <span class="literal">true</span>, _ri: &amp;x &#125;;</span><br></pre></td></tr></table></figure><p>下面这种很明显是不合法：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">S</span> &#123;</span><br><span class="line">_b: <span class="type">bool</span>,</span><br><span class="line">_ri: &amp;<span class="type">i32</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_y</span>: S;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">x</span>: <span class="type">i32</span> = <span class="number">12</span>;</span><br><span class="line">_y = s &#123; _b: <span class="literal">true</span>, _ri: &amp;x &#125;;</span><br></pre></td></tr></table></figure><p>尽管<code>S</code>的字段<code>_ri</code>持有一个<code>x</code>的引用，但它存活长于<code>x</code>。</p><p>这种情况可以非常简单分析出来，但在一个real-world程序中可能是：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// In some library code:</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">S</span> &#123;</span><br><span class="line">_b: <span class="type">bool</span>,</span><br><span class="line">_ri: &amp;<span class="type">i32</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">create_s</span>(ri: &amp;<span class="type">i32</span>) <span class="punctuation">-&gt;</span> &#123;</span><br><span class="line">s &#123; _b: <span class="literal">true</span>, _ri: ri &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// In application code:</span></span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">main</span>() &#123;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_y</span>: S;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">x</span>: <span class="type">i32</span> = <span class="number">12</span>;</span><br><span class="line">_y = <span class="title function_ invoke__">create_s</span>(&amp;x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该程序代码是无效的，因为，当调用<code>create_s</code>时，指向<code>x</code>的引用会被存储在<code>_y</code>对象内部，但<code>_y</code>存活长于<code>x</code>(<code>_y</code>先于<code>x</code>声明)。</p><p>但程序员若不查看函数体的代码，又怎么知道<code>create_s</code>函数将参数的引用对象作为返回存储了？让我们看看下面的有效程序，它和上面这个类似，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// In some library code:</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">S</span> &#123;</span><br><span class="line">_b: <span class="type">bool</span>,</span><br><span class="line">_ri: &amp;<span class="symbol">&#x27;static</span> <span class="type">i32</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">create_s</span>(ri: &amp;<span class="type">i32</span>) <span class="punctuation">-&gt;</span> S &#123;</span><br><span class="line"><span class="keyword">static</span> ZERO: <span class="type">i32</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">static</span> ONE: <span class="type">i32</span> = <span class="number">1</span>;</span><br><span class="line">S &#123;</span><br><span class="line">_b: <span class="literal">true</span>,</span><br><span class="line">_ri: <span class="keyword">if</span> *ri &gt; <span class="number">0</span> &#123; &amp;ONE &#125; <span class="keyword">else</span> &#123; &amp;ZERO &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// In application code:</span></span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">main</span>() &#123;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_y</span>: S;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">x</span>: <span class="type">i32</span> = <span class="number">12</span>;</span><br><span class="line">_y = <span class="title function_ invoke__">create_s</span>(&amp;x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码中，函数<code>create_s</code>仅是用<code>ri</code>参数来初始化结构体的<code>_ri</code>字段。因此参数的值没有被存储在结构体内。<code>_ri</code>会包含一个静态值，即<code>ZERO</code>或<code>ONE</code>，静态变量不会被销毁。</p><p>这里的<code>create_s</code>函数签名虽然和上一个代码一样；但前一个代码是不合法的，因为参数被存储在结构体的字段中，而这里，参数通过<code>*ri</code>使用后，scope就已经结束了，并被回收掉。</p><p>因此，如果没有lifetime specifier，编程者被强迫去阅读函数<code>create_s</code>的方法体的内容，这样才能得知该函数是否会存储参数的引用对象。这种设计是糟糕的。</p><p>为了让编程者避免需要分析<code>create_s</code>函数来得知对象的声明周期是否合法，有必要有更进一步的生命周期注解(lifetime annotations)。</p><p>因此，类似于函数，仅是对于结构体函数，必须显式指定它们字段的每个引用的生命周期。</p><p>这解析了上面代码中，形式上看起来是有效的代码片段，实际上会产生“missing lifetime specifier”的编译错误。</p><h2 id="Possible-Lifetime-Specifiers-for-Structs"><a class="header-anchor" href="#Possible-Lifetime-Specifiers-for-Structs">¶</a>Possible Lifetime Specifiers for Structs</h2><p>实际上，对于一个结构体的引用字段的生命周期，Rust编译器仅允许两种可能：</p><ul><li>该字段仅指向静态对象(static objects)。</li><li>或者指向的对象，虽然不是静态的，但预先存在整个结构体对象中，并且存活长于该结构体。</li></ul><p>第一种情况已经介绍过，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">S</span> &#123; _b: <span class="type">bool</span>, _ri: &amp;<span class="symbol">&#x27;static</span> <span class="type">i32</span> &#125;</span><br></pre></td></tr></table></figure><p>该结构体包含有一个引用，不过它是<code>'static</code>引用，所以该引用不能被指派给任何租借的引用值。因此不会有生命周期的讨论问题，只要<code>_ri</code>字段被分配的是静态引用。</p><p>相反，对于第二种情况，下面有效代码阐述，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// In some library code:</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">s</span>&lt;<span class="symbol">&#x27;a</span>&gt; &#123; _b: <span class="type">bool</span>, _ri: &amp;<span class="symbol">&#x27;a</span> <span class="type">i32</span> &#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">create_s</span>&lt;<span class="symbol">&#x27;b</span>&gt;(ri: &amp;<span class="symbol">&#x27;b</span> <span class="type">i32</span>) <span class="punctuation">-&gt;</span> S&lt;<span class="symbol">&#x27;b</span>&gt; &#123;</span><br><span class="line">s&#123; _b: <span class="literal">true</span>, _ri: ri &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// In application code:</span></span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">main</span>() &#123;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">x</span>: <span class="type">i32</span> = <span class="number">12</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_y</span>: S;</span><br><span class="line">_y = <span class="title function_ invoke__">create_s</span>(&amp;x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里变量<code>x</code>的值被<code>create_s</code>函数租借以及持久化。实际上，它被存储在结构对象的返回字段<code>_ri</code>中；该对象在<code>main</code>函数中被用于初始化变量<code>_y</code>。因此，变量<code>_y</code>必须存活少于<code>x</code>。若将<code>let _y: S;</code>移到<code>x</code>前面，先于<code>x</code>声明，会产生错误“<code>x</code> does not live long enough”。</p><p>要判断<code>_x</code>是否被存储在结构体内部，不需要检查<code>create_s</code>函数体内部实现，也不需要检查结构体<code>S</code>的字段；检查<code>create_s</code>和<code>S</code>的函数签名足够了。</p><p>通过检查<code>create_s</code>函数签名，发现引用参数的生命周期指示器，和返回值<code>S</code>类型的引用指示器是同一个<code>'b</code>。这意味着返回的结构体必须存活长于租借的<code>i32</code>类型的对象。</p><p>通过检查结构体<code>S</code>的签名，发现它由一个lifetime specifier参数化，也意味着相关的某个字段不会是<code>'static</code>的引用。</p><p>因此，我们发现<code>create_s</code>函数是通过同一个lifetime specifier，获取参数的引用和参数化的(parameterized返回对象。这表示返回的引用的对象，可能租借自引用参数。</p><p>编译器必须分别检测结构声明的一致性。<code>struct S&lt;'a&gt;</code>表示<code>S</code>租借了某些对象，而结构体内的<code>_ri: &amp;'a i32</code>表示<code>_ri</code>字段是一个引用租借了一个对象。</p><p>因此，包含有引用字段的结构体，仅允许两种合法语法：“<code>field: &amp;'static type</code>” 或 “<code>field: &amp;'lifetime type</code>”，其中<code>lifetime</code>也是结构体自身的一个参数。如果结构体不包含引用字段或仅会出现静态引用字段，结构体可以不需要声明周期参数。</p><p>由于仅包含一个参数，所以可以通过lifetime elision由其隐式推断，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">create_s</span>(ri: &amp; <span class="type">i32</span>) <span class="punctuation">-&gt;</span> S &#123;</span><br><span class="line">S&#123; _b: <span class="literal">true</span>, _ri: ri &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因此，可能会有几种的语法错误情况，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">_S1</span> &#123; _f: &amp;<span class="type">i32</span> &#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_S2</span>&lt;<span class="symbol">&#x27;a</span>&gt; &#123; _f: &amp;<span class="type">i32</span> &#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_S3</span> &#123; _f: &amp;<span class="symbol">&#x27;a</span> <span class="type">i32</span> &#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_S4</span>&lt;<span class="symbol">&#x27;a</span>&gt; &#123; _f: &amp;<span class="symbol">&#x27;static</span> <span class="type">i32</span> &#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_S5</span> &#123; _f: &amp;<span class="symbol">&#x27;static</span> <span class="type">i32</span> &#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_S6</span>&lt;<span class="symbol">&#x27;a</span>&gt; &#123; _f: &amp;<span class="symbol">&#x27;a</span> <span class="type">i32</span> &#125;</span><br></pre></td></tr></table></figure><p>第一条和第四条语句是不合法的。<code>_S1</code>和<code>_S2</code>的声明是不合法的，因为<code>_f</code>字段是一个引用字段，没有lifetime specifier。</p><p><code>_S3</code>的声明是不合法的，因为生命周期指示器<code>'a</code>没有作为<code>S</code>的一个参数。</p><p><code>_S4</code>的声明是不合法的，因为参数<code>'a</code>没用被用于结构体内。</p><p>相反，最后两个结构体的声明是有效的。<code>_S5</code>包含一个静态对象引用。而<code>_S6</code>包含包含的引用总是存活长于结构体自身。</p><h2 id="Other-Uses-of-Lifetime-Specifiers"><a class="header-anchor" href="#Other-Uses-of-Lifetime-Specifiers">¶</a>Other Uses of Lifetime Specifiers</h2><p>我们知道，当定义一个包含引用的结构体类型时，生命周期指示器是必要的。对于元组-结构体类型也一样。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">TS</span>&lt;<span class="symbol">&#x27;a</span>&gt;(&amp;<span class="symbol">&#x27;a</span> <span class="type">u8</span>);</span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">E</span>&lt;<span class="symbol">&#x27;a</span>, <span class="symbol">&#x27;b</span>&gt; &#123;</span><br><span class="line">    _A(&amp;<span class="symbol">&#x27;a</span> <span class="type">u8</span>),</span><br><span class="line">    _B,</span><br><span class="line">    _C(<span class="type">bool</span>, &amp;<span class="symbol">&#x27;b</span> <span class="type">f64</span>, <span class="type">char</span>),</span><br><span class="line">    _D(&amp;<span class="symbol">&#x27;static</span> <span class="type">str</span>),</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="variable">byte</span> = <span class="number">34</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_ts</span> = <span class="title function_ invoke__">TS</span>(&amp;byte);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_e</span> = E::_A(&amp;byte);</span><br></pre></td></tr></table></figure><p>这段代码是有效的，以及移除任何一个lifetime specifier，都会产生“missing lifetime specifier”错误。</p><p>顺带一下，注意<code>E::_D</code>字段的定义。它是一个static string slice 引用。它们是 <strong>字符串字面量(string literals)</strong>。</p><p>为了简化，我们从不在可变引用中混入指示器。实际上，它是被允许的，虽然很另类，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>&lt;<span class="symbol">&#x27;a</span>&gt;(b: &amp;<span class="symbol">&#x27;a</span> <span class="keyword">mut</span> <span class="type">u8</span>) <span class="punctuation">-&gt;</span> &amp;<span class="symbol">&#x27;a</span> <span class="type">u8</span> &#123;</span><br><span class="line">    *b += <span class="number">1</span>;</span><br><span class="line">    b</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">byte</span> = <span class="number">12u8</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">byte_ref</span> = <span class="title function_ invoke__">f</span>(&amp;<span class="keyword">mut</span> byte);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, *byte_ref);</span><br></pre></td></tr></table></figure><p>结果将会打印：“13”。一个指向byte的可变引用被作为参数传递给<code>f</code>，以及递增之后作为返回值。通常对于一个可变参数来说，传递给函数后没必要返回它租借的引用的，因为<code>byte_ref</code>和<code>byte</code>都是指向同一个内存对象。</p><p>前面看过了，类型参数和生命周期指示器可以参数化使用，它们也可以用于同一个函数。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>&lt;<span class="symbol">&#x27;a</span>, T&gt;(b: &amp;<span class="symbol">&#x27;a</span> T) <span class="punctuation">-&gt;</span> &amp;<span class="symbol">&#x27;a</span> T &#123; b &#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">pi</span> = <span class="number">3.14</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">pi_ref</span> = <span class="title function_ invoke__">f</span>(&amp;pi);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, *pi_ref);</span><br></pre></td></tr></table></figure><p>结果将会打印：“3.14”。</p><p>下面是不合法的，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">S</span>&lt;<span class="symbol">&#x27;a</span>, T&gt; &#123; b: &amp;<span class="symbol">&#x27;a</span> T&#125;</span><br></pre></td></tr></table></figure><p>编译器出现“the parameter type <code>T</code> may not live long enough”。这是因为泛型类型<code>T</code>被具现化时，它的类型可能会包含一个引用，这种引用可能会导致声明周期错误。处于保护机制，编译器禁止这种语法。实际上有两种情况：</p><ul><li><code>T</code>所表示的类型不包含引用，或仅包含静态对象的引用。</li><li><code>T</code>所表示的类型包含non-static对象的引用，它的生命周期需要指定。</li></ul><p>第一种情况类似于，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">S</span>&lt;<span class="symbol">&#x27;a</span>, T: <span class="symbol">&#x27;static</span>&gt; &#123; b: &amp;<span class="symbol">&#x27;a</span> T &#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">s</span> = S &#123; b: &amp;<span class="literal">true</span> &#125;;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, *s.b);</span><br></pre></td></tr></table></figure><p>第二种情况类似于，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">S</span>&lt;<span class="symbol">&#x27;a</span>, T: <span class="symbol">&#x27;a</span>&gt; &#123; b: &amp;<span class="symbol">&#x27;a</span> T &#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">s1</span> = S &#123; b: &amp;<span class="literal">true</span> &#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">s2</span> = S &#123; b: &amp;s1 &#125;;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>, *s1.b, *s2.b.b);</span><br></pre></td></tr></table></figure><p>在第一行，<code>T</code>类型参数被界限在<code>'a</code>，意味着不管这个类型是什么，会包含一个引用，并租借这个lifetime specifier注解的对象，即整个结构对象自己。</p><p>在第二行，<code>S</code>结构体被<code>bool</code>初始化。实际上，原生类型不包含任何引用，所以这里用<code>'static</code>限界即可。</p><p>对于第三行，<code>S</code>结构体由<code>S&lt;bool&gt;</code>初始化。该类型包含一个non-static引用，用<code>'a</code>限界。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本章覆盖有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;简单、自由(free)函数和方法需要避免写入生命周期指示器(lifetime specifiers)，因为它们是被推断的&lt;/li&gt;
&lt;li&gt;为什么包含引用的结构体(structs)、元组-结构体(tuple-structs)、枚举(enums)需要生命周期指示器(lifetime specifiers)&lt;/li&gt;
&lt;li&gt;如何为结构体(structs)、元组-结构体(tuple-structs)、枚举(enums)编写生命周期指示器(lifetime specifiers)&lt;/li&gt;
&lt;li&gt;为什么包含指向泛型参数的结构体需要生命周期边界(协变、逆协变)&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    <content src="https://galudisu.info/%3Cp%3E%E6%9C%AC%E7%AB%A0%E8%A6%86%E7%9B%96%E6%9C%89%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E7%AE%80%E5%8D%95%E3%80%81%E8%87%AA%E7%94%B1(free)%E5%87%BD%E6%95%B0%E5%92%8C%E6%96%B9%E6%B3%95%E9%9C%80%E8%A6%81%E9%81%BF%E5%85%8D%E5%86%99%E5%85%A5%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%8C%87%E7%A4%BA%E5%99%A8(lifetime%20specifiers)%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E4%BB%AC%E6%98%AF%E8%A2%AB%E6%8E%A8%E6%96%AD%E7%9A%84%3C/li%3E%3Cli%3E%E4%B8%BA%E4%BB%80%E4%B9%88%E5%8C%85%E5%90%AB%E5%BC%95%E7%94%A8%E7%9A%84%E7%BB%93%E6%9E%84%E4%BD%93(structs)%E3%80%81%E5%85%83%E7%BB%84-%E7%BB%93%E6%9E%84%E4%BD%93(tuple-structs)%E3%80%81%E6%9E%9A%E4%B8%BE(enums)%E9%9C%80%E8%A6%81%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%8C%87%E7%A4%BA%E5%99%A8(lifetime%20specifiers)%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E4%B8%BA%E7%BB%93%E6%9E%84%E4%BD%93(structs)%E3%80%81%E5%85%83%E7%BB%84-%E7%BB%93%E6%9E%84%E4%BD%93(tuple-structs)%E3%80%81%E6%9E%9A%E4%B8%BE(enums)%E7%BC%96%E5%86%99%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%8C%87%E7%A4%BA%E5%99%A8(lifetime%20specifiers)%3C/li%3E%3Cli%3E%E4%B8%BA%E4%BB%80%E4%B9%88%E5%8C%85%E5%90%AB%E6%8C%87%E5%90%91%E6%B3%9B%E5%9E%8B%E5%8F%82%E6%95%B0%E7%9A%84%E7%BB%93%E6%9E%84%E4%BD%93%E9%9C%80%E8%A6%81%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E8%BE%B9%E7%95%8C(%E5%8D%8F%E5%8F%98%E3%80%81%E9%80%86%E5%8D%8F%E5%8F%98)%3C/li%3E%3C/ul%3E%3Cspan%20id=%22more%22%3E%3C/span%3E%3Ch2%20id=%22Lifetime-Elision%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Lifetime-Elision%22%3E%C2%B6%3C/a%3ELifetime%20Elision%3C/h2%3E%3Cp%3E%E4%B8%8A%E4%B8%80%E7%AB%A0%E8%8A%82%EF%BC%8C%E6%88%91%E4%BB%AC%E7%9C%8B%E5%88%B0%E6%AF%8F%E4%B8%AA%E5%87%BD%E6%95%B0%E7%AD%BE%E5%90%8D%EF%BC%8C%E9%83%BD%E5%BF%85%E9%A1%BB%E7%A1%AE%E5%AE%9A%E5%BC%95%E7%94%A8%E8%BF%94%E5%9B%9E%E5%80%BC%EF%BC%8C%E5%8D%B3%E8%A6%81%E4%B9%88%E6%98%AF%3Ccode%3E&#39;static%3C/code%3E%E7%9A%84lifetime%20specifier%EF%BC%8C%E8%A6%81%E4%B9%88%E6%98%AF%E5%85%B3%E8%81%94%E7%9A%84%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E7%9A%84lifetime%20specifier%E3%80%82%3C/p%3E%3Cp%3E%E6%9C%89%E6%97%B6%E9%81%BF%E5%85%8D%E7%BC%96%E5%86%99%E8%BF%99%E7%A7%8D%E7%83%A6%E4%BA%BA%E7%9A%84%E6%B3%A8%E8%A7%A3%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etrait%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ETr%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E(x:%20&amp;amp;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20&amp;amp;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E4%BB%A3%E7%A0%81%E6%98%AF%E8%A2%AB%E5%85%81%E8%AE%B8%E7%9A%84%E3%80%82%E8%BF%94%E5%9B%9E%E7%9A%84%E5%80%BC%E6%98%AF%E4%B8%AA%E5%BC%95%E7%94%A8%EF%BC%8C%E5%AE%83%E6%B2%A1%E7%94%A8%E6%8C%87%E5%AE%9A%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%EF%BC%8C%E4%BD%86%E5%AE%83%E4%B9%9F%E4%B8%8D%E6%98%AF%3Ccode%3E&#39;static%3C/code%3E%E7%9A%84%EF%BC%8C%E5%9B%A0%E6%AD%A4%E8%BF%99%E4%B8%AA%E9%9A%90%E5%BC%8F%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%8C%87%E7%A4%BA%E5%99%A8(implicit%20lifetime%20specifier)%E5%BF%85%E9%A1%BB%E6%98%AF%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E4%B8%AD%E7%9A%84%E5%85%B6%E4%B8%AD%E4%B8%80%E4%B8%AA%E3%80%82%E5%9B%A0%E4%B8%BA%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E4%BB%85%E6%9C%89%E4%B8%80%E4%B8%AA%EF%BC%8C%E5%9B%A0%E6%AD%A4%E5%AE%83%E7%9A%84lifetime%20specifier%E6%97%A0%E5%8F%AF%E5%8E%9A%E9%9D%9E%E5%B0%B1%E6%98%AF%E8%AF%A5%E5%8F%82%E6%95%B0%E5%85%B3%E8%81%94%E7%9A%84lifetime%20specifier%E3%80%82%E6%8D%A2%E8%A8%80%E4%B9%8B%EF%BC%8C%E8%BF%99%E4%B8%AA%E5%A3%B0%E6%98%8E%E5%87%BD%E6%95%B0%E7%AD%89%E6%95%88%E4%BA%8E%E4%B8%8B%E9%9D%A2%E7%9A%84%E5%86%99%E6%B3%95%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etrait%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ETr%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E&amp;lt;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E&amp;gt;(x:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Eu8%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Eu8%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%94%9A%E8%87%B3%E4%B8%8B%E9%9D%A2%E7%9A%84%E5%A3%B0%E6%98%8E%E4%B9%9F%E6%98%AF%E6%9C%89%E6%95%88%E7%9A%84%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etrait%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ETr%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E(b:%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E,%20x:%20(%3Cspan%20class=%22type%22%3Eu32%3C/span%3E,%20&amp;amp;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E))%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20&amp;amp;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%9B%A0%E4%B8%BA%E4%BB%85%E6%9C%89%E4%B8%80%E4%B8%AA%E5%BC%95%E7%94%A8%EF%BC%8C%E5%9B%A0%E6%AD%A4%E5%8F%AF%E4%BB%A5%E6%8E%A8%E6%96%AD%E5%87%BA%E8%BF%94%E5%9B%9E%E5%80%BC%E6%8C%87%E5%90%91%E7%9A%84%E5%AF%B9%E8%B1%A1%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E7%9A%84%E4%BB%A3%E7%A0%81%E4%B9%9F%E6%98%AF%E6%9C%89%E6%95%88%E7%9A%84%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etrait%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ETr%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E(x:%20&amp;amp;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20(&amp;amp;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E,%20&amp;amp;%3Cspan%20class=%22type%22%3Ef64%3C/span%3E,%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E,%20&amp;amp;%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3EString%3C/span%3E&amp;gt;);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E7%A7%8D%E6%83%85%E5%86%B5%EF%BC%8C%E8%BF%94%E5%9B%9E%E5%80%BC%E6%9C%89%E5%A5%BD%E5%87%A0%E4%B8%AA%E5%BC%95%E7%94%A8%EF%BC%8C%E4%BD%86%E5%8F%82%E6%95%B0%E7%9A%84%E5%BC%95%E7%94%A8%E4%BB%8D%E7%84%B6%E4%BB%85%E6%9C%89%E4%B8%80%E7%A7%8D%E3%80%82%3C/p%3E%3Cp%3E%E5%8F%82%E6%95%B0%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B%E4%BB%85%E6%9C%89%E4%B8%80%E7%A7%8D%E6%97%B6%EF%BC%8C%E4%BD%A0%E7%94%9A%E8%87%B3%E5%8F%AF%E4%BB%A5%E7%9C%81%E7%95%A5%E5%85%B6%E8%BF%94%E5%9B%9E%E5%80%BC%E7%B1%BB%E5%9E%8B%EF%BC%8C%E8%80%8C%E7%94%A8%E5%9C%A8%E5%85%B6%E5%AE%83%E7%B1%BB%E5%9E%8B%E4%B8%AD%E6%8C%87%E5%AE%9A%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etrait%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ETr%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E&amp;lt;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E&amp;gt;(x:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Eu8%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20(&amp;amp;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E,%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E,%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E,%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;static%3C/span%3E%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3EString%3C/span%3E&amp;gt;);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E9%87%8C%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC%E5%8C%85%E5%90%AB%E4%B8%89%E4%B8%AA%E5%BC%95%E7%94%A8%EF%BC%9A%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%B2%A1%E6%9C%89%E6%8C%87%E5%AE%9A%EF%BC%8C%E7%AC%AC%E4%BA%8C%E5%AD%97%E6%AE%B5%E6%9C%89%3Ccode%3E&#39;a%3C/code%3E%EF%BC%8C%E7%AC%AC%E4%B8%89%E4%B8%AA%E7%94%A8%E4%BA%86%3Ccode%3E&#39;static%3C/code%3E%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%8C%87%E7%A4%BA%E5%99%A8%E3%80%82%E7%84%B6%E8%80%8C%EF%BC%8C%E5%8F%82%E6%95%B0%E4%B8%AD%E4%BB%8D%E7%84%B6%E4%BB%85%E6%9C%89%E4%B8%80%E4%B8%AA%E5%BC%95%E7%94%A8%EF%BC%8C%E5%9B%A0%E6%AD%A4%E8%BF%94%E5%9B%9E%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%AD%97%E6%AE%B5%E7%9A%84%E5%BC%95%E7%94%A8%E6%9C%89%E4%B8%80%E4%B8%AA%E9%9A%90%E5%BC%8F%3Ccode%3E&#39;a%3C/code%3E%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%8C%87%E7%A4%BA%E5%99%A8%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E7%A7%8D%E7%9C%81%E7%95%A5%E6%9C%BA%E5%88%B6%E7%A7%B0%E4%B8%BA%E2%80%9C%3Cstrong%3Elifetime%20elision%3C/strong%3E%E2%80%9D%E3%80%82%E4%B8%BA%E4%BA%86%E7%AE%80%E5%8C%96%E8%AF%AD%E6%B3%95%EF%BC%8C%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%8C%87%E7%A4%BA%E5%99%A8%E9%81%87%E5%88%B0%E8%BF%99%E7%A7%8D%E4%BB%85%E6%9C%89%E4%B8%80%E4%B8%AA%E9%9D%9E%E9%9D%99%E6%80%81(non-static)%E5%80%BC%E6%97%B6%EF%BC%8C%E5%8F%AF%E4%BB%A5%20%3Cstrong%3E%E5%88%A0%E5%8E%BB(elided)%3C/strong%3E%20%E3%80%82%3C/p%3E%3Ch2%20id=%22Lifetime-Elision-with-Object-Oriented-Programming%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Lifetime-Elision-with-Object-Oriented-Programming%22%3E%C2%B6%3C/a%3ELifetime%20Elision%20with%20Object-Oriented%20Programming%3C/h2%3E%3Cp%3E%E8%80%83%E8%99%91%E4%B8%8B%E9%9D%A2%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etrait%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ETr%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E,%20y:%20&amp;amp;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20(&amp;amp;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E,%20&amp;amp;%3Cspan%20class=%22type%22%3Ef64%3C/span%3E,%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E,%20&amp;amp;%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3EString%3C/span%3E&amp;gt;);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%9B%A0%E4%B8%BA%E5%8F%82%E6%95%B0%E6%9C%89%E4%B8%A4%E4%B8%AA%E5%BC%95%E7%94%A8%EF%BC%8C%E6%89%80%E4%BB%A5%E5%89%8D%E9%9D%A2%E7%9A%84%E8%A7%84%E5%88%99%E4%B8%8D%E8%B5%B7%E4%BD%9C%E7%94%A8%E3%80%82%E7%84%B6%E8%80%8C%EF%BC%8C%E5%BD%93%E4%B8%80%E4%B8%AA%E6%96%B9%E6%B3%95%E8%BF%94%E5%9B%9E%E6%9F%90%E4%BA%9B%E5%BC%95%E7%94%A8%E6%97%B6%EF%BC%8C%E5%A4%9A%E6%95%B0%E6%83%85%E5%86%B5%E4%B8%8B%E8%BF%99%E4%BA%9B%E5%BC%95%E7%94%A8%E4%BC%9A%E7%A7%9F%E5%80%9F%E5%BD%93%E5%89%8D%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%8D%B3%E7%94%B1%3Ccode%3E&amp;amp;self%3C/code%3E%E6%8C%87%E5%90%91%E7%9A%84%E5%80%BC%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E4%B8%BA%E4%BA%86%E7%AE%80%E5%8C%96%E8%A1%A8%E8%BE%BE%E5%BC%8F%EF%BC%8C%E5%89%8D%E9%9D%A2%E7%9A%84%E4%BB%A3%E7%A0%81%E8%A2%AB%E7%9C%8B%E5%81%9A%E6%98%AF%E4%B8%8B%E9%9D%A2%E7%9A%84%E7%AD%89%E4%BB%B7%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etrait%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ETr%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E&amp;lt;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E&amp;gt;(&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E,%20y:%20&amp;amp;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20(&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Eu8%3C/span%3E,%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E,%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E,%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3EString%3C/span%3E&amp;gt;);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%9B%AE%E5%89%8D%EF%BC%8C%E4%BD%A0%E5%8F%AF%E4%BB%A5%E4%B8%BA%E7%89%B9%E5%AE%9A%E5%BC%95%E7%94%A8%E9%87%8D%E8%BD%BD%E8%A1%8C%E4%B8%BA%E3%80%82%E8%BF%99%E7%A7%8D%E6%83%85%E5%86%B5%EF%BC%8C%E4%BD%A0%E5%B8%8C%E6%9C%9B%E8%BF%94%E5%9B%9E%E5%80%BC%E7%9A%84%E7%AC%AC%E4%BA%8C%E4%B8%AA%E5%AD%97%E6%AE%B5%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%85%B3%E8%81%94%E5%8F%82%E6%95%B0%3Ccode%3Ey%3C/code%3E%EF%BC%8C%E4%BD%A0%E9%9C%80%E8%A6%81%E5%86%99%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etrait%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ETr%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E&amp;lt;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E&amp;gt;(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E,%20y:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Eu8%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20(&amp;amp;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E,%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E,%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E,%20&amp;amp;%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3EString%3C/span%3E&amp;gt;);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E9%87%8C%EF%BC%8Ctuple%E4%B8%AD%E7%AC%AC%E4%BA%8C%E4%B8%AA%E5%AD%97%E6%AE%B5%E6%8C%87%E5%90%91%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%AD%98%E6%B4%BB%E6%97%B6%E9%97%B4%E5%BF%85%E9%A1%BB%E8%A6%81%E5%B0%91%E4%BA%8E%3Ccode%3Ey%3C/code%3E%E6%8C%87%E5%90%91%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E4%BB%A5%E5%8F%8A%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%AD%97%E6%AE%B5%E5%92%8C%E7%AC%AC%E5%9B%9B%E4%B8%AA%E5%AD%97%E6%AE%B5%E6%8C%87%E5%90%91%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%AD%98%E6%B4%BB%E6%97%B6%E9%97%B4%E5%BF%85%E9%A1%BB%E8%A6%81%E5%B0%91%E4%BA%8E%3Ccode%3Eself%3C/code%3E%E6%8C%87%E5%90%91%E7%9A%84%E5%AF%B9%E8%B1%A1%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E7%84%B6%EF%BC%8C%E8%BF%99%E4%B8%AA%E8%A7%84%E5%88%99%E5%90%8C%E6%A0%B7%E4%BD%9C%E7%94%A8%E4%BA%8E%3Ccode%3E&amp;amp;mut%20self%3C/code%3E%E5%8F%82%E6%95%B0%E3%80%82%3C/p%3E%3Ch2%20id=%22The-Need-of-Lifetime-Specifiers-for-Structs%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#The-Need-of-Lifetime-Specifiers-for-Structs%22%3E%C2%B6%3C/a%3EThe%20Need%20of%20Lifetime%20Specifiers%20for%20Structs%3C/h2%3E%3Cp%3E%E4%B8%8A%E4%B8%80%E4%B8%AA%E7%AB%A0%E8%8A%82%E4%B8%AD%EF%BC%8C%E6%88%91%E4%BB%AC%E7%9C%8B%E5%88%B0%E8%BF%99%E7%A7%8D%E4%BB%A3%E7%A0%81%E6%98%AF%E6%9C%89%E6%95%88%E7%9A%84%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ex%3C/span%3E:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_y%3C/span%3E:%20&amp;amp;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20=%20&amp;amp;x;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E6%98%AF%E5%9B%A0%E4%B8%BA%EF%BC%8C%E5%B0%BD%E7%AE%A1%3Ccode%3E_y%3C/code%3E%E6%8C%81%E6%9C%89%E5%AF%B9%3Ccode%3Ex%3C/code%3E%E7%9A%84%E5%BC%95%E7%94%A8%EF%BC%8C%E5%AE%83%E5%AD%98%E6%B4%BB%E5%B0%91%E4%BA%8E%3Ccode%3Ex%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E7%9B%B8%E5%8F%8D%EF%BC%8C%E4%B8%8B%E9%9D%A2%E6%98%AF%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_y%3C/span%3E:%20&amp;amp;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ex%3C/span%3E:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_y%20=%20&amp;amp;x;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%9B%A0%E4%B8%BA%3Ccode%3E_y%3C/code%3E%E5%85%88%E4%BA%8E%3Ccode%3Ex%3C/code%3E%E5%A3%B0%E6%98%8E%EF%BC%8C%E6%89%80%E4%BB%A5%E5%AE%83%E4%BC%9A%E5%9C%A8%3Ccode%3Ex%3C/code%3E%E5%90%8E%E9%94%80%E6%AF%81%EF%BC%8C%E5%AE%83%E5%AD%98%E6%B4%BB%E9%95%BF%E4%BA%8E%3Ccode%3Ex%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E6%88%91%E4%BB%AC%E4%B9%9F%E7%9C%8B%E5%88%B0%E4%BA%86%EF%BC%8C%E5%AF%B9%E4%BA%8E%E5%87%BD%E6%95%B0%E7%AD%BE%E5%90%8D%EF%BC%8C%E9%9C%80%E8%A6%81%E6%9C%89%E5%90%88%E9%80%82%E7%9A%84%E6%B3%A8%E8%A7%A3(%E5%8D%B3lifetime%20specifier)%EF%BC%8C%E6%9D%A5%E6%BB%A1%E8%B6%B3%E6%9C%89%E6%95%88%E7%9A%84%E7%A7%9F%E5%80%9F%E6%A3%80%E6%9F%A5(borrow%20checker)%E3%80%82%3C/p%3E%3Cp%3E%E9%99%A4%E4%BA%86%E4%B8%8A%E4%B8%80%E7%AB%A0%E4%BB%8B%E7%BB%8D%E8%BF%99%E4%BA%9B%E6%83%85%E5%86%B5%EF%BC%8C%E5%AF%B9%E4%BA%8E%E7%BB%93%E6%9E%84%E4%BD%93(struct)%E6%9D%A5%E8%AF%B4%EF%BC%8C%E5%8C%85%E5%90%AB%E6%9F%90%E4%BA%9B%E5%BC%95%E7%94%A8%E7%9A%84issue%E4%B8%8B%E4%B9%9F%E7%9B%B8%E4%BC%BC%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E4%BB%A3%E7%A0%81%E7%9C%8B%E8%B5%B7%E6%9D%A5%E6%98%AF%E5%90%88%E6%B3%95%E7%9A%84(%E5%AE%9E%E9%99%85%E4%B8%8A%E4%B8%8D%E6%98%AF)%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_b:%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_ri:%20&amp;amp;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ex%3C/span%3E:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_y%3C/span%3E:%20S%20=%20S%20&amp;#123;%20_b:%20%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E,%20_ri:%20&amp;amp;x%20&amp;#125;;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E8%BF%99%E7%A7%8D%E5%BE%88%E6%98%8E%E6%98%BE%E6%98%AF%E4%B8%8D%E5%90%88%E6%B3%95%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_b:%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_ri:%20&amp;amp;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_y%3C/span%3E:%20S;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ex%3C/span%3E:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_y%20=%20s%20&amp;#123;%20_b:%20%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E,%20_ri:%20&amp;amp;x%20&amp;#125;;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%B0%BD%E7%AE%A1%3Ccode%3ES%3C/code%3E%E7%9A%84%E5%AD%97%E6%AE%B5%3Ccode%3E_ri%3C/code%3E%E6%8C%81%E6%9C%89%E4%B8%80%E4%B8%AA%3Ccode%3Ex%3C/code%3E%E7%9A%84%E5%BC%95%E7%94%A8%EF%BC%8C%E4%BD%86%E5%AE%83%E5%AD%98%E6%B4%BB%E9%95%BF%E4%BA%8E%3Ccode%3Ex%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E7%A7%8D%E6%83%85%E5%86%B5%E5%8F%AF%E4%BB%A5%E9%9D%9E%E5%B8%B8%E7%AE%80%E5%8D%95%E5%88%86%E6%9E%90%E5%87%BA%E6%9D%A5%EF%BC%8C%E4%BD%86%E5%9C%A8%E4%B8%80%E4%B8%AAreal-world%E7%A8%8B%E5%BA%8F%E4%B8%AD%E5%8F%AF%E8%83%BD%E6%98%AF%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20In%20some%20library%20code:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_b:%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_ri:%20&amp;amp;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ecreate_s%3C/span%3E(ri:%20&amp;amp;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Es%20&amp;#123;%20_b:%20%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E,%20_ri:%20ri%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20In%20application%20code:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Emain%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_y%3C/span%3E:%20S;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ex%3C/span%3E:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_y%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecreate_s%3C/span%3E(&amp;amp;x);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%AF%A5%E7%A8%8B%E5%BA%8F%E4%BB%A3%E7%A0%81%E6%98%AF%E6%97%A0%E6%95%88%E7%9A%84%EF%BC%8C%E5%9B%A0%E4%B8%BA%EF%BC%8C%E5%BD%93%E8%B0%83%E7%94%A8%3Ccode%3Ecreate_s%3C/code%3E%E6%97%B6%EF%BC%8C%E6%8C%87%E5%90%91%3Ccode%3Ex%3C/code%3E%E7%9A%84%E5%BC%95%E7%94%A8%E4%BC%9A%E8%A2%AB%E5%AD%98%E5%82%A8%E5%9C%A8%3Ccode%3E_y%3C/code%3E%E5%AF%B9%E8%B1%A1%E5%86%85%E9%83%A8%EF%BC%8C%E4%BD%86%3Ccode%3E_y%3C/code%3E%E5%AD%98%E6%B4%BB%E9%95%BF%E4%BA%8E%3Ccode%3Ex%3C/code%3E(%3Ccode%3E_y%3C/code%3E%E5%85%88%E4%BA%8E%3Ccode%3Ex%3C/code%3E%E5%A3%B0%E6%98%8E)%E3%80%82%3C/p%3E%3Cp%3E%E4%BD%86%E7%A8%8B%E5%BA%8F%E5%91%98%E8%8B%A5%E4%B8%8D%E6%9F%A5%E7%9C%8B%E5%87%BD%E6%95%B0%E4%BD%93%E7%9A%84%E4%BB%A3%E7%A0%81%EF%BC%8C%E5%8F%88%E6%80%8E%E4%B9%88%E7%9F%A5%E9%81%93%3Ccode%3Ecreate_s%3C/code%3E%E5%87%BD%E6%95%B0%E5%B0%86%E5%8F%82%E6%95%B0%E7%9A%84%E5%BC%95%E7%94%A8%E5%AF%B9%E8%B1%A1%E4%BD%9C%E4%B8%BA%E8%BF%94%E5%9B%9E%E5%AD%98%E5%82%A8%E4%BA%86%EF%BC%9F%E8%AE%A9%E6%88%91%E4%BB%AC%E7%9C%8B%E7%9C%8B%E4%B8%8B%E9%9D%A2%E7%9A%84%E6%9C%89%E6%95%88%E7%A8%8B%E5%BA%8F%EF%BC%8C%E5%AE%83%E5%92%8C%E4%B8%8A%E9%9D%A2%E8%BF%99%E4%B8%AA%E7%B1%BB%E4%BC%BC%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E19%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E20%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20In%20some%20library%20code:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_b:%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_ri:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;static%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ecreate_s%3C/span%3E(ri:%20&amp;amp;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20S%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estatic%3C/span%3E%20ZERO:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E0%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estatic%3C/span%3E%20ONE:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E1%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ES%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_b:%20%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_ri:%20%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20*ri%20&amp;gt;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E%20&amp;#123;%20&amp;amp;ONE%20&amp;#125;%20%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20&amp;#123;%20&amp;amp;ZERO%20&amp;#125;,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20In%20application%20code:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Emain%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_y%3C/span%3E:%20S;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ex%3C/span%3E:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_y%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecreate_s%3C/span%3E(&amp;amp;x);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%BB%A3%E7%A0%81%E4%B8%AD%EF%BC%8C%E5%87%BD%E6%95%B0%3Ccode%3Ecreate_s%3C/code%3E%E4%BB%85%E6%98%AF%E7%94%A8%3Ccode%3Eri%3C/code%3E%E5%8F%82%E6%95%B0%E6%9D%A5%E5%88%9D%E5%A7%8B%E5%8C%96%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%3Ccode%3E_ri%3C/code%3E%E5%AD%97%E6%AE%B5%E3%80%82%E5%9B%A0%E6%AD%A4%E5%8F%82%E6%95%B0%E7%9A%84%E5%80%BC%E6%B2%A1%E6%9C%89%E8%A2%AB%E5%AD%98%E5%82%A8%E5%9C%A8%E7%BB%93%E6%9E%84%E4%BD%93%E5%86%85%E3%80%82%3Ccode%3E_ri%3C/code%3E%E4%BC%9A%E5%8C%85%E5%90%AB%E4%B8%80%E4%B8%AA%E9%9D%99%E6%80%81%E5%80%BC%EF%BC%8C%E5%8D%B3%3Ccode%3EZERO%3C/code%3E%E6%88%96%3Ccode%3EONE%3C/code%3E%EF%BC%8C%E9%9D%99%E6%80%81%E5%8F%98%E9%87%8F%E4%B8%8D%E4%BC%9A%E8%A2%AB%E9%94%80%E6%AF%81%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E9%87%8C%E7%9A%84%3Ccode%3Ecreate_s%3C/code%3E%E5%87%BD%E6%95%B0%E7%AD%BE%E5%90%8D%E8%99%BD%E7%84%B6%E5%92%8C%E4%B8%8A%E4%B8%80%E4%B8%AA%E4%BB%A3%E7%A0%81%E4%B8%80%E6%A0%B7%EF%BC%9B%E4%BD%86%E5%89%8D%E4%B8%80%E4%B8%AA%E4%BB%A3%E7%A0%81%E6%98%AF%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%8F%82%E6%95%B0%E8%A2%AB%E5%AD%98%E5%82%A8%E5%9C%A8%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E5%AD%97%E6%AE%B5%E4%B8%AD%EF%BC%8C%E8%80%8C%E8%BF%99%E9%87%8C%EF%BC%8C%E5%8F%82%E6%95%B0%E9%80%9A%E8%BF%87%3Ccode%3E*ri%3C/code%3E%E4%BD%BF%E7%94%A8%E5%90%8E%EF%BC%8Cscope%E5%B0%B1%E5%B7%B2%E7%BB%8F%E7%BB%93%E6%9D%9F%E4%BA%86%EF%BC%8C%E5%B9%B6%E8%A2%AB%E5%9B%9E%E6%94%B6%E6%8E%89%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%A6%82%E6%9E%9C%E6%B2%A1%E6%9C%89lifetime%20specifier%EF%BC%8C%E7%BC%96%E7%A8%8B%E8%80%85%E8%A2%AB%E5%BC%BA%E8%BF%AB%E5%8E%BB%E9%98%85%E8%AF%BB%E5%87%BD%E6%95%B0%3Ccode%3Ecreate_s%3C/code%3E%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%93%E7%9A%84%E5%86%85%E5%AE%B9%EF%BC%8C%E8%BF%99%E6%A0%B7%E6%89%8D%E8%83%BD%E5%BE%97%E7%9F%A5%E8%AF%A5%E5%87%BD%E6%95%B0%E6%98%AF%E5%90%A6%E4%BC%9A%E5%AD%98%E5%82%A8%E5%8F%82%E6%95%B0%E7%9A%84%E5%BC%95%E7%94%A8%E5%AF%B9%E8%B1%A1%E3%80%82%E8%BF%99%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%98%AF%E7%B3%9F%E7%B3%95%E7%9A%84%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%BA%E4%BA%86%E8%AE%A9%E7%BC%96%E7%A8%8B%E8%80%85%E9%81%BF%E5%85%8D%E9%9C%80%E8%A6%81%E5%88%86%E6%9E%90%3Ccode%3Ecreate_s%3C/code%3E%E5%87%BD%E6%95%B0%E6%9D%A5%E5%BE%97%E7%9F%A5%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%A3%B0%E6%98%8E%E5%91%A8%E6%9C%9F%E6%98%AF%E5%90%A6%E5%90%88%E6%B3%95%EF%BC%8C%E6%9C%89%E5%BF%85%E8%A6%81%E6%9C%89%E6%9B%B4%E8%BF%9B%E4%B8%80%E6%AD%A5%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%B3%A8%E8%A7%A3(lifetime%20annotations)%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E7%B1%BB%E4%BC%BC%E4%BA%8E%E5%87%BD%E6%95%B0%EF%BC%8C%E4%BB%85%E6%98%AF%E5%AF%B9%E4%BA%8E%E7%BB%93%E6%9E%84%E4%BD%93%E5%87%BD%E6%95%B0%EF%BC%8C%E5%BF%85%E9%A1%BB%E6%98%BE%E5%BC%8F%E6%8C%87%E5%AE%9A%E5%AE%83%E4%BB%AC%E5%AD%97%E6%AE%B5%E7%9A%84%E6%AF%8F%E4%B8%AA%E5%BC%95%E7%94%A8%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E8%A7%A3%E6%9E%90%E4%BA%86%E4%B8%8A%E9%9D%A2%E4%BB%A3%E7%A0%81%E4%B8%AD%EF%BC%8C%E5%BD%A2%E5%BC%8F%E4%B8%8A%E7%9C%8B%E8%B5%B7%E6%9D%A5%E6%98%AF%E6%9C%89%E6%95%88%E7%9A%84%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5%EF%BC%8C%E5%AE%9E%E9%99%85%E4%B8%8A%E4%BC%9A%E4%BA%A7%E7%94%9F%E2%80%9Cmissing%20lifetime%20specifier%E2%80%9D%E7%9A%84%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%E3%80%82%3C/p%3E%3Ch2%20id=%22Possible-Lifetime-Specifiers-for-Structs%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Possible-Lifetime-Specifiers-for-Structs%22%3E%C2%B6%3C/a%3EPossible%20Lifetime%20Specifiers%20for%20Structs%3C/h2%3E%3Cp%3E%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E5%AF%B9%E4%BA%8E%E4%B8%80%E4%B8%AA%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E5%BC%95%E7%94%A8%E5%AD%97%E6%AE%B5%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%EF%BC%8CRust%E7%BC%96%E8%AF%91%E5%99%A8%E4%BB%85%E5%85%81%E8%AE%B8%E4%B8%A4%E7%A7%8D%E5%8F%AF%E8%83%BD%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E8%AF%A5%E5%AD%97%E6%AE%B5%E4%BB%85%E6%8C%87%E5%90%91%E9%9D%99%E6%80%81%E5%AF%B9%E8%B1%A1(static%20objects)%E3%80%82%3C/li%3E%3Cli%3E%E6%88%96%E8%80%85%E6%8C%87%E5%90%91%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E8%99%BD%E7%84%B6%E4%B8%8D%E6%98%AF%E9%9D%99%E6%80%81%E7%9A%84%EF%BC%8C%E4%BD%86%E9%A2%84%E5%85%88%E5%AD%98%E5%9C%A8%E6%95%B4%E4%B8%AA%E7%BB%93%E6%9E%84%E4%BD%93%E5%AF%B9%E8%B1%A1%E4%B8%AD%EF%BC%8C%E5%B9%B6%E4%B8%94%E5%AD%98%E6%B4%BB%E9%95%BF%E4%BA%8E%E8%AF%A5%E7%BB%93%E6%9E%84%E4%BD%93%E3%80%82%3C/li%3E%3C/ul%3E%3Cp%3E%E7%AC%AC%E4%B8%80%E7%A7%8D%E6%83%85%E5%86%B5%E5%B7%B2%E7%BB%8F%E4%BB%8B%E7%BB%8D%E8%BF%87%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20&amp;#123;%20_b:%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E,%20_ri:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;static%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%AF%A5%E7%BB%93%E6%9E%84%E4%BD%93%E5%8C%85%E5%90%AB%E6%9C%89%E4%B8%80%E4%B8%AA%E5%BC%95%E7%94%A8%EF%BC%8C%E4%B8%8D%E8%BF%87%E5%AE%83%E6%98%AF%3Ccode%3E&#39;static%3C/code%3E%E5%BC%95%E7%94%A8%EF%BC%8C%E6%89%80%E4%BB%A5%E8%AF%A5%E5%BC%95%E7%94%A8%E4%B8%8D%E8%83%BD%E8%A2%AB%E6%8C%87%E6%B4%BE%E7%BB%99%E4%BB%BB%E4%BD%95%E7%A7%9F%E5%80%9F%E7%9A%84%E5%BC%95%E7%94%A8%E5%80%BC%E3%80%82%E5%9B%A0%E6%AD%A4%E4%B8%8D%E4%BC%9A%E6%9C%89%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%9A%84%E8%AE%A8%E8%AE%BA%E9%97%AE%E9%A2%98%EF%BC%8C%E5%8F%AA%E8%A6%81%3Ccode%3E_ri%3C/code%3E%E5%AD%97%E6%AE%B5%E8%A2%AB%E5%88%86%E9%85%8D%E7%9A%84%E6%98%AF%E9%9D%99%E6%80%81%E5%BC%95%E7%94%A8%E3%80%82%3C/p%3E%3Cp%3E%E7%9B%B8%E5%8F%8D%EF%BC%8C%E5%AF%B9%E4%BA%8E%E7%AC%AC%E4%BA%8C%E7%A7%8D%E6%83%85%E5%86%B5%EF%BC%8C%E4%B8%8B%E9%9D%A2%E6%9C%89%E6%95%88%E4%BB%A3%E7%A0%81%E9%98%90%E8%BF%B0%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20In%20some%20library%20code:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3Es%3C/span%3E&amp;lt;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E&amp;gt;%20&amp;#123;%20_b:%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E,%20_ri:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ecreate_s%3C/span%3E&amp;lt;%3Cspan%20class=%22symbol%22%3E&amp;#x27;b%3C/span%3E&amp;gt;(ri:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;b%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20S&amp;lt;%3Cspan%20class=%22symbol%22%3E&amp;#x27;b%3C/span%3E&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Es&amp;#123;%20_b:%20%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E,%20_ri:%20ri%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20In%20application%20code:%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Emain%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ex%3C/span%3E:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_y%3C/span%3E:%20S;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_y%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecreate_s%3C/span%3E(&amp;amp;x);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E9%87%8C%E5%8F%98%E9%87%8F%3Ccode%3Ex%3C/code%3E%E7%9A%84%E5%80%BC%E8%A2%AB%3Ccode%3Ecreate_s%3C/code%3E%E5%87%BD%E6%95%B0%E7%A7%9F%E5%80%9F%E4%BB%A5%E5%8F%8A%E6%8C%81%E4%B9%85%E5%8C%96%E3%80%82%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E5%AE%83%E8%A2%AB%E5%AD%98%E5%82%A8%E5%9C%A8%E7%BB%93%E6%9E%84%E5%AF%B9%E8%B1%A1%E7%9A%84%E8%BF%94%E5%9B%9E%E5%AD%97%E6%AE%B5%3Ccode%3E_ri%3C/code%3E%E4%B8%AD%EF%BC%9B%E8%AF%A5%E5%AF%B9%E8%B1%A1%E5%9C%A8%3Ccode%3Emain%3C/code%3E%E5%87%BD%E6%95%B0%E4%B8%AD%E8%A2%AB%E7%94%A8%E4%BA%8E%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8F%98%E9%87%8F%3Ccode%3E_y%3C/code%3E%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%8F%98%E9%87%8F%3Ccode%3E_y%3C/code%3E%E5%BF%85%E9%A1%BB%E5%AD%98%E6%B4%BB%E5%B0%91%E4%BA%8E%3Ccode%3Ex%3C/code%3E%E3%80%82%E8%8B%A5%E5%B0%86%3Ccode%3Elet%20_y:%20S;%3C/code%3E%E7%A7%BB%E5%88%B0%3Ccode%3Ex%3C/code%3E%E5%89%8D%E9%9D%A2%EF%BC%8C%E5%85%88%E4%BA%8E%3Ccode%3Ex%3C/code%3E%E5%A3%B0%E6%98%8E%EF%BC%8C%E4%BC%9A%E4%BA%A7%E7%94%9F%E9%94%99%E8%AF%AF%E2%80%9C%3Ccode%3Ex%3C/code%3E%20does%20not%20live%20long%20enough%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E8%A6%81%E5%88%A4%E6%96%AD%3Ccode%3E_x%3C/code%3E%E6%98%AF%E5%90%A6%E8%A2%AB%E5%AD%98%E5%82%A8%E5%9C%A8%E7%BB%93%E6%9E%84%E4%BD%93%E5%86%85%E9%83%A8%EF%BC%8C%E4%B8%8D%E9%9C%80%E8%A6%81%E6%A3%80%E6%9F%A5%3Ccode%3Ecreate_s%3C/code%3E%E5%87%BD%E6%95%B0%E4%BD%93%E5%86%85%E9%83%A8%E5%AE%9E%E7%8E%B0%EF%BC%8C%E4%B9%9F%E4%B8%8D%E9%9C%80%E8%A6%81%E6%A3%80%E6%9F%A5%E7%BB%93%E6%9E%84%E4%BD%93%3Ccode%3ES%3C/code%3E%E7%9A%84%E5%AD%97%E6%AE%B5%EF%BC%9B%E6%A3%80%E6%9F%A5%3Ccode%3Ecreate_s%3C/code%3E%E5%92%8C%3Ccode%3ES%3C/code%3E%E7%9A%84%E5%87%BD%E6%95%B0%E7%AD%BE%E5%90%8D%E8%B6%B3%E5%A4%9F%E4%BA%86%E3%80%82%3C/p%3E%3Cp%3E%E9%80%9A%E8%BF%87%E6%A3%80%E6%9F%A5%3Ccode%3Ecreate_s%3C/code%3E%E5%87%BD%E6%95%B0%E7%AD%BE%E5%90%8D%EF%BC%8C%E5%8F%91%E7%8E%B0%E5%BC%95%E7%94%A8%E5%8F%82%E6%95%B0%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%8C%87%E7%A4%BA%E5%99%A8%EF%BC%8C%E5%92%8C%E8%BF%94%E5%9B%9E%E5%80%BC%3Ccode%3ES%3C/code%3E%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%BC%95%E7%94%A8%E6%8C%87%E7%A4%BA%E5%99%A8%E6%98%AF%E5%90%8C%E4%B8%80%E4%B8%AA%3Ccode%3E&#39;b%3C/code%3E%E3%80%82%E8%BF%99%E6%84%8F%E5%91%B3%E7%9D%80%E8%BF%94%E5%9B%9E%E7%9A%84%E7%BB%93%E6%9E%84%E4%BD%93%E5%BF%85%E9%A1%BB%E5%AD%98%E6%B4%BB%E9%95%BF%E4%BA%8E%E7%A7%9F%E5%80%9F%E7%9A%84%3Ccode%3Ei32%3C/code%3E%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%AF%B9%E8%B1%A1%E3%80%82%3C/p%3E%3Cp%3E%E9%80%9A%E8%BF%87%E6%A3%80%E6%9F%A5%E7%BB%93%E6%9E%84%E4%BD%93%3Ccode%3ES%3C/code%3E%E7%9A%84%E7%AD%BE%E5%90%8D%EF%BC%8C%E5%8F%91%E7%8E%B0%E5%AE%83%E7%94%B1%E4%B8%80%E4%B8%AAlifetime%20specifier%E5%8F%82%E6%95%B0%E5%8C%96%EF%BC%8C%E4%B9%9F%E6%84%8F%E5%91%B3%E7%9D%80%E7%9B%B8%E5%85%B3%E7%9A%84%E6%9F%90%E4%B8%AA%E5%AD%97%E6%AE%B5%E4%B8%8D%E4%BC%9A%E6%98%AF%3Ccode%3E&#39;static%3C/code%3E%E7%9A%84%E5%BC%95%E7%94%A8%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E6%88%91%E4%BB%AC%E5%8F%91%E7%8E%B0%3Ccode%3Ecreate_s%3C/code%3E%E5%87%BD%E6%95%B0%E6%98%AF%E9%80%9A%E8%BF%87%E5%90%8C%E4%B8%80%E4%B8%AAlifetime%20specifier%EF%BC%8C%E8%8E%B7%E5%8F%96%E5%8F%82%E6%95%B0%E7%9A%84%E5%BC%95%E7%94%A8%E5%92%8C%E5%8F%82%E6%95%B0%E5%8C%96%E7%9A%84(parameterized%E8%BF%94%E5%9B%9E%E5%AF%B9%E8%B1%A1%E3%80%82%E8%BF%99%E8%A1%A8%E7%A4%BA%E8%BF%94%E5%9B%9E%E7%9A%84%E5%BC%95%E7%94%A8%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%8F%AF%E8%83%BD%E7%A7%9F%E5%80%9F%E8%87%AA%E5%BC%95%E7%94%A8%E5%8F%82%E6%95%B0%E3%80%82%3C/p%3E%3Cp%3E%E7%BC%96%E8%AF%91%E5%99%A8%E5%BF%85%E9%A1%BB%E5%88%86%E5%88%AB%E6%A3%80%E6%B5%8B%E7%BB%93%E6%9E%84%E5%A3%B0%E6%98%8E%E7%9A%84%E4%B8%80%E8%87%B4%E6%80%A7%E3%80%82%3Ccode%3Estruct%20S&amp;lt;&#39;a&amp;gt;%3C/code%3E%E8%A1%A8%E7%A4%BA%3Ccode%3ES%3C/code%3E%E7%A7%9F%E5%80%9F%E4%BA%86%E6%9F%90%E4%BA%9B%E5%AF%B9%E8%B1%A1%EF%BC%8C%E8%80%8C%E7%BB%93%E6%9E%84%E4%BD%93%E5%86%85%E7%9A%84%3Ccode%3E_ri:%20&amp;amp;&#39;a%20i32%3C/code%3E%E8%A1%A8%E7%A4%BA%3Ccode%3E_ri%3C/code%3E%E5%AD%97%E6%AE%B5%E6%98%AF%E4%B8%80%E4%B8%AA%E5%BC%95%E7%94%A8%E7%A7%9F%E5%80%9F%E4%BA%86%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%8C%85%E5%90%AB%E6%9C%89%E5%BC%95%E7%94%A8%E5%AD%97%E6%AE%B5%E7%9A%84%E7%BB%93%E6%9E%84%E4%BD%93%EF%BC%8C%E4%BB%85%E5%85%81%E8%AE%B8%E4%B8%A4%E7%A7%8D%E5%90%88%E6%B3%95%E8%AF%AD%E6%B3%95%EF%BC%9A%E2%80%9C%3Ccode%3Efield:%20&amp;amp;&#39;static%20type%3C/code%3E%E2%80%9D%20%E6%88%96%20%E2%80%9C%3Ccode%3Efield:%20&amp;amp;&#39;lifetime%20type%3C/code%3E%E2%80%9D%EF%BC%8C%E5%85%B6%E4%B8%AD%3Ccode%3Elifetime%3C/code%3E%E4%B9%9F%E6%98%AF%E7%BB%93%E6%9E%84%E4%BD%93%E8%87%AA%E8%BA%AB%E7%9A%84%E4%B8%80%E4%B8%AA%E5%8F%82%E6%95%B0%E3%80%82%E5%A6%82%E6%9E%9C%E7%BB%93%E6%9E%84%E4%BD%93%E4%B8%8D%E5%8C%85%E5%90%AB%E5%BC%95%E7%94%A8%E5%AD%97%E6%AE%B5%E6%88%96%E4%BB%85%E4%BC%9A%E5%87%BA%E7%8E%B0%E9%9D%99%E6%80%81%E5%BC%95%E7%94%A8%E5%AD%97%E6%AE%B5%EF%BC%8C%E7%BB%93%E6%9E%84%E4%BD%93%E5%8F%AF%E4%BB%A5%E4%B8%8D%E9%9C%80%E8%A6%81%E5%A3%B0%E6%98%8E%E5%91%A8%E6%9C%9F%E5%8F%82%E6%95%B0%E3%80%82%3C/p%3E%3Cp%3E%E7%94%B1%E4%BA%8E%E4%BB%85%E5%8C%85%E5%90%AB%E4%B8%80%E4%B8%AA%E5%8F%82%E6%95%B0%EF%BC%8C%E6%89%80%E4%BB%A5%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87lifetime%20elision%E7%94%B1%E5%85%B6%E9%9A%90%E5%BC%8F%E6%8E%A8%E6%96%AD%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ecreate_s%3C/span%3E(ri:%20&amp;amp;%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20S%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ES&amp;#123;%20_b:%20%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E,%20_ri:%20ri%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%8F%AF%E8%83%BD%E4%BC%9A%E6%9C%89%E5%87%A0%E7%A7%8D%E7%9A%84%E8%AF%AD%E6%B3%95%E9%94%99%E8%AF%AF%E6%83%85%E5%86%B5%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3E_S1%3C/span%3E%20&amp;#123;%20_f:%20&amp;amp;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3E_S2%3C/span%3E&amp;lt;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E&amp;gt;%20&amp;#123;%20_f:%20&amp;amp;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3E_S3%3C/span%3E%20&amp;#123;%20_f:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3E_S4%3C/span%3E&amp;lt;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E&amp;gt;%20&amp;#123;%20_f:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;static%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3E_S5%3C/span%3E%20&amp;#123;%20_f:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;static%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3E_S6%3C/span%3E&amp;lt;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E&amp;gt;%20&amp;#123;%20_f:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%AC%AC%E4%B8%80%E6%9D%A1%E5%92%8C%E7%AC%AC%E5%9B%9B%E6%9D%A1%E8%AF%AD%E5%8F%A5%E6%98%AF%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%E3%80%82%3Ccode%3E_S1%3C/code%3E%E5%92%8C%3Ccode%3E_S2%3C/code%3E%E7%9A%84%E5%A3%B0%E6%98%8E%E6%98%AF%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%8C%E5%9B%A0%E4%B8%BA%3Ccode%3E_f%3C/code%3E%E5%AD%97%E6%AE%B5%E6%98%AF%E4%B8%80%E4%B8%AA%E5%BC%95%E7%94%A8%E5%AD%97%E6%AE%B5%EF%BC%8C%E6%B2%A1%E6%9C%89lifetime%20specifier%E3%80%82%3C/p%3E%3Cp%3E%3Ccode%3E_S3%3C/code%3E%E7%9A%84%E5%A3%B0%E6%98%8E%E6%98%AF%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%8C%E5%9B%A0%E4%B8%BA%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%8C%87%E7%A4%BA%E5%99%A8%3Ccode%3E&#39;a%3C/code%3E%E6%B2%A1%E6%9C%89%E4%BD%9C%E4%B8%BA%3Ccode%3ES%3C/code%3E%E7%9A%84%E4%B8%80%E4%B8%AA%E5%8F%82%E6%95%B0%E3%80%82%3C/p%3E%3Cp%3E%3Ccode%3E_S4%3C/code%3E%E7%9A%84%E5%A3%B0%E6%98%8E%E6%98%AF%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%8F%82%E6%95%B0%3Ccode%3E&#39;a%3C/code%3E%E6%B2%A1%E7%94%A8%E8%A2%AB%E7%94%A8%E4%BA%8E%E7%BB%93%E6%9E%84%E4%BD%93%E5%86%85%E3%80%82%3C/p%3E%3Cp%3E%E7%9B%B8%E5%8F%8D%EF%BC%8C%E6%9C%80%E5%90%8E%E4%B8%A4%E4%B8%AA%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E5%A3%B0%E6%98%8E%E6%98%AF%E6%9C%89%E6%95%88%E7%9A%84%E3%80%82%3Ccode%3E_S5%3C/code%3E%E5%8C%85%E5%90%AB%E4%B8%80%E4%B8%AA%E9%9D%99%E6%80%81%E5%AF%B9%E8%B1%A1%E5%BC%95%E7%94%A8%E3%80%82%E8%80%8C%3Ccode%3E_S6%3C/code%3E%E5%8C%85%E5%90%AB%E5%8C%85%E5%90%AB%E7%9A%84%E5%BC%95%E7%94%A8%E6%80%BB%E6%98%AF%E5%AD%98%E6%B4%BB%E9%95%BF%E4%BA%8E%E7%BB%93%E6%9E%84%E4%BD%93%E8%87%AA%E8%BA%AB%E3%80%82%3C/p%3E%3Ch2%20id=%22Other-Uses-of-Lifetime-Specifiers%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Other-Uses-of-Lifetime-Specifiers%22%3E%C2%B6%3C/a%3EOther%20Uses%20of%20Lifetime%20Specifiers%3C/h2%3E%3Cp%3E%E6%88%91%E4%BB%AC%E7%9F%A5%E9%81%93%EF%BC%8C%E5%BD%93%E5%AE%9A%E4%B9%89%E4%B8%80%E4%B8%AA%E5%8C%85%E5%90%AB%E5%BC%95%E7%94%A8%E7%9A%84%E7%BB%93%E6%9E%84%E4%BD%93%E7%B1%BB%E5%9E%8B%E6%97%B6%EF%BC%8C%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%8C%87%E7%A4%BA%E5%99%A8%E6%98%AF%E5%BF%85%E8%A6%81%E7%9A%84%E3%80%82%E5%AF%B9%E4%BA%8E%E5%85%83%E7%BB%84-%E7%BB%93%E6%9E%84%E4%BD%93%E7%B1%BB%E5%9E%8B%E4%B9%9F%E4%B8%80%E6%A0%B7%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ETS%3C/span%3E&amp;lt;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E&amp;gt;(&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Eu8%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eenum%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EE%3C/span%3E&amp;lt;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E,%20%3Cspan%20class=%22symbol%22%3E&amp;#x27;b%3C/span%3E&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20_A(&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Eu8%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20_B,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20_C(%3Cspan%20class=%22type%22%3Ebool%3C/span%3E,%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;b%3C/span%3E%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E,%20%3Cspan%20class=%22type%22%3Echar%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20_D(&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;static%3C/span%3E%20%3Cspan%20class=%22type%22%3Estr%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ebyte%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E34%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_ts%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3ETS%3C/span%3E(&amp;amp;byte);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_e%3C/span%3E%20=%20E::_A(&amp;amp;byte);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E6%AE%B5%E4%BB%A3%E7%A0%81%E6%98%AF%E6%9C%89%E6%95%88%E7%9A%84%EF%BC%8C%E4%BB%A5%E5%8F%8A%E7%A7%BB%E9%99%A4%E4%BB%BB%E4%BD%95%E4%B8%80%E4%B8%AAlifetime%20specifier%EF%BC%8C%E9%83%BD%E4%BC%9A%E4%BA%A7%E7%94%9F%E2%80%9Cmissing%20lifetime%20specifier%E2%80%9D%E9%94%99%E8%AF%AF%E3%80%82%3C/p%3E%3Cp%3E%E9%A1%BA%E5%B8%A6%E4%B8%80%E4%B8%8B%EF%BC%8C%E6%B3%A8%E6%84%8F%3Ccode%3EE::_D%3C/code%3E%E5%AD%97%E6%AE%B5%E7%9A%84%E5%AE%9A%E4%B9%89%E3%80%82%E5%AE%83%E6%98%AF%E4%B8%80%E4%B8%AAstatic%20string%20slice%20%E5%BC%95%E7%94%A8%E3%80%82%E5%AE%83%E4%BB%AC%E6%98%AF%20%3Cstrong%3E%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AD%97%E9%9D%A2%E9%87%8F(string%20literals)%3C/strong%3E%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%BA%E4%BA%86%E7%AE%80%E5%8C%96%EF%BC%8C%E6%88%91%E4%BB%AC%E4%BB%8E%E4%B8%8D%E5%9C%A8%E5%8F%AF%E5%8F%98%E5%BC%95%E7%94%A8%E4%B8%AD%E6%B7%B7%E5%85%A5%E6%8C%87%E7%A4%BA%E5%99%A8%E3%80%82%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E5%AE%83%E6%98%AF%E8%A2%AB%E5%85%81%E8%AE%B8%E7%9A%84%EF%BC%8C%E8%99%BD%E7%84%B6%E5%BE%88%E5%8F%A6%E7%B1%BB%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E&amp;lt;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E&amp;gt;(b:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20%3Cspan%20class=%22type%22%3Eu8%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Eu8%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20*b%20+=%20%3Cspan%20class=%22number%22%3E1%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20b%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ebyte%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12u8%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ebyte_ref%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20byte);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20*byte_ref);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E4%BC%9A%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C13%E2%80%9D%E3%80%82%E4%B8%80%E4%B8%AA%E6%8C%87%E5%90%91byte%E7%9A%84%E5%8F%AF%E5%8F%98%E5%BC%95%E7%94%A8%E8%A2%AB%E4%BD%9C%E4%B8%BA%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E7%BB%99%3Ccode%3Ef%3C/code%3E%EF%BC%8C%E4%BB%A5%E5%8F%8A%E9%80%92%E5%A2%9E%E4%B9%8B%E5%90%8E%E4%BD%9C%E4%B8%BA%E8%BF%94%E5%9B%9E%E5%80%BC%E3%80%82%E9%80%9A%E5%B8%B8%E5%AF%B9%E4%BA%8E%E4%B8%80%E4%B8%AA%E5%8F%AF%E5%8F%98%E5%8F%82%E6%95%B0%E6%9D%A5%E8%AF%B4%EF%BC%8C%E4%BC%A0%E9%80%92%E7%BB%99%E5%87%BD%E6%95%B0%E5%90%8E%E6%B2%A1%E5%BF%85%E8%A6%81%E8%BF%94%E5%9B%9E%E5%AE%83%E7%A7%9F%E5%80%9F%E7%9A%84%E5%BC%95%E7%94%A8%E7%9A%84%EF%BC%8C%E5%9B%A0%E4%B8%BA%3Ccode%3Ebyte_ref%3C/code%3E%E5%92%8C%3Ccode%3Ebyte%3C/code%3E%E9%83%BD%E6%98%AF%E6%8C%87%E5%90%91%E5%90%8C%E4%B8%80%E4%B8%AA%E5%86%85%E5%AD%98%E5%AF%B9%E8%B1%A1%E3%80%82%3C/p%3E%3Cp%3E%E5%89%8D%E9%9D%A2%E7%9C%8B%E8%BF%87%E4%BA%86%EF%BC%8C%E7%B1%BB%E5%9E%8B%E5%8F%82%E6%95%B0%E5%92%8C%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%8C%87%E7%A4%BA%E5%99%A8%E5%8F%AF%E4%BB%A5%E5%8F%82%E6%95%B0%E5%8C%96%E4%BD%BF%E7%94%A8%EF%BC%8C%E5%AE%83%E4%BB%AC%E4%B9%9F%E5%8F%AF%E4%BB%A5%E7%94%A8%E4%BA%8E%E5%90%8C%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E&amp;lt;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E,%20T&amp;gt;(b:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20T)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20T%20&amp;#123;%20b%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Epi%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E3.14%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Epi_ref%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(&amp;amp;pi);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20*pi_ref);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E4%BC%9A%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C3.14%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E6%98%AF%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E&amp;lt;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E,%20T&amp;gt;%20&amp;#123;%20b:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20T&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BC%96%E8%AF%91%E5%99%A8%E5%87%BA%E7%8E%B0%E2%80%9Cthe%20parameter%20type%20%3Ccode%3ET%3C/code%3E%20may%20not%20live%20long%20enough%E2%80%9D%E3%80%82%E8%BF%99%E6%98%AF%E5%9B%A0%E4%B8%BA%E6%B3%9B%E5%9E%8B%E7%B1%BB%E5%9E%8B%3Ccode%3ET%3C/code%3E%E8%A2%AB%E5%85%B7%E7%8E%B0%E5%8C%96%E6%97%B6%EF%BC%8C%E5%AE%83%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%8F%AF%E8%83%BD%E4%BC%9A%E5%8C%85%E5%90%AB%E4%B8%80%E4%B8%AA%E5%BC%95%E7%94%A8%EF%BC%8C%E8%BF%99%E7%A7%8D%E5%BC%95%E7%94%A8%E5%8F%AF%E8%83%BD%E4%BC%9A%E5%AF%BC%E8%87%B4%E5%A3%B0%E6%98%8E%E5%91%A8%E6%9C%9F%E9%94%99%E8%AF%AF%E3%80%82%E5%A4%84%E4%BA%8E%E4%BF%9D%E6%8A%A4%E6%9C%BA%E5%88%B6%EF%BC%8C%E7%BC%96%E8%AF%91%E5%99%A8%E7%A6%81%E6%AD%A2%E8%BF%99%E7%A7%8D%E8%AF%AD%E6%B3%95%E3%80%82%E5%AE%9E%E9%99%85%E4%B8%8A%E6%9C%89%E4%B8%A4%E7%A7%8D%E6%83%85%E5%86%B5%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%3Ccode%3ET%3C/code%3E%E6%89%80%E8%A1%A8%E7%A4%BA%E7%9A%84%E7%B1%BB%E5%9E%8B%E4%B8%8D%E5%8C%85%E5%90%AB%E5%BC%95%E7%94%A8%EF%BC%8C%E6%88%96%E4%BB%85%E5%8C%85%E5%90%AB%E9%9D%99%E6%80%81%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%BC%95%E7%94%A8%E3%80%82%3C/li%3E%3Cli%3E%3Ccode%3ET%3C/code%3E%E6%89%80%E8%A1%A8%E7%A4%BA%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%8C%85%E5%90%ABnon-static%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%BC%95%E7%94%A8%EF%BC%8C%E5%AE%83%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E9%9C%80%E8%A6%81%E6%8C%87%E5%AE%9A%E3%80%82%3C/li%3E%3C/ul%3E%3Cp%3E%E7%AC%AC%E4%B8%80%E7%A7%8D%E6%83%85%E5%86%B5%E7%B1%BB%E4%BC%BC%E4%BA%8E%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E&amp;lt;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E,%20T:%20%3Cspan%20class=%22symbol%22%3E&amp;#x27;static%3C/span%3E&amp;gt;%20&amp;#123;%20b:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20T%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Es%3C/span%3E%20=%20S%20&amp;#123;%20b:%20&amp;amp;%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E%20&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20*s.b);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%AC%AC%E4%BA%8C%E7%A7%8D%E6%83%85%E5%86%B5%E7%B1%BB%E4%BC%BC%E4%BA%8E%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E&amp;lt;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E,%20T:%20%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E&amp;gt;%20&amp;#123;%20b:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20T%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Es1%3C/span%3E%20=%20S%20&amp;#123;%20b:%20&amp;amp;%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Es2%3C/span%3E%20=%20S%20&amp;#123;%20b:%20&amp;amp;s1%20&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20*s1.b,%20*s2.b.b);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%9C%A8%E7%AC%AC%E4%B8%80%E8%A1%8C%EF%BC%8C%3Ccode%3ET%3C/code%3E%E7%B1%BB%E5%9E%8B%E5%8F%82%E6%95%B0%E8%A2%AB%E7%95%8C%E9%99%90%E5%9C%A8%3Ccode%3E&#39;a%3C/code%3E%EF%BC%8C%E6%84%8F%E5%91%B3%E7%9D%80%E4%B8%8D%E7%AE%A1%E8%BF%99%E4%B8%AA%E7%B1%BB%E5%9E%8B%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%8C%E4%BC%9A%E5%8C%85%E5%90%AB%E4%B8%80%E4%B8%AA%E5%BC%95%E7%94%A8%EF%BC%8C%E5%B9%B6%E7%A7%9F%E5%80%9F%E8%BF%99%E4%B8%AAlifetime%20specifier%E6%B3%A8%E8%A7%A3%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%8D%B3%E6%95%B4%E4%B8%AA%E7%BB%93%E6%9E%84%E5%AF%B9%E8%B1%A1%E8%87%AA%E5%B7%B1%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E7%AC%AC%E4%BA%8C%E8%A1%8C%EF%BC%8C%3Ccode%3ES%3C/code%3E%E7%BB%93%E6%9E%84%E4%BD%93%E8%A2%AB%3Ccode%3Ebool%3C/code%3E%E5%88%9D%E5%A7%8B%E5%8C%96%E3%80%82%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%9E%8B%E4%B8%8D%E5%8C%85%E5%90%AB%E4%BB%BB%E4%BD%95%E5%BC%95%E7%94%A8%EF%BC%8C%E6%89%80%E4%BB%A5%E8%BF%99%E9%87%8C%E7%94%A8%3Ccode%3E&#39;static%3C/code%3E%E9%99%90%E7%95%8C%E5%8D%B3%E5%8F%AF%E3%80%82%3C/p%3E%3Cp%3E%E5%AF%B9%E4%BA%8E%E7%AC%AC%E4%B8%89%E8%A1%8C%EF%BC%8C%3Ccode%3ES%3C/code%3E%E7%BB%93%E6%9E%84%E4%BD%93%E7%94%B1%3Ccode%3ES&amp;lt;bool&amp;gt;%3C/code%3E%E5%88%9D%E5%A7%8B%E5%8C%96%E3%80%82%E8%AF%A5%E7%B1%BB%E5%9E%8B%E5%8C%85%E5%90%AB%E4%B8%80%E4%B8%AAnon-static%E5%BC%95%E7%94%A8%EF%BC%8C%E7%94%A8%3Ccode%3E&#39;a%3C/code%3E%E9%99%90%E7%95%8C%E3%80%82%3C/p%3E" type="image"/>
    
    
    <category term="learning" scheme="https://galudisu.info/categories/learning/"/>
    
    
    <category term="rust" scheme="https://galudisu.info/tags/rust/"/>
    
  </entry>
  
  <entry>
    <title>rust基础入门[22] - Borrowing and Lifetimes</title>
    <link href="https://galudisu.info/2023/01/22/rust/beginning/chapter22_Borrowing%20and%20Lifetimes/"/>
    <id>https://galudisu.info/2023/01/22/rust/beginning/chapter22_Borrowing%20and%20Lifetimes/</id>
    <published>2023-01-22T07:50:46.000Z</published>
    <updated>2025-04-27T11:59:08.286Z</updated>
    
    <content type="html"><![CDATA[<p>本章覆盖有：</p><ul><li>“租借，borrowing”和“生命周期，lifetime”的概念</li><li>困扰系统软件的租借典型错误是哪些</li><li>如何通过租借checker，Rust的严格语法来避免这种典型错误</li><li>如何通过插入语句块来约束租借的作用域(scope)</li><li>为什么函数返回的引用需要生命周期指示符(specifiers)</li><li>如何给函数使用生命周期指示符(lifetime specifiers)，它们表示什么</li><li>租借checker的任务是什么</li></ul><span id="more"></span><h2 id="Ownership-and-Borrowing"><a class="header-anchor" href="#Ownership-and-Borrowing">¶</a>Ownership and Borrowing</h2><p>上一章介绍到，当将变量<code>a</code>赋值给<code>b</code>时，会有两种情况：如果它们类型是可拷贝的(copyable)，它就实现了<code>Copy</code>特质(当然也肯定实现了<code>Clone</code>)；如果它们的类型不可拷贝(non-copyable)，则没有实现<code>Copy</code>(<code>Clone</code>可能实现，也可能没有)。</p><p>第一种情况，用到拷贝语义(copy semantics)。意味着，在赋值过程中，当<code>a</code>保留它对象的所有权(ownership)，一个新的对象被创建，初始化值等同于<code>a</code>的值，以及<code>b</code>获得这些新的对象的所有权。当<code>a</code>和<code>b</code>离开它的作用域时，它们拥有的对象被销毁(又叫dropped)。</p><p>相反，第二种情况，用到移动语义(move semantics)。意味着，在赋值过程中，<code>a</code>将它的所有权移交给了<code>b</code>，不会有新对象的创建，<code>a</code>不再可访问。当<code>b</code>离开它的作用域时，它拥有的对象被销毁。当<code>a</code>离开它的作用域，不发生任何事情。</p><p>所有这些保证了合适的内存管理，只要没有引用被使用到。</p><p>但看看这个代码，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">n</span> = <span class="number">12</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">ref_to_n</span> = &amp;n;</span><br></pre></td></tr></table></figure><p>第一条语句后，变量<code>n</code>拥有一个数。</p><p>第二条语句后，变量<code>ref_to_n</code>拥有一个引用，该引用指向同一个由<code>n</code>引用的数。它是一个所有权吗？</p><p>它不能作为一个所有权，因为这个数早已经由<code>n</code>所拥有，如果同时被这个引用所“拥有”，它将会被销毁两次。因此，类似这样的引用不能“拥有”对象。</p><p>表达式<code>n</code>和<code>*ref_to_n</code>指向同一个对象，但仅<code>n</code>拥有这个对象。变量<code>ref_to_n</code>可以访问这个对象，但不是“拥有”这个对象。这种概念称为<strong>租借，borrowing</strong>。我们说<code>ref_to_n</code>借了<code>n</code>拥有的数。这种租借，开始于引用指向该对象，结束于该对象的销毁。</p><p>关于可变性(mutability)，有两种类型的borrowing：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">n</span> = <span class="number">12</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">ref1_to_n</span> = &amp;<span class="keyword">mut</span> n;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">ref2_to_n</span> = &amp;n;</span><br></pre></td></tr></table></figure><p>这段程序中，<code>ref1_to_n</code>将<code>n</code>拥有的值，租借为 <strong>mutably</strong> 的值，以及<code>ref2_to_n</code>租借为 <strong>immutably</strong> 的值。第一种是可变租借(mutable borrowing)，第二种是不可变租借(immutable borrowing)。可变租借仅能从可变变量中获取。</p><h2 id="Object-Lifetimes"><a class="header-anchor" href="#Object-Lifetimes">¶</a>Object Lifetimes</h2><p>注意到，“作用域，scope”的概念作用于编译期的变量，而不是运行期的对象。对应运行期对象的概念叫“生命周期，lifetime”。在Rust中，一个对象的生命周期，指的是一系列执行指令，从执行指令的创建，到执行指令的销毁。在该时间段，该对象叫做“存活，to live，to be alive”。</p><p>当然，作用域和生命周期存在一定关系，但它们不是同一个概念。例如：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">a</span>;</span><br><span class="line">a = <span class="number">12</span>;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, a);</span><br></pre></td></tr></table></figure><p>该程序中，变量<code>a</code>的作用域开始于第一行，而<code>a</code>拥有的对象的生命周期开始于第二行。通常认为，变量<code>a</code>的作用域开始于它的声明，对象的生命周期开始于该对象接收一个值。</p><p>即使是变量作用域(scope)的结束，跟对象生命周期(lifetime)的结束也不是同时发生的，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">a</span> = <span class="string">&quot;Hello&quot;</span>.<span class="title function_ invoke__">to_string</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">b</span> = a;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;, &quot;</span>, b);</span><br><span class="line">a = <span class="string">&quot;world&quot;</span>.<span class="title function_ invoke__">to_string</span>();</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;!&quot;</span>, a);</span><br><span class="line">b = a;</span><br></pre></td></tr></table></figure><p>结果将输出：“Hello, world!”。</p><p>在第一条语句，变量<code>a</code>被声明以及初始化。因此<code>a</code>的作用域开始，接着<code>a</code>拥有的对象被创建，<code>a</code>的生命周期开始。</p><p>在第二条语句，变量<code>b</code>被声明，由<code>a</code>移动对象进行初始化。因此，<code>b</code>的作用域开始，<code>a</code>的作用域被悬挂(suspended)，因为它被移动了，所以它不可再被访问。<code>b</code>拥有的对象不用创建，因为它就是先前创建的对象。</p><p>在第三条语句，<code>b</code>被访问。</p><p>在第四条语句，变量<code>a</code>通过<code>new</code>构造器，指派新的值。这里，<code>a</code>恢复(resume)它的作用域(scope)，因为它的作用域还没有结束。一个新的对象被创建，该对象的生命周期开始。前面由于变量<code>a</code>被“移动”了，所以它不“拥有”任何对象。所以这里的语句类似于一个初始化。</p><p>在第五条语句，<code>a</code>(拥有对象)可被访问了。</p><p>在第六条语句，<code>a</code>再次被移动到<code>b</code>，它的作用域再次被悬挂(suspended)。相反，<code>b</code>一直是活动的(active)，它拥有的对象由移动的<code>a</code>替换，因此，原先的对象在这里被销毁，以及生命周期结束。如果该对象实现了<code>Drop</code>，在这里，它的<code>drop</code>方法会被调用。</p><p>最后，<code>b</code>和<code>a</code>陆续退出它们的作用域。变量<code>b</code>拥有一个对象，该对象被销毁，以及结束它的生命周期。相反，变量<code>a</code>被“移动”了，不再拥有任何对象，也就不会有销毁对象的发生。</p><h2 id="Errors-Regarding-Borrowing"><a class="header-anchor" href="#Errors-Regarding-Borrowing">¶</a>Errors Regarding Borrowing</h2><p>C和C++程序编写总是被各种错误困扰，而Rust则通过设计来避免这一类问题。Rust的一种常见错误是“use after move”，前面介绍过。另一种错误如下，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">ref_to_n</span>;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">n</span> = <span class="number">12</span>;</span><br><span class="line">    ref_to_n = &amp;n;</span><br><span class="line">    <span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, *ref_to_n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, *ref_to_n);</span><br></pre></td></tr></table></figure><p>首先，变量<code>ref_to_n</code>被声明，但没有被初始化。然后，在语句块内，可变变量<code>n</code>被声明并初始化，它分配一个数在栈上，值为12。</p><p>然后，原先的变量，用一个指向<code>n</code>的引用进行初始化，它租借(borrow)了这个对象。</p><p>接着，变量<code>ref_to_n</code>指向的对象，即值为12的对象，打印输出。</p><p>接着，语句块结束，内部变量<code>n</code>结束了它的作用域，它的对象被销毁。</p><p>接着，变量<code>ref_to_n</code>指向的对象再次被打印。但该对象原先被<code>n</code>“拥有”，它现在不存在了！</p><p>幸运的是，Rust编译器拒绝该代码，产生错误信息“<code>n</code> does not live long enough”。该消息表示，变量<code>n</code>死了(dying)，但仍然有指向它“拥有”的对象的引用，它应该活更长一些；至少应该跟租借它对象的租借方一样长。</p><p>顺便，C或C++对应的代码如下，</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span>* ref_to_n;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> n = <span class="number">12</span>;</span><br><span class="line">        ref_to_n &amp;n;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, *ref_to_n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, *ref_to_n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段程序可被C和C++编译器接受。结果会打印“12”，之后的行为会变得不可预测。</p><p>这类程序错误，我们称之为“use after drop”。</p><p>有另一种可避免的Rust错误，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">v</span> = <span class="built_in">vec!</span>[<span class="number">12</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="variable">ref_to_first</span> = &amp;v[<span class="number">0</span>];</span><br><span class="line">v.<span class="title function_ invoke__">push</span>(<span class="number">13</span>);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, ref_to_first);</span><br></pre></td></tr></table></figure><p>对应的C语言实现是，</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span>* v = <span class="built_in">malloc</span>(<span class="number">1</span> * <span class="keyword">sizeof</span> (<span class="type">int</span>));</span><br><span class="line">    v[<span class="number">0</span>] = <span class="number">12</span>;</span><br><span class="line">    <span class="type">const</span> <span class="type">int</span>* ref_to_first = &amp;v[<span class="number">0</span>];</span><br><span class="line">    v = <span class="built_in">realloc</span>(v, <span class="number">2</span> * <span class="keyword">sizeof</span> (<span class="type">int</span>));</span><br><span class="line">    v[<span class="number">1</span>] = <span class="number">13</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, *ref_to_first);</span><br><span class="line">    <span class="built_in">free</span>(v);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以及C++的实现是，</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    std::vector&lt;<span class="type">int</span>&gt; v &#123; <span class="number">12</span> &#125;;</span><br><span class="line">    <span class="type">const</span> <span class="type">int</span>&amp; ref_to_first = v[<span class="number">0</span>];</span><br><span class="line">    v.<span class="built_in">push_back</span>(<span class="number">13</span>);</span><br><span class="line">    std::cout &lt;&lt; ref_to_first;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不用多说，最后两个程序会被各自的编译器接受，即使它们的行为是未定义的。相反，Rust编译器会拒绝并抛出错误信息“cannot borrow <code>v</code> as mutable because it is also borrowed as immutable”。让我们看看该程序有什么错误。</p><p>首先，可变(mutable)变量<code>v</code>，用一个仅带数12的vector声明和初始化。</p><p>然后，变量<code>ref_to_first</code>用原先指向<code>v</code>的引用声明和初始化。引用指向的值包含数12。</p><p>然后，另一个数13被添加到vector。但这种插入会导致缓冲区的重新分配。即使在这个例子，<code>ref_to_first</code>仍会继续指向旧的对象，不是有效的内存地址。</p><p>最后，这个旧的内存地址，可能是错误的，读取的内存地址的值打印后，是不可预测的结果。</p><p>由于从一个vector插入或添加元素时，所有指向vector的引用都“失效”，导致这种错误的出现。通常，这种错误属于广义的错误类别，也就是一个数据结构，通过几种路径、或别名访问，当数据结构被其中一个别名修改时，不能被另一个别名使用。</p><p>我们将这类编程错误命名为“use after change by an alias”。</p><h2 id="How-to-Prevent-“Use-After-Drop”-Errors"><a class="header-anchor" href="#How-to-Prevent-“Use-After-Drop”-Errors">¶</a>How to Prevent “Use After Drop” Errors</h2><p>Rust防止使用“脱落，dropped”对象的技术是简单的。</p><p>把该对象看做是被一个变量指向，遵循栈分配的规则，会按照变量声明的反向顺序被脱落，而不是初始化的反向顺序。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">X</span>(<span class="type">char</span>);</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">Drop</span> <span class="keyword">for</span> <span class="title class_">X</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">drop</span>(&amp;<span class="keyword">mut</span> <span class="keyword">self</span>) &#123;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, <span class="keyword">self</span>.<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_a</span> = <span class="title function_ invoke__">X</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_b</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_c</span> = <span class="title function_ invoke__">X</span>(<span class="string">&#x27;c&#x27;</span>);</span><br><span class="line">_b = <span class="title function_ invoke__">X</span>(<span class="string">&#x27;b&#x27;</span>);</span><br></pre></td></tr></table></figure><p>该程序会打印“cba”。这三个对象按照顺序“acb”被构造，但三个对象的分配顺序是“abc”，因此回收以及脱落的按相反的顺序。</p><p>为了避免使用脱落对象，所有变量，租借其它变量拥有的对象，必须在该变量的 <strong>后面</strong> 声明。</p><p>例如，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">n</span> = <span class="number">12</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">_r</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">m</span> = <span class="number">13</span>;</span><br><span class="line">_r = &amp;m;</span><br><span class="line">_r = &amp;n;</span><br></pre></td></tr></table></figure><p>这段代码会产生错误信息：“<code>m</code> does not live long enough”。这是因为<code>_r</code>同时从<code>m</code>和<code>n</code>进行borrow，虽然不在同一时刻指向两者，但它在<code>m</code>之前声明了。要更正这段代码，改为如下，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">n</span> = <span class="number">12</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">m</span> = <span class="number">13</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">_r</span>;</span><br><span class="line">_r = &amp;m;</span><br><span class="line">_r = &amp;n;</span><br></pre></td></tr></table></figure><p>这段代码是合法的，当<code>m</code>和<code>n</code>拥有的对象被dropped时，不会再有指向它们的引用。</p><h2 id="How-to-Prevent-“Use-After-Change-by-an-Alias”-Errors"><a class="header-anchor" href="#How-to-Prevent-“Use-After-Change-by-an-Alias”-Errors">¶</a>How to Prevent “Use After Change by an Alias” Errors</h2><p>由于其它变量引起对象的改变，导致当前变量使用该对象出现错误。要避免这种错误，使用的规则有几分复杂。</p><p>首先，要求考虑任何语句会读这个对象，不会有写操作，就像是该对象的一个 <strong>临时不可变租借(temporary immutable borrowing)</strong>；任何语句变更这个对象，就像是该对象的一个 <strong>临时可变租借(temporary mutable borrowing)</strong>。这种租借的出现和结束在该语句的内部进行。</p><p>然后，租借开始于，获取指向该对象的引用，并分配给一个变量；结束于，该变量的作用域(scope)结束。</p><p>下面是一个例子，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">a</span> = <span class="number">12</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">b</span> = <span class="number">13</span>;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, a);</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">c</span> = &amp;a;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">d</span> = &amp;<span class="keyword">mut</span> b;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125; &quot;</span>, c, d);</span><br><span class="line">&#125;</span><br><span class="line">b += <span class="number">1</span>;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, b);</span><br></pre></td></tr></table></figure><p>结果会打印：“12 12 13 14”。</p><p>在第3行和最后一行，一个可变租借开始并结束。在第5行，一个不可变租借开始，第6行，一个可变租借开始；它们在语句块末尾结束。在第9行，一个可变租借开始并结束。</p><p>这种规则要求，同一时刻，可变租借(即，&amp;mut )的出现不能和其它租借并存。</p><p>换句话说，同一时刻：</p><ul><li>没有租借</li><li>或，一个单一的可变(mutable)租借</li><li>或，一个单一的不可变(immutable)租借</li><li>或，几个不可变(immutable)租借</li></ul><p>不能有：</p><ul><li>几个可变(mutable)租借</li><li>不能有一个单一的可变(mutable)租借和一个或多个不可变(immutable)租借</li></ul><h2 id="Listing-the-Possible-Cases-of-Multiple-Borrowings"><a class="header-anchor" href="#Listing-the-Possible-Cases-of-Multiple-Borrowings">¶</a>Listing the Possible Cases of Multiple Borrowings</h2><p>下面罗列六种允许的情况。</p><p>第一种：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">a</span> = <span class="number">12</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_b</span> = &amp;a;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_c</span> = &amp;a;</span><br></pre></td></tr></table></figure><p>有两个不可变租借，直到结束为止被持有。</p><p>第二种：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">a</span> = <span class="number">12</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_b</span> = &amp;a;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, a);</span><br></pre></td></tr></table></figure><p>第三种：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">a</span> = <span class="number">12</span>;</span><br><span class="line">a = <span class="number">13</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_b</span> = &amp;a;</span><br></pre></td></tr></table></figure><p>一个不可变租借，紧随后一个临时可变租借。</p><p>第四种：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">a</span> = <span class="number">12</span>;</span><br><span class="line">a = <span class="number">13</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_b</span> = &amp;<span class="keyword">mut</span> a;</span><br></pre></td></tr></table></figure><p>一个可变租借，紧随后一个临时可变租借。</p><p>第五种：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">a</span> = <span class="number">12</span>;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, a);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_b</span> = &amp;a;</span><br></pre></td></tr></table></figure><p>一个不可变租借，紧随后一个临时不可变租借。</p><p>第六种：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">a</span> = <span class="number">12</span>;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, a);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_b</span> = &amp;<span class="keyword">mut</span> a;</span><br></pre></td></tr></table></figure><p>一个可变租借，紧随后一个临时不可租借。</p><p>下面是六种不合法情况。</p><p>第一种：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">a</span> = <span class="number">12</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_b</span> = &amp;<span class="keyword">mut</span> a;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_c</span> = &amp;a;</span><br></pre></td></tr></table></figure><p>编译出错“cannot borrow <code>a</code> as immutable because it is also borrowed as mutable”。</p><p>第二种：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">a</span> = <span class="number">12</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_b</span> = &amp;a;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_c</span> = &amp;<span class="keyword">mut</span> a;</span><br></pre></td></tr></table></figure><p>编译出错“cannot borrow <code>a</code> as mutable because it is also borrowed as immutable”。</p><p>第三种：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">a</span> = <span class="number">12</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_b</span> = &amp;<span class="keyword">mut</span> a;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_c</span> = &amp;<span class="keyword">mut</span> a;</span><br></pre></td></tr></table></figure><p>编译出错“cannot borrow <code>a</code> as mutable more than once at a time”。</p><p>第四种：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">a</span> = <span class="number">12</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_b</span> = &amp;a;</span><br><span class="line">a = <span class="number">13</span>;</span><br></pre></td></tr></table></figure><p>编译出错“cannot assign to <code>a</code> because it is borrowed”。</p><p>第五种：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">a</span> = <span class="number">12</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_b</span> = &amp;<span class="keyword">mut</span> a;</span><br><span class="line">a = <span class="number">13</span>;</span><br></pre></td></tr></table></figure><p>编译出错“cannot assign to <code>a</code> because it is borrowed”。</p><p>第六种：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">a</span> = <span class="number">12</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_b</span> = &amp;<span class="keyword">mut</span> a;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, a);</span><br></pre></td></tr></table></figure><p>编译出错“cannot borrow <code>a</code> as immutable because it is also borrowed as mutable”。</p><p>梳理一下。对于当前尚未被borrowed的对象来说，允许的操作是：</p><ol><li>仅可被不可变租借(immutablely borrowed)数次，然后可以由所有者(owner)和任何租借方(borrower)读取。</li><li>仅可被可变租借(mutably borrowed)一次，然后有且仅能由这个租借方(borrower)读取和修改。</li></ol><h2 id="Using-a-Bock-to-Restrict-Borrowing-Scope"><a class="header-anchor" href="#Using-a-Bock-to-Restrict-Borrowing-Scope">¶</a>Using a Bock to Restrict Borrowing Scope</h2><p>当一个对象的租借结束后，对象对其它租借又变得可用了。任何类型的租借都可限制在语句块内。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">a</span> = <span class="number">12</span>;</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">b</span> = &amp;<span class="keyword">mut</span> a;</span><br><span class="line">*b += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">c</span> = &amp;<span class="keyword">mut</span> a;</span><br><span class="line">*c += <span class="number">2</span>;</span><br></pre></td></tr></table></figure><p>这是允许的，因为租借发生在第三行，语句块结束后，租借也结束了，因此第7行的<code>a</code>可以用于其它租借。</p><p>类似地，对于函数也一样，在函数结束后，对象再次变得可用。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">a</span> = <span class="number">12</span>;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>*b: &amp;<span class="keyword">mut</span> <span class="type">i32</span>) &#123;</span><br><span class="line">*b += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">f</span>(&amp;<span class="keyword">mut</span> a);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">c</span> = &amp;<span class="keyword">mut</span> a;</span><br><span class="line">*c += <span class="number">2</span>;</span><br></pre></td></tr></table></figure><p>这种规则，适用于Rust确保可以自动地决定内存的回收，避免不合法的引用；这种规则允许Rust实现无数据竞争(data-race-free)的并发编程。</p><h2 id="The-Need-of-Lifetime-Specifiers-for-Returned-References"><a class="header-anchor" href="#The-Need-of-Lifetime-Specifiers-for-Returned-References">¶</a>The Need of Lifetime Specifiers for Returned References</h2><p>先看这段代码：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">v1</span> = <span class="built_in">vec!</span>[<span class="number">11u8</span>, <span class="number">22</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="variable">result</span>;</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">v2</span> = <span class="built_in">vec!</span>[<span class="number">33u8</span>];</span><br><span class="line">result = &#123;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_x1</span>: &amp;<span class="type">Vec</span>&lt;<span class="type">u8</span>&gt; = &amp;v1;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_x2</span>: &amp;<span class="type">Vec</span>&lt;<span class="type">u8</span>&gt; = &amp;v2;</span><br><span class="line">_x1</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, *result);</span><br></pre></td></tr></table></figure><p>结果将会输出：“<code>[11, 22]</code>”。</p><p>变量<code>v1</code>和<code>v2</code>各自拥有vector。接着被两个引用borrowed了，分别被<code>_x1</code>和<code>_x2</code>拥有。因此，在第7行后，<code>_x1</code>租借了变量<code>v1</code>拥有的vector，<code>_x2</code>租借了变量<code>v2</code>拥有的vector。这是被允许的，因为<code>_x1</code>在<code>v1</code>之后声明，<code>_x2</code>在<code>v2</code>之后声明，这些引用比它们租借对象存活时间短。</p><p>在第八行，有个简单的表达式<code>_x1</code>。因为它是语句块的最后表达式，该表达式的值成为语句的值，因此该值被用来初始化变量<code>result</code>。该值是一个指向<code>v1</code>的引用，<code>result</code>变量租借了vector。这是被允许的，因为<code>result</code>的声明在<code>v1</code>之后，因此可以租借<code>v1</code>拥有的对象。</p><p>现在，小小的改动：在第八行替换&quot;1&quot;和&quot;2&quot;。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">v1</span> = <span class="built_in">vec!</span>[<span class="number">11u8</span>, <span class="number">22</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="variable">result</span>;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">v2</span> = <span class="built_in">vec!</span>[<span class="number">33u8</span>];</span><br><span class="line">    result = &#123;</span><br><span class="line">        <span class="keyword">let</span> <span class="variable">_x1</span>: &amp;<span class="type">Vec</span>&lt;<span class="type">u8</span>&gt; = &amp;v1;</span><br><span class="line">        <span class="keyword">let</span> <span class="variable">_x2</span>: &amp;<span class="type">Vec</span>&lt;<span class="type">u8</span>&gt; = &amp;v2;</span><br><span class="line">        _x2</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, *result);</span><br></pre></td></tr></table></figure><p>这会产生编译错误：“<code>v2</code> does not live long enough”。因为<code>result</code>的值来自于<code>_x2</code>表达式，由于<code>_x2</code>租借了<code>v2</code>的对象，所以<code>result</code>租借了vector。因为<code>result</code>在<code>v2</code>之前声明，因此不能租借它的对象。</p><p>Rust编译器致力于这种推理的部分称作“租借检查，<strong>borrow checker</strong>”。</p><p>现在，让我们尝试转换前面两个代码，将内部语句转换为一个函数。第一个变为，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">v1</span> = <span class="built_in">vec!</span>[<span class="number">118</span>, <span class="number">22</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="variable">result</span>;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">v2</span> = <span class="built_in">vec!</span>[<span class="number">33u8</span>];</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">func</span>(_x1: &amp;<span class="type">Vec</span>&lt;<span class="type">u8</span>&gt;, _x2: &amp;<span class="type">Vec</span>&lt;<span class="type">u8</span>&gt;) <span class="punctuation">-&gt;</span> &amp;<span class="type">Vec</span>&lt;<span class="type">u8</span>&gt; &#123;</span><br><span class="line">        _x1</span><br><span class="line">    &#125;</span><br><span class="line">    result = <span class="title function_ invoke__">func</span>(&amp;v1, &amp;v2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, *result);</span><br></pre></td></tr></table></figure><p>第二个变为，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">v1</span> = <span class="built_in">vec!</span>[<span class="number">11u8</span>, <span class="number">22</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="variable">result</span>;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">v2</span> = <span class="built_in">vec!</span>[<span class="number">33u8</span>];</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">func</span>(_x1: &amp;<span class="type">Vec</span>&lt;<span class="type">u8</span>&gt;, _x2: &amp;<span class="type">Vec</span>&lt;<span class="type">u8</span>&gt;) <span class="punctuation">-&gt;</span> &amp;<span class="type">Vec</span>&lt;<span class="type">u8</span>&gt; &#123;</span><br><span class="line">        _x2</span><br><span class="line">    &#125;</span><br><span class="line">    result = <span class="title function_ invoke__">func</span>(&amp;v1, &amp;v2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, *result);</span><br></pre></td></tr></table></figure><p>两者唯一不同的是<code>func</code>函数体。</p><p>根据之前的规则，第一个程序看起来是合法的，第二个不合法。两个<code>func</code>函数本身是合法的。但borrow checker会查找它们不兼容的具体用法。</p><p>泛型函数的参数边界使用traits，函数调用是否有效，依据该函数体的内容，这不是好事。主要是因为不能从错误信息理解出错的原因，除非你清楚函数体的内部代码。另一个原因是，函数被调用时，如果该函数体内任意调用了其它函数，确保<code>main</code>函数是合法的，borrow checker需要分析程序的所有函数。这种整个程序的分析带来了过度的复杂。</p><p>因此，类似于泛型函数，返回一个引用的函数，必须在函数签名阈将borrow-checking隔离！函数的borrow-check，仅考虑签名，函数体，函数调用的签名，而不需要考虑函数体调用其它函数。</p><p>因此，前面的两个程序都会出现编译错误：“missing lifetime specifier”。“声明周期指示器，<strong>lifetime specifier</strong>”是一个函数签名的一个装饰，它允许borrow checker对函数体和函数调用分离检查。</p><p>不管怎样，函数或语句体的租借行为应该是“到此为止”，不应该再将它进一步传递给其它函数或表达式，以避免带来不必要的副作用，未知的错误信息。</p><h2 id="Usage-and-Meaning-of-Lifetime-Specifiers"><a class="header-anchor" href="#Usage-and-Meaning-of-Lifetime-Specifiers">¶</a>Usage and Meaning of Lifetime Specifiers</h2><p>讨论到函数的调用和生命周期，下面是一个简单例子。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">func</span>(v1: <span class="type">Vec</span>&lt;<span class="type">u32</span>&gt;, v2: &amp;<span class="type">Vec</span>&lt;<span class="type">bool</span>&gt;) &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">s</span> = <span class="string">&quot;Hello&quot;</span>.<span class="title function_ invoke__">to_string</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在任何Rust函数内，仅可以参考的有：</p><ul><li>函数参数拥有的对象(<code>v1</code>拥有的vector)；</li><li>本地变量拥有的对象(<code>s</code>拥有的动态字符串)；</li><li>临时对象(动态字符串表达式<code>&quot;Hello&quot;.to_string()</code>)；</li><li>静态对象(字符串字面量<code>&quot;Hello&quot;</code>)；</li><li>函数参数租借的对象，由预先存在的某些变量拥有，发生在当前函数调用处(<code>v2</code>租借过来的对象)。</li></ul><p>当一个函数返回一个引用，这个引用的对象不能推断是由函数参数拥有，还是由本地变量拥有，还是由临时对象拥有，因为当函数return时，本地变量，函数参数，临时变量都会被销毁。因此，这个引用将被悬挂。</p><p>相反，这个引用却可以推断得知是静态对象，或是函数参数租借的对象。</p><p>下面是这两种情况的中第一种情况的示例(尽管代码在Rust不被允许)，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">func</span>() <span class="punctuation">-&gt;</span> &amp;<span class="type">str</span> &#123;</span><br><span class="line">    <span class="string">&quot;Hello&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">func</span>(v: &amp;<span class="type">Vec</span>&lt;<span class="type">u8</span>&gt;) <span class="punctuation">-&gt;</span> &amp;<span class="type">u8</span> &#123;</span><br><span class="line">    &amp;v[<span class="number">3</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>borrow checker仅对返回值的引用感兴趣，该引用有两种：指向静态对象，或接收的参数的租借对象。borrow checker需要知道哪些引用是指向静态对象，哪些是租借的参数对象；如果有几个参数租借对象，需要知道它们中哪些租借了非静态返回的引用。</p><p>不带lifetime specifer的函数签名是不合法的，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">trait</span> <span class="title class_">Tr</span> &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">f</span>(flag: <span class="type">bool</span>, b: &amp;<span class="type">i32</span>, c: (<span class="type">char</span>, &amp;<span class="type">i32</span>)) <span class="punctuation">-&gt;</span> (&amp;<span class="type">i32</span>, <span class="type">f64</span>, &amp;<span class="type">i32</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数签名参数中有两个引用，返回值类型也包含有两个引用。后两个引用可能指向静态对象，或者参数<code>b</code>的租借对象，或者参数<code>c</code>的第二个字段的租借对象。</p><p>下面表达式指定了一种可能的情况，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">trait</span> <span class="title class_">Tr</span> &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">f</span>&lt;<span class="symbol">&#x27;a</span>&gt;(flag: <span class="type">bool</span>, b: &amp;<span class="symbol">&#x27;a</span> <span class="type">i32</span>, c: (<span class="type">char</span>, &amp;<span class="symbol">&#x27;a</span> <span class="type">i32</span>)) <span class="punctuation">-&gt;</span> (&amp;<span class="symbol">&#x27;a</span> <span class="type">i32</span>, <span class="type">f64</span>, &amp;<span class="symbol">&#x27;static</span> <span class="type">i32</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>和泛型函数用法一样，在函数名后面，添加一个参数列表。如其说是一个类型参数，实际上它是一个生命周期指示器(lifetime specifier)。</p><p>从句<code>&lt;'a&gt;</code>是一个声明。它表示：<code>&lt;&lt;In this function signature, a lifetime specifier is used; its name is &quot;a&quot;&gt;&gt;</code>。名字&quot;a&quot;是任意的。它简单表示所有出现的情况，“匹配”这种出现。它类似泛型函数的类型参数，不同的地方在于，生命周期指示器前缀使用单引号，另外，按照约定，泛型参数首字母使用大写，生命周期指示器使用一个小写字母，如a，b，c，…。</p><p>然后，函数签名包含其它三个<code>'a</code>生命周期指示器的出现，<code>b</code>参数的类型、<code>c</code>参数的第二字段的类型、返回值的第一个字段的类型。相反，返回值的第三个字段类型用了<code>static</code>生命周期标识。</p><p>该<code>a</code>生命周期指示器的用法表示：“返回值的第一个字段租借已存在的<code>b</code>参数和<code>c</code>参数第二个字段的对象，因此它存活比该对象要短”。</p><p>相反，<code>static</code>生命周期指示器的用法表示：“返回值的第三个字段指向一个静态对象，因此它可以存活在任何时间，甚至和整个进程一样长”。</p><p>当然，这仅是一种可能生命周期注解，下面是另一种，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">trait</span> <span class="title class_">Tr</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>&lt;<span class="symbol">&#x27;a</span>&gt;(flag: <span class="type">bool</span>, b: &amp;<span class="symbol">&#x27;a</span> <span class="type">i32</span>, c: (<span class="type">char</span>, &amp;<span class="type">i32</span>)) <span class="punctuation">-&gt;</span> (&amp;<span class="symbol">&#x27;static</span> <span class="type">i32</span>, <span class="type">f64</span>, &amp;<span class="symbol">&#x27;a</span> <span class="type">i32</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>c</code>参数不带注解，引用的对象不租借给返回值的引用，</p><p>还有另一种可能生命周期注解，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">trait</span> <span class="title class_">Tr</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>&lt;<span class="symbol">&#x27;a</span>, <span class="symbol">&#x27;b</span>, T1, T2&gt;(flag: <span class="type">bool</span>, b: &amp;<span class="symbol">&#x27;a</span> T1, c: (<span class="type">char</span>, &amp;<span class="symbol">&#x27;b</span> <span class="type">i32</span>)) <span class="punctuation">-&gt;</span> (&amp;<span class="symbol">&#x27;b</span> <span class="type">i32</span>, <span class="type">f64</span>, &amp;<span class="symbol">&#x27;a</span> T2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>泛型函数有两个生命周期指示器和两个泛型参数。生命周期参数<code>a</code>指定了返回值的第三个字段租借了参数<code>b</code>的对象，以及生命周期参数<code>b</code>指定了返回值的第一个字段租借了参数<code>c</code>的第二个字段的对象。另外，函数有两个类型参数<code>T1</code>和<code>T2</code>，不带trait边界。</p><h2 id="Checking-the-Validity-of-Lifetime-Specifiers"><a class="header-anchor" href="#Checking-the-Validity-of-Lifetime-Specifiers">¶</a>Checking the Validity of Lifetime Specifiers</h2><p>编译任何函数时，borrow checker有两个工作：</p><ul><li>通过函数自身和函数体，检查函数签名是否有效。</li><li>检查函数体是否合法，统计该函数被调用次数。</li></ul><p>本小节，先看第一种情况。</p><p>如果函数返回值没有引用类型，borrow checker不做任何处理。</p><p>否则，每个返回值引用，必须检查是否有正确的生命周期指示器(lifetime specifier)。</p><p>这样一个指示器(specifier)可以是“<code>'static</code>”。这种情况，引用必须指向一个静态对象。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> FOUR: <span class="type">u8</span> = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>() <span class="punctuation">-&gt;</span> (<span class="type">bool</span>, &amp;<span class="symbol">&#x27;static</span> <span class="type">u8</span>, &amp;<span class="symbol">&#x27;static</span> <span class="type">str</span>, &amp;<span class="symbol">&#x27;static</span> <span class="type">f64</span>) &#123;</span><br><span class="line">    (<span class="literal">true</span>, &amp;FOUR, <span class="string">&quot;Hello&quot;</span>, &amp;<span class="number">3.14</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125;&quot;</span>, <span class="title function_ invoke__">f</span>().<span class="number">0</span>, *<span class="title function_ invoke__">f</span>().<span class="number">1</span>, <span class="title function_ invoke__">f</span>().<span class="number">2</span>, *<span class="title function_ invoke__">f</span>().<span class="number">3</span>);</span><br></pre></td></tr></table></figure><p>结果将会打印：“<code>true 4 Hello 3.14</code>”。该程序是合法的，因为三个返回值的引用都是静态对象。</p><p>相反，下面</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>(n: &amp;<span class="type">u8</span>) <span class="punctuation">-&gt;</span> &amp;<span class="symbol">&#x27;static</span> <span class="type">u8</span> &#123;</span><br><span class="line">n</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, *<span class="title function_ invoke__">f</span>(&amp;<span class="number">12</span>));</span><br></pre></td></tr></table></figure><p>将会生成编译错误：“lifetime of reference outlives lifetime of borrowed content…”。这是不合法的，返回值不是一个指向静态对象的引用；它实际上是接收参数的值，该返回值租借了函数参数引用对象的同一个对象。</p><p>生命周期指示器可以定义成列表的形式，如下</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>&lt;<span class="symbol">&#x27;a</span>, <span class="symbol">&#x27;b</span>&gt;(x: &amp;<span class="symbol">&#x27;a</span> <span class="type">i32</span>, y: &amp;<span class="symbol">&#x27;b</span> <span class="type">i32</span>) <span class="punctuation">-&gt;</span> (&amp;<span class="symbol">&#x27;b</span> <span class="type">i32</span>, <span class="type">bool</span>, &amp;<span class="symbol">&#x27;a</span> <span class="type">i32</span>) &#123;</span><br><span class="line">(y, <span class="literal">true</span>, x)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">i</span> = <span class="number">12</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">j</span> = <span class="number">13</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">r</span> = <span class="title function_ invoke__">f</span>(&amp;i, &amp;j);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125; &#123;&#125;&quot;</span>, *r.<span class="number">0</span>, r.<span class="number">1</span>, *r.<span class="number">2</span>);</span><br></pre></td></tr></table></figure><p>结果将打印：“13 true 12”。这是有效的，因为tuple中返回的第一个字段引用的时<code>y</code>表达式的值，以<code>y</code>参数和返回值的第一个字段有同样的生命周期指示器(lifetime specifier)；它们的生命周期指示器都是<code>'b</code>。返回值的第三个字段和参数<code>x</code>一样有同一个生命周期指示器<code>'a</code>。</p><p>相反，下面</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>&lt;<span class="symbol">&#x27;a</span>, <span class="symbol">&#x27;b</span>&gt;(x: &amp;<span class="symbol">&#x27;a</span> <span class="type">i32</span>, y: &amp;<span class="symbol">&#x27;b</span> <span class="type">i32</span>) <span class="punctuation">-&gt;</span> (&amp;<span class="symbol">&#x27;b</span> <span class="type">i32</span>, <span class="type">bool</span>, &amp;<span class="symbol">&#x27;a</span> <span class="type">i32</span>) &#123;</span><br><span class="line">(x, <span class="literal">true</span>, y)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">i</span> = <span class="number">12</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">j</span> = <span class="number">13</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">r</span> = <span class="title function_ invoke__">f</span>(&amp;i, &amp;j);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125; &#123;&#125;&quot;</span>, *r.<span class="number">0</span>, r.<span class="number">1</span>, *r.<span class="number">2</span>);</span><br></pre></td></tr></table></figure><p>会产生两个编译错误，两个错误都是：“lifetime mismatch”。实际上，返回值的第一个字段和第三个字段都有生命周期指示器，但不是对应它们函数签名。</p><p>注意到，多个返回字段可能仅用了一个生命周期指示器：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>&lt;<span class="symbol">&#x27;a</span>&gt;(x: &amp;<span class="symbol">&#x27;a</span> <span class="type">i32</span>, y: &amp;<span class="symbol">&#x27;a</span> <span class="type">i32</span>) <span class="punctuation">-&gt;</span> (&amp;<span class="symbol">&#x27;a</span> <span class="type">i32</span>, <span class="type">bool</span>, &amp;<span class="symbol">&#x27;a</span> <span class="type">i32</span>) &#123;</span><br><span class="line">(x, <span class="literal">true</span>, y)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">i</span> = <span class="number">12</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">j</span> = <span class="number">13</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">r</span> = <span class="title function_ invoke__">f</span>(&amp;i, &amp;j);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125; &#123;&#125;&quot;</span>, *r.<span class="number">0</span>, r.<span class="number">1</span>, *r.<span class="number">2</span>);</span><br></pre></td></tr></table></figure><p>这里，<code>'b</code>被替换为<code>'a</code>。但味道完全不一样。</p><p>原来的版本是，参数列表指示了会有两个独立的生命周期；这个版本，它们共享生命周期。</p><p>这个改动对于租借检查器(borrow checker)来说不简单。让我们考虑一个更复杂的函数体：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>&lt;<span class="symbol">&#x27;a</span>&gt;(n: <span class="type">i32</span>, x: &amp;<span class="symbol">&#x27;a</span> <span class="type">Vec</span>&lt;<span class="type">u8</span>&gt;, y: &amp;<span class="type">Vec</span>&lt;<span class="type">u8</span>&gt;) <span class="punctuation">-&gt;</span> &amp;<span class="symbol">&#x27;a</span> <span class="type">u8</span> &#123;</span><br><span class="line"><span class="keyword">if</span> n == <span class="number">0</span> &#123; <span class="keyword">return</span> &amp;x[<span class="number">0</span>]; &#125;</span><br><span class="line"><span class="keyword">if</span> n &lt; <span class="number">0</span> &#123; &amp;x[<span class="number">1</span>] &#125; <span class="keyword">else</span> &#123; &amp;x[<span class="number">2</span>] &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该函数是有效的。函数体有三个可能的表达式返回值，所有表达式都租借了参数<code>x</code>的对象。返回值有和参数等同的生命周期，所以满足borrow checker。</p><p>相反，下面</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>&lt;<span class="symbol">&#x27;a</span>&gt;(n: <span class="type">i32</span>, x: &amp;<span class="symbol">&#x27;a</span> <span class="type">Vec</span>&lt;<span class="type">u8</span>&gt;, y: &amp;<span class="type">Vec</span>&lt;<span class="type">u8</span>&gt;) <span class="punctuation">-&gt;</span> &amp;<span class="symbol">&#x27;a</span> <span class="type">u8</span> &#123;</span><br><span class="line"><span class="keyword">if</span> n == <span class="number">0</span> &#123; <span class="keyword">return</span> &amp;x[<span class="number">0</span>]; &#125;</span><br><span class="line"><span class="keyword">if</span> n &lt; <span class="number">0</span> &#123; &amp;x[<span class="number">1</span>] &#125; <span class="keyword">else</span> &#123; &amp;y[<span class="number">2</span>] &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一个可能的返回值，会是表达式<code>&amp;y[2]</code>，该对象租借自<code>y</code>，这个参数没有生命周期指示器，所以该代码是不合法的。</p><p>即使下面代码也是不合法的，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>&lt;<span class="symbol">&#x27;a</span>&gt;(x: &amp;<span class="symbol">&#x27;a</span> <span class="type">Vec</span>&lt;<span class="type">u8</span>&gt;, y: &amp;<span class="type">Vec</span>&lt;<span class="type">u8</span>&gt;) <span class="punctuation">-&gt;</span> &amp;<span class="symbol">&#x27;a</span> <span class="type">u8</span> &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="literal">true</span> &#123; &amp;x[<span class="number">0</span>] &#125; <span class="keyword">else</span> &#123; &amp;y[<span class="number">0</span>] &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当处理数据流分析时，编译器会探测到<code>y</code>从不被返回值租借；但borrow checker坚持因为<code>&amp;y[0]</code>是一个可能返回值，所以该段程序被认为是无效的。</p><h2 id="Using-the-Lifetime-Specifiers-of-Invoked-Functions"><a class="header-anchor" href="#Using-the-Lifetime-Specifiers-of-Invoked-Functions">¶</a>Using the Lifetime Specifiers of Invoked Functions</h2><p>上一章节的开始部分说过，borrow checker有两项工作，编译函数时进行检查函数体是否有效，统计函数体内任意被调用函数的签名。</p><p>沿用上一节的代码示例。根据租借的规则，“missing lifetime specifier”表示缺少lifetime specifier，我们将原来的加上生命周期指示器，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">v1</span> = <span class="built_in">vec!</span>[<span class="number">11u8</span>, <span class="number">22</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="variable">result</span>;</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">v2</span> = <span class="built_in">vec!</span>[<span class="number">33u8</span>];</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">func</span>&lt;<span class="symbol">&#x27;a</span>&gt;(_x1: &amp;<span class="symbol">&#x27;a</span> <span class="type">Vec</span>&lt;<span class="type">u8</span>&gt;, _x2: &amp;<span class="type">Vec</span>&lt;<span class="type">u8</span>&gt;) <span class="punctuation">-&gt;</span> &amp;<span class="symbol">&#x27;a</span> <span class="type">Vec</span>&lt;<span class="type">u8</span>&gt; &#123;</span><br><span class="line">_x1</span><br><span class="line">&#125;</span><br><span class="line">result = <span class="title function_ invoke__">func</span>(&amp;v1, &amp;v2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, *result);</span><br></pre></td></tr></table></figure><p>第二个例子改为，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">v1</span> = <span class="built_in">vec!</span>[<span class="number">11u8</span>, <span class="number">22</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="variable">result</span>;</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">v2</span> = <span class="built_in">vec!</span>[<span class="number">33u8</span>];</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">func</span>&lt;<span class="symbol">&#x27;a</span>&gt;(_x1: &amp;<span class="type">Vec</span>&lt;<span class="type">u8</span>&gt;, _x2: &amp;<span class="symbol">&#x27;a</span> <span class="type">Vec</span>&lt;<span class="type">u8</span>&gt;) <span class="punctuation">-&gt;</span> &amp;<span class="symbol">&#x27;a</span> <span class="type">Vec</span>&lt;<span class="type">u8</span>&gt; &#123;</span><br><span class="line">_x2</span><br><span class="line">&#125;</span><br><span class="line">result = <span class="title function_ invoke__">func</span>(&amp;v1, &amp;v2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, *result);</span><br></pre></td></tr></table></figure><p>第一个程序是有效的，结果会打印：“<code>[11, 22]</code>”，第二个会有编译错误：“<code>v2</code> does not live long enough”。</p><p>为什么<code>func</code>这些写法会产生编译错误，前面小节已经解析过了。</p><p>让我们看看<code>main</code>函数在第一个程序如何工作的。当<code>func</code>被调用，存活<code>v1</code>、<code>result</code>和<code>v2</code>，按顺序声明，以及<code>v1</code>和<code>v2</code>早已被初始化。<code>func</code>的签名说结果值和第一个参数有相同的lifetime specifier，这意味着<code>result</code>的值不会存活得比<code>v1</code>长。以及，<code>result</code>在<code>v1</code>之后声明，因此它会先于<code>v1</code>销毁。</p><p>再看看为什么第二段程序的<code>main</code>函数是不合法的。这里，<code>func</code>的签名说返回值和第二个参数有相同的lifetime specifier，意味着<code>result</code>存活不会比<code>v2</code>长。但<code>result</code>在<code>v2</code>之前声明，而它会在其后被销毁。</p><p>这是因为只使用了一个lifetime specifiter，下面改为两个指示器，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>&lt;<span class="symbol">&#x27;a</span>, <span class="symbol">&#x27;b</span>&gt;(x: &amp;<span class="symbol">&#x27;a</span> <span class="type">i32</span>, y: &amp;<span class="symbol">&#x27;b</span> <span class="type">i32</span>) <span class="punctuation">-&gt;</span> (&amp;<span class="symbol">&#x27;b</span> <span class="type">i32</span>, <span class="type">bool</span>, &amp;<span class="symbol">&#x27;a</span> <span class="type">i32</span>) &#123;</span><br><span class="line">    (x, <span class="literal">true</span>, y)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">i1</span> = <span class="number">12</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">i2</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">j1</span> = <span class="number">13</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">j2</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">r</span> = <span class="title function_ invoke__">f</span>(&amp;i1, &amp;j1);</span><br><span class="line">i2 = r.<span class="number">0</span>;</span><br><span class="line">j2 = r.<span class="number">2</span>;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125; &#123;&#125;&quot;</span>, *i2, r.<span class="number">1</span>, *j2);</span><br></pre></td></tr></table></figure><p>结果将打印“12 true 13”。</p><p>相反，如果仅用一个lifetime specifier时，是不合法的，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>&lt;<span class="symbol">&#x27;a</span>&gt;(x: &amp;<span class="symbol">&#x27;a</span> <span class="type">i32</span>, y: &amp;<span class="symbol">&#x27;a</span> <span class="type">i32</span>) <span class="punctuation">-&gt;</span> (&amp;<span class="symbol">&#x27;a</span> <span class="type">i32</span>, <span class="type">bool</span>, &amp;<span class="symbol">&#x27;a</span> <span class="type">i32</span>) &#123;</span><br><span class="line">(x, <span class="literal">true</span>, y)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">i1</span> = <span class="number">12</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">i2</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">j1</span> = <span class="number">13</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">j2</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">r</span> = <span class="title function_ invoke__">f</span>(&amp;i1, &amp;j1);</span><br><span class="line">i2 = r.<span class="number">0</span>;</span><br><span class="line">j2 = r.<span class="number">2</span>;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125; &#123;&#125;&quot;</span>, *i2, r.<span class="number">1</span>, *j2);</span><br></pre></td></tr></table></figure><p>这会产生编译错误：“<code>j1</code> does not live long enough”。</p><p>在这两个版本中，函数<code>f</code>都会接收<code>i1</code>和<code>j1</code>的引用，首先返回变量<code>r</code>存储的值，然后分别地初始化<code>i2</code>和<code>j2</code>变量。</p><p>在第一个版本中，第一个参数和返回值的第一个字段拥有相同的lifetime specifier，这导致了<code>i2</code>必须存活少于<code>i1</code>。类似地，<code>j2</code>必须存活少于<code>j1</code>。实际上，变量的声明顺序需要满足这些要求。</p><p>第二个版本，由于只有一个lifetime specifier，所以<code>i2</code>和<code>j2</code>必须存活少于<code>i1</code>和<code>j1</code>。实际上，<code>i2</code>被声明在<code>j1</code>前，不能满足这些要求。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本章覆盖有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;“租借，borrowing”和“生命周期，lifetime”的概念&lt;/li&gt;
&lt;li&gt;困扰系统软件的租借典型错误是哪些&lt;/li&gt;
&lt;li&gt;如何通过租借checker，Rust的严格语法来避免这种典型错误&lt;/li&gt;
&lt;li&gt;如何通过插入语句块来约束租借的作用域(scope)&lt;/li&gt;
&lt;li&gt;为什么函数返回的引用需要生命周期指示符(specifiers)&lt;/li&gt;
&lt;li&gt;如何给函数使用生命周期指示符(lifetime specifiers)，它们表示什么&lt;/li&gt;
&lt;li&gt;租借checker的任务是什么&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    <content src="https://galudisu.info/%3Cp%3E%E6%9C%AC%E7%AB%A0%E8%A6%86%E7%9B%96%E6%9C%89%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E2%80%9C%E7%A7%9F%E5%80%9F%EF%BC%8Cborrowing%E2%80%9D%E5%92%8C%E2%80%9C%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%EF%BC%8Clifetime%E2%80%9D%E7%9A%84%E6%A6%82%E5%BF%B5%3C/li%3E%3Cli%3E%E5%9B%B0%E6%89%B0%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E7%9A%84%E7%A7%9F%E5%80%9F%E5%85%B8%E5%9E%8B%E9%94%99%E8%AF%AF%E6%98%AF%E5%93%AA%E4%BA%9B%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E7%A7%9F%E5%80%9Fchecker%EF%BC%8CRust%E7%9A%84%E4%B8%A5%E6%A0%BC%E8%AF%AD%E6%B3%95%E6%9D%A5%E9%81%BF%E5%85%8D%E8%BF%99%E7%A7%8D%E5%85%B8%E5%9E%8B%E9%94%99%E8%AF%AF%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E6%8F%92%E5%85%A5%E8%AF%AD%E5%8F%A5%E5%9D%97%E6%9D%A5%E7%BA%A6%E6%9D%9F%E7%A7%9F%E5%80%9F%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F(scope)%3C/li%3E%3Cli%3E%E4%B8%BA%E4%BB%80%E4%B9%88%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E7%9A%84%E5%BC%95%E7%94%A8%E9%9C%80%E8%A6%81%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%8C%87%E7%A4%BA%E7%AC%A6(specifiers)%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E7%BB%99%E5%87%BD%E6%95%B0%E4%BD%BF%E7%94%A8%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%8C%87%E7%A4%BA%E7%AC%A6(lifetime%20specifiers)%EF%BC%8C%E5%AE%83%E4%BB%AC%E8%A1%A8%E7%A4%BA%E4%BB%80%E4%B9%88%3C/li%3E%3Cli%3E%E7%A7%9F%E5%80%9Fchecker%E7%9A%84%E4%BB%BB%E5%8A%A1%E6%98%AF%E4%BB%80%E4%B9%88%3C/li%3E%3C/ul%3E%3Cspan%20id=%22more%22%3E%3C/span%3E%3Ch2%20id=%22Ownership-and-Borrowing%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Ownership-and-Borrowing%22%3E%C2%B6%3C/a%3EOwnership%20and%20Borrowing%3C/h2%3E%3Cp%3E%E4%B8%8A%E4%B8%80%E7%AB%A0%E4%BB%8B%E7%BB%8D%E5%88%B0%EF%BC%8C%E5%BD%93%E5%B0%86%E5%8F%98%E9%87%8F%3Ccode%3Ea%3C/code%3E%E8%B5%8B%E5%80%BC%E7%BB%99%3Ccode%3Eb%3C/code%3E%E6%97%B6%EF%BC%8C%E4%BC%9A%E6%9C%89%E4%B8%A4%E7%A7%8D%E6%83%85%E5%86%B5%EF%BC%9A%E5%A6%82%E6%9E%9C%E5%AE%83%E4%BB%AC%E7%B1%BB%E5%9E%8B%E6%98%AF%E5%8F%AF%E6%8B%B7%E8%B4%9D%E7%9A%84(copyable)%EF%BC%8C%E5%AE%83%E5%B0%B1%E5%AE%9E%E7%8E%B0%E4%BA%86%3Ccode%3ECopy%3C/code%3E%E7%89%B9%E8%B4%A8(%E5%BD%93%E7%84%B6%E4%B9%9F%E8%82%AF%E5%AE%9A%E5%AE%9E%E7%8E%B0%E4%BA%86%3Ccode%3EClone%3C/code%3E)%EF%BC%9B%E5%A6%82%E6%9E%9C%E5%AE%83%E4%BB%AC%E7%9A%84%E7%B1%BB%E5%9E%8B%E4%B8%8D%E5%8F%AF%E6%8B%B7%E8%B4%9D(non-copyable)%EF%BC%8C%E5%88%99%E6%B2%A1%E6%9C%89%E5%AE%9E%E7%8E%B0%3Ccode%3ECopy%3C/code%3E(%3Ccode%3EClone%3C/code%3E%E5%8F%AF%E8%83%BD%E5%AE%9E%E7%8E%B0%EF%BC%8C%E4%B9%9F%E5%8F%AF%E8%83%BD%E6%B2%A1%E6%9C%89)%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%B8%80%E7%A7%8D%E6%83%85%E5%86%B5%EF%BC%8C%E7%94%A8%E5%88%B0%E6%8B%B7%E8%B4%9D%E8%AF%AD%E4%B9%89(copy%20semantics)%E3%80%82%E6%84%8F%E5%91%B3%E7%9D%80%EF%BC%8C%E5%9C%A8%E8%B5%8B%E5%80%BC%E8%BF%87%E7%A8%8B%E4%B8%AD%EF%BC%8C%E5%BD%93%3Ccode%3Ea%3C/code%3E%E4%BF%9D%E7%95%99%E5%AE%83%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%89%80%E6%9C%89%E6%9D%83(ownership)%EF%BC%8C%E4%B8%80%E4%B8%AA%E6%96%B0%E7%9A%84%E5%AF%B9%E8%B1%A1%E8%A2%AB%E5%88%9B%E5%BB%BA%EF%BC%8C%E5%88%9D%E5%A7%8B%E5%8C%96%E5%80%BC%E7%AD%89%E5%90%8C%E4%BA%8E%3Ccode%3Ea%3C/code%3E%E7%9A%84%E5%80%BC%EF%BC%8C%E4%BB%A5%E5%8F%8A%3Ccode%3Eb%3C/code%3E%E8%8E%B7%E5%BE%97%E8%BF%99%E4%BA%9B%E6%96%B0%E7%9A%84%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%89%80%E6%9C%89%E6%9D%83%E3%80%82%E5%BD%93%3Ccode%3Ea%3C/code%3E%E5%92%8C%3Ccode%3Eb%3C/code%3E%E7%A6%BB%E5%BC%80%E5%AE%83%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F%E6%97%B6%EF%BC%8C%E5%AE%83%E4%BB%AC%E6%8B%A5%E6%9C%89%E7%9A%84%E5%AF%B9%E8%B1%A1%E8%A2%AB%E9%94%80%E6%AF%81(%E5%8F%88%E5%8F%ABdropped)%E3%80%82%3C/p%3E%3Cp%3E%E7%9B%B8%E5%8F%8D%EF%BC%8C%E7%AC%AC%E4%BA%8C%E7%A7%8D%E6%83%85%E5%86%B5%EF%BC%8C%E7%94%A8%E5%88%B0%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89(move%20semantics)%E3%80%82%E6%84%8F%E5%91%B3%E7%9D%80%EF%BC%8C%E5%9C%A8%E8%B5%8B%E5%80%BC%E8%BF%87%E7%A8%8B%E4%B8%AD%EF%BC%8C%3Ccode%3Ea%3C/code%3E%E5%B0%86%E5%AE%83%E7%9A%84%E6%89%80%E6%9C%89%E6%9D%83%E7%A7%BB%E4%BA%A4%E7%BB%99%E4%BA%86%3Ccode%3Eb%3C/code%3E%EF%BC%8C%E4%B8%8D%E4%BC%9A%E6%9C%89%E6%96%B0%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%88%9B%E5%BB%BA%EF%BC%8C%3Ccode%3Ea%3C/code%3E%E4%B8%8D%E5%86%8D%E5%8F%AF%E8%AE%BF%E9%97%AE%E3%80%82%E5%BD%93%3Ccode%3Eb%3C/code%3E%E7%A6%BB%E5%BC%80%E5%AE%83%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F%E6%97%B6%EF%BC%8C%E5%AE%83%E6%8B%A5%E6%9C%89%E7%9A%84%E5%AF%B9%E8%B1%A1%E8%A2%AB%E9%94%80%E6%AF%81%E3%80%82%E5%BD%93%3Ccode%3Ea%3C/code%3E%E7%A6%BB%E5%BC%80%E5%AE%83%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F%EF%BC%8C%E4%B8%8D%E5%8F%91%E7%94%9F%E4%BB%BB%E4%BD%95%E4%BA%8B%E6%83%85%E3%80%82%3C/p%3E%3Cp%3E%E6%89%80%E6%9C%89%E8%BF%99%E4%BA%9B%E4%BF%9D%E8%AF%81%E4%BA%86%E5%90%88%E9%80%82%E7%9A%84%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%EF%BC%8C%E5%8F%AA%E8%A6%81%E6%B2%A1%E6%9C%89%E5%BC%95%E7%94%A8%E8%A2%AB%E4%BD%BF%E7%94%A8%E5%88%B0%E3%80%82%3C/p%3E%3Cp%3E%E4%BD%86%E7%9C%8B%E7%9C%8B%E8%BF%99%E4%B8%AA%E4%BB%A3%E7%A0%81%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3En%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eref_to_n%3C/span%3E%20=%20&amp;amp;n;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%AC%AC%E4%B8%80%E6%9D%A1%E8%AF%AD%E5%8F%A5%E5%90%8E%EF%BC%8C%E5%8F%98%E9%87%8F%3Ccode%3En%3C/code%3E%E6%8B%A5%E6%9C%89%E4%B8%80%E4%B8%AA%E6%95%B0%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%BA%8C%E6%9D%A1%E8%AF%AD%E5%8F%A5%E5%90%8E%EF%BC%8C%E5%8F%98%E9%87%8F%3Ccode%3Eref_to_n%3C/code%3E%E6%8B%A5%E6%9C%89%E4%B8%80%E4%B8%AA%E5%BC%95%E7%94%A8%EF%BC%8C%E8%AF%A5%E5%BC%95%E7%94%A8%E6%8C%87%E5%90%91%E5%90%8C%E4%B8%80%E4%B8%AA%E7%94%B1%3Ccode%3En%3C/code%3E%E5%BC%95%E7%94%A8%E7%9A%84%E6%95%B0%E3%80%82%E5%AE%83%E6%98%AF%E4%B8%80%E4%B8%AA%E6%89%80%E6%9C%89%E6%9D%83%E5%90%97%EF%BC%9F%3C/p%3E%3Cp%3E%E5%AE%83%E4%B8%8D%E8%83%BD%E4%BD%9C%E4%B8%BA%E4%B8%80%E4%B8%AA%E6%89%80%E6%9C%89%E6%9D%83%EF%BC%8C%E5%9B%A0%E4%B8%BA%E8%BF%99%E4%B8%AA%E6%95%B0%E6%97%A9%E5%B7%B2%E7%BB%8F%E7%94%B1%3Ccode%3En%3C/code%3E%E6%89%80%E6%8B%A5%E6%9C%89%EF%BC%8C%E5%A6%82%E6%9E%9C%E5%90%8C%E6%97%B6%E8%A2%AB%E8%BF%99%E4%B8%AA%E5%BC%95%E7%94%A8%E6%89%80%E2%80%9C%E6%8B%A5%E6%9C%89%E2%80%9D%EF%BC%8C%E5%AE%83%E5%B0%86%E4%BC%9A%E8%A2%AB%E9%94%80%E6%AF%81%E4%B8%A4%E6%AC%A1%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E7%B1%BB%E4%BC%BC%E8%BF%99%E6%A0%B7%E7%9A%84%E5%BC%95%E7%94%A8%E4%B8%8D%E8%83%BD%E2%80%9C%E6%8B%A5%E6%9C%89%E2%80%9D%E5%AF%B9%E8%B1%A1%E3%80%82%3C/p%3E%3Cp%3E%E8%A1%A8%E8%BE%BE%E5%BC%8F%3Ccode%3En%3C/code%3E%E5%92%8C%3Ccode%3E*ref_to_n%3C/code%3E%E6%8C%87%E5%90%91%E5%90%8C%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%EF%BC%8C%E4%BD%86%E4%BB%85%3Ccode%3En%3C/code%3E%E6%8B%A5%E6%9C%89%E8%BF%99%E4%B8%AA%E5%AF%B9%E8%B1%A1%E3%80%82%E5%8F%98%E9%87%8F%3Ccode%3Eref_to_n%3C/code%3E%E5%8F%AF%E4%BB%A5%E8%AE%BF%E9%97%AE%E8%BF%99%E4%B8%AA%E5%AF%B9%E8%B1%A1%EF%BC%8C%E4%BD%86%E4%B8%8D%E6%98%AF%E2%80%9C%E6%8B%A5%E6%9C%89%E2%80%9D%E8%BF%99%E4%B8%AA%E5%AF%B9%E8%B1%A1%E3%80%82%E8%BF%99%E7%A7%8D%E6%A6%82%E5%BF%B5%E7%A7%B0%E4%B8%BA%3Cstrong%3E%E7%A7%9F%E5%80%9F%EF%BC%8Cborrowing%3C/strong%3E%E3%80%82%E6%88%91%E4%BB%AC%E8%AF%B4%3Ccode%3Eref_to_n%3C/code%3E%E5%80%9F%E4%BA%86%3Ccode%3En%3C/code%3E%E6%8B%A5%E6%9C%89%E7%9A%84%E6%95%B0%E3%80%82%E8%BF%99%E7%A7%8D%E7%A7%9F%E5%80%9F%EF%BC%8C%E5%BC%80%E5%A7%8B%E4%BA%8E%E5%BC%95%E7%94%A8%E6%8C%87%E5%90%91%E8%AF%A5%E5%AF%B9%E8%B1%A1%EF%BC%8C%E7%BB%93%E6%9D%9F%E4%BA%8E%E8%AF%A5%E5%AF%B9%E8%B1%A1%E7%9A%84%E9%94%80%E6%AF%81%E3%80%82%3C/p%3E%3Cp%3E%E5%85%B3%E4%BA%8E%E5%8F%AF%E5%8F%98%E6%80%A7(mutability)%EF%BC%8C%E6%9C%89%E4%B8%A4%E7%A7%8D%E7%B1%BB%E5%9E%8B%E7%9A%84borrowing%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3En%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eref1_to_n%3C/span%3E%20=%20&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20n;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eref2_to_n%3C/span%3E%20=%20&amp;amp;n;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E6%AE%B5%E7%A8%8B%E5%BA%8F%E4%B8%AD%EF%BC%8C%3Ccode%3Eref1_to_n%3C/code%3E%E5%B0%86%3Ccode%3En%3C/code%3E%E6%8B%A5%E6%9C%89%E7%9A%84%E5%80%BC%EF%BC%8C%E7%A7%9F%E5%80%9F%E4%B8%BA%20%3Cstrong%3Emutably%3C/strong%3E%20%E7%9A%84%E5%80%BC%EF%BC%8C%E4%BB%A5%E5%8F%8A%3Ccode%3Eref2_to_n%3C/code%3E%E7%A7%9F%E5%80%9F%E4%B8%BA%20%3Cstrong%3Eimmutably%3C/strong%3E%20%E7%9A%84%E5%80%BC%E3%80%82%E7%AC%AC%E4%B8%80%E7%A7%8D%E6%98%AF%E5%8F%AF%E5%8F%98%E7%A7%9F%E5%80%9F(mutable%20borrowing)%EF%BC%8C%E7%AC%AC%E4%BA%8C%E7%A7%8D%E6%98%AF%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%A7%9F%E5%80%9F(immutable%20borrowing)%E3%80%82%E5%8F%AF%E5%8F%98%E7%A7%9F%E5%80%9F%E4%BB%85%E8%83%BD%E4%BB%8E%E5%8F%AF%E5%8F%98%E5%8F%98%E9%87%8F%E4%B8%AD%E8%8E%B7%E5%8F%96%E3%80%82%3C/p%3E%3Ch2%20id=%22Object-Lifetimes%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Object-Lifetimes%22%3E%C2%B6%3C/a%3EObject%20Lifetimes%3C/h2%3E%3Cp%3E%E6%B3%A8%E6%84%8F%E5%88%B0%EF%BC%8C%E2%80%9C%E4%BD%9C%E7%94%A8%E5%9F%9F%EF%BC%8Cscope%E2%80%9D%E7%9A%84%E6%A6%82%E5%BF%B5%E4%BD%9C%E7%94%A8%E4%BA%8E%E7%BC%96%E8%AF%91%E6%9C%9F%E7%9A%84%E5%8F%98%E9%87%8F%EF%BC%8C%E8%80%8C%E4%B8%8D%E6%98%AF%E8%BF%90%E8%A1%8C%E6%9C%9F%E7%9A%84%E5%AF%B9%E8%B1%A1%E3%80%82%E5%AF%B9%E5%BA%94%E8%BF%90%E8%A1%8C%E6%9C%9F%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%AB%E2%80%9C%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%EF%BC%8Clifetime%E2%80%9D%E3%80%82%E5%9C%A8Rust%E4%B8%AD%EF%BC%8C%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%EF%BC%8C%E6%8C%87%E7%9A%84%E6%98%AF%E4%B8%80%E7%B3%BB%E5%88%97%E6%89%A7%E8%A1%8C%E6%8C%87%E4%BB%A4%EF%BC%8C%E4%BB%8E%E6%89%A7%E8%A1%8C%E6%8C%87%E4%BB%A4%E7%9A%84%E5%88%9B%E5%BB%BA%EF%BC%8C%E5%88%B0%E6%89%A7%E8%A1%8C%E6%8C%87%E4%BB%A4%E7%9A%84%E9%94%80%E6%AF%81%E3%80%82%E5%9C%A8%E8%AF%A5%E6%97%B6%E9%97%B4%E6%AE%B5%EF%BC%8C%E8%AF%A5%E5%AF%B9%E8%B1%A1%E5%8F%AB%E5%81%9A%E2%80%9C%E5%AD%98%E6%B4%BB%EF%BC%8Cto%20live%EF%BC%8Cto%20be%20alive%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E7%84%B6%EF%BC%8C%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%92%8C%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%AD%98%E5%9C%A8%E4%B8%80%E5%AE%9A%E5%85%B3%E7%B3%BB%EF%BC%8C%E4%BD%86%E5%AE%83%E4%BB%AC%E4%B8%8D%E6%98%AF%E5%90%8C%E4%B8%80%E4%B8%AA%E6%A6%82%E5%BF%B5%E3%80%82%E4%BE%8B%E5%A6%82%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ea%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20a);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%AF%A5%E7%A8%8B%E5%BA%8F%E4%B8%AD%EF%BC%8C%E5%8F%98%E9%87%8F%3Ccode%3Ea%3C/code%3E%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%BC%80%E5%A7%8B%E4%BA%8E%E7%AC%AC%E4%B8%80%E8%A1%8C%EF%BC%8C%E8%80%8C%3Ccode%3Ea%3C/code%3E%E6%8B%A5%E6%9C%89%E7%9A%84%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%BC%80%E5%A7%8B%E4%BA%8E%E7%AC%AC%E4%BA%8C%E8%A1%8C%E3%80%82%E9%80%9A%E5%B8%B8%E8%AE%A4%E4%B8%BA%EF%BC%8C%E5%8F%98%E9%87%8F%3Ccode%3Ea%3C/code%3E%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%BC%80%E5%A7%8B%E4%BA%8E%E5%AE%83%E7%9A%84%E5%A3%B0%E6%98%8E%EF%BC%8C%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%BC%80%E5%A7%8B%E4%BA%8E%E8%AF%A5%E5%AF%B9%E8%B1%A1%E6%8E%A5%E6%94%B6%E4%B8%80%E4%B8%AA%E5%80%BC%E3%80%82%3C/p%3E%3Cp%3E%E5%8D%B3%E4%BD%BF%E6%98%AF%E5%8F%98%E9%87%8F%E4%BD%9C%E7%94%A8%E5%9F%9F(scope)%E7%9A%84%E7%BB%93%E6%9D%9F%EF%BC%8C%E8%B7%9F%E5%AF%B9%E8%B1%A1%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F(lifetime)%E7%9A%84%E7%BB%93%E6%9D%9F%E4%B9%9F%E4%B8%8D%E6%98%AF%E5%90%8C%E6%97%B6%E5%8F%91%E7%94%9F%E7%9A%84%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;Hello&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Eb%3C/span%3E%20=%20a;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;,%20&amp;quot;%3C/span%3E,%20b);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ea%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;world&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;!&amp;quot;%3C/span%3E,%20a);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eb%20=%20a;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E8%BE%93%E5%87%BA%EF%BC%9A%E2%80%9CHello,%20world!%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E7%AC%AC%E4%B8%80%E6%9D%A1%E8%AF%AD%E5%8F%A5%EF%BC%8C%E5%8F%98%E9%87%8F%3Ccode%3Ea%3C/code%3E%E8%A2%AB%E5%A3%B0%E6%98%8E%E4%BB%A5%E5%8F%8A%E5%88%9D%E5%A7%8B%E5%8C%96%E3%80%82%E5%9B%A0%E6%AD%A4%3Ccode%3Ea%3C/code%3E%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%8E%A5%E7%9D%80%3Ccode%3Ea%3C/code%3E%E6%8B%A5%E6%9C%89%E7%9A%84%E5%AF%B9%E8%B1%A1%E8%A2%AB%E5%88%9B%E5%BB%BA%EF%BC%8C%3Ccode%3Ea%3C/code%3E%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%BC%80%E5%A7%8B%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E7%AC%AC%E4%BA%8C%E6%9D%A1%E8%AF%AD%E5%8F%A5%EF%BC%8C%E5%8F%98%E9%87%8F%3Ccode%3Eb%3C/code%3E%E8%A2%AB%E5%A3%B0%E6%98%8E%EF%BC%8C%E7%94%B1%3Ccode%3Ea%3C/code%3E%E7%A7%BB%E5%8A%A8%E5%AF%B9%E8%B1%A1%E8%BF%9B%E8%A1%8C%E5%88%9D%E5%A7%8B%E5%8C%96%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%3Ccode%3Eb%3C/code%3E%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%BC%80%E5%A7%8B%EF%BC%8C%3Ccode%3Ea%3C/code%3E%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F%E8%A2%AB%E6%82%AC%E6%8C%82(suspended)%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E8%A2%AB%E7%A7%BB%E5%8A%A8%E4%BA%86%EF%BC%8C%E6%89%80%E4%BB%A5%E5%AE%83%E4%B8%8D%E5%8F%AF%E5%86%8D%E8%A2%AB%E8%AE%BF%E9%97%AE%E3%80%82%3Ccode%3Eb%3C/code%3E%E6%8B%A5%E6%9C%89%E7%9A%84%E5%AF%B9%E8%B1%A1%E4%B8%8D%E7%94%A8%E5%88%9B%E5%BB%BA%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E5%B0%B1%E6%98%AF%E5%85%88%E5%89%8D%E5%88%9B%E5%BB%BA%E7%9A%84%E5%AF%B9%E8%B1%A1%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E7%AC%AC%E4%B8%89%E6%9D%A1%E8%AF%AD%E5%8F%A5%EF%BC%8C%3Ccode%3Eb%3C/code%3E%E8%A2%AB%E8%AE%BF%E9%97%AE%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E7%AC%AC%E5%9B%9B%E6%9D%A1%E8%AF%AD%E5%8F%A5%EF%BC%8C%E5%8F%98%E9%87%8F%3Ccode%3Ea%3C/code%3E%E9%80%9A%E8%BF%87%3Ccode%3Enew%3C/code%3E%E6%9E%84%E9%80%A0%E5%99%A8%EF%BC%8C%E6%8C%87%E6%B4%BE%E6%96%B0%E7%9A%84%E5%80%BC%E3%80%82%E8%BF%99%E9%87%8C%EF%BC%8C%3Ccode%3Ea%3C/code%3E%E6%81%A2%E5%A4%8D(resume)%E5%AE%83%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F(scope)%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F%E8%BF%98%E6%B2%A1%E6%9C%89%E7%BB%93%E6%9D%9F%E3%80%82%E4%B8%80%E4%B8%AA%E6%96%B0%E7%9A%84%E5%AF%B9%E8%B1%A1%E8%A2%AB%E5%88%9B%E5%BB%BA%EF%BC%8C%E8%AF%A5%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%BC%80%E5%A7%8B%E3%80%82%E5%89%8D%E9%9D%A2%E7%94%B1%E4%BA%8E%E5%8F%98%E9%87%8F%3Ccode%3Ea%3C/code%3E%E8%A2%AB%E2%80%9C%E7%A7%BB%E5%8A%A8%E2%80%9D%E4%BA%86%EF%BC%8C%E6%89%80%E4%BB%A5%E5%AE%83%E4%B8%8D%E2%80%9C%E6%8B%A5%E6%9C%89%E2%80%9D%E4%BB%BB%E4%BD%95%E5%AF%B9%E8%B1%A1%E3%80%82%E6%89%80%E4%BB%A5%E8%BF%99%E9%87%8C%E7%9A%84%E8%AF%AD%E5%8F%A5%E7%B1%BB%E4%BC%BC%E4%BA%8E%E4%B8%80%E4%B8%AA%E5%88%9D%E5%A7%8B%E5%8C%96%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E7%AC%AC%E4%BA%94%E6%9D%A1%E8%AF%AD%E5%8F%A5%EF%BC%8C%3Ccode%3Ea%3C/code%3E(%E6%8B%A5%E6%9C%89%E5%AF%B9%E8%B1%A1)%E5%8F%AF%E8%A2%AB%E8%AE%BF%E9%97%AE%E4%BA%86%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E7%AC%AC%E5%85%AD%E6%9D%A1%E8%AF%AD%E5%8F%A5%EF%BC%8C%3Ccode%3Ea%3C/code%3E%E5%86%8D%E6%AC%A1%E8%A2%AB%E7%A7%BB%E5%8A%A8%E5%88%B0%3Ccode%3Eb%3C/code%3E%EF%BC%8C%E5%AE%83%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%86%8D%E6%AC%A1%E8%A2%AB%E6%82%AC%E6%8C%82(suspended)%E3%80%82%E7%9B%B8%E5%8F%8D%EF%BC%8C%3Ccode%3Eb%3C/code%3E%E4%B8%80%E7%9B%B4%E6%98%AF%E6%B4%BB%E5%8A%A8%E7%9A%84(active)%EF%BC%8C%E5%AE%83%E6%8B%A5%E6%9C%89%E7%9A%84%E5%AF%B9%E8%B1%A1%E7%94%B1%E7%A7%BB%E5%8A%A8%E7%9A%84%3Ccode%3Ea%3C/code%3E%E6%9B%BF%E6%8D%A2%EF%BC%8C%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%8E%9F%E5%85%88%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%9C%A8%E8%BF%99%E9%87%8C%E8%A2%AB%E9%94%80%E6%AF%81%EF%BC%8C%E4%BB%A5%E5%8F%8A%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%BB%93%E6%9D%9F%E3%80%82%E5%A6%82%E6%9E%9C%E8%AF%A5%E5%AF%B9%E8%B1%A1%E5%AE%9E%E7%8E%B0%E4%BA%86%3Ccode%3EDrop%3C/code%3E%EF%BC%8C%E5%9C%A8%E8%BF%99%E9%87%8C%EF%BC%8C%E5%AE%83%E7%9A%84%3Ccode%3Edrop%3C/code%3E%E6%96%B9%E6%B3%95%E4%BC%9A%E8%A2%AB%E8%B0%83%E7%94%A8%E3%80%82%3C/p%3E%3Cp%3E%E6%9C%80%E5%90%8E%EF%BC%8C%3Ccode%3Eb%3C/code%3E%E5%92%8C%3Ccode%3Ea%3C/code%3E%E9%99%86%E7%BB%AD%E9%80%80%E5%87%BA%E5%AE%83%E4%BB%AC%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F%E3%80%82%E5%8F%98%E9%87%8F%3Ccode%3Eb%3C/code%3E%E6%8B%A5%E6%9C%89%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%EF%BC%8C%E8%AF%A5%E5%AF%B9%E8%B1%A1%E8%A2%AB%E9%94%80%E6%AF%81%EF%BC%8C%E4%BB%A5%E5%8F%8A%E7%BB%93%E6%9D%9F%E5%AE%83%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E3%80%82%E7%9B%B8%E5%8F%8D%EF%BC%8C%E5%8F%98%E9%87%8F%3Ccode%3Ea%3C/code%3E%E8%A2%AB%E2%80%9C%E7%A7%BB%E5%8A%A8%E2%80%9D%E4%BA%86%EF%BC%8C%E4%B8%8D%E5%86%8D%E6%8B%A5%E6%9C%89%E4%BB%BB%E4%BD%95%E5%AF%B9%E8%B1%A1%EF%BC%8C%E4%B9%9F%E5%B0%B1%E4%B8%8D%E4%BC%9A%E6%9C%89%E9%94%80%E6%AF%81%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%8F%91%E7%94%9F%E3%80%82%3C/p%3E%3Ch2%20id=%22Errors-Regarding-Borrowing%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Errors-Regarding-Borrowing%22%3E%C2%B6%3C/a%3EErrors%20Regarding%20Borrowing%3C/h2%3E%3Cp%3EC%E5%92%8CC++%E7%A8%8B%E5%BA%8F%E7%BC%96%E5%86%99%E6%80%BB%E6%98%AF%E8%A2%AB%E5%90%84%E7%A7%8D%E9%94%99%E8%AF%AF%E5%9B%B0%E6%89%B0%EF%BC%8C%E8%80%8CRust%E5%88%99%E9%80%9A%E8%BF%87%E8%AE%BE%E8%AE%A1%E6%9D%A5%E9%81%BF%E5%85%8D%E8%BF%99%E4%B8%80%E7%B1%BB%E9%97%AE%E9%A2%98%E3%80%82Rust%E7%9A%84%E4%B8%80%E7%A7%8D%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF%E6%98%AF%E2%80%9Cuse%20after%20move%E2%80%9D%EF%BC%8C%E5%89%8D%E9%9D%A2%E4%BB%8B%E7%BB%8D%E8%BF%87%E3%80%82%E5%8F%A6%E4%B8%80%E7%A7%8D%E9%94%99%E8%AF%AF%E5%A6%82%E4%B8%8B%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eref_to_n%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3En%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20ref_to_n%20=%20&amp;amp;n;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20*ref_to_n);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20*ref_to_n);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E9%A6%96%E5%85%88%EF%BC%8C%E5%8F%98%E9%87%8F%3Ccode%3Eref_to_n%3C/code%3E%E8%A2%AB%E5%A3%B0%E6%98%8E%EF%BC%8C%E4%BD%86%E6%B2%A1%E6%9C%89%E8%A2%AB%E5%88%9D%E5%A7%8B%E5%8C%96%E3%80%82%E7%84%B6%E5%90%8E%EF%BC%8C%E5%9C%A8%E8%AF%AD%E5%8F%A5%E5%9D%97%E5%86%85%EF%BC%8C%E5%8F%AF%E5%8F%98%E5%8F%98%E9%87%8F%3Ccode%3En%3C/code%3E%E8%A2%AB%E5%A3%B0%E6%98%8E%E5%B9%B6%E5%88%9D%E5%A7%8B%E5%8C%96%EF%BC%8C%E5%AE%83%E5%88%86%E9%85%8D%E4%B8%80%E4%B8%AA%E6%95%B0%E5%9C%A8%E6%A0%88%E4%B8%8A%EF%BC%8C%E5%80%BC%E4%B8%BA12%E3%80%82%3C/p%3E%3Cp%3E%E7%84%B6%E5%90%8E%EF%BC%8C%E5%8E%9F%E5%85%88%E7%9A%84%E5%8F%98%E9%87%8F%EF%BC%8C%E7%94%A8%E4%B8%80%E4%B8%AA%E6%8C%87%E5%90%91%3Ccode%3En%3C/code%3E%E7%9A%84%E5%BC%95%E7%94%A8%E8%BF%9B%E8%A1%8C%E5%88%9D%E5%A7%8B%E5%8C%96%EF%BC%8C%E5%AE%83%E7%A7%9F%E5%80%9F(borrow)%E4%BA%86%E8%BF%99%E4%B8%AA%E5%AF%B9%E8%B1%A1%E3%80%82%3C/p%3E%3Cp%3E%E6%8E%A5%E7%9D%80%EF%BC%8C%E5%8F%98%E9%87%8F%3Ccode%3Eref_to_n%3C/code%3E%E6%8C%87%E5%90%91%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%8D%B3%E5%80%BC%E4%B8%BA12%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E6%89%93%E5%8D%B0%E8%BE%93%E5%87%BA%E3%80%82%3C/p%3E%3Cp%3E%E6%8E%A5%E7%9D%80%EF%BC%8C%E8%AF%AD%E5%8F%A5%E5%9D%97%E7%BB%93%E6%9D%9F%EF%BC%8C%E5%86%85%E9%83%A8%E5%8F%98%E9%87%8F%3Ccode%3En%3C/code%3E%E7%BB%93%E6%9D%9F%E4%BA%86%E5%AE%83%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F%EF%BC%8C%E5%AE%83%E7%9A%84%E5%AF%B9%E8%B1%A1%E8%A2%AB%E9%94%80%E6%AF%81%E3%80%82%3C/p%3E%3Cp%3E%E6%8E%A5%E7%9D%80%EF%BC%8C%E5%8F%98%E9%87%8F%3Ccode%3Eref_to_n%3C/code%3E%E6%8C%87%E5%90%91%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%86%8D%E6%AC%A1%E8%A2%AB%E6%89%93%E5%8D%B0%E3%80%82%E4%BD%86%E8%AF%A5%E5%AF%B9%E8%B1%A1%E5%8E%9F%E5%85%88%E8%A2%AB%3Ccode%3En%3C/code%3E%E2%80%9C%E6%8B%A5%E6%9C%89%E2%80%9D%EF%BC%8C%E5%AE%83%E7%8E%B0%E5%9C%A8%E4%B8%8D%E5%AD%98%E5%9C%A8%E4%BA%86%EF%BC%81%3C/p%3E%3Cp%3E%E5%B9%B8%E8%BF%90%E7%9A%84%E6%98%AF%EF%BC%8CRust%E7%BC%96%E8%AF%91%E5%99%A8%E6%8B%92%E7%BB%9D%E8%AF%A5%E4%BB%A3%E7%A0%81%EF%BC%8C%E4%BA%A7%E7%94%9F%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF%E2%80%9C%3Ccode%3En%3C/code%3E%20does%20not%20live%20long%20enough%E2%80%9D%E3%80%82%E8%AF%A5%E6%B6%88%E6%81%AF%E8%A1%A8%E7%A4%BA%EF%BC%8C%E5%8F%98%E9%87%8F%3Ccode%3En%3C/code%3E%E6%AD%BB%E4%BA%86(dying)%EF%BC%8C%E4%BD%86%E4%BB%8D%E7%84%B6%E6%9C%89%E6%8C%87%E5%90%91%E5%AE%83%E2%80%9C%E6%8B%A5%E6%9C%89%E2%80%9D%E7%9A%84%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%BC%95%E7%94%A8%EF%BC%8C%E5%AE%83%E5%BA%94%E8%AF%A5%E6%B4%BB%E6%9B%B4%E9%95%BF%E4%B8%80%E4%BA%9B%EF%BC%9B%E8%87%B3%E5%B0%91%E5%BA%94%E8%AF%A5%E8%B7%9F%E7%A7%9F%E5%80%9F%E5%AE%83%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%A7%9F%E5%80%9F%E6%96%B9%E4%B8%80%E6%A0%B7%E9%95%BF%E3%80%82%3C/p%3E%3Cp%3E%E9%A1%BA%E4%BE%BF%EF%BC%8CC%E6%88%96C++%E5%AF%B9%E5%BA%94%E7%9A%84%E4%BB%A3%E7%A0%81%E5%A6%82%E4%B8%8B%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20c%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22meta%22%3E#%3Cspan%20class=%22keyword%22%3Einclude%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;lt;stdio.h&amp;gt;%3C/span%3E%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22type%22%3Eint%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Emain%3C/span%3E%3Cspan%20class=%22params%22%3E()%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22type%22%3Eint%3C/span%3E*%20ref_to_n;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22type%22%3Eint%3C/span%3E%20n%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20ref_to_n%20&amp;amp;n;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22built_in%22%3Eprintf%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;%d%20&amp;quot;%3C/span%3E,%20*ref_to_n);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22built_in%22%3Eprintf%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;%d&amp;quot;%3C/span%3E,%20*ref_to_n);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Ereturn%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E6%AE%B5%E7%A8%8B%E5%BA%8F%E5%8F%AF%E8%A2%ABC%E5%92%8CC++%E7%BC%96%E8%AF%91%E5%99%A8%E6%8E%A5%E5%8F%97%E3%80%82%E7%BB%93%E6%9E%9C%E4%BC%9A%E6%89%93%E5%8D%B0%E2%80%9C12%E2%80%9D%EF%BC%8C%E4%B9%8B%E5%90%8E%E7%9A%84%E8%A1%8C%E4%B8%BA%E4%BC%9A%E5%8F%98%E5%BE%97%E4%B8%8D%E5%8F%AF%E9%A2%84%E6%B5%8B%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E7%B1%BB%E7%A8%8B%E5%BA%8F%E9%94%99%E8%AF%AF%EF%BC%8C%E6%88%91%E4%BB%AC%E7%A7%B0%E4%B9%8B%E4%B8%BA%E2%80%9Cuse%20after%20drop%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E6%9C%89%E5%8F%A6%E4%B8%80%E7%A7%8D%E5%8F%AF%E9%81%BF%E5%85%8D%E7%9A%84Rust%E9%94%99%E8%AF%AF%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ev%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22number%22%3E12%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eref_to_first%3C/span%3E%20=%20&amp;amp;v[%3Cspan%20class=%22number%22%3E0%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(%3Cspan%20class=%22number%22%3E13%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20ref_to_first);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%AF%B9%E5%BA%94%E7%9A%84C%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0%E6%98%AF%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20c%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22meta%22%3E#%3Cspan%20class=%22keyword%22%3Einclude%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;lt;stdio.h&amp;gt;%3C/span%3E%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22meta%22%3E#%3Cspan%20class=%22keyword%22%3Einclude%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;lt;stdlib.h&amp;gt;%3C/span%3E%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22type%22%3Eint%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Emain%3C/span%3E%3Cspan%20class=%22params%22%3E()%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22type%22%3Eint%3C/span%3E*%20v%20=%20%3Cspan%20class=%22built_in%22%3Emalloc%3C/span%3E(%3Cspan%20class=%22number%22%3E1%3C/span%3E%20*%20%3Cspan%20class=%22keyword%22%3Esizeof%3C/span%3E%20(%3Cspan%20class=%22type%22%3Eint%3C/span%3E));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20v[%3Cspan%20class=%22number%22%3E0%3C/span%3E]%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22type%22%3Econst%3C/span%3E%20%3Cspan%20class=%22type%22%3Eint%3C/span%3E*%20ref_to_first%20=%20&amp;amp;v[%3Cspan%20class=%22number%22%3E0%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20v%20=%20%3Cspan%20class=%22built_in%22%3Erealloc%3C/span%3E(v,%20%3Cspan%20class=%22number%22%3E2%3C/span%3E%20*%20%3Cspan%20class=%22keyword%22%3Esizeof%3C/span%3E%20(%3Cspan%20class=%22type%22%3Eint%3C/span%3E));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20v[%3Cspan%20class=%22number%22%3E1%3C/span%3E]%20=%20%3Cspan%20class=%22number%22%3E13%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22built_in%22%3Eprintf%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;%d&amp;quot;%3C/span%3E,%20*ref_to_first);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22built_in%22%3Efree%3C/span%3E(v);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%BB%A5%E5%8F%8AC++%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%98%AF%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20cpp%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22meta%22%3E#%3Cspan%20class=%22keyword%22%3Einclude%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;lt;iostream&amp;gt;%3C/span%3E%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22meta%22%3E#%3Cspan%20class=%22keyword%22%3Einclude%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;lt;vector&amp;gt;%3C/span%3E%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22function%22%3E%3Cspan%20class=%22type%22%3Eint%3C/span%3E%20%3Cspan%20class=%22title%22%3Emain%3C/span%3E%3Cspan%20class=%22params%22%3E()%3C/span%3E%20%3C/span%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20std::vector&amp;lt;%3Cspan%20class=%22type%22%3Eint%3C/span%3E&amp;gt;%20v%20&amp;#123;%20%3Cspan%20class=%22number%22%3E12%3C/span%3E%20&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22type%22%3Econst%3C/span%3E%20%3Cspan%20class=%22type%22%3Eint%3C/span%3E&amp;amp;%20ref_to_first%20=%20v[%3Cspan%20class=%22number%22%3E0%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20v.%3Cspan%20class=%22built_in%22%3Epush_back%3C/span%3E(%3Cspan%20class=%22number%22%3E13%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20std::cout%20&amp;lt;&amp;lt;%20ref_to_first;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%B8%8D%E7%94%A8%E5%A4%9A%E8%AF%B4%EF%BC%8C%E6%9C%80%E5%90%8E%E4%B8%A4%E4%B8%AA%E7%A8%8B%E5%BA%8F%E4%BC%9A%E8%A2%AB%E5%90%84%E8%87%AA%E7%9A%84%E7%BC%96%E8%AF%91%E5%99%A8%E6%8E%A5%E5%8F%97%EF%BC%8C%E5%8D%B3%E4%BD%BF%E5%AE%83%E4%BB%AC%E7%9A%84%E8%A1%8C%E4%B8%BA%E6%98%AF%E6%9C%AA%E5%AE%9A%E4%B9%89%E7%9A%84%E3%80%82%E7%9B%B8%E5%8F%8D%EF%BC%8CRust%E7%BC%96%E8%AF%91%E5%99%A8%E4%BC%9A%E6%8B%92%E7%BB%9D%E5%B9%B6%E6%8A%9B%E5%87%BA%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF%E2%80%9Ccannot%20borrow%20%3Ccode%3Ev%3C/code%3E%20as%20mutable%20because%20it%20is%20also%20borrowed%20as%20immutable%E2%80%9D%E3%80%82%E8%AE%A9%E6%88%91%E4%BB%AC%E7%9C%8B%E7%9C%8B%E8%AF%A5%E7%A8%8B%E5%BA%8F%E6%9C%89%E4%BB%80%E4%B9%88%E9%94%99%E8%AF%AF%E3%80%82%3C/p%3E%3Cp%3E%E9%A6%96%E5%85%88%EF%BC%8C%E5%8F%AF%E5%8F%98(mutable)%E5%8F%98%E9%87%8F%3Ccode%3Ev%3C/code%3E%EF%BC%8C%E7%94%A8%E4%B8%80%E4%B8%AA%E4%BB%85%E5%B8%A6%E6%95%B012%E7%9A%84vector%E5%A3%B0%E6%98%8E%E5%92%8C%E5%88%9D%E5%A7%8B%E5%8C%96%E3%80%82%3C/p%3E%3Cp%3E%E7%84%B6%E5%90%8E%EF%BC%8C%E5%8F%98%E9%87%8F%3Ccode%3Eref_to_first%3C/code%3E%E7%94%A8%E5%8E%9F%E5%85%88%E6%8C%87%E5%90%91%3Ccode%3Ev%3C/code%3E%E7%9A%84%E5%BC%95%E7%94%A8%E5%A3%B0%E6%98%8E%E5%92%8C%E5%88%9D%E5%A7%8B%E5%8C%96%E3%80%82%E5%BC%95%E7%94%A8%E6%8C%87%E5%90%91%E7%9A%84%E5%80%BC%E5%8C%85%E5%90%AB%E6%95%B012%E3%80%82%3C/p%3E%3Cp%3E%E7%84%B6%E5%90%8E%EF%BC%8C%E5%8F%A6%E4%B8%80%E4%B8%AA%E6%95%B013%E8%A2%AB%E6%B7%BB%E5%8A%A0%E5%88%B0vector%E3%80%82%E4%BD%86%E8%BF%99%E7%A7%8D%E6%8F%92%E5%85%A5%E4%BC%9A%E5%AF%BC%E8%87%B4%E7%BC%93%E5%86%B2%E5%8C%BA%E7%9A%84%E9%87%8D%E6%96%B0%E5%88%86%E9%85%8D%E3%80%82%E5%8D%B3%E4%BD%BF%E5%9C%A8%E8%BF%99%E4%B8%AA%E4%BE%8B%E5%AD%90%EF%BC%8C%3Ccode%3Eref_to_first%3C/code%3E%E4%BB%8D%E4%BC%9A%E7%BB%A7%E7%BB%AD%E6%8C%87%E5%90%91%E6%97%A7%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E4%B8%8D%E6%98%AF%E6%9C%89%E6%95%88%E7%9A%84%E5%86%85%E5%AD%98%E5%9C%B0%E5%9D%80%E3%80%82%3C/p%3E%3Cp%3E%E6%9C%80%E5%90%8E%EF%BC%8C%E8%BF%99%E4%B8%AA%E6%97%A7%E7%9A%84%E5%86%85%E5%AD%98%E5%9C%B0%E5%9D%80%EF%BC%8C%E5%8F%AF%E8%83%BD%E6%98%AF%E9%94%99%E8%AF%AF%E7%9A%84%EF%BC%8C%E8%AF%BB%E5%8F%96%E7%9A%84%E5%86%85%E5%AD%98%E5%9C%B0%E5%9D%80%E7%9A%84%E5%80%BC%E6%89%93%E5%8D%B0%E5%90%8E%EF%BC%8C%E6%98%AF%E4%B8%8D%E5%8F%AF%E9%A2%84%E6%B5%8B%E7%9A%84%E7%BB%93%E6%9E%9C%E3%80%82%3C/p%3E%3Cp%3E%E7%94%B1%E4%BA%8E%E4%BB%8E%E4%B8%80%E4%B8%AAvector%E6%8F%92%E5%85%A5%E6%88%96%E6%B7%BB%E5%8A%A0%E5%85%83%E7%B4%A0%E6%97%B6%EF%BC%8C%E6%89%80%E6%9C%89%E6%8C%87%E5%90%91vector%E7%9A%84%E5%BC%95%E7%94%A8%E9%83%BD%E2%80%9C%E5%A4%B1%E6%95%88%E2%80%9D%EF%BC%8C%E5%AF%BC%E8%87%B4%E8%BF%99%E7%A7%8D%E9%94%99%E8%AF%AF%E7%9A%84%E5%87%BA%E7%8E%B0%E3%80%82%E9%80%9A%E5%B8%B8%EF%BC%8C%E8%BF%99%E7%A7%8D%E9%94%99%E8%AF%AF%E5%B1%9E%E4%BA%8E%E5%B9%BF%E4%B9%89%E7%9A%84%E9%94%99%E8%AF%AF%E7%B1%BB%E5%88%AB%EF%BC%8C%E4%B9%9F%E5%B0%B1%E6%98%AF%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%EF%BC%8C%E9%80%9A%E8%BF%87%E5%87%A0%E7%A7%8D%E8%B7%AF%E5%BE%84%E3%80%81%E6%88%96%E5%88%AB%E5%90%8D%E8%AE%BF%E9%97%AE%EF%BC%8C%E5%BD%93%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%A2%AB%E5%85%B6%E4%B8%AD%E4%B8%80%E4%B8%AA%E5%88%AB%E5%90%8D%E4%BF%AE%E6%94%B9%E6%97%B6%EF%BC%8C%E4%B8%8D%E8%83%BD%E8%A2%AB%E5%8F%A6%E4%B8%80%E4%B8%AA%E5%88%AB%E5%90%8D%E4%BD%BF%E7%94%A8%E3%80%82%3C/p%3E%3Cp%3E%E6%88%91%E4%BB%AC%E5%B0%86%E8%BF%99%E7%B1%BB%E7%BC%96%E7%A8%8B%E9%94%99%E8%AF%AF%E5%91%BD%E5%90%8D%E4%B8%BA%E2%80%9Cuse%20after%20change%20by%20an%20alias%E2%80%9D%E3%80%82%3C/p%3E%3Ch2%20id=%22How-to-Prevent-%E2%80%9CUse-After-Drop%E2%80%9D-Errors%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#How-to-Prevent-%E2%80%9CUse-After-Drop%E2%80%9D-Errors%22%3E%C2%B6%3C/a%3EHow%20to%20Prevent%20%E2%80%9CUse%20After%20Drop%E2%80%9D%20Errors%3C/h2%3E%3Cp%3ERust%E9%98%B2%E6%AD%A2%E4%BD%BF%E7%94%A8%E2%80%9C%E8%84%B1%E8%90%BD%EF%BC%8Cdropped%E2%80%9D%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%8A%80%E6%9C%AF%E6%98%AF%E7%AE%80%E5%8D%95%E7%9A%84%E3%80%82%3C/p%3E%3Cp%3E%E6%8A%8A%E8%AF%A5%E5%AF%B9%E8%B1%A1%E7%9C%8B%E5%81%9A%E6%98%AF%E8%A2%AB%E4%B8%80%E4%B8%AA%E5%8F%98%E9%87%8F%E6%8C%87%E5%90%91%EF%BC%8C%E9%81%B5%E5%BE%AA%E6%A0%88%E5%88%86%E9%85%8D%E7%9A%84%E8%A7%84%E5%88%99%EF%BC%8C%E4%BC%9A%E6%8C%89%E7%85%A7%E5%8F%98%E9%87%8F%E5%A3%B0%E6%98%8E%E7%9A%84%E5%8F%8D%E5%90%91%E9%A1%BA%E5%BA%8F%E8%A2%AB%E8%84%B1%E8%90%BD%EF%BC%8C%E8%80%8C%E4%B8%8D%E6%98%AF%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9A%84%E5%8F%8D%E5%90%91%E9%A1%BA%E5%BA%8F%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EX%3C/span%3E(%3Cspan%20class=%22type%22%3Echar%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EDrop%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EX%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edrop%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.%3Cspan%20class=%22number%22%3E0%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_a%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3EX%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;#x27;a&amp;#x27;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_b%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_c%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3EX%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;#x27;c&amp;#x27;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_b%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3EX%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;#x27;b&amp;#x27;%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%AF%A5%E7%A8%8B%E5%BA%8F%E4%BC%9A%E6%89%93%E5%8D%B0%E2%80%9Ccba%E2%80%9D%E3%80%82%E8%BF%99%E4%B8%89%E4%B8%AA%E5%AF%B9%E8%B1%A1%E6%8C%89%E7%85%A7%E9%A1%BA%E5%BA%8F%E2%80%9Cacb%E2%80%9D%E8%A2%AB%E6%9E%84%E9%80%A0%EF%BC%8C%E4%BD%86%E4%B8%89%E4%B8%AA%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%88%86%E9%85%8D%E9%A1%BA%E5%BA%8F%E6%98%AF%E2%80%9Cabc%E2%80%9D%EF%BC%8C%E5%9B%A0%E6%AD%A4%E5%9B%9E%E6%94%B6%E4%BB%A5%E5%8F%8A%E8%84%B1%E8%90%BD%E7%9A%84%E6%8C%89%E7%9B%B8%E5%8F%8D%E7%9A%84%E9%A1%BA%E5%BA%8F%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%BA%E4%BA%86%E9%81%BF%E5%85%8D%E4%BD%BF%E7%94%A8%E8%84%B1%E8%90%BD%E5%AF%B9%E8%B1%A1%EF%BC%8C%E6%89%80%E6%9C%89%E5%8F%98%E9%87%8F%EF%BC%8C%E7%A7%9F%E5%80%9F%E5%85%B6%E5%AE%83%E5%8F%98%E9%87%8F%E6%8B%A5%E6%9C%89%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%BF%85%E9%A1%BB%E5%9C%A8%E8%AF%A5%E5%8F%98%E9%87%8F%E7%9A%84%20%3Cstrong%3E%E5%90%8E%E9%9D%A2%3C/strong%3E%20%E5%A3%B0%E6%98%8E%E3%80%82%3C/p%3E%3Cp%3E%E4%BE%8B%E5%A6%82%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3En%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3E_r%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Em%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E13%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_r%20=%20&amp;amp;m;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_r%20=%20&amp;amp;n;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E6%AE%B5%E4%BB%A3%E7%A0%81%E4%BC%9A%E4%BA%A7%E7%94%9F%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF%EF%BC%9A%E2%80%9C%3Ccode%3Em%3C/code%3E%20does%20not%20live%20long%20enough%E2%80%9D%E3%80%82%E8%BF%99%E6%98%AF%E5%9B%A0%E4%B8%BA%3Ccode%3E_r%3C/code%3E%E5%90%8C%E6%97%B6%E4%BB%8E%3Ccode%3Em%3C/code%3E%E5%92%8C%3Ccode%3En%3C/code%3E%E8%BF%9B%E8%A1%8Cborrow%EF%BC%8C%E8%99%BD%E7%84%B6%E4%B8%8D%E5%9C%A8%E5%90%8C%E4%B8%80%E6%97%B6%E5%88%BB%E6%8C%87%E5%90%91%E4%B8%A4%E8%80%85%EF%BC%8C%E4%BD%86%E5%AE%83%E5%9C%A8%3Ccode%3Em%3C/code%3E%E4%B9%8B%E5%89%8D%E5%A3%B0%E6%98%8E%E4%BA%86%E3%80%82%E8%A6%81%E6%9B%B4%E6%AD%A3%E8%BF%99%E6%AE%B5%E4%BB%A3%E7%A0%81%EF%BC%8C%E6%94%B9%E4%B8%BA%E5%A6%82%E4%B8%8B%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3En%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Em%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E13%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3E_r%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_r%20=%20&amp;amp;m;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_r%20=%20&amp;amp;n;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E6%AE%B5%E4%BB%A3%E7%A0%81%E6%98%AF%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%8C%E5%BD%93%3Ccode%3Em%3C/code%3E%E5%92%8C%3Ccode%3En%3C/code%3E%E6%8B%A5%E6%9C%89%E7%9A%84%E5%AF%B9%E8%B1%A1%E8%A2%ABdropped%E6%97%B6%EF%BC%8C%E4%B8%8D%E4%BC%9A%E5%86%8D%E6%9C%89%E6%8C%87%E5%90%91%E5%AE%83%E4%BB%AC%E7%9A%84%E5%BC%95%E7%94%A8%E3%80%82%3C/p%3E%3Ch2%20id=%22How-to-Prevent-%E2%80%9CUse-After-Change-by-an-Alias%E2%80%9D-Errors%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#How-to-Prevent-%E2%80%9CUse-After-Change-by-an-Alias%E2%80%9D-Errors%22%3E%C2%B6%3C/a%3EHow%20to%20Prevent%20%E2%80%9CUse%20After%20Change%20by%20an%20Alias%E2%80%9D%20Errors%3C/h2%3E%3Cp%3E%E7%94%B1%E4%BA%8E%E5%85%B6%E5%AE%83%E5%8F%98%E9%87%8F%E5%BC%95%E8%B5%B7%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%94%B9%E5%8F%98%EF%BC%8C%E5%AF%BC%E8%87%B4%E5%BD%93%E5%89%8D%E5%8F%98%E9%87%8F%E4%BD%BF%E7%94%A8%E8%AF%A5%E5%AF%B9%E8%B1%A1%E5%87%BA%E7%8E%B0%E9%94%99%E8%AF%AF%E3%80%82%E8%A6%81%E9%81%BF%E5%85%8D%E8%BF%99%E7%A7%8D%E9%94%99%E8%AF%AF%EF%BC%8C%E4%BD%BF%E7%94%A8%E7%9A%84%E8%A7%84%E5%88%99%E6%9C%89%E5%87%A0%E5%88%86%E5%A4%8D%E6%9D%82%E3%80%82%3C/p%3E%3Cp%3E%E9%A6%96%E5%85%88%EF%BC%8C%E8%A6%81%E6%B1%82%E8%80%83%E8%99%91%E4%BB%BB%E4%BD%95%E8%AF%AD%E5%8F%A5%E4%BC%9A%E8%AF%BB%E8%BF%99%E4%B8%AA%E5%AF%B9%E8%B1%A1%EF%BC%8C%E4%B8%8D%E4%BC%9A%E6%9C%89%E5%86%99%E6%93%8D%E4%BD%9C%EF%BC%8C%E5%B0%B1%E5%83%8F%E6%98%AF%E8%AF%A5%E5%AF%B9%E8%B1%A1%E7%9A%84%E4%B8%80%E4%B8%AA%20%3Cstrong%3E%E4%B8%B4%E6%97%B6%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%A7%9F%E5%80%9F(temporary%20immutable%20borrowing)%3C/strong%3E%EF%BC%9B%E4%BB%BB%E4%BD%95%E8%AF%AD%E5%8F%A5%E5%8F%98%E6%9B%B4%E8%BF%99%E4%B8%AA%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%B0%B1%E5%83%8F%E6%98%AF%E8%AF%A5%E5%AF%B9%E8%B1%A1%E7%9A%84%E4%B8%80%E4%B8%AA%20%3Cstrong%3E%E4%B8%B4%E6%97%B6%E5%8F%AF%E5%8F%98%E7%A7%9F%E5%80%9F(temporary%20mutable%20borrowing)%3C/strong%3E%E3%80%82%E8%BF%99%E7%A7%8D%E7%A7%9F%E5%80%9F%E7%9A%84%E5%87%BA%E7%8E%B0%E5%92%8C%E7%BB%93%E6%9D%9F%E5%9C%A8%E8%AF%A5%E8%AF%AD%E5%8F%A5%E7%9A%84%E5%86%85%E9%83%A8%E8%BF%9B%E8%A1%8C%E3%80%82%3C/p%3E%3Cp%3E%E7%84%B6%E5%90%8E%EF%BC%8C%E7%A7%9F%E5%80%9F%E5%BC%80%E5%A7%8B%E4%BA%8E%EF%BC%8C%E8%8E%B7%E5%8F%96%E6%8C%87%E5%90%91%E8%AF%A5%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%BC%95%E7%94%A8%EF%BC%8C%E5%B9%B6%E5%88%86%E9%85%8D%E7%BB%99%E4%B8%80%E4%B8%AA%E5%8F%98%E9%87%8F%EF%BC%9B%E7%BB%93%E6%9D%9F%E4%BA%8E%EF%BC%8C%E8%AF%A5%E5%8F%98%E9%87%8F%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F(scope)%E7%BB%93%E6%9D%9F%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E6%98%AF%E4%B8%80%E4%B8%AA%E4%BE%8B%E5%AD%90%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Eb%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E13%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20a);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ec%3C/span%3E%20=%20&amp;amp;a;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ed%3C/span%3E%20=%20&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20b;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20c,%20d);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eb%20+=%20%3Cspan%20class=%22number%22%3E1%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20b);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E4%BC%9A%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C12%2012%2013%2014%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E7%AC%AC3%E8%A1%8C%E5%92%8C%E6%9C%80%E5%90%8E%E4%B8%80%E8%A1%8C%EF%BC%8C%E4%B8%80%E4%B8%AA%E5%8F%AF%E5%8F%98%E7%A7%9F%E5%80%9F%E5%BC%80%E5%A7%8B%E5%B9%B6%E7%BB%93%E6%9D%9F%E3%80%82%E5%9C%A8%E7%AC%AC5%E8%A1%8C%EF%BC%8C%E4%B8%80%E4%B8%AA%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%A7%9F%E5%80%9F%E5%BC%80%E5%A7%8B%EF%BC%8C%E7%AC%AC6%E8%A1%8C%EF%BC%8C%E4%B8%80%E4%B8%AA%E5%8F%AF%E5%8F%98%E7%A7%9F%E5%80%9F%E5%BC%80%E5%A7%8B%EF%BC%9B%E5%AE%83%E4%BB%AC%E5%9C%A8%E8%AF%AD%E5%8F%A5%E5%9D%97%E6%9C%AB%E5%B0%BE%E7%BB%93%E6%9D%9F%E3%80%82%E5%9C%A8%E7%AC%AC9%E8%A1%8C%EF%BC%8C%E4%B8%80%E4%B8%AA%E5%8F%AF%E5%8F%98%E7%A7%9F%E5%80%9F%E5%BC%80%E5%A7%8B%E5%B9%B6%E7%BB%93%E6%9D%9F%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E7%A7%8D%E8%A7%84%E5%88%99%E8%A6%81%E6%B1%82%EF%BC%8C%E5%90%8C%E4%B8%80%E6%97%B6%E5%88%BB%EF%BC%8C%E5%8F%AF%E5%8F%98%E7%A7%9F%E5%80%9F(%E5%8D%B3%EF%BC%8C&amp;amp;mut%20)%E7%9A%84%E5%87%BA%E7%8E%B0%E4%B8%8D%E8%83%BD%E5%92%8C%E5%85%B6%E5%AE%83%E7%A7%9F%E5%80%9F%E5%B9%B6%E5%AD%98%E3%80%82%3C/p%3E%3Cp%3E%E6%8D%A2%E5%8F%A5%E8%AF%9D%E8%AF%B4%EF%BC%8C%E5%90%8C%E4%B8%80%E6%97%B6%E5%88%BB%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E6%B2%A1%E6%9C%89%E7%A7%9F%E5%80%9F%3C/li%3E%3Cli%3E%E6%88%96%EF%BC%8C%E4%B8%80%E4%B8%AA%E5%8D%95%E4%B8%80%E7%9A%84%E5%8F%AF%E5%8F%98(mutable)%E7%A7%9F%E5%80%9F%3C/li%3E%3Cli%3E%E6%88%96%EF%BC%8C%E4%B8%80%E4%B8%AA%E5%8D%95%E4%B8%80%E7%9A%84%E4%B8%8D%E5%8F%AF%E5%8F%98(immutable)%E7%A7%9F%E5%80%9F%3C/li%3E%3Cli%3E%E6%88%96%EF%BC%8C%E5%87%A0%E4%B8%AA%E4%B8%8D%E5%8F%AF%E5%8F%98(immutable)%E7%A7%9F%E5%80%9F%3C/li%3E%3C/ul%3E%3Cp%3E%E4%B8%8D%E8%83%BD%E6%9C%89%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E5%87%A0%E4%B8%AA%E5%8F%AF%E5%8F%98(mutable)%E7%A7%9F%E5%80%9F%3C/li%3E%3Cli%3E%E4%B8%8D%E8%83%BD%E6%9C%89%E4%B8%80%E4%B8%AA%E5%8D%95%E4%B8%80%E7%9A%84%E5%8F%AF%E5%8F%98(mutable)%E7%A7%9F%E5%80%9F%E5%92%8C%E4%B8%80%E4%B8%AA%E6%88%96%E5%A4%9A%E4%B8%AA%E4%B8%8D%E5%8F%AF%E5%8F%98(immutable)%E7%A7%9F%E5%80%9F%3C/li%3E%3C/ul%3E%3Ch2%20id=%22Listing-the-Possible-Cases-of-Multiple-Borrowings%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Listing-the-Possible-Cases-of-Multiple-Borrowings%22%3E%C2%B6%3C/a%3EListing%20the%20Possible%20Cases%20of%20Multiple%20Borrowings%3C/h2%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E7%BD%97%E5%88%97%E5%85%AD%E7%A7%8D%E5%85%81%E8%AE%B8%E7%9A%84%E6%83%85%E5%86%B5%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%B8%80%E7%A7%8D%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_b%3C/span%3E%20=%20&amp;amp;a;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_c%3C/span%3E%20=%20&amp;amp;a;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%9C%89%E4%B8%A4%E4%B8%AA%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%A7%9F%E5%80%9F%EF%BC%8C%E7%9B%B4%E5%88%B0%E7%BB%93%E6%9D%9F%E4%B8%BA%E6%AD%A2%E8%A2%AB%E6%8C%81%E6%9C%89%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%BA%8C%E7%A7%8D%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_b%3C/span%3E%20=%20&amp;amp;a;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20a);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%AC%AC%E4%B8%89%E7%A7%8D%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ea%20=%20%3Cspan%20class=%22number%22%3E13%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_b%3C/span%3E%20=%20&amp;amp;a;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%B8%80%E4%B8%AA%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%A7%9F%E5%80%9F%EF%BC%8C%E7%B4%A7%E9%9A%8F%E5%90%8E%E4%B8%80%E4%B8%AA%E4%B8%B4%E6%97%B6%E5%8F%AF%E5%8F%98%E7%A7%9F%E5%80%9F%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E5%9B%9B%E7%A7%8D%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ea%20=%20%3Cspan%20class=%22number%22%3E13%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_b%3C/span%3E%20=%20&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20a;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%B8%80%E4%B8%AA%E5%8F%AF%E5%8F%98%E7%A7%9F%E5%80%9F%EF%BC%8C%E7%B4%A7%E9%9A%8F%E5%90%8E%E4%B8%80%E4%B8%AA%E4%B8%B4%E6%97%B6%E5%8F%AF%E5%8F%98%E7%A7%9F%E5%80%9F%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%BA%94%E7%A7%8D%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20a);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_b%3C/span%3E%20=%20&amp;amp;a;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%B8%80%E4%B8%AA%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%A7%9F%E5%80%9F%EF%BC%8C%E7%B4%A7%E9%9A%8F%E5%90%8E%E4%B8%80%E4%B8%AA%E4%B8%B4%E6%97%B6%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%A7%9F%E5%80%9F%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E5%85%AD%E7%A7%8D%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20a);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_b%3C/span%3E%20=%20&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20a;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%B8%80%E4%B8%AA%E5%8F%AF%E5%8F%98%E7%A7%9F%E5%80%9F%EF%BC%8C%E7%B4%A7%E9%9A%8F%E5%90%8E%E4%B8%80%E4%B8%AA%E4%B8%B4%E6%97%B6%E4%B8%8D%E5%8F%AF%E7%A7%9F%E5%80%9F%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E6%98%AF%E5%85%AD%E7%A7%8D%E4%B8%8D%E5%90%88%E6%B3%95%E6%83%85%E5%86%B5%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%B8%80%E7%A7%8D%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_b%3C/span%3E%20=%20&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20a;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_c%3C/span%3E%20=%20&amp;amp;a;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BC%96%E8%AF%91%E5%87%BA%E9%94%99%E2%80%9Ccannot%20borrow%20%3Ccode%3Ea%3C/code%3E%20as%20immutable%20because%20it%20is%20also%20borrowed%20as%20mutable%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%BA%8C%E7%A7%8D%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_b%3C/span%3E%20=%20&amp;amp;a;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_c%3C/span%3E%20=%20&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20a;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BC%96%E8%AF%91%E5%87%BA%E9%94%99%E2%80%9Ccannot%20borrow%20%3Ccode%3Ea%3C/code%3E%20as%20mutable%20because%20it%20is%20also%20borrowed%20as%20immutable%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%B8%89%E7%A7%8D%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_b%3C/span%3E%20=%20&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20a;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_c%3C/span%3E%20=%20&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20a;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BC%96%E8%AF%91%E5%87%BA%E9%94%99%E2%80%9Ccannot%20borrow%20%3Ccode%3Ea%3C/code%3E%20as%20mutable%20more%20than%20once%20at%20a%20time%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E5%9B%9B%E7%A7%8D%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_b%3C/span%3E%20=%20&amp;amp;a;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ea%20=%20%3Cspan%20class=%22number%22%3E13%3C/span%3E;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BC%96%E8%AF%91%E5%87%BA%E9%94%99%E2%80%9Ccannot%20assign%20to%20%3Ccode%3Ea%3C/code%3E%20because%20it%20is%20borrowed%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%BA%94%E7%A7%8D%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_b%3C/span%3E%20=%20&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20a;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ea%20=%20%3Cspan%20class=%22number%22%3E13%3C/span%3E;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BC%96%E8%AF%91%E5%87%BA%E9%94%99%E2%80%9Ccannot%20assign%20to%20%3Ccode%3Ea%3C/code%3E%20because%20it%20is%20borrowed%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E5%85%AD%E7%A7%8D%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_b%3C/span%3E%20=%20&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20a;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20a);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BC%96%E8%AF%91%E5%87%BA%E9%94%99%E2%80%9Ccannot%20borrow%20%3Ccode%3Ea%3C/code%3E%20as%20immutable%20because%20it%20is%20also%20borrowed%20as%20mutable%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E6%A2%B3%E7%90%86%E4%B8%80%E4%B8%8B%E3%80%82%E5%AF%B9%E4%BA%8E%E5%BD%93%E5%89%8D%E5%B0%9A%E6%9C%AA%E8%A2%ABborrowed%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%9D%A5%E8%AF%B4%EF%BC%8C%E5%85%81%E8%AE%B8%E7%9A%84%E6%93%8D%E4%BD%9C%E6%98%AF%EF%BC%9A%3C/p%3E%3Col%3E%3Cli%3E%E4%BB%85%E5%8F%AF%E8%A2%AB%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%A7%9F%E5%80%9F(immutablely%20borrowed)%E6%95%B0%E6%AC%A1%EF%BC%8C%E7%84%B6%E5%90%8E%E5%8F%AF%E4%BB%A5%E7%94%B1%E6%89%80%E6%9C%89%E8%80%85(owner)%E5%92%8C%E4%BB%BB%E4%BD%95%E7%A7%9F%E5%80%9F%E6%96%B9(borrower)%E8%AF%BB%E5%8F%96%E3%80%82%3C/li%3E%3Cli%3E%E4%BB%85%E5%8F%AF%E8%A2%AB%E5%8F%AF%E5%8F%98%E7%A7%9F%E5%80%9F(mutably%20borrowed)%E4%B8%80%E6%AC%A1%EF%BC%8C%E7%84%B6%E5%90%8E%E6%9C%89%E4%B8%94%E4%BB%85%E8%83%BD%E7%94%B1%E8%BF%99%E4%B8%AA%E7%A7%9F%E5%80%9F%E6%96%B9(borrower)%E8%AF%BB%E5%8F%96%E5%92%8C%E4%BF%AE%E6%94%B9%E3%80%82%3C/li%3E%3C/ol%3E%3Ch2%20id=%22Using-a-Bock-to-Restrict-Borrowing-Scope%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Using-a-Bock-to-Restrict-Borrowing-Scope%22%3E%C2%B6%3C/a%3EUsing%20a%20Bock%20to%20Restrict%20Borrowing%20Scope%3C/h2%3E%3Cp%3E%E5%BD%93%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%A7%9F%E5%80%9F%E7%BB%93%E6%9D%9F%E5%90%8E%EF%BC%8C%E5%AF%B9%E8%B1%A1%E5%AF%B9%E5%85%B6%E5%AE%83%E7%A7%9F%E5%80%9F%E5%8F%88%E5%8F%98%E5%BE%97%E5%8F%AF%E7%94%A8%E4%BA%86%E3%80%82%E4%BB%BB%E4%BD%95%E7%B1%BB%E5%9E%8B%E7%9A%84%E7%A7%9F%E5%80%9F%E9%83%BD%E5%8F%AF%E9%99%90%E5%88%B6%E5%9C%A8%E8%AF%AD%E5%8F%A5%E5%9D%97%E5%86%85%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eb%3C/span%3E%20=%20&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20a;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E*b%20+=%20%3Cspan%20class=%22number%22%3E1%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ec%3C/span%3E%20=%20&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20a;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E*c%20+=%20%3Cspan%20class=%22number%22%3E2%3C/span%3E;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E6%98%AF%E5%85%81%E8%AE%B8%E7%9A%84%EF%BC%8C%E5%9B%A0%E4%B8%BA%E7%A7%9F%E5%80%9F%E5%8F%91%E7%94%9F%E5%9C%A8%E7%AC%AC%E4%B8%89%E8%A1%8C%EF%BC%8C%E8%AF%AD%E5%8F%A5%E5%9D%97%E7%BB%93%E6%9D%9F%E5%90%8E%EF%BC%8C%E7%A7%9F%E5%80%9F%E4%B9%9F%E7%BB%93%E6%9D%9F%E4%BA%86%EF%BC%8C%E5%9B%A0%E6%AD%A4%E7%AC%AC7%E8%A1%8C%E7%9A%84%3Ccode%3Ea%3C/code%3E%E5%8F%AF%E4%BB%A5%E7%94%A8%E4%BA%8E%E5%85%B6%E5%AE%83%E7%A7%9F%E5%80%9F%E3%80%82%3C/p%3E%3Cp%3E%E7%B1%BB%E4%BC%BC%E5%9C%B0%EF%BC%8C%E5%AF%B9%E4%BA%8E%E5%87%BD%E6%95%B0%E4%B9%9F%E4%B8%80%E6%A0%B7%EF%BC%8C%E5%9C%A8%E5%87%BD%E6%95%B0%E7%BB%93%E6%9D%9F%E5%90%8E%EF%BC%8C%E5%AF%B9%E8%B1%A1%E5%86%8D%E6%AC%A1%E5%8F%98%E5%BE%97%E5%8F%AF%E7%94%A8%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E*b:%20&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E*b%20+=%20%3Cspan%20class=%22number%22%3E1%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20a);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ec%3C/span%3E%20=%20&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20a;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E*c%20+=%20%3Cspan%20class=%22number%22%3E2%3C/span%3E;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E7%A7%8D%E8%A7%84%E5%88%99%EF%BC%8C%E9%80%82%E7%94%A8%E4%BA%8ERust%E7%A1%AE%E4%BF%9D%E5%8F%AF%E4%BB%A5%E8%87%AA%E5%8A%A8%E5%9C%B0%E5%86%B3%E5%AE%9A%E5%86%85%E5%AD%98%E7%9A%84%E5%9B%9E%E6%94%B6%EF%BC%8C%E9%81%BF%E5%85%8D%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%E5%BC%95%E7%94%A8%EF%BC%9B%E8%BF%99%E7%A7%8D%E8%A7%84%E5%88%99%E5%85%81%E8%AE%B8Rust%E5%AE%9E%E7%8E%B0%E6%97%A0%E6%95%B0%E6%8D%AE%E7%AB%9E%E4%BA%89(data-race-free)%E7%9A%84%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E3%80%82%3C/p%3E%3Ch2%20id=%22The-Need-of-Lifetime-Specifiers-for-Returned-References%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#The-Need-of-Lifetime-Specifiers-for-Returned-References%22%3E%C2%B6%3C/a%3EThe%20Need%20of%20Lifetime%20Specifiers%20for%20Returned%20References%3C/h2%3E%3Cp%3E%E5%85%88%E7%9C%8B%E8%BF%99%E6%AE%B5%E4%BB%A3%E7%A0%81%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ev1%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22number%22%3E11u8%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eresult%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ev2%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22number%22%3E33u8%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eresult%20=%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_x1%3C/span%3E:%20&amp;amp;%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E&amp;gt;%20=%20&amp;amp;v1;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_x2%3C/span%3E:%20&amp;amp;%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E&amp;gt;%20=%20&amp;amp;v2;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_x1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20*result);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E4%BC%9A%E8%BE%93%E5%87%BA%EF%BC%9A%E2%80%9C%3Ccode%3E[11,%2022]%3C/code%3E%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%8F%98%E9%87%8F%3Ccode%3Ev1%3C/code%3E%E5%92%8C%3Ccode%3Ev2%3C/code%3E%E5%90%84%E8%87%AA%E6%8B%A5%E6%9C%89vector%E3%80%82%E6%8E%A5%E7%9D%80%E8%A2%AB%E4%B8%A4%E4%B8%AA%E5%BC%95%E7%94%A8borrowed%E4%BA%86%EF%BC%8C%E5%88%86%E5%88%AB%E8%A2%AB%3Ccode%3E_x1%3C/code%3E%E5%92%8C%3Ccode%3E_x2%3C/code%3E%E6%8B%A5%E6%9C%89%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%9C%A8%E7%AC%AC7%E8%A1%8C%E5%90%8E%EF%BC%8C%3Ccode%3E_x1%3C/code%3E%E7%A7%9F%E5%80%9F%E4%BA%86%E5%8F%98%E9%87%8F%3Ccode%3Ev1%3C/code%3E%E6%8B%A5%E6%9C%89%E7%9A%84vector%EF%BC%8C%3Ccode%3E_x2%3C/code%3E%E7%A7%9F%E5%80%9F%E4%BA%86%E5%8F%98%E9%87%8F%3Ccode%3Ev2%3C/code%3E%E6%8B%A5%E6%9C%89%E7%9A%84vector%E3%80%82%E8%BF%99%E6%98%AF%E8%A2%AB%E5%85%81%E8%AE%B8%E7%9A%84%EF%BC%8C%E5%9B%A0%E4%B8%BA%3Ccode%3E_x1%3C/code%3E%E5%9C%A8%3Ccode%3Ev1%3C/code%3E%E4%B9%8B%E5%90%8E%E5%A3%B0%E6%98%8E%EF%BC%8C%3Ccode%3E_x2%3C/code%3E%E5%9C%A8%3Ccode%3Ev2%3C/code%3E%E4%B9%8B%E5%90%8E%E5%A3%B0%E6%98%8E%EF%BC%8C%E8%BF%99%E4%BA%9B%E5%BC%95%E7%94%A8%E6%AF%94%E5%AE%83%E4%BB%AC%E7%A7%9F%E5%80%9F%E5%AF%B9%E8%B1%A1%E5%AD%98%E6%B4%BB%E6%97%B6%E9%97%B4%E7%9F%AD%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E7%AC%AC%E5%85%AB%E8%A1%8C%EF%BC%8C%E6%9C%89%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%A1%A8%E8%BE%BE%E5%BC%8F%3Ccode%3E_x1%3C/code%3E%E3%80%82%E5%9B%A0%E4%B8%BA%E5%AE%83%E6%98%AF%E8%AF%AD%E5%8F%A5%E5%9D%97%E7%9A%84%E6%9C%80%E5%90%8E%E8%A1%A8%E8%BE%BE%E5%BC%8F%EF%BC%8C%E8%AF%A5%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%80%BC%E6%88%90%E4%B8%BA%E8%AF%AD%E5%8F%A5%E7%9A%84%E5%80%BC%EF%BC%8C%E5%9B%A0%E6%AD%A4%E8%AF%A5%E5%80%BC%E8%A2%AB%E7%94%A8%E6%9D%A5%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8F%98%E9%87%8F%3Ccode%3Eresult%3C/code%3E%E3%80%82%E8%AF%A5%E5%80%BC%E6%98%AF%E4%B8%80%E4%B8%AA%E6%8C%87%E5%90%91%3Ccode%3Ev1%3C/code%3E%E7%9A%84%E5%BC%95%E7%94%A8%EF%BC%8C%3Ccode%3Eresult%3C/code%3E%E5%8F%98%E9%87%8F%E7%A7%9F%E5%80%9F%E4%BA%86vector%E3%80%82%E8%BF%99%E6%98%AF%E8%A2%AB%E5%85%81%E8%AE%B8%E7%9A%84%EF%BC%8C%E5%9B%A0%E4%B8%BA%3Ccode%3Eresult%3C/code%3E%E7%9A%84%E5%A3%B0%E6%98%8E%E5%9C%A8%3Ccode%3Ev1%3C/code%3E%E4%B9%8B%E5%90%8E%EF%BC%8C%E5%9B%A0%E6%AD%A4%E5%8F%AF%E4%BB%A5%E7%A7%9F%E5%80%9F%3Ccode%3Ev1%3C/code%3E%E6%8B%A5%E6%9C%89%E7%9A%84%E5%AF%B9%E8%B1%A1%E3%80%82%3C/p%3E%3Cp%3E%E7%8E%B0%E5%9C%A8%EF%BC%8C%E5%B0%8F%E5%B0%8F%E7%9A%84%E6%94%B9%E5%8A%A8%EF%BC%9A%E5%9C%A8%E7%AC%AC%E5%85%AB%E8%A1%8C%E6%9B%BF%E6%8D%A2&amp;quot;1&amp;quot;%E5%92%8C&amp;quot;2&amp;quot;%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ev1%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22number%22%3E11u8%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eresult%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ev2%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22number%22%3E33u8%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20result%20=%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_x1%3C/span%3E:%20&amp;amp;%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E&amp;gt;%20=%20&amp;amp;v1;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_x2%3C/span%3E:%20&amp;amp;%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E&amp;gt;%20=%20&amp;amp;v2;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20_x2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20*result);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E4%BC%9A%E4%BA%A7%E7%94%9F%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%EF%BC%9A%E2%80%9C%3Ccode%3Ev2%3C/code%3E%20does%20not%20live%20long%20enough%E2%80%9D%E3%80%82%E5%9B%A0%E4%B8%BA%3Ccode%3Eresult%3C/code%3E%E7%9A%84%E5%80%BC%E6%9D%A5%E8%87%AA%E4%BA%8E%3Ccode%3E_x2%3C/code%3E%E8%A1%A8%E8%BE%BE%E5%BC%8F%EF%BC%8C%E7%94%B1%E4%BA%8E%3Ccode%3E_x2%3C/code%3E%E7%A7%9F%E5%80%9F%E4%BA%86%3Ccode%3Ev2%3C/code%3E%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E6%89%80%E4%BB%A5%3Ccode%3Eresult%3C/code%3E%E7%A7%9F%E5%80%9F%E4%BA%86vector%E3%80%82%E5%9B%A0%E4%B8%BA%3Ccode%3Eresult%3C/code%3E%E5%9C%A8%3Ccode%3Ev2%3C/code%3E%E4%B9%8B%E5%89%8D%E5%A3%B0%E6%98%8E%EF%BC%8C%E5%9B%A0%E6%AD%A4%E4%B8%8D%E8%83%BD%E7%A7%9F%E5%80%9F%E5%AE%83%E7%9A%84%E5%AF%B9%E8%B1%A1%E3%80%82%3C/p%3E%3Cp%3ERust%E7%BC%96%E8%AF%91%E5%99%A8%E8%87%B4%E5%8A%9B%E4%BA%8E%E8%BF%99%E7%A7%8D%E6%8E%A8%E7%90%86%E7%9A%84%E9%83%A8%E5%88%86%E7%A7%B0%E4%BD%9C%E2%80%9C%E7%A7%9F%E5%80%9F%E6%A3%80%E6%9F%A5%EF%BC%8C%3Cstrong%3Eborrow%20checker%3C/strong%3E%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E7%8E%B0%E5%9C%A8%EF%BC%8C%E8%AE%A9%E6%88%91%E4%BB%AC%E5%B0%9D%E8%AF%95%E8%BD%AC%E6%8D%A2%E5%89%8D%E9%9D%A2%E4%B8%A4%E4%B8%AA%E4%BB%A3%E7%A0%81%EF%BC%8C%E5%B0%86%E5%86%85%E9%83%A8%E8%AF%AD%E5%8F%A5%E8%BD%AC%E6%8D%A2%E4%B8%BA%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E3%80%82%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8F%98%E4%B8%BA%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ev1%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22number%22%3E118%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eresult%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ev2%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22number%22%3E33u8%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Efunc%3C/span%3E(_x1:%20&amp;amp;%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E&amp;gt;,%20_x2:%20&amp;amp;%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E&amp;gt;)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20&amp;amp;%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20_x1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20result%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Efunc%3C/span%3E(&amp;amp;v1,%20&amp;amp;v2);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20*result);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%AC%AC%E4%BA%8C%E4%B8%AA%E5%8F%98%E4%B8%BA%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ev1%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22number%22%3E11u8%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eresult%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ev2%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22number%22%3E33u8%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Efunc%3C/span%3E(_x1:%20&amp;amp;%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E&amp;gt;,%20_x2:%20&amp;amp;%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E&amp;gt;)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20&amp;amp;%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20_x2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20result%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Efunc%3C/span%3E(&amp;amp;v1,%20&amp;amp;v2);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20*result);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%B8%A4%E8%80%85%E5%94%AF%E4%B8%80%E4%B8%8D%E5%90%8C%E7%9A%84%E6%98%AF%3Ccode%3Efunc%3C/code%3E%E5%87%BD%E6%95%B0%E4%BD%93%E3%80%82%3C/p%3E%3Cp%3E%E6%A0%B9%E6%8D%AE%E4%B9%8B%E5%89%8D%E7%9A%84%E8%A7%84%E5%88%99%EF%BC%8C%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%A8%8B%E5%BA%8F%E7%9C%8B%E8%B5%B7%E6%9D%A5%E6%98%AF%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%8C%E7%AC%AC%E4%BA%8C%E4%B8%AA%E4%B8%8D%E5%90%88%E6%B3%95%E3%80%82%E4%B8%A4%E4%B8%AA%3Ccode%3Efunc%3C/code%3E%E5%87%BD%E6%95%B0%E6%9C%AC%E8%BA%AB%E6%98%AF%E5%90%88%E6%B3%95%E7%9A%84%E3%80%82%E4%BD%86borrow%20checker%E4%BC%9A%E6%9F%A5%E6%89%BE%E5%AE%83%E4%BB%AC%E4%B8%8D%E5%85%BC%E5%AE%B9%E7%9A%84%E5%85%B7%E4%BD%93%E7%94%A8%E6%B3%95%E3%80%82%3C/p%3E%3Cp%3E%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%E7%9A%84%E5%8F%82%E6%95%B0%E8%BE%B9%E7%95%8C%E4%BD%BF%E7%94%A8traits%EF%BC%8C%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E6%98%AF%E5%90%A6%E6%9C%89%E6%95%88%EF%BC%8C%E4%BE%9D%E6%8D%AE%E8%AF%A5%E5%87%BD%E6%95%B0%E4%BD%93%E7%9A%84%E5%86%85%E5%AE%B9%EF%BC%8C%E8%BF%99%E4%B8%8D%E6%98%AF%E5%A5%BD%E4%BA%8B%E3%80%82%E4%B8%BB%E8%A6%81%E6%98%AF%E5%9B%A0%E4%B8%BA%E4%B8%8D%E8%83%BD%E4%BB%8E%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF%E7%90%86%E8%A7%A3%E5%87%BA%E9%94%99%E7%9A%84%E5%8E%9F%E5%9B%A0%EF%BC%8C%E9%99%A4%E9%9D%9E%E4%BD%A0%E6%B8%85%E6%A5%9A%E5%87%BD%E6%95%B0%E4%BD%93%E7%9A%84%E5%86%85%E9%83%A8%E4%BB%A3%E7%A0%81%E3%80%82%E5%8F%A6%E4%B8%80%E4%B8%AA%E5%8E%9F%E5%9B%A0%E6%98%AF%EF%BC%8C%E5%87%BD%E6%95%B0%E8%A2%AB%E8%B0%83%E7%94%A8%E6%97%B6%EF%BC%8C%E5%A6%82%E6%9E%9C%E8%AF%A5%E5%87%BD%E6%95%B0%E4%BD%93%E5%86%85%E4%BB%BB%E6%84%8F%E8%B0%83%E7%94%A8%E4%BA%86%E5%85%B6%E5%AE%83%E5%87%BD%E6%95%B0%EF%BC%8C%E7%A1%AE%E4%BF%9D%3Ccode%3Emain%3C/code%3E%E5%87%BD%E6%95%B0%E6%98%AF%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%8Cborrow%20checker%E9%9C%80%E8%A6%81%E5%88%86%E6%9E%90%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%89%80%E6%9C%89%E5%87%BD%E6%95%B0%E3%80%82%E8%BF%99%E7%A7%8D%E6%95%B4%E4%B8%AA%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%88%86%E6%9E%90%E5%B8%A6%E6%9D%A5%E4%BA%86%E8%BF%87%E5%BA%A6%E7%9A%84%E5%A4%8D%E6%9D%82%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E7%B1%BB%E4%BC%BC%E4%BA%8E%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%EF%BC%8C%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%E5%BC%95%E7%94%A8%E7%9A%84%E5%87%BD%E6%95%B0%EF%BC%8C%E5%BF%85%E9%A1%BB%E5%9C%A8%E5%87%BD%E6%95%B0%E7%AD%BE%E5%90%8D%E9%98%88%E5%B0%86borrow-checking%E9%9A%94%E7%A6%BB%EF%BC%81%E5%87%BD%E6%95%B0%E7%9A%84borrow-check%EF%BC%8C%E4%BB%85%E8%80%83%E8%99%91%E7%AD%BE%E5%90%8D%EF%BC%8C%E5%87%BD%E6%95%B0%E4%BD%93%EF%BC%8C%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E7%9A%84%E7%AD%BE%E5%90%8D%EF%BC%8C%E8%80%8C%E4%B8%8D%E9%9C%80%E8%A6%81%E8%80%83%E8%99%91%E5%87%BD%E6%95%B0%E4%BD%93%E8%B0%83%E7%94%A8%E5%85%B6%E5%AE%83%E5%87%BD%E6%95%B0%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%89%8D%E9%9D%A2%E7%9A%84%E4%B8%A4%E4%B8%AA%E7%A8%8B%E5%BA%8F%E9%83%BD%E4%BC%9A%E5%87%BA%E7%8E%B0%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%EF%BC%9A%E2%80%9Cmissing%20lifetime%20specifier%E2%80%9D%E3%80%82%E2%80%9C%E5%A3%B0%E6%98%8E%E5%91%A8%E6%9C%9F%E6%8C%87%E7%A4%BA%E5%99%A8%EF%BC%8C%3Cstrong%3Elifetime%20specifier%3C/strong%3E%E2%80%9D%E6%98%AF%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E7%AD%BE%E5%90%8D%E7%9A%84%E4%B8%80%E4%B8%AA%E8%A3%85%E9%A5%B0%EF%BC%8C%E5%AE%83%E5%85%81%E8%AE%B8borrow%20checker%E5%AF%B9%E5%87%BD%E6%95%B0%E4%BD%93%E5%92%8C%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E5%88%86%E7%A6%BB%E6%A3%80%E6%9F%A5%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8D%E7%AE%A1%E6%80%8E%E6%A0%B7%EF%BC%8C%E5%87%BD%E6%95%B0%E6%88%96%E8%AF%AD%E5%8F%A5%E4%BD%93%E7%9A%84%E7%A7%9F%E5%80%9F%E8%A1%8C%E4%B8%BA%E5%BA%94%E8%AF%A5%E6%98%AF%E2%80%9C%E5%88%B0%E6%AD%A4%E4%B8%BA%E6%AD%A2%E2%80%9D%EF%BC%8C%E4%B8%8D%E5%BA%94%E8%AF%A5%E5%86%8D%E5%B0%86%E5%AE%83%E8%BF%9B%E4%B8%80%E6%AD%A5%E4%BC%A0%E9%80%92%E7%BB%99%E5%85%B6%E5%AE%83%E5%87%BD%E6%95%B0%E6%88%96%E8%A1%A8%E8%BE%BE%E5%BC%8F%EF%BC%8C%E4%BB%A5%E9%81%BF%E5%85%8D%E5%B8%A6%E6%9D%A5%E4%B8%8D%E5%BF%85%E8%A6%81%E7%9A%84%E5%89%AF%E4%BD%9C%E7%94%A8%EF%BC%8C%E6%9C%AA%E7%9F%A5%E7%9A%84%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF%E3%80%82%3C/p%3E%3Ch2%20id=%22Usage-and-Meaning-of-Lifetime-Specifiers%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Usage-and-Meaning-of-Lifetime-Specifiers%22%3E%C2%B6%3C/a%3EUsage%20and%20Meaning%20of%20Lifetime%20Specifiers%3C/h2%3E%3Cp%3E%E8%AE%A8%E8%AE%BA%E5%88%B0%E5%87%BD%E6%95%B0%E7%9A%84%E8%B0%83%E7%94%A8%E5%92%8C%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%EF%BC%8C%E4%B8%8B%E9%9D%A2%E6%98%AF%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E4%BE%8B%E5%AD%90%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Efunc%3C/span%3E(v1:%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Eu32%3C/span%3E&amp;gt;,%20v2:%20&amp;amp;%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Ebool%3C/span%3E&amp;gt;)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Es%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;Hello&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%9C%A8%E4%BB%BB%E4%BD%95Rust%E5%87%BD%E6%95%B0%E5%86%85%EF%BC%8C%E4%BB%85%E5%8F%AF%E4%BB%A5%E5%8F%82%E8%80%83%E7%9A%84%E6%9C%89%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E6%8B%A5%E6%9C%89%E7%9A%84%E5%AF%B9%E8%B1%A1(%3Ccode%3Ev1%3C/code%3E%E6%8B%A5%E6%9C%89%E7%9A%84vector)%EF%BC%9B%3C/li%3E%3Cli%3E%E6%9C%AC%E5%9C%B0%E5%8F%98%E9%87%8F%E6%8B%A5%E6%9C%89%E7%9A%84%E5%AF%B9%E8%B1%A1(%3Ccode%3Es%3C/code%3E%E6%8B%A5%E6%9C%89%E7%9A%84%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2)%EF%BC%9B%3C/li%3E%3Cli%3E%E4%B8%B4%E6%97%B6%E5%AF%B9%E8%B1%A1(%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%A1%A8%E8%BE%BE%E5%BC%8F%3Ccode%3E&amp;quot;Hello&amp;quot;.to_string()%3C/code%3E)%EF%BC%9B%3C/li%3E%3Cli%3E%E9%9D%99%E6%80%81%E5%AF%B9%E8%B1%A1(%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AD%97%E9%9D%A2%E9%87%8F%3Ccode%3E&amp;quot;Hello&amp;quot;%3C/code%3E)%EF%BC%9B%3C/li%3E%3Cli%3E%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E7%A7%9F%E5%80%9F%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E7%94%B1%E9%A2%84%E5%85%88%E5%AD%98%E5%9C%A8%E7%9A%84%E6%9F%90%E4%BA%9B%E5%8F%98%E9%87%8F%E6%8B%A5%E6%9C%89%EF%BC%8C%E5%8F%91%E7%94%9F%E5%9C%A8%E5%BD%93%E5%89%8D%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E5%A4%84(%3Ccode%3Ev2%3C/code%3E%E7%A7%9F%E5%80%9F%E8%BF%87%E6%9D%A5%E7%9A%84%E5%AF%B9%E8%B1%A1)%E3%80%82%3C/li%3E%3C/ul%3E%3Cp%3E%E5%BD%93%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%E5%BC%95%E7%94%A8%EF%BC%8C%E8%BF%99%E4%B8%AA%E5%BC%95%E7%94%A8%E7%9A%84%E5%AF%B9%E8%B1%A1%E4%B8%8D%E8%83%BD%E6%8E%A8%E6%96%AD%E6%98%AF%E7%94%B1%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E6%8B%A5%E6%9C%89%EF%BC%8C%E8%BF%98%E6%98%AF%E7%94%B1%E6%9C%AC%E5%9C%B0%E5%8F%98%E9%87%8F%E6%8B%A5%E6%9C%89%EF%BC%8C%E8%BF%98%E6%98%AF%E7%94%B1%E4%B8%B4%E6%97%B6%E5%AF%B9%E8%B1%A1%E6%8B%A5%E6%9C%89%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%BD%93%E5%87%BD%E6%95%B0return%E6%97%B6%EF%BC%8C%E6%9C%AC%E5%9C%B0%E5%8F%98%E9%87%8F%EF%BC%8C%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%EF%BC%8C%E4%B8%B4%E6%97%B6%E5%8F%98%E9%87%8F%E9%83%BD%E4%BC%9A%E8%A2%AB%E9%94%80%E6%AF%81%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E8%BF%99%E4%B8%AA%E5%BC%95%E7%94%A8%E5%B0%86%E8%A2%AB%E6%82%AC%E6%8C%82%E3%80%82%3C/p%3E%3Cp%3E%E7%9B%B8%E5%8F%8D%EF%BC%8C%E8%BF%99%E4%B8%AA%E5%BC%95%E7%94%A8%E5%8D%B4%E5%8F%AF%E4%BB%A5%E6%8E%A8%E6%96%AD%E5%BE%97%E7%9F%A5%E6%98%AF%E9%9D%99%E6%80%81%E5%AF%B9%E8%B1%A1%EF%BC%8C%E6%88%96%E6%98%AF%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E7%A7%9F%E5%80%9F%E7%9A%84%E5%AF%B9%E8%B1%A1%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E6%98%AF%E8%BF%99%E4%B8%A4%E7%A7%8D%E6%83%85%E5%86%B5%E7%9A%84%E4%B8%AD%E7%AC%AC%E4%B8%80%E7%A7%8D%E6%83%85%E5%86%B5%E7%9A%84%E7%A4%BA%E4%BE%8B(%E5%B0%BD%E7%AE%A1%E4%BB%A3%E7%A0%81%E5%9C%A8Rust%E4%B8%8D%E8%A2%AB%E5%85%81%E8%AE%B8)%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Efunc%3C/span%3E()%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20&amp;amp;%3Cspan%20class=%22type%22%3Estr%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22string%22%3E&amp;quot;Hello&amp;quot;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Efunc%3C/span%3E(v:%20&amp;amp;%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E&amp;gt;)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20&amp;amp;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;amp;v[%3Cspan%20class=%22number%22%3E3%3C/span%3E]%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3Eborrow%20checker%E4%BB%85%E5%AF%B9%E8%BF%94%E5%9B%9E%E5%80%BC%E7%9A%84%E5%BC%95%E7%94%A8%E6%84%9F%E5%85%B4%E8%B6%A3%EF%BC%8C%E8%AF%A5%E5%BC%95%E7%94%A8%E6%9C%89%E4%B8%A4%E7%A7%8D%EF%BC%9A%E6%8C%87%E5%90%91%E9%9D%99%E6%80%81%E5%AF%B9%E8%B1%A1%EF%BC%8C%E6%88%96%E6%8E%A5%E6%94%B6%E7%9A%84%E5%8F%82%E6%95%B0%E7%9A%84%E7%A7%9F%E5%80%9F%E5%AF%B9%E8%B1%A1%E3%80%82borrow%20checker%E9%9C%80%E8%A6%81%E7%9F%A5%E9%81%93%E5%93%AA%E4%BA%9B%E5%BC%95%E7%94%A8%E6%98%AF%E6%8C%87%E5%90%91%E9%9D%99%E6%80%81%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%93%AA%E4%BA%9B%E6%98%AF%E7%A7%9F%E5%80%9F%E7%9A%84%E5%8F%82%E6%95%B0%E5%AF%B9%E8%B1%A1%EF%BC%9B%E5%A6%82%E6%9E%9C%E6%9C%89%E5%87%A0%E4%B8%AA%E5%8F%82%E6%95%B0%E7%A7%9F%E5%80%9F%E5%AF%B9%E8%B1%A1%EF%BC%8C%E9%9C%80%E8%A6%81%E7%9F%A5%E9%81%93%E5%AE%83%E4%BB%AC%E4%B8%AD%E5%93%AA%E4%BA%9B%E7%A7%9F%E5%80%9F%E4%BA%86%E9%9D%9E%E9%9D%99%E6%80%81%E8%BF%94%E5%9B%9E%E7%9A%84%E5%BC%95%E7%94%A8%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8D%E5%B8%A6lifetime%20specifer%E7%9A%84%E5%87%BD%E6%95%B0%E7%AD%BE%E5%90%8D%E6%98%AF%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etrait%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ETr%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E(flag:%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E,%20b:%20&amp;amp;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%20c:%20(%3Cspan%20class=%22type%22%3Echar%3C/span%3E,%20&amp;amp;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E))%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20(&amp;amp;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E,%20&amp;amp;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%87%BD%E6%95%B0%E7%AD%BE%E5%90%8D%E5%8F%82%E6%95%B0%E4%B8%AD%E6%9C%89%E4%B8%A4%E4%B8%AA%E5%BC%95%E7%94%A8%EF%BC%8C%E8%BF%94%E5%9B%9E%E5%80%BC%E7%B1%BB%E5%9E%8B%E4%B9%9F%E5%8C%85%E5%90%AB%E6%9C%89%E4%B8%A4%E4%B8%AA%E5%BC%95%E7%94%A8%E3%80%82%E5%90%8E%E4%B8%A4%E4%B8%AA%E5%BC%95%E7%94%A8%E5%8F%AF%E8%83%BD%E6%8C%87%E5%90%91%E9%9D%99%E6%80%81%E5%AF%B9%E8%B1%A1%EF%BC%8C%E6%88%96%E8%80%85%E5%8F%82%E6%95%B0%3Ccode%3Eb%3C/code%3E%E7%9A%84%E7%A7%9F%E5%80%9F%E5%AF%B9%E8%B1%A1%EF%BC%8C%E6%88%96%E8%80%85%E5%8F%82%E6%95%B0%3Ccode%3Ec%3C/code%3E%E7%9A%84%E7%AC%AC%E4%BA%8C%E4%B8%AA%E5%AD%97%E6%AE%B5%E7%9A%84%E7%A7%9F%E5%80%9F%E5%AF%B9%E8%B1%A1%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%8C%87%E5%AE%9A%E4%BA%86%E4%B8%80%E7%A7%8D%E5%8F%AF%E8%83%BD%E7%9A%84%E6%83%85%E5%86%B5%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etrait%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ETr%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E&amp;lt;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E&amp;gt;(flag:%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E,%20b:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%20c:%20(%3Cspan%20class=%22type%22%3Echar%3C/span%3E,%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E))%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20(&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E,%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;static%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%92%8C%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%E7%94%A8%E6%B3%95%E4%B8%80%E6%A0%B7%EF%BC%8C%E5%9C%A8%E5%87%BD%E6%95%B0%E5%90%8D%E5%90%8E%E9%9D%A2%EF%BC%8C%E6%B7%BB%E5%8A%A0%E4%B8%80%E4%B8%AA%E5%8F%82%E6%95%B0%E5%88%97%E8%A1%A8%E3%80%82%E5%A6%82%E5%85%B6%E8%AF%B4%E6%98%AF%E4%B8%80%E4%B8%AA%E7%B1%BB%E5%9E%8B%E5%8F%82%E6%95%B0%EF%BC%8C%E5%AE%9E%E9%99%85%E4%B8%8A%E5%AE%83%E6%98%AF%E4%B8%80%E4%B8%AA%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%8C%87%E7%A4%BA%E5%99%A8(lifetime%20specifier)%E3%80%82%3C/p%3E%3Cp%3E%E4%BB%8E%E5%8F%A5%3Ccode%3E&amp;lt;&#39;a&amp;gt;%3C/code%3E%E6%98%AF%E4%B8%80%E4%B8%AA%E5%A3%B0%E6%98%8E%E3%80%82%E5%AE%83%E8%A1%A8%E7%A4%BA%EF%BC%9A%3Ccode%3E&amp;lt;&amp;lt;In%20this%20function%20signature,%20a%20lifetime%20specifier%20is%20used;%20its%20name%20is%20&amp;quot;a&amp;quot;&amp;gt;&amp;gt;%3C/code%3E%E3%80%82%E5%90%8D%E5%AD%97&amp;quot;a&amp;quot;%E6%98%AF%E4%BB%BB%E6%84%8F%E7%9A%84%E3%80%82%E5%AE%83%E7%AE%80%E5%8D%95%E8%A1%A8%E7%A4%BA%E6%89%80%E6%9C%89%E5%87%BA%E7%8E%B0%E7%9A%84%E6%83%85%E5%86%B5%EF%BC%8C%E2%80%9C%E5%8C%B9%E9%85%8D%E2%80%9D%E8%BF%99%E7%A7%8D%E5%87%BA%E7%8E%B0%E3%80%82%E5%AE%83%E7%B1%BB%E4%BC%BC%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%8F%82%E6%95%B0%EF%BC%8C%E4%B8%8D%E5%90%8C%E7%9A%84%E5%9C%B0%E6%96%B9%E5%9C%A8%E4%BA%8E%EF%BC%8C%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%8C%87%E7%A4%BA%E5%99%A8%E5%89%8D%E7%BC%80%E4%BD%BF%E7%94%A8%E5%8D%95%E5%BC%95%E5%8F%B7%EF%BC%8C%E5%8F%A6%E5%A4%96%EF%BC%8C%E6%8C%89%E7%85%A7%E7%BA%A6%E5%AE%9A%EF%BC%8C%E6%B3%9B%E5%9E%8B%E5%8F%82%E6%95%B0%E9%A6%96%E5%AD%97%E6%AF%8D%E4%BD%BF%E7%94%A8%E5%A4%A7%E5%86%99%EF%BC%8C%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%8C%87%E7%A4%BA%E5%99%A8%E4%BD%BF%E7%94%A8%E4%B8%80%E4%B8%AA%E5%B0%8F%E5%86%99%E5%AD%97%E6%AF%8D%EF%BC%8C%E5%A6%82a%EF%BC%8Cb%EF%BC%8Cc%EF%BC%8C%E2%80%A6%E3%80%82%3C/p%3E%3Cp%3E%E7%84%B6%E5%90%8E%EF%BC%8C%E5%87%BD%E6%95%B0%E7%AD%BE%E5%90%8D%E5%8C%85%E5%90%AB%E5%85%B6%E5%AE%83%E4%B8%89%E4%B8%AA%3Ccode%3E&#39;a%3C/code%3E%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%8C%87%E7%A4%BA%E5%99%A8%E7%9A%84%E5%87%BA%E7%8E%B0%EF%BC%8C%3Ccode%3Eb%3C/code%3E%E5%8F%82%E6%95%B0%E7%9A%84%E7%B1%BB%E5%9E%8B%E3%80%81%3Ccode%3Ec%3C/code%3E%E5%8F%82%E6%95%B0%E7%9A%84%E7%AC%AC%E4%BA%8C%E5%AD%97%E6%AE%B5%E7%9A%84%E7%B1%BB%E5%9E%8B%E3%80%81%E8%BF%94%E5%9B%9E%E5%80%BC%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%AD%97%E6%AE%B5%E7%9A%84%E7%B1%BB%E5%9E%8B%E3%80%82%E7%9B%B8%E5%8F%8D%EF%BC%8C%E8%BF%94%E5%9B%9E%E5%80%BC%E7%9A%84%E7%AC%AC%E4%B8%89%E4%B8%AA%E5%AD%97%E6%AE%B5%E7%B1%BB%E5%9E%8B%E7%94%A8%E4%BA%86%3Ccode%3Estatic%3C/code%3E%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%A0%87%E8%AF%86%E3%80%82%3C/p%3E%3Cp%3E%E8%AF%A5%3Ccode%3Ea%3C/code%3E%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%8C%87%E7%A4%BA%E5%99%A8%E7%9A%84%E7%94%A8%E6%B3%95%E8%A1%A8%E7%A4%BA%EF%BC%9A%E2%80%9C%E8%BF%94%E5%9B%9E%E5%80%BC%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%AD%97%E6%AE%B5%E7%A7%9F%E5%80%9F%E5%B7%B2%E5%AD%98%E5%9C%A8%E7%9A%84%3Ccode%3Eb%3C/code%3E%E5%8F%82%E6%95%B0%E5%92%8C%3Ccode%3Ec%3C/code%3E%E5%8F%82%E6%95%B0%E7%AC%AC%E4%BA%8C%E4%B8%AA%E5%AD%97%E6%AE%B5%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%9B%A0%E6%AD%A4%E5%AE%83%E5%AD%98%E6%B4%BB%E6%AF%94%E8%AF%A5%E5%AF%B9%E8%B1%A1%E8%A6%81%E7%9F%AD%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E7%9B%B8%E5%8F%8D%EF%BC%8C%3Ccode%3Estatic%3C/code%3E%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%8C%87%E7%A4%BA%E5%99%A8%E7%9A%84%E7%94%A8%E6%B3%95%E8%A1%A8%E7%A4%BA%EF%BC%9A%E2%80%9C%E8%BF%94%E5%9B%9E%E5%80%BC%E7%9A%84%E7%AC%AC%E4%B8%89%E4%B8%AA%E5%AD%97%E6%AE%B5%E6%8C%87%E5%90%91%E4%B8%80%E4%B8%AA%E9%9D%99%E6%80%81%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%9B%A0%E6%AD%A4%E5%AE%83%E5%8F%AF%E4%BB%A5%E5%AD%98%E6%B4%BB%E5%9C%A8%E4%BB%BB%E4%BD%95%E6%97%B6%E9%97%B4%EF%BC%8C%E7%94%9A%E8%87%B3%E5%92%8C%E6%95%B4%E4%B8%AA%E8%BF%9B%E7%A8%8B%E4%B8%80%E6%A0%B7%E9%95%BF%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E7%84%B6%EF%BC%8C%E8%BF%99%E4%BB%85%E6%98%AF%E4%B8%80%E7%A7%8D%E5%8F%AF%E8%83%BD%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%B3%A8%E8%A7%A3%EF%BC%8C%E4%B8%8B%E9%9D%A2%E6%98%AF%E5%8F%A6%E4%B8%80%E7%A7%8D%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etrait%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ETr%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E&amp;lt;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E&amp;gt;(flag:%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E,%20b:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%20c:%20(%3Cspan%20class=%22type%22%3Echar%3C/span%3E,%20&amp;amp;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E))%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20(&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;static%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E,%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%3Ccode%3Ec%3C/code%3E%E5%8F%82%E6%95%B0%E4%B8%8D%E5%B8%A6%E6%B3%A8%E8%A7%A3%EF%BC%8C%E5%BC%95%E7%94%A8%E7%9A%84%E5%AF%B9%E8%B1%A1%E4%B8%8D%E7%A7%9F%E5%80%9F%E7%BB%99%E8%BF%94%E5%9B%9E%E5%80%BC%E7%9A%84%E5%BC%95%E7%94%A8%EF%BC%8C%3C/p%3E%3Cp%3E%E8%BF%98%E6%9C%89%E5%8F%A6%E4%B8%80%E7%A7%8D%E5%8F%AF%E8%83%BD%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%B3%A8%E8%A7%A3%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etrait%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ETr%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E&amp;lt;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E,%20%3Cspan%20class=%22symbol%22%3E&amp;#x27;b%3C/span%3E,%20T1,%20T2&amp;gt;(flag:%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E,%20b:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20T1,%20c:%20(%3Cspan%20class=%22type%22%3Echar%3C/span%3E,%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;b%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E))%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20(&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;b%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E,%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20T2);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%E6%9C%89%E4%B8%A4%E4%B8%AA%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%8C%87%E7%A4%BA%E5%99%A8%E5%92%8C%E4%B8%A4%E4%B8%AA%E6%B3%9B%E5%9E%8B%E5%8F%82%E6%95%B0%E3%80%82%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%8F%82%E6%95%B0%3Ccode%3Ea%3C/code%3E%E6%8C%87%E5%AE%9A%E4%BA%86%E8%BF%94%E5%9B%9E%E5%80%BC%E7%9A%84%E7%AC%AC%E4%B8%89%E4%B8%AA%E5%AD%97%E6%AE%B5%E7%A7%9F%E5%80%9F%E4%BA%86%E5%8F%82%E6%95%B0%3Ccode%3Eb%3C/code%3E%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E4%BB%A5%E5%8F%8A%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%8F%82%E6%95%B0%3Ccode%3Eb%3C/code%3E%E6%8C%87%E5%AE%9A%E4%BA%86%E8%BF%94%E5%9B%9E%E5%80%BC%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%AD%97%E6%AE%B5%E7%A7%9F%E5%80%9F%E4%BA%86%E5%8F%82%E6%95%B0%3Ccode%3Ec%3C/code%3E%E7%9A%84%E7%AC%AC%E4%BA%8C%E4%B8%AA%E5%AD%97%E6%AE%B5%E7%9A%84%E5%AF%B9%E8%B1%A1%E3%80%82%E5%8F%A6%E5%A4%96%EF%BC%8C%E5%87%BD%E6%95%B0%E6%9C%89%E4%B8%A4%E4%B8%AA%E7%B1%BB%E5%9E%8B%E5%8F%82%E6%95%B0%3Ccode%3ET1%3C/code%3E%E5%92%8C%3Ccode%3ET2%3C/code%3E%EF%BC%8C%E4%B8%8D%E5%B8%A6trait%E8%BE%B9%E7%95%8C%E3%80%82%3C/p%3E%3Ch2%20id=%22Checking-the-Validity-of-Lifetime-Specifiers%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Checking-the-Validity-of-Lifetime-Specifiers%22%3E%C2%B6%3C/a%3EChecking%20the%20Validity%20of%20Lifetime%20Specifiers%3C/h2%3E%3Cp%3E%E7%BC%96%E8%AF%91%E4%BB%BB%E4%BD%95%E5%87%BD%E6%95%B0%E6%97%B6%EF%BC%8Cborrow%20checker%E6%9C%89%E4%B8%A4%E4%B8%AA%E5%B7%A5%E4%BD%9C%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E9%80%9A%E8%BF%87%E5%87%BD%E6%95%B0%E8%87%AA%E8%BA%AB%E5%92%8C%E5%87%BD%E6%95%B0%E4%BD%93%EF%BC%8C%E6%A3%80%E6%9F%A5%E5%87%BD%E6%95%B0%E7%AD%BE%E5%90%8D%E6%98%AF%E5%90%A6%E6%9C%89%E6%95%88%E3%80%82%3C/li%3E%3Cli%3E%E6%A3%80%E6%9F%A5%E5%87%BD%E6%95%B0%E4%BD%93%E6%98%AF%E5%90%A6%E5%90%88%E6%B3%95%EF%BC%8C%E7%BB%9F%E8%AE%A1%E8%AF%A5%E5%87%BD%E6%95%B0%E8%A2%AB%E8%B0%83%E7%94%A8%E6%AC%A1%E6%95%B0%E3%80%82%3C/li%3E%3C/ul%3E%3Cp%3E%E6%9C%AC%E5%B0%8F%E8%8A%82%EF%BC%8C%E5%85%88%E7%9C%8B%E7%AC%AC%E4%B8%80%E7%A7%8D%E6%83%85%E5%86%B5%E3%80%82%3C/p%3E%3Cp%3E%E5%A6%82%E6%9E%9C%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E5%80%BC%E6%B2%A1%E6%9C%89%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B%EF%BC%8Cborrow%20checker%E4%B8%8D%E5%81%9A%E4%BB%BB%E4%BD%95%E5%A4%84%E7%90%86%E3%80%82%3C/p%3E%3Cp%3E%E5%90%A6%E5%88%99%EF%BC%8C%E6%AF%8F%E4%B8%AA%E8%BF%94%E5%9B%9E%E5%80%BC%E5%BC%95%E7%94%A8%EF%BC%8C%E5%BF%85%E9%A1%BB%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E6%9C%89%E6%AD%A3%E7%A1%AE%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%8C%87%E7%A4%BA%E5%99%A8(lifetime%20specifier)%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E6%A0%B7%E4%B8%80%E4%B8%AA%E6%8C%87%E7%A4%BA%E5%99%A8(specifier)%E5%8F%AF%E4%BB%A5%E6%98%AF%E2%80%9C%3Ccode%3E&#39;static%3C/code%3E%E2%80%9D%E3%80%82%E8%BF%99%E7%A7%8D%E6%83%85%E5%86%B5%EF%BC%8C%E5%BC%95%E7%94%A8%E5%BF%85%E9%A1%BB%E6%8C%87%E5%90%91%E4%B8%80%E4%B8%AA%E9%9D%99%E6%80%81%E5%AF%B9%E8%B1%A1%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estatic%3C/span%3E%20FOUR:%20%3Cspan%20class=%22type%22%3Eu8%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E4%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E()%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20(%3Cspan%20class=%22type%22%3Ebool%3C/span%3E,%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;static%3C/span%3E%20%3Cspan%20class=%22type%22%3Eu8%3C/span%3E,%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;static%3C/span%3E%20%3Cspan%20class=%22type%22%3Estr%3C/span%3E,%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;static%3C/span%3E%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20(%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E,%20&amp;amp;FOUR,%20%3Cspan%20class=%22string%22%3E&amp;quot;Hello&amp;quot;%3C/span%3E,%20&amp;amp;%3Cspan%20class=%22number%22%3E3.14%3C/span%3E)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E().%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20*%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E().%3Cspan%20class=%22number%22%3E1%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E().%3Cspan%20class=%22number%22%3E2%3C/span%3E,%20*%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E().%3Cspan%20class=%22number%22%3E3%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E4%BC%9A%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C%3Ccode%3Etrue%204%20Hello%203.14%3C/code%3E%E2%80%9D%E3%80%82%E8%AF%A5%E7%A8%8B%E5%BA%8F%E6%98%AF%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%8C%E5%9B%A0%E4%B8%BA%E4%B8%89%E4%B8%AA%E8%BF%94%E5%9B%9E%E5%80%BC%E7%9A%84%E5%BC%95%E7%94%A8%E9%83%BD%E6%98%AF%E9%9D%99%E6%80%81%E5%AF%B9%E8%B1%A1%E3%80%82%3C/p%3E%3Cp%3E%E7%9B%B8%E5%8F%8D%EF%BC%8C%E4%B8%8B%E9%9D%A2%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E(n:%20&amp;amp;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;static%3C/span%3E%20%3Cspan%20class=%22type%22%3Eu8%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3En%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20*%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(&amp;amp;%3Cspan%20class=%22number%22%3E12%3C/span%3E));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%B0%86%E4%BC%9A%E7%94%9F%E6%88%90%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%EF%BC%9A%E2%80%9Clifetime%20of%20reference%20outlives%20lifetime%20of%20borrowed%20content%E2%80%A6%E2%80%9D%E3%80%82%E8%BF%99%E6%98%AF%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%8C%E8%BF%94%E5%9B%9E%E5%80%BC%E4%B8%8D%E6%98%AF%E4%B8%80%E4%B8%AA%E6%8C%87%E5%90%91%E9%9D%99%E6%80%81%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%BC%95%E7%94%A8%EF%BC%9B%E5%AE%83%E5%AE%9E%E9%99%85%E4%B8%8A%E6%98%AF%E6%8E%A5%E6%94%B6%E5%8F%82%E6%95%B0%E7%9A%84%E5%80%BC%EF%BC%8C%E8%AF%A5%E8%BF%94%E5%9B%9E%E5%80%BC%E7%A7%9F%E5%80%9F%E4%BA%86%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E5%BC%95%E7%94%A8%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%90%8C%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E3%80%82%3C/p%3E%3Cp%3E%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%8C%87%E7%A4%BA%E5%99%A8%E5%8F%AF%E4%BB%A5%E5%AE%9A%E4%B9%89%E6%88%90%E5%88%97%E8%A1%A8%E7%9A%84%E5%BD%A2%E5%BC%8F%EF%BC%8C%E5%A6%82%E4%B8%8B%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E&amp;lt;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E,%20%3Cspan%20class=%22symbol%22%3E&amp;#x27;b%3C/span%3E&amp;gt;(x:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%20y:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;b%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20(&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;b%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E,%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E(y,%20%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E,%20x)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ej%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E13%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Er%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(&amp;amp;i,%20&amp;amp;j);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20*r.%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20r.%3Cspan%20class=%22number%22%3E1%3C/span%3E,%20*r.%3Cspan%20class=%22number%22%3E2%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C13%20true%2012%E2%80%9D%E3%80%82%E8%BF%99%E6%98%AF%E6%9C%89%E6%95%88%E7%9A%84%EF%BC%8C%E5%9B%A0%E4%B8%BAtuple%E4%B8%AD%E8%BF%94%E5%9B%9E%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%AD%97%E6%AE%B5%E5%BC%95%E7%94%A8%E7%9A%84%E6%97%B6%3Ccode%3Ey%3C/code%3E%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%80%BC%EF%BC%8C%E4%BB%A5%3Ccode%3Ey%3C/code%3E%E5%8F%82%E6%95%B0%E5%92%8C%E8%BF%94%E5%9B%9E%E5%80%BC%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%AD%97%E6%AE%B5%E6%9C%89%E5%90%8C%E6%A0%B7%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%8C%87%E7%A4%BA%E5%99%A8(lifetime%20specifier)%EF%BC%9B%E5%AE%83%E4%BB%AC%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%8C%87%E7%A4%BA%E5%99%A8%E9%83%BD%E6%98%AF%3Ccode%3E&#39;b%3C/code%3E%E3%80%82%E8%BF%94%E5%9B%9E%E5%80%BC%E7%9A%84%E7%AC%AC%E4%B8%89%E4%B8%AA%E5%AD%97%E6%AE%B5%E5%92%8C%E5%8F%82%E6%95%B0%3Ccode%3Ex%3C/code%3E%E4%B8%80%E6%A0%B7%E6%9C%89%E5%90%8C%E4%B8%80%E4%B8%AA%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%8C%87%E7%A4%BA%E5%99%A8%3Ccode%3E&#39;a%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E7%9B%B8%E5%8F%8D%EF%BC%8C%E4%B8%8B%E9%9D%A2%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E&amp;lt;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E,%20%3Cspan%20class=%22symbol%22%3E&amp;#x27;b%3C/span%3E&amp;gt;(x:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%20y:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;b%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20(&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;b%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E,%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E(x,%20%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E,%20y)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ej%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E13%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Er%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(&amp;amp;i,%20&amp;amp;j);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20*r.%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20r.%3Cspan%20class=%22number%22%3E1%3C/span%3E,%20*r.%3Cspan%20class=%22number%22%3E2%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%BC%9A%E4%BA%A7%E7%94%9F%E4%B8%A4%E4%B8%AA%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%EF%BC%8C%E4%B8%A4%E4%B8%AA%E9%94%99%E8%AF%AF%E9%83%BD%E6%98%AF%EF%BC%9A%E2%80%9Clifetime%20mismatch%E2%80%9D%E3%80%82%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E8%BF%94%E5%9B%9E%E5%80%BC%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%AD%97%E6%AE%B5%E5%92%8C%E7%AC%AC%E4%B8%89%E4%B8%AA%E5%AD%97%E6%AE%B5%E9%83%BD%E6%9C%89%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%8C%87%E7%A4%BA%E5%99%A8%EF%BC%8C%E4%BD%86%E4%B8%8D%E6%98%AF%E5%AF%B9%E5%BA%94%E5%AE%83%E4%BB%AC%E5%87%BD%E6%95%B0%E7%AD%BE%E5%90%8D%E3%80%82%3C/p%3E%3Cp%3E%E6%B3%A8%E6%84%8F%E5%88%B0%EF%BC%8C%E5%A4%9A%E4%B8%AA%E8%BF%94%E5%9B%9E%E5%AD%97%E6%AE%B5%E5%8F%AF%E8%83%BD%E4%BB%85%E7%94%A8%E4%BA%86%E4%B8%80%E4%B8%AA%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%8C%87%E7%A4%BA%E5%99%A8%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E&amp;lt;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E&amp;gt;(x:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%20y:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20(&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E,%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E(x,%20%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E,%20y)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ej%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E13%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Er%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(&amp;amp;i,%20&amp;amp;j);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20*r.%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20r.%3Cspan%20class=%22number%22%3E1%3C/span%3E,%20*r.%3Cspan%20class=%22number%22%3E2%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E9%87%8C%EF%BC%8C%3Ccode%3E&#39;b%3C/code%3E%E8%A2%AB%E6%9B%BF%E6%8D%A2%E4%B8%BA%3Ccode%3E&#39;a%3C/code%3E%E3%80%82%E4%BD%86%E5%91%B3%E9%81%93%E5%AE%8C%E5%85%A8%E4%B8%8D%E4%B8%80%E6%A0%B7%E3%80%82%3C/p%3E%3Cp%3E%E5%8E%9F%E6%9D%A5%E7%9A%84%E7%89%88%E6%9C%AC%E6%98%AF%EF%BC%8C%E5%8F%82%E6%95%B0%E5%88%97%E8%A1%A8%E6%8C%87%E7%A4%BA%E4%BA%86%E4%BC%9A%E6%9C%89%E4%B8%A4%E4%B8%AA%E7%8B%AC%E7%AB%8B%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%EF%BC%9B%E8%BF%99%E4%B8%AA%E7%89%88%E6%9C%AC%EF%BC%8C%E5%AE%83%E4%BB%AC%E5%85%B1%E4%BA%AB%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E4%B8%AA%E6%94%B9%E5%8A%A8%E5%AF%B9%E4%BA%8E%E7%A7%9F%E5%80%9F%E6%A3%80%E6%9F%A5%E5%99%A8(borrow%20checker)%E6%9D%A5%E8%AF%B4%E4%B8%8D%E7%AE%80%E5%8D%95%E3%80%82%E8%AE%A9%E6%88%91%E4%BB%AC%E8%80%83%E8%99%91%E4%B8%80%E4%B8%AA%E6%9B%B4%E5%A4%8D%E6%9D%82%E7%9A%84%E5%87%BD%E6%95%B0%E4%BD%93%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E&amp;lt;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E&amp;gt;(n:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%20x:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E&amp;gt;,%20y:%20&amp;amp;%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E&amp;gt;)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Eu8%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20n%20==%20%3Cspan%20class=%22number%22%3E0%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22keyword%22%3Ereturn%3C/span%3E%20&amp;amp;x[%3Cspan%20class=%22number%22%3E0%3C/span%3E];%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20n%20&amp;lt;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E%20&amp;#123;%20&amp;amp;x[%3Cspan%20class=%22number%22%3E1%3C/span%3E]%20&amp;#125;%20%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20&amp;#123;%20&amp;amp;x[%3Cspan%20class=%22number%22%3E2%3C/span%3E]%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%AF%A5%E5%87%BD%E6%95%B0%E6%98%AF%E6%9C%89%E6%95%88%E7%9A%84%E3%80%82%E5%87%BD%E6%95%B0%E4%BD%93%E6%9C%89%E4%B8%89%E4%B8%AA%E5%8F%AF%E8%83%BD%E7%9A%84%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%BF%94%E5%9B%9E%E5%80%BC%EF%BC%8C%E6%89%80%E6%9C%89%E8%A1%A8%E8%BE%BE%E5%BC%8F%E9%83%BD%E7%A7%9F%E5%80%9F%E4%BA%86%E5%8F%82%E6%95%B0%3Ccode%3Ex%3C/code%3E%E7%9A%84%E5%AF%B9%E8%B1%A1%E3%80%82%E8%BF%94%E5%9B%9E%E5%80%BC%E6%9C%89%E5%92%8C%E5%8F%82%E6%95%B0%E7%AD%89%E5%90%8C%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%EF%BC%8C%E6%89%80%E4%BB%A5%E6%BB%A1%E8%B6%B3borrow%20checker%E3%80%82%3C/p%3E%3Cp%3E%E7%9B%B8%E5%8F%8D%EF%BC%8C%E4%B8%8B%E9%9D%A2%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E&amp;lt;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E&amp;gt;(n:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%20x:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E&amp;gt;,%20y:%20&amp;amp;%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E&amp;gt;)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Eu8%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20n%20==%20%3Cspan%20class=%22number%22%3E0%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22keyword%22%3Ereturn%3C/span%3E%20&amp;amp;x[%3Cspan%20class=%22number%22%3E0%3C/span%3E];%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20n%20&amp;lt;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E%20&amp;#123;%20&amp;amp;x[%3Cspan%20class=%22number%22%3E1%3C/span%3E]%20&amp;#125;%20%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20&amp;#123;%20&amp;amp;y[%3Cspan%20class=%22number%22%3E2%3C/span%3E]%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%B8%80%E4%B8%AA%E5%8F%AF%E8%83%BD%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC%EF%BC%8C%E4%BC%9A%E6%98%AF%E8%A1%A8%E8%BE%BE%E5%BC%8F%3Ccode%3E&amp;amp;y[2]%3C/code%3E%EF%BC%8C%E8%AF%A5%E5%AF%B9%E8%B1%A1%E7%A7%9F%E5%80%9F%E8%87%AA%3Ccode%3Ey%3C/code%3E%EF%BC%8C%E8%BF%99%E4%B8%AA%E5%8F%82%E6%95%B0%E6%B2%A1%E6%9C%89%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%8C%87%E7%A4%BA%E5%99%A8%EF%BC%8C%E6%89%80%E4%BB%A5%E8%AF%A5%E4%BB%A3%E7%A0%81%E6%98%AF%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%E3%80%82%3C/p%3E%3Cp%3E%E5%8D%B3%E4%BD%BF%E4%B8%8B%E9%9D%A2%E4%BB%A3%E7%A0%81%E4%B9%9F%E6%98%AF%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E&amp;lt;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E&amp;gt;(x:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E&amp;gt;,%20y:%20&amp;amp;%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E&amp;gt;)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Eu8%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E%20&amp;#123;%20&amp;amp;x[%3Cspan%20class=%22number%22%3E0%3C/span%3E]%20&amp;#125;%20%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20&amp;#123;%20&amp;amp;y[%3Cspan%20class=%22number%22%3E0%3C/span%3E]%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%BD%93%E5%A4%84%E7%90%86%E6%95%B0%E6%8D%AE%E6%B5%81%E5%88%86%E6%9E%90%E6%97%B6%EF%BC%8C%E7%BC%96%E8%AF%91%E5%99%A8%E4%BC%9A%E6%8E%A2%E6%B5%8B%E5%88%B0%3Ccode%3Ey%3C/code%3E%E4%BB%8E%E4%B8%8D%E8%A2%AB%E8%BF%94%E5%9B%9E%E5%80%BC%E7%A7%9F%E5%80%9F%EF%BC%9B%E4%BD%86borrow%20checker%E5%9D%9A%E6%8C%81%E5%9B%A0%E4%B8%BA%3Ccode%3E&amp;amp;y[0]%3C/code%3E%E6%98%AF%E4%B8%80%E4%B8%AA%E5%8F%AF%E8%83%BD%E8%BF%94%E5%9B%9E%E5%80%BC%EF%BC%8C%E6%89%80%E4%BB%A5%E8%AF%A5%E6%AE%B5%E7%A8%8B%E5%BA%8F%E8%A2%AB%E8%AE%A4%E4%B8%BA%E6%98%AF%E6%97%A0%E6%95%88%E7%9A%84%E3%80%82%3C/p%3E%3Ch2%20id=%22Using-the-Lifetime-Specifiers-of-Invoked-Functions%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Using-the-Lifetime-Specifiers-of-Invoked-Functions%22%3E%C2%B6%3C/a%3EUsing%20the%20Lifetime%20Specifiers%20of%20Invoked%20Functions%3C/h2%3E%3Cp%3E%E4%B8%8A%E4%B8%80%E7%AB%A0%E8%8A%82%E7%9A%84%E5%BC%80%E5%A7%8B%E9%83%A8%E5%88%86%E8%AF%B4%E8%BF%87%EF%BC%8Cborrow%20checker%E6%9C%89%E4%B8%A4%E9%A1%B9%E5%B7%A5%E4%BD%9C%EF%BC%8C%E7%BC%96%E8%AF%91%E5%87%BD%E6%95%B0%E6%97%B6%E8%BF%9B%E8%A1%8C%E6%A3%80%E6%9F%A5%E5%87%BD%E6%95%B0%E4%BD%93%E6%98%AF%E5%90%A6%E6%9C%89%E6%95%88%EF%BC%8C%E7%BB%9F%E8%AE%A1%E5%87%BD%E6%95%B0%E4%BD%93%E5%86%85%E4%BB%BB%E6%84%8F%E8%A2%AB%E8%B0%83%E7%94%A8%E5%87%BD%E6%95%B0%E7%9A%84%E7%AD%BE%E5%90%8D%E3%80%82%3C/p%3E%3Cp%3E%E6%B2%BF%E7%94%A8%E4%B8%8A%E4%B8%80%E8%8A%82%E7%9A%84%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B%E3%80%82%E6%A0%B9%E6%8D%AE%E7%A7%9F%E5%80%9F%E7%9A%84%E8%A7%84%E5%88%99%EF%BC%8C%E2%80%9Cmissing%20lifetime%20specifier%E2%80%9D%E8%A1%A8%E7%A4%BA%E7%BC%BA%E5%B0%91lifetime%20specifier%EF%BC%8C%E6%88%91%E4%BB%AC%E5%B0%86%E5%8E%9F%E6%9D%A5%E7%9A%84%E5%8A%A0%E4%B8%8A%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%8C%87%E7%A4%BA%E5%99%A8%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ev1%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22number%22%3E11u8%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eresult%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ev2%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22number%22%3E33u8%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Efunc%3C/span%3E&amp;lt;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E&amp;gt;(_x1:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E&amp;gt;,%20_x2:%20&amp;amp;%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E&amp;gt;)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_x1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eresult%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Efunc%3C/span%3E(&amp;amp;v1,%20&amp;amp;v2);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20*result);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%AC%AC%E4%BA%8C%E4%B8%AA%E4%BE%8B%E5%AD%90%E6%94%B9%E4%B8%BA%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ev1%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22number%22%3E11u8%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eresult%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ev2%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22number%22%3E33u8%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Efunc%3C/span%3E&amp;lt;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E&amp;gt;(_x1:%20&amp;amp;%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E&amp;gt;,%20_x2:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E&amp;gt;)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_x2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eresult%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Efunc%3C/span%3E(&amp;amp;v1,%20&amp;amp;v2);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20*result);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%A8%8B%E5%BA%8F%E6%98%AF%E6%9C%89%E6%95%88%E7%9A%84%EF%BC%8C%E7%BB%93%E6%9E%9C%E4%BC%9A%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C%3Ccode%3E[11,%2022]%3C/code%3E%E2%80%9D%EF%BC%8C%E7%AC%AC%E4%BA%8C%E4%B8%AA%E4%BC%9A%E6%9C%89%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%EF%BC%9A%E2%80%9C%3Ccode%3Ev2%3C/code%3E%20does%20not%20live%20long%20enough%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%BA%E4%BB%80%E4%B9%88%3Ccode%3Efunc%3C/code%3E%E8%BF%99%E4%BA%9B%E5%86%99%E6%B3%95%E4%BC%9A%E4%BA%A7%E7%94%9F%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%EF%BC%8C%E5%89%8D%E9%9D%A2%E5%B0%8F%E8%8A%82%E5%B7%B2%E7%BB%8F%E8%A7%A3%E6%9E%90%E8%BF%87%E4%BA%86%E3%80%82%3C/p%3E%3Cp%3E%E8%AE%A9%E6%88%91%E4%BB%AC%E7%9C%8B%E7%9C%8B%3Ccode%3Emain%3C/code%3E%E5%87%BD%E6%95%B0%E5%9C%A8%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%A8%8B%E5%BA%8F%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C%E7%9A%84%E3%80%82%E5%BD%93%3Ccode%3Efunc%3C/code%3E%E8%A2%AB%E8%B0%83%E7%94%A8%EF%BC%8C%E5%AD%98%E6%B4%BB%3Ccode%3Ev1%3C/code%3E%E3%80%81%3Ccode%3Eresult%3C/code%3E%E5%92%8C%3Ccode%3Ev2%3C/code%3E%EF%BC%8C%E6%8C%89%E9%A1%BA%E5%BA%8F%E5%A3%B0%E6%98%8E%EF%BC%8C%E4%BB%A5%E5%8F%8A%3Ccode%3Ev1%3C/code%3E%E5%92%8C%3Ccode%3Ev2%3C/code%3E%E6%97%A9%E5%B7%B2%E8%A2%AB%E5%88%9D%E5%A7%8B%E5%8C%96%E3%80%82%3Ccode%3Efunc%3C/code%3E%E7%9A%84%E7%AD%BE%E5%90%8D%E8%AF%B4%E7%BB%93%E6%9E%9C%E5%80%BC%E5%92%8C%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8F%82%E6%95%B0%E6%9C%89%E7%9B%B8%E5%90%8C%E7%9A%84lifetime%20specifier%EF%BC%8C%E8%BF%99%E6%84%8F%E5%91%B3%E7%9D%80%3Ccode%3Eresult%3C/code%3E%E7%9A%84%E5%80%BC%E4%B8%8D%E4%BC%9A%E5%AD%98%E6%B4%BB%E5%BE%97%E6%AF%94%3Ccode%3Ev1%3C/code%3E%E9%95%BF%E3%80%82%E4%BB%A5%E5%8F%8A%EF%BC%8C%3Ccode%3Eresult%3C/code%3E%E5%9C%A8%3Ccode%3Ev1%3C/code%3E%E4%B9%8B%E5%90%8E%E5%A3%B0%E6%98%8E%EF%BC%8C%E5%9B%A0%E6%AD%A4%E5%AE%83%E4%BC%9A%E5%85%88%E4%BA%8E%3Ccode%3Ev1%3C/code%3E%E9%94%80%E6%AF%81%E3%80%82%3C/p%3E%3Cp%3E%E5%86%8D%E7%9C%8B%E7%9C%8B%E4%B8%BA%E4%BB%80%E4%B9%88%E7%AC%AC%E4%BA%8C%E6%AE%B5%E7%A8%8B%E5%BA%8F%E7%9A%84%3Ccode%3Emain%3C/code%3E%E5%87%BD%E6%95%B0%E6%98%AF%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%E3%80%82%E8%BF%99%E9%87%8C%EF%BC%8C%3Ccode%3Efunc%3C/code%3E%E7%9A%84%E7%AD%BE%E5%90%8D%E8%AF%B4%E8%BF%94%E5%9B%9E%E5%80%BC%E5%92%8C%E7%AC%AC%E4%BA%8C%E4%B8%AA%E5%8F%82%E6%95%B0%E6%9C%89%E7%9B%B8%E5%90%8C%E7%9A%84lifetime%20specifier%EF%BC%8C%E6%84%8F%E5%91%B3%E7%9D%80%3Ccode%3Eresult%3C/code%3E%E5%AD%98%E6%B4%BB%E4%B8%8D%E4%BC%9A%E6%AF%94%3Ccode%3Ev2%3C/code%3E%E9%95%BF%E3%80%82%E4%BD%86%3Ccode%3Eresult%3C/code%3E%E5%9C%A8%3Ccode%3Ev2%3C/code%3E%E4%B9%8B%E5%89%8D%E5%A3%B0%E6%98%8E%EF%BC%8C%E8%80%8C%E5%AE%83%E4%BC%9A%E5%9C%A8%E5%85%B6%E5%90%8E%E8%A2%AB%E9%94%80%E6%AF%81%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E6%98%AF%E5%9B%A0%E4%B8%BA%E5%8F%AA%E4%BD%BF%E7%94%A8%E4%BA%86%E4%B8%80%E4%B8%AAlifetime%20specifiter%EF%BC%8C%E4%B8%8B%E9%9D%A2%E6%94%B9%E4%B8%BA%E4%B8%A4%E4%B8%AA%E6%8C%87%E7%A4%BA%E5%99%A8%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E&amp;lt;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E,%20%3Cspan%20class=%22symbol%22%3E&amp;#x27;b%3C/span%3E&amp;gt;(x:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%20y:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;b%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20(&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;b%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E,%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20(x,%20%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E,%20y)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei1%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei2%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ej1%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E13%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ej2%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Er%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(&amp;amp;i1,%20&amp;amp;j1);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ei2%20=%20r.%3Cspan%20class=%22number%22%3E0%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ej2%20=%20r.%3Cspan%20class=%22number%22%3E2%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20*i2,%20r.%3Cspan%20class=%22number%22%3E1%3C/span%3E,%20*j2);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E6%89%93%E5%8D%B0%E2%80%9C12%20true%2013%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E7%9B%B8%E5%8F%8D%EF%BC%8C%E5%A6%82%E6%9E%9C%E4%BB%85%E7%94%A8%E4%B8%80%E4%B8%AAlifetime%20specifier%E6%97%B6%EF%BC%8C%E6%98%AF%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E&amp;lt;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E&amp;gt;(x:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%20y:%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20(&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E,%20&amp;amp;%3Cspan%20class=%22symbol%22%3E&amp;#x27;a%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E(x,%20%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E,%20y)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei1%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei2%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ej1%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E13%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ej2%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Er%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(&amp;amp;i1,%20&amp;amp;j1);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ei2%20=%20r.%3Cspan%20class=%22number%22%3E0%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ej2%20=%20r.%3Cspan%20class=%22number%22%3E2%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20*i2,%20r.%3Cspan%20class=%22number%22%3E1%3C/span%3E,%20*j2);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E4%BC%9A%E4%BA%A7%E7%94%9F%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%EF%BC%9A%E2%80%9C%3Ccode%3Ej1%3C/code%3E%20does%20not%20live%20long%20enough%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E8%BF%99%E4%B8%A4%E4%B8%AA%E7%89%88%E6%9C%AC%E4%B8%AD%EF%BC%8C%E5%87%BD%E6%95%B0%3Ccode%3Ef%3C/code%3E%E9%83%BD%E4%BC%9A%E6%8E%A5%E6%94%B6%3Ccode%3Ei1%3C/code%3E%E5%92%8C%3Ccode%3Ej1%3C/code%3E%E7%9A%84%E5%BC%95%E7%94%A8%EF%BC%8C%E9%A6%96%E5%85%88%E8%BF%94%E5%9B%9E%E5%8F%98%E9%87%8F%3Ccode%3Er%3C/code%3E%E5%AD%98%E5%82%A8%E7%9A%84%E5%80%BC%EF%BC%8C%E7%84%B6%E5%90%8E%E5%88%86%E5%88%AB%E5%9C%B0%E5%88%9D%E5%A7%8B%E5%8C%96%3Ccode%3Ei2%3C/code%3E%E5%92%8C%3Ccode%3Ej2%3C/code%3E%E5%8F%98%E9%87%8F%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%89%88%E6%9C%AC%E4%B8%AD%EF%BC%8C%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8F%82%E6%95%B0%E5%92%8C%E8%BF%94%E5%9B%9E%E5%80%BC%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%AD%97%E6%AE%B5%E6%8B%A5%E6%9C%89%E7%9B%B8%E5%90%8C%E7%9A%84lifetime%20specifier%EF%BC%8C%E8%BF%99%E5%AF%BC%E8%87%B4%E4%BA%86%3Ccode%3Ei2%3C/code%3E%E5%BF%85%E9%A1%BB%E5%AD%98%E6%B4%BB%E5%B0%91%E4%BA%8E%3Ccode%3Ei1%3C/code%3E%E3%80%82%E7%B1%BB%E4%BC%BC%E5%9C%B0%EF%BC%8C%3Ccode%3Ej2%3C/code%3E%E5%BF%85%E9%A1%BB%E5%AD%98%E6%B4%BB%E5%B0%91%E4%BA%8E%3Ccode%3Ej1%3C/code%3E%E3%80%82%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E5%8F%98%E9%87%8F%E7%9A%84%E5%A3%B0%E6%98%8E%E9%A1%BA%E5%BA%8F%E9%9C%80%E8%A6%81%E6%BB%A1%E8%B6%B3%E8%BF%99%E4%BA%9B%E8%A6%81%E6%B1%82%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%BA%8C%E4%B8%AA%E7%89%88%E6%9C%AC%EF%BC%8C%E7%94%B1%E4%BA%8E%E5%8F%AA%E6%9C%89%E4%B8%80%E4%B8%AAlifetime%20specifier%EF%BC%8C%E6%89%80%E4%BB%A5%3Ccode%3Ei2%3C/code%3E%E5%92%8C%3Ccode%3Ej2%3C/code%3E%E5%BF%85%E9%A1%BB%E5%AD%98%E6%B4%BB%E5%B0%91%E4%BA%8E%3Ccode%3Ei1%3C/code%3E%E5%92%8C%3Ccode%3Ej1%3C/code%3E%E3%80%82%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%3Ccode%3Ei2%3C/code%3E%E8%A2%AB%E5%A3%B0%E6%98%8E%E5%9C%A8%3Ccode%3Ej1%3C/code%3E%E5%89%8D%EF%BC%8C%E4%B8%8D%E8%83%BD%E6%BB%A1%E8%B6%B3%E8%BF%99%E4%BA%9B%E8%A6%81%E6%B1%82%E3%80%82%3C/p%3E" type="image"/>
    
    
    <category term="learning" scheme="https://galudisu.info/categories/learning/"/>
    
    
    <category term="rust" scheme="https://galudisu.info/tags/rust/"/>
    
  </entry>
  
  <entry>
    <title>rust基础入门[21] - Drops, Moves, and Copies</title>
    <link href="https://galudisu.info/2023/01/21/rust/beginning/chapter21_Drops,%20Moves,%20and%20Copies/"/>
    <id>https://galudisu.info/2023/01/21/rust/beginning/chapter21_Drops,%20Moves,%20and%20Copies/</id>
    <published>2023-01-21T07:50:46.000Z</published>
    <updated>2025-04-27T11:59:08.282Z</updated>
    
    <content type="html"><![CDATA[<p>本章覆盖有：</p><ul><li>为什么决定性的(deterministic)、隐式(implicit)的对象销毁是Rust的一大亮点</li><li>对象所有者(ownership)的概念</li><li>为什么自定义销毁可能有用，怎么创建</li><li>三种赋值语义：共享(share)、拷贝(copy)、移动(move)</li><li>为什么隐式共享对软件正确性是糟糕的</li><li>为什么对象的移动(move semantics)比起拷贝(copy semantics)可能有更好的性能</li><li>为什么某些类型需要拷贝(copy semantics)，某些不需要，怎么区分</li><li>为什么某些类型需要是不可复制的(non-cloneable)，怎么区分</li></ul><span id="more"></span><h2 id="Deterministic-Destruction"><a class="header-anchor" href="#Deterministic-Destruction">¶</a>Deterministic Destruction</h2><p>前面，我们看到有几种内存分配对象的方式，这些分配都是在stack和heap发生：</p><ul><li>临时表达式，分配在stack；</li><li>变量(包括数组)，分配在stack；</li><li>函数和闭包的参数，分配在stack；</li><li><code>Box</code>对象，引用分配在stack，引用的对象分配在heap；</li><li>动态字符串和集合(包括vector）,header分配在stack，数据分配在heap。</li></ul><p>对象“<strong>真实</strong>”的瞬时分配是很难预测的，因为它取决于编译器优化。因此，我们考虑“<strong>概念</strong>”上的瞬时分配情况。</p><p>概念上，当对应表达式第一次出现在代码时发生stack分配，因此：</p><ul><li>临时表达式，变量，数组在它们第一次出现在代码时被分配；</li><li>函数和闭包的参数，在函数/闭包被调用时被分配；</li><li><code>Box</code>对象，动态字符串，集合header，在代码第一出现时被分配。</li></ul><p>heap的当需要这些数据时，进行heap分配。因此：</p><ul><li><code>Box</code>对象的分配，由<code>Box::new</code>函数触发；</li><li>动态字符串的字符分配，在字符被添加到该字符串时触发；</li><li>集合内容的分配，出现在有数据被添加到集合时。</li></ul><p>上面这些跟大多数编程语言没不同之处。那么数据的销毁在什么时候发生？</p><p>概念上，在Rust中，当这些数据不再可被访问时，自动销毁。因此：</p><ul><li>临时表达式被回收，当它在语句的结束位置(即，在下一个<code>;</code>位置或当前scope的结束位置)；</li><li>变量(包括数组)被回收，当它在scope的声明结束；</li><li>函数/闭包的参数的回收，出现在函数/闭包体结束；</li><li><code>Box</code>对象的回收，在当前scope的声明结束；</li><li>动态字符串的字符被回收，出现在从字符串中删除该字符时，或者整个字符串删除时；</li><li>集合中的条目被回收，出现在从集合中删除该条目时，或者整个集合被删除时。</li></ul><p>这一概念使得Rust和大部分语言区分开来。任何语言都有临时对象或栈分配(stack-allocated)对象，这种对象是自动回收的。但堆分配(heap-allocated)对象的回收，不同语言各不相同。</p><p>在某些语言中，诸如Pascal，C，C++，heap上的对象通常仅能显式地调用类似<code>free</code>或<code>delete</code>这些函数进行回收。另一些语言，诸如Java，JavaScript，C+，Python，堆上的对象不可访问时，并没有立即进行回收，而是有一个定期的行程，用来查找heap不可达对象，并回收这些对象。这种机制称为“垃圾回收”，因为它类似城市的清理系统：它定期清理城镇，当有垃圾堆积。</p><p>因此，在C++和类似语言中，heap回收既是<code>决定性的，deterministic</code>，也是<code>显式的，explicit</code>。决定性的，因为它在源代码的定义位置，以及是显式的，因为它要求程序员编写指定的回收语句。决定性的好处在于，可能有更好的性能，程序员可能更好地控制。但显式的却不好，因为不能避免出现错误的回收，丑陋的bug结果。</p><p>相反，在Java和类似语言中，heap回收既是<code>非决定性的，non-deterministic</code>，也是<code>隐式的，implicit</code>。非决定性的，因为它出现未知的执行瞬时，以及是隐式的，因为它不需要指定回收语句。非决定性是糟糕的，但隐式的美好的。</p><p>区别于这两种技术，在Rust中，通常，heap的回收既是<code>决定性的，deterministic</code>，也是<code>隐式的，implicit</code>，这是Rust比起其它语言更大的优势。</p><p>这种可能性的实现，是因为遵循了基于“<code>所有者，ownership</code>”的概念，</p><h2 id="Ownership"><a class="header-anchor" href="#Ownership">¶</a>Ownership</h2><p>首先介绍术语“<strong><code>to own</code></strong>”。在计算机科学中，对于一个标识符或一个对象A，拥有(to own)对象B，意味着A可以对B进行回收，它有两个意义：</p><ul><li>Only A can deallocate B.</li><li>When A becomes unreachable, A must deallocate B.</li></ul><p>在Rust中没有显示的回收机制，因此这种定义可以复述为“A owns B means that B is deallocated  when and only when A becomes unreachable”。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">a</span> = <span class="number">3</span>;</span><br><span class="line">a = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">b</span> = <span class="built_in">vec!</span>[<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">55</span>];</span><br></pre></td></tr></table></figure><p>该程序，变量<code>a</code>拥有一个对象初始化值3，因为当<code>a</code>离开了它的scope，变成不可访问，该初始化值为3的对象被回收。我们也可以这样说“<code>a</code>是一个对象的所有者，它由值3初始化”。尽管，我们不能说“<code>a</code>拥有3”，因为3是一个值，不是对象；仅对象才能被拥有(owned)。在内存中，有很多对象值是3的，<code>a</code>拥有其中一个。在第二条语句中，该对象的值变为4；但它的拥有者没有变。</p><p>在最后一条语句中，<code>b</code>由一个5个元素的vector初始化。这个vector由一个头(header)和一个数据缓冲区(data buffer)；header的实现由一个结构体三个filed表示：一个执行data buffer的指针，两个数(capacity、len)；数据缓冲区包含5个条目，另外可能有额外的空间。这里我们可以说“<code>b</code>拥有vector的header，以及一个指针，该指针包含数据缓冲区的拥有者头(header)”。实际上，当<code>b</code>离开了它的scope，vector的头被回收；当vector的header被回收后，它包含的指针不可访问；当前的vector表示为一个空，因此缓冲区的条目被回收。</p><p>不是每个引用所有者是一个对象，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">a</span> = <span class="number">3</span>;</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">a_ref</span> = &amp;a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, a);</span><br></pre></td></tr></table></figure><p>这里的<code>a_ref</code>变量拥有一个引用，但这个引用什么都没有。实际上，在这个嵌入块的结束位置，<code>a_ref</code>变量离开了它的scope，该引用被回收，但引用对象，即这个包含值3的对象，没有立即被回收，因为它必须在最后一条语句打印输出。</p><p>为了确保每个对象自动回收，Rust中有一个简单规则，在每个执行的瞬时，每个对象有且仅能有一个“owner”。当这个owner被回收，该对象自身被回收。如果一个对象有几个owner，这个对象可能被回收几次，这是不被允许的。如果对象没有owner，该对象从不被回收，这种情况叫做“内存泄露，memory leak”。</p><h2 id="Destructors"><a class="header-anchor" href="#Destructors">¶</a>Destructors</h2><p>我们看到对象的创建有两步：给对象分配内存，初始化这个内存空间的值。对于复杂对象，初始化是如此复杂，通常需要使用一个函数实现。这个函数叫“构造器”，用来“构造”一个新的对象。</p><p>我们刚看到，当一个对象被回收，会发生一些复杂情况。如果在heap中一个对象引用另一个对象，一个级联(cascade)的回收可能会发生。因此，对象的“销毁”可能需要由一个函数处理，称作“destructor，焚烧炉，销毁装置”。</p><p>通常销毁器是属于标准库的一部分，但有时你可能需要在对象回收时做一些cleanup code操作，所以你需要写一个destructor。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">CommunicationChannel</span> &#123;</span><br><span class="line">    address: <span class="type">String</span>,</span><br><span class="line">    port: <span class="type">u16</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">Drop</span> <span class="keyword">for</span> <span class="title class_">CommunicationChannel</span> &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">drop</span>(&amp;<span class="keyword">mut</span> <span class="keyword">self</span>) &#123;</span><br><span class="line">        <span class="built_in">println!</span>(<span class="string">&quot;Closing port &#123;&#125;:&#123;&#125;&quot;</span>, <span class="keyword">self</span>.address, <span class="keyword">self</span>.port);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">CommunicationChannel</span> &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">create</span>(address: &amp;<span class="type">str</span>, port: <span class="type">u16</span>) <span class="punctuation">-&gt;</span> CommunicationChannel &#123;</span><br><span class="line">        <span class="built_in">println!</span>(<span class="string">&quot;Operning port &#123;&#125;:&#123;&#125;&quot;</span>, address, port);</span><br><span class="line">        CommunicationChannel &#123;</span><br><span class="line">            address: address.<span class="title function_ invoke__">to_string</span>(),</span><br><span class="line">            port: port,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">send</span>(&amp;<span class="keyword">self</span>, msg: &amp;<span class="type">str</span>) &#123;</span><br><span class="line">        <span class="built_in">println!</span>(<span class="string">&quot;Sent to &#123;&#125;:&#123;&#125; the message &#x27;&#123;&#125;&#x27;&quot;</span>, <span class="keyword">self</span>.address, <span class="keyword">self</span>.port, msg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">channel</span> = CommunicationChannel::<span class="title function_ invoke__">create</span>(<span class="string">&quot;usb4&quot;</span>, <span class="number">879</span>);</span><br><span class="line">channel.<span class="title function_ invoke__">send</span>(<span class="string">&quot;Message 1&quot;</span>);</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">channel</span> = CommunicationChannel::<span class="title function_ invoke__">create</span>(<span class="string">&quot;eth1&quot;</span>, <span class="number">12000</span>);</span><br><span class="line">channel.<span class="title function_ invoke__">send</span>(<span class="string">&quot;Message 2&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">channel.<span class="title function_ invoke__">send</span>(<span class="string">&quot;Message 3&quot;</span>);</span><br></pre></td></tr></table></figure><p>该程序将打印：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Operning port usb4:879</span><br><span class="line">Sent to usb4:879 the message &#x27;Message 1&#x27;</span><br><span class="line">Operning port eth1:12000</span><br><span class="line">Sent to eth1:12000 the message &#x27;Message 2&#x27;</span><br><span class="line">Closing port eth1:12000</span><br><span class="line">Sent to usb4:879 the message &#x27;Message 3&#x27;</span><br><span class="line">Closing port usb4:879</span><br></pre></td></tr></table></figure><p>第二条语句声明新的类型CommunicationChannel用于实现<code>Drop</code>。这个trait有一个特有的方法<code>drop</code>，它会在对象被回收时自动被调用，因此它是一个“destructor”。通常，给一个类型创建一个销毁器，为该类型实现这个<code>Drop</code>trait即可。因为任何没有被定义的trait，不能在程序外部实现。</p><p>第三条语句是一个语句块，为结构体定义了两个方法：<code>create</code>构造器，<code>send</code>方法。</p><p>最后是应用代码。创建了一个CommunicationChannel，这个创建会打印一行内容。接着调用了send方法，打印第二行内容。接着是内嵌语句块，创建了另一个channel，打印第三、四行内容。</p><p>嵌套语句块内的变量名跟存在的变量名相同，这会导致变量投影(shadow)。</p><p>接着嵌套语句结束。这发生率内部变量被销毁，因此它的<code>drop</code>方法被调用，于是打印第五行。</p><p>现在，嵌套语句块结束后，第一个变量再次可见。<code>send</code>方法再次调用，打印一行。</p><p>最后，变量被销毁，打印最后一行。</p><p>在Rust中，内存早已由语言和标准库释放掉了，因此没有必要像C语言那样调用<code>free</code>函数，或像C++那样调用<code>delete</code>。但其他资源不会自动释放。因此销毁器(destructor)对于那些副作用的实现非常有用：诸如文件处理，通讯处理，GUI窗口，图形资源等，标准库中早已为资源的处理的任何类型提供了<code>Drop</code>实现。</p><p>销毁器可以更好地理解内存的管理。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">S</span> ( <span class="type">i32</span> );</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">Drop</span> <span class="keyword">for</span> <span class="title class_">S</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">drop</span>(&amp;<span class="keyword">mut</span> <span class="keyword">self</span>) &#123;</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;Dropped &#123;&#125;&quot;</span>, <span class="keyword">self</span>.<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_a</span> = <span class="title function_ invoke__">S</span> (<span class="number">1</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_b</span> = <span class="title function_ invoke__">S</span> (<span class="number">2</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_c</span> = <span class="title function_ invoke__">S</span> (<span class="number">3</span>);</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_d</span> = <span class="title function_ invoke__">S</span> (<span class="number">4</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_e</span> = <span class="title function_ invoke__">S</span> (<span class="number">5</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_f</span> = <span class="title function_ invoke__">S</span> (<span class="number">6</span>);</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;INNER&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;OUTER&quot;</span>);</span><br></pre></td></tr></table></figure><p>结果打印：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">INNER</span><br><span class="line">Dropped 6</span><br><span class="line">Dropped 5</span><br><span class="line">Dropped 4</span><br><span class="line">OUTER</span><br><span class="line">Dropped 3</span><br><span class="line">Dropped 2</span><br><span class="line">Dropped 1</span><br></pre></td></tr></table></figure><p>注意到对象的销毁的顺序跟构造顺序相反，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">S</span> ( <span class="type">i32</span> );</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">Drop</span> <span class="keyword">for</span> <span class="title class_">S</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">drop</span>(&amp;<span class="keyword">mut</span> <span class="keyword">self</span>) &#123;</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;Dropped &#123;&#125;&quot;</span>, <span class="keyword">self</span>.<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_</span> = <span class="title function_ invoke__">S</span> (<span class="number">1</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_</span> = <span class="title function_ invoke__">S</span> (<span class="number">2</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_</span> = <span class="title function_ invoke__">S</span> (<span class="number">3</span>);</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_</span> = <span class="title function_ invoke__">S</span> (<span class="number">4</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_</span> = <span class="title function_ invoke__">S</span> (<span class="number">5</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_</span> = <span class="title function_ invoke__">S</span> (<span class="number">6</span>);</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;INNER&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;OUTER&quot;</span>);</span><br></pre></td></tr></table></figure><p>结果将打印：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Dropped 1</span><br><span class="line">Dropped 2</span><br><span class="line">Dropped 3</span><br><span class="line">Dropped 4</span><br><span class="line">Dropped 5</span><br><span class="line">Dropped 6</span><br><span class="line">INNER</span><br><span class="line">OUTER</span><br></pre></td></tr></table></figure><p>因为只有占位符，因此所有对象都是临时的。临时对象在它们语句结束位置就销毁了，即统计到分号(<code>;</code>)立即销毁。</p><p>上面的程序和下面的是等价的，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">S</span> ( <span class="type">i32</span> );</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">Drop</span> <span class="keyword">for</span> <span class="title class_">S</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">drop</span>(&amp;<span class="keyword">mut</span> <span class="keyword">self</span>) &#123;</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;Dropped &#123;&#125;&quot;</span>, <span class="keyword">self</span>.<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">s</span> (<span class="number">1</span>);</span><br><span class="line"><span class="title function_ invoke__">S</span> (<span class="number">2</span>);</span><br><span class="line"><span class="title function_ invoke__">S</span> (<span class="number">3</span>);</span><br><span class="line">&#123;</span><br><span class="line"><span class="title function_ invoke__">S</span> (<span class="number">4</span>);</span><br><span class="line"><span class="title function_ invoke__">S</span> (<span class="number">5</span>);</span><br><span class="line"><span class="title function_ invoke__">S</span> (<span class="number">6</span>);</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;INNER&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;OUTER&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="Assignment-Semantics"><a class="header-anchor" href="#Assignment-Semantics">¶</a>Assignment Semantics</h2><p>下面程序做了什么？</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">v1</span> = <span class="built_in">vec!</span>[<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="variable">v2</span> = v1;</span><br></pre></td></tr></table></figure><p>概念上，</p><p>首先，<code>v1</code>的标头(header)被分配到了栈。然后，<code>v1</code>的内容，会在堆为该内容分配一个缓冲区，<code>v1</code>的元素之被拷贝到这个缓冲区。然后标头(header)被初始化，作为引用指向新分配的堆缓冲。</p><p>然后，<code>v2</code>的标头被分配在栈。接着，用<code>v1</code>的值初始化<code>v2</code>。但，这是如何实现的？</p><p>通常至少有三种方式实现这种操作：</p><ul><li><p><strong><code>Share semantics</code></strong>：<code>v1</code>的标头被拷贝到<code>v2</code>的标头，其它不发生任何操作。因此，可以用<code>v1</code>，也可以用<code>v2</code>，它们都同时指向相同的堆缓冲区；因此，它们指向同样的内容，不是相等的，而是唯一的。这种术语的常见于垃圾回收语言，比如Java。</p></li><li><p><strong><code>Copy semantics</code></strong>：分配另外的堆缓冲。它和<code>v1</code>使用的缓冲区有同样的大小，并将先存的缓冲区内容拷贝到新的缓冲区。然后<code>v2</code>的标头被初始化指向新分配的缓冲区。因此，两个变量指向两个不同的缓冲区并且初始化的内容相同。这种实现，是C++的默认机制。</p></li><li><p><strong><code>Move semantics</code></strong>：<code>v1</code>的标头被拷贝到<code>v2</code>的标头，其它不发生任何操作。因此，<code>v2</code>可以使用，它的标头指向原先<code>v1</code>分配的堆缓冲区，但<code>v1</code>不能再被使用。这种实现，是Rust的默认机制。</p></li></ul><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">v1</span> = <span class="built_in">vec!</span>[<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="variable">v2</span> = v1;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, v1.<span class="title function_ invoke__">len</span>());</span><br></pre></td></tr></table></figure><p>该代码产生编译错误：“use of moved value: <code>v1</code>”。当<code>v1</code>的值指派给<code>v2</code>是，变量<code>v1</code>终止并退出。再次使用是不被编译器允许的。</p><p>先看看，为什么Rust不实现<strong>share semantics</strong>。首先，如果变量是可变的，这种语义(semnatics)会有几分迷惑。在共享术语(share semantics)，通过一个变量更改一个条目，这个条目也可以被其它变量更改和访问。这不是直觉，可能是bug的根源。因此，共享术语(share senantics)仅在只读数据(read-only data)能被接收。</p><p>但这里有个大问题，对于内存回收。如果使用共享术语，<code>v1</code>和<code>v2</code>都将会拥有同一个单一的数据缓冲区，因此当他们被回收时，同样的堆缓冲区会被回收两次。一个缓冲区不能被分配两次，而不导致内存损耗以及引起程序崩溃(program malfunction)。要解决这个问题，语言本身需要在scope结束时不对变量使用的内进行回收，而是凭借GC处理。</p><p>相反，拷贝语义(copy semantics)和移动语义(move semantics)都是正确的。实际上，Rust规则上把回收看做是任何对象必须有且仅有一个owner。当使用拷贝语义时，原来的vector缓冲区还是原来的owner，即变量<code>v1</code>的标头，新创建的缓冲区，有新的owner引用，即<code>v2</code>的标头。另一方面，当使用移动语义时，原来单一vector缓冲区更改它的owner：分配之前，缓冲区的所有者是<code>v1</code>的标头reference，分配之后，所有者更改为<code>v2</code>的标头reference。在分配之前，<code>v2</code>的标头并不存在，分配之后，<code>v1</code>的标头不再存在。</p><p>那为什么Rust不实现拷贝语义(copy semantics)？</p><p>实际上，某些情况下，使用拷贝语义更合适，另一些情况下，使用移动语义更适合。甚至C++，从2011年开始，允许同时拷贝语义和移动语义。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">auto</span> v1 = std::vector&lt;<span class="type">int</span>&gt; &#123;<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>&#125;;</span><br><span class="line"><span class="type">const</span> <span class="keyword">auto</span> v2 = v1;</span><br><span class="line"><span class="type">const</span> <span class="keyword">auto</span> v3 = <span class="built_in">move</span>(v1);</span><br><span class="line">std::count &lt;&lt; v<span class="number">1.</span><span class="built_in">size</span>() &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; v<span class="number">2.</span><span class="built_in">size</span>() &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; v<span class="number">3.</span><span class="built_in">size</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段C<ins>程序会打印：0 3 3。<code>v1</code>首先被拷贝到<code>v2</code>，然后移动到<code>v3</code>。C</ins>标准函数<code>move</code>会清空vector但不会让其undefined。因此，在最后，<code>v2</code>有三个元素的拷贝，<code>v3</code>就是原来的<code>v1</code>，<code>v1</code>变为空。</p><p>Rust中也允许拷贝语义和移动语义。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">v1</span> = <span class="built_in">vec!</span>[<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="variable">v2</span> = v1.<span class="title function_ invoke__">clone</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="variable">v3</span> = v1;</span><br><span class="line"><span class="comment">// ILLEGAL: print!(&quot;&#123;&#125; &quot;, v1.len());</span></span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>, v2.<span class="title function_ invoke__">len</span>(), v3.<span class="title function_ invoke__">len</span>());</span><br></pre></td></tr></table></figure><p>将会打印：3 3。</p><p>这段程序和C<ins>类似，但不能再访问<code>v1</code>了，因为它被移动了。因为C</ins>的默认语义是拷贝语义(copy semantics)，所以需要调用<code>move</code>标准函数来进行对象移动；而Rust的默认语义是移动语义(move semantics)，所以需要调用标准函数<code>clone</code>进行拷贝。</p><p>另外，<code>v1</code>虽已被移动，但仍然可访问，只不过内容为空，Rust中被移动的变量不可再被访问。</p><h2 id="Copying-vs-Moving-Performance"><a class="header-anchor" href="#Copying-vs-Moving-Performance">¶</a>Copying vs. Moving Performance</h2><p>Rust偏向于移动语义的选择是从性能方面考量的。对于拥有堆缓冲区的对象，比如vector，移动比拷贝要快，因为移动的仅是header，然而如果是拷贝一个vector，要求分配和初始化一个可能的堆缓冲区，它最终会被回收。</p><p>在C++中，被移动的对象意味着不在被使用了，但语言为了对遗留代码做后向兼容(backward-compatible)，被移动的对象仍然可以访问，这可能会给开发者再次使用该对象的机会。另外，清空一个被移动的vector有较小的消耗，即当一个vector被销毁，会检测它是否为空，这也有较小消耗。Rust被设计避免手动移动对象，因此不会有不正当的移动vector，因为编译器知道vector被移动了，可以产生更好的代码。</p><p>我们可以通过下面代码度量性能的影响，这并不简单，因为编译优化器会移除loop内的工作。</p><p>下面代码使用了拷贝语义。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::time::Instant;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">elapsed_ms</span>(t1: Instant, t2: Instant) <span class="punctuation">-&gt;</span> <span class="type">f64</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">t</span> = t2 - t1;</span><br><span class="line">    t.<span class="title function_ invoke__">as_secs</span>() <span class="keyword">as</span> <span class="type">f64</span> * <span class="number">1000</span>. + t.<span class="title function_ invoke__">subsec_nanos</span>() <span class="keyword">as</span> <span class="type">f64</span> / <span class="number">1e6</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> N_ITER: <span class="type">usize</span> = <span class="number">100_000_000</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">start_time</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">0</span>..N_ITER &#123;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">v1</span> = <span class="built_in">vec!</span>[<span class="number">11</span>, <span class="number">22</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">v2</span> = v1.<span class="title function_ invoke__">clone</span>();    <span class="comment">// Copy semantics is used</span></span><br><span class="line">v2.<span class="title function_ invoke__">push</span>(i);</span><br><span class="line"><span class="keyword">if</span> v1[<span class="number">1</span>] + v2[<span class="number">2</span>] == v2[<span class="number">0</span>] &#123;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;Error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">finish_time</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; ns per iteration\n&quot;</span>, <span class="title function_ invoke__">elapsed_ms</span>(start_time, finish_time) * <span class="number">1e6</span> / N_ITER <span class="keyword">as</span> <span class="type">f64</span>);</span><br></pre></td></tr></table></figure><p>下面是C++的等价实现，</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> n_iter = <span class="number">100000000</span>;</span><br><span class="line"><span class="keyword">auto</span> start_time = <span class="built_in">clock</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n_iter; ++i) &#123;</span><br><span class="line"><span class="keyword">auto</span> v1 = std::vector&lt;<span class="type">int</span>&gt; &#123; <span class="number">11</span>, <span class="number">22</span> &#125;;</span><br><span class="line"><span class="keyword">auto</span> v2 = v1;<span class="comment">// Copy semantics is used</span></span><br><span class="line">v<span class="number">2.</span><span class="built_in">push_back</span>(i);</span><br><span class="line"><span class="keyword">if</span> (v2[<span class="number">1</span>] + v2[<span class="number">2</span>] = v2[<span class="number">0</span>]) &#123; std::cout &lt;&lt; <span class="string">&quot;Error&quot;</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">auto</span> finish_time = <span class="built_in">clock</span>();</span><br><span class="line">std::cout &lt;&lt; (finish_time - start_time) * <span class="number">1.e9</span> / CLOCKS_PER_SEC / n_iter &lt;&lt; <span class="string">&quot; ns per iteration\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面Rust程序使用了移动术语，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::time::Instant;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">elapsed_ms</span>(t1: Instant, t2: Instant) <span class="punctuation">-&gt;</span> <span class="type">f64</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">t</span> = t2 - t1;</span><br><span class="line">    t.<span class="title function_ invoke__">as_secs</span>() <span class="keyword">as</span> <span class="type">f64</span> * <span class="number">1000</span>. + t.<span class="title function_ invoke__">subsec_nanos</span>() <span class="keyword">as</span> <span class="type">f64</span> / <span class="number">1e6</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> N_ITER: <span class="type">usize</span> = <span class="number">100_000_000</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">start_time</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">0</span>..N_ITER &#123;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">v1</span> = <span class="built_in">vec!</span>[<span class="number">11</span>, <span class="number">22</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">v2</span> = v1;    <span class="comment">// Move semantics is used</span></span><br><span class="line">v2.<span class="title function_ invoke__">push</span>(i);</span><br><span class="line"><span class="keyword">if</span> v1[<span class="number">1</span>] + v2[<span class="number">2</span>] == v2[<span class="number">0</span>] &#123;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;Error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">finish_time</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; ns per iteration\n&quot;</span>, <span class="title function_ invoke__">elapsed_ms</span>(start_time, finish_time) * <span class="number">1e6</span> / N_ITER <span class="keyword">as</span> <span class="type">f64</span>);</span><br></pre></td></tr></table></figure><p>C++的等价实现为，</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> n_iter = <span class="number">100000000</span>;</span><br><span class="line"><span class="keyword">auto</span> start_time = <span class="built_in">clock</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n_iter; ++i) &#123;</span><br><span class="line"><span class="keyword">auto</span> v1 = std::vector&lt;<span class="type">int</span>&gt; &#123; <span class="number">11</span>, <span class="number">22</span> &#125;;</span><br><span class="line"><span class="keyword">auto</span> v2 = <span class="built_in">move</span>(v1);<span class="comment">// Move semantics is used</span></span><br><span class="line">v<span class="number">2.</span><span class="built_in">push_back</span>(i);</span><br><span class="line"><span class="keyword">if</span> (v2[<span class="number">1</span>] + v2[<span class="number">2</span>] = v2[<span class="number">0</span>]) &#123; std::cout &lt;&lt; <span class="string">&quot;Error&quot;</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">auto</span> finish_time = <span class="built_in">clock</span>();</span><br><span class="line">std::cout &lt;&lt; (finish_time - start_time) * <span class="number">1.e9</span> / CLOCKS_PER_SEC / n_iter &lt;&lt; <span class="string">&quot; ns per iteration\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是编译优化后的大致的时间损耗，</p><table><thead><tr><th></th><th>Rust</th><th>C++</th></tr></thead><tbody><tr><td>Copy semantics</td><td>157</td><td>87</td></tr><tr><td>Move semantics</td><td>67</td><td>67</td></tr></tbody></table><p>不管是在C<ins>还是Rust中，移动术语都要比拷贝术语要快。在这方面，移动术语两者都差不多，拷贝术语方面C</ins>要比Rust好很多。</p><h2 id="Moving-and-Destroying-Objects"><a class="header-anchor" href="#Moving-and-Destroying-Objects">¶</a>Moving and Destroying Objects</h2><p>所有这些概念不单是对vector，任何有缓冲区引用的对象都适用，譬如<code>String</code>或<code>Box</code>。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">s1</span> = <span class="string">&quot;abcd&quot;</span>.<span class="title function_ invoke__">to_string</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="variable">s2</span> = s1.<span class="title function_ invoke__">clone</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="variable">s3</span> = s1;</span><br><span class="line"><span class="comment">// ILLEGAL: print!(&quot;&#123;&#125; &quot;, s1.len());</span></span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>, s2.<span class="title function_ invoke__">len</span>(), s3.<span class="title function_ invoke__">len</span>());</span><br></pre></td></tr></table></figure><p>这和C++类似，</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">auto</span> s1 = std::string &#123; <span class="string">&quot;abcd&quot;</span> &#125;;</span><br><span class="line"><span class="type">const</span> <span class="keyword">auto</span> s2 = s1;</span><br><span class="line"><span class="type">const</span> <span class="keyword">auto</span> s3 = <span class="built_in">move</span>(s1);</span><br><span class="line">std::cout &lt;&lt; s<span class="number">1.</span><span class="built_in">size</span>() &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; s<span class="number">2.</span><span class="built_in">size</span>() &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; s<span class="number">3.</span><span class="built_in">size</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>前面说过，被移动的对象不能再访问，因此<code>s1</code>访问时会导致编译错误；而对于C++，原来的<code>s1</code>会置为空，所以会输出0 4 4。</p><p>对于<code>Box</code>类型，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">i1</span> = <span class="type">Box</span>::<span class="title function_ invoke__">new</span>(<span class="number">12345i16</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">i2</span> = i1.<span class="title function_ invoke__">clone</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="variable">i3</span> = i1;</span><br><span class="line"><span class="comment">// ILLEGAL: print!(&quot;&#123;&#125; &quot;, i1);</span></span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>, i2, i3);</span><br></pre></td></tr></table></figure><p>对应的C++，</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;memory&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">auto</span> i1 = std::unique_ptr&lt;<span class="type">short</span>&gt; &#123;</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">short</span>(<span class="number">12345</span>)</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">const</span> <span class="keyword">auto</span> i2 = std::unique_ptr&lt;<span class="type">short</span>&gt; &#123;</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">short</span>(*i1)</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">const</span> <span class="keyword">auto</span> i3 = <span class="built_in">move</span>(i1);</span><br><span class="line">std::cout &lt;&lt; (<span class="type">bool</span>)i1 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; (<span class="type">bool</span>)i2 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; (<span class="type">bool</span>)i3 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; *i2 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; *i3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Rust程序会输出12345 12345，任何访问<code>i1</code>都会导致编译错误。C++会输出0 1 1 12345 12345。因为仅<code>i1</code>是null，它被移动到<code>i3</code>了。</p><p>仅当他们被用于初始化一个变量，给一个有值的变量重新赋值，对象不被移动，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">v1</span> = <span class="built_in">vec!</span>[<span class="literal">false</span>; <span class="number">3</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">v2</span> = <span class="built_in">vec!</span>[<span class="literal">false</span>; <span class="number">2</span>];</span><br><span class="line">v2 = v1;</span><br><span class="line">v1;</span><br></pre></td></tr></table></figure><p>以及给函数参数传递值时，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>(v2: <span class="type">Vec</span>&lt;<span class="type">bool</span>&gt;) &#123;&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">v1</span> = <span class="built_in">vec!</span>[<span class="literal">false</span>; <span class="number">3</span>];</span><br><span class="line"><span class="title function_ invoke__">f</span>(v1);</span><br><span class="line">v1;</span><br></pre></td></tr></table></figure><p>以及指派的对象在当前没有实际堆分配时，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">v1</span> = <span class="built_in">vec!</span>[<span class="literal">false</span>; <span class="number">0</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">v2</span> = <span class="built_in">vec!</span>[<span class="literal">false</span>; <span class="number">0</span>];</span><br><span class="line">v2 = v1;</span><br><span class="line">v1;</span><br></pre></td></tr></table></figure><p>编译上面任何三条程序，最后一个语句都会导致“use of a moved value”的编译错误，</p><p>尤其是，在程序最后，<code>v1</code>被移动到<code>v2</code>，即使他们都为空，因此它们没有堆空间被使用。为什么？因为移动规则由编译器提供，因此它在运行期必须是独立的内容。</p><p>下面的代码，最后一行也会导致编译错误，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">S</span> &#123;&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">s1</span> = S &#123;&#125;;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">s2</span> = s1;</span><br><span class="line">s1;</span><br></pre></td></tr></table></figure><p>编译器可以确切知道这个引用不会指向heap，但仍然编译报错。为什么Rust不为该类型使用拷贝语义？</p><p>它的基本原理是这样的。用户定义的类型<code>S</code>现在没有引用内存，但在将来软件维护的时候，指向堆的引用可能会被添加，即<code>S</code>可能会被作为字段(field)等。因此，如果为<code>S</code>实现了拷贝语义，当程序源被更改，一个<code>String</code>、<code>Box</code>、或集合，直接或间接地添加到<code>S</code>，会导致很多错误。因此，作为规则，最后保留移动语义。</p><h2 id="Need-for-Copy-Semantics"><a class="header-anchor" href="#Need-for-Copy-Semantics">¶</a>Need for Copy Semantics</h2><p>我们看到很多类型使用移动语义，包括vector，动态字符串，boxes，结构体… 下面的程序是合法的，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">i1</span> = <span class="number">123</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_i2</span> = i1;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">s1</span> = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_s2</span> = s1;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">r1</span> = &amp;i1;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_r2</span> = r1;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125; &#123;&#125;&quot;</span>, i1, s1, r1);</span><br></pre></td></tr></table></figure><p>结果将打印：“123 abc 123”。怎么来的？</p><p>首先，对于原生类型，静态字符串，引用，Rust不使用移动语义。对于这些数据类型，Rust使用拷贝语义。</p><p>为什么？前面看到，如果一个对象可以“拥有”一个或多个堆对象，它的类型应该实现移动语义；但如果不能“拥有”任何堆内存，它仅可以实现拷贝语义。移动语义对于原生类型来说是个麻烦的东西，而且它也不适合于被改变来“拥有”某些堆对象。因此，对于这些类型来说，拷贝语义是安全的、高效的、并且更方便。</p><p>因此，Rust中的某些类型实现了拷贝语义，另一些实现了移动语义。另外，numbers、Booleans、static strings、arrays、tuples、references实现了拷贝语义。相反，dynamic strings、boxes、集合(包括vectors)、enums、structs、tuple-structs均默认实现了移动语义。</p><h2 id="Cloning-Objects"><a class="header-anchor" href="#Cloning-Objects">¶</a>Cloning Objects</h2><p>然而，对于对象的拷贝，有另一种重要的区分。所有实现拷贝语义的类型可以通过指派的方式简单地拷贝；但对于移动语义的对象来说也可以进行拷贝，但需要使用标准库的<code>clone</code>。对于动态字符串、boxed对象、vector可以使用<code>clone</code>函数。但对于某些类型，不能使用<code>clone</code>函数，因为没有合适的拷贝类型。例如一个文件处理，一个GUI窗口处理，或一个互斥锁处理。如果你拷贝了它，然后销毁某一份拷贝，源资源会被释放，其它拷贝的处理会前后不一致：</p><p>因此，关于可被拷贝的能力，会有三种不同的对象：</p><ul><li>对象不“拥有”任何东西，拷贝是廉价的、容易的。</li><li>对象“拥有”某些堆对象，但不“拥有”内部资源，所以可以被拷贝，但运行期有较大损耗。</li><li>对象“拥有”内部资源，譬如文件处理、GUI窗口处理，所以它不能被拷贝。</li></ul><p>第一类对象，称为“可拷贝对象，copyable objects”，因为对于这类对象来说，拷贝更加高效。</p><p>第二种对象，称为“克隆而非拷贝对象，cloneable but non-copyable objects”，顾名思义，这类对象可以实现拷贝语义，但也应该实现移动语义，以避免运行期非必要的副本消耗。甚至，需要显式提供一个方法进行复制。</p><p>第三种类型，应该实现移动语义，但不应该提供复制方法，因为它拥有的资源不能在Rust代码复制，这种资源仅能有一个“owner”，所以这类称之为“不可拷贝对象，non-cloneable objects”。</p><p>当然，任何对象可自动被拷贝也可显式地被拷贝，所以任何可拷贝对象(copyable object)也是一个可克隆对象(cloneable object)。</p><p>总结，某些对象不能被克隆(如文件处理)，某些可以拷贝(显式地)，某些可以隐式拷贝(如数字)，某些不能拷贝(如集合)。</p><p>为了区分这三者，Rust标准库包含有两个特殊的trait：<code>Copy</code>和<code>Clone</code>。任何类型实现了<code>Copy</code>的是可拷贝的；任何类型实现了<code>Clone</code>是可克隆的。</p><p>因此，这三种可以文字描述为如下：</p><ul><li>对象实现了<code>Copy</code>和<code>Clone</code>的，包含拷贝语义，也可以显式克隆。例如原生类型。</li><li>对象实现了<code>Clone</code>，但没有实现<code>Copy</code>的，它们实现了移动语义，可以显式克隆。例如集合类型。</li><li>既没有实现<code>Copy</code>，也没有实现<code>Clone</code>的，属于不可复制，它们实现了移动语义，例如文件处理等。</li><li>没有对象是实现了<code>Copy</code>，却没有<code>Clone</code>的。这意味着对象的拷贝是隐式的，却不能显式调用，这是无意义的。</li></ul><p>下面例子展示所有的情况，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">a1</span> = <span class="number">123</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">b1</span> = a1.<span class="title function_ invoke__">clone</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="variable">c1</span> = b1;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125; &#123;&#125;&quot;</span>, a1, b1, c1);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="variable">a2</span> = <span class="type">Vec</span>::&lt;<span class="type">bool</span>&gt;::<span class="title function_ invoke__">new</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="variable">b2</span> = a2.<span class="title function_ invoke__">clone</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="variable">c2</span> = b2;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot; &#123;:?&#125;&quot;</span>, a2);</span><br><span class="line"><span class="comment">// ILLEGAL: print!(&quot; &#123;:?&#125;&quot;, b2);</span></span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot; &#123;:?&#125;&quot;</span>, c2);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="variable">a3</span> = std::fs::File::<span class="title function_ invoke__">open</span>(<span class="string">&quot;.&quot;</span>).<span class="title function_ invoke__">unwrap</span>();</span><br><span class="line"><span class="comment">// ILLEGAL: let b3 = a3.clone();</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">c3</span> = a3;</span><br><span class="line"><span class="comment">// ILLEGAL: print!(&quot; &#123;:?&#125;&quot;, a3);</span></span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot; &#123;:?&#125;&quot;</span>, c3);</span><br></pre></td></tr></table></figure><p>结果打印：“<code>123 123 123 [] [] File</code>”。</p><p>此处三处注释的地方是不合法的语句。</p><p>首先，<code>a1</code>是原生类型，所以这种类型可以隐式拷贝，也可以显式克隆(clone)。所以此处三个对象有同样的值，并打印输出。</p><p>因为<code>a2</code>是一个集合类型，这种类型可以克隆，但不能拷贝，所以<code>b2</code>可以通过<code>a2</code>显式克隆，对<code>b2</code>到<code>c2</code>的赋值是移动语义，<code>b2</code>不可再访问。</p><p>对于<code>a3</code>而言，它是一个文件handle，这种类型不能被克隆，尝试编译<code>a3.clone()</code>会出现编译错误，以及对<code>a3</code>到<code>c3</code>的赋值是移动语义，对象被移动了，<code>a3</code>不可再访问。</p><h2 id="Making-Types-Cloneable-or-Copyable"><a class="header-anchor" href="#Making-Types-Cloneable-or-Copyable">¶</a>Making Types Cloneable or Copyable</h2><p>前面说过，枚举，结构体，元组-结构体，默认都没有实现<code>Copy</code>和<code>Clone</code>。因此它是不可克隆的。因此，你可能需要仅实现<code>Clone</code>，又或<code>Copy</code>和<code>Clone</code>都需要有。</p><p>下面代码是不合法的，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">S</span> &#123;&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">s</span> = S &#123;&#125;;</span><br><span class="line">s.<span class="title function_ invoke__">clone</span>();</span><br></pre></td></tr></table></figure><p>所以你会为其实现<code>Clone</code>，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">S</span> &#123;&#125; </span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">Clone</span> <span class="keyword">for</span> <span class="title class_">S</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">clone</span>(&amp;<span class="keyword">self</span>) <span class="punctuation">-&gt;</span> <span class="keyword">Self</span> &#123; <span class="keyword">Self</span> &#123;&#125; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">s</span> = S &#123;&#125;;</span><br><span class="line">s.<span class="title function_ invoke__">clone</span>();</span><br></pre></td></tr></table></figure><p>这些实现写法，在前面面向对象编程介绍过，你需要为其实现<code>clone</code>方法，</p><p>另外，实现的<code>Clone</code>方法，不能隐式使用拷贝语义，所以下面代码是不合法的，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">S</span> &#123;&#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">Clone</span> <span class="keyword">for</span> <span class="title class_">S</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">clone</span>(&amp;<span class="keyword">self</span>) <span class="punctuation">-&gt;</span> <span class="keyword">Self</span> &#123; <span class="keyword">Self</span> &#123;&#125; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">s</span> = S &#123;&#125;;</span><br><span class="line">s.<span class="title function_ invoke__">clone</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_s2</span> = s;</span><br><span class="line">s;</span><br></pre></td></tr></table></figure><p>所以，你需要实现<code>Copy</code>，使其合法，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">S</span> &#123;&#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">Clone</span> <span class="keyword">for</span> <span class="title class_">S</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">clone</span>(&amp;<span class="keyword">self</span>) <span class="punctuation">-&gt;</span> <span class="keyword">Self</span> &#123; <span class="keyword">Self</span> &#123;&#125; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">Copy</span> <span class="keyword">for</span> <span class="title class_">S</span> &#123;&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">s</span> = S &#123;&#125;;</span><br><span class="line">s.<span class="title function_ invoke__">clone</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_s2</span> = s;</span><br><span class="line">s;</span><br></pre></td></tr></table></figure><p>主要到<code>Copy</code>的实现可以为空；只要声明了<code>Copy</code>的实现，拷贝语义就激活了。</p><p>下面写法却是不合法的，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">S</span> &#123;&#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">Copy</span> <span class="keyword">for</span> <span class="title class_">S</span> &#123;&#125;</span><br></pre></td></tr></table></figure><p>编译器会抱怨：“<code>the trait bound </code>main::S:std::clone::Clone<code> is not satisfied</code>”。<code>Copy</code>的实现，前提条件是<code>Clone</code>也实现了，</p><p>但下面写法也是不合法的，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">S</span> &#123; x: <span class="type">Vec</span>&lt;<span class="type">i32</span>&gt; &#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">Copy</span> <span class="keyword">for</span> <span class="title class_">S</span> &#123;&#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">Clone</span> <span class="keyword">for</span> <span class="title class_">S</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">clone</span>(&amp;<span class="keyword">self</span>) <span class="punctuation">-&gt;</span> <span class="keyword">Self</span> &#123; * <span class="keyword">self</span> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译产生错误信息，“the trait <code>Copy</code> may not be implemented for this type”。告诉你<code>Vec&lt;i2&gt;</code>类型没有实现<code>Copy</code>。</p><p>Rust允许实现<code>Copy</code>，仅能允许其类型是包含可拷贝对象的，因为拷贝对象，意味着会拷贝它的所有成员(members)。这里，<code>Vec</code>没有实现<code>Copy</code>，所以<code>S</code>也不能实现拷贝语义。</p><p>相反，下面代码是合法的，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">S</span> &#123; x: <span class="type">Vec</span>&lt;<span class="type">i32</span>&gt; &#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">Clone</span> <span class="keyword">for</span> <span class="title class_">S</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">clone</span>(&amp;<span class="keyword">self</span>) <span class="punctuation">-&gt;</span> <span class="keyword">Self</span> &#123;</span><br><span class="line">S &#123; x: <span class="keyword">self</span>.x.<span class="title function_ invoke__">clone</span>() &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">s1</span> = S &#123; x: <span class="built_in">vec!</span>[<span class="number">12</span>] &#125;;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">s2</span> = s1.<span class="title function_ invoke__">clone</span>();</span><br><span class="line">s1.x[<span class="number">0</span>] += <span class="number">1</span>;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>, s1.x[<span class="number">0</span>], s2.x[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure><p>结果将打印：“13 12”。</p><p>这里，<code>S</code>结构体不是可拷贝的，但却是可克隆的(clonable)，因为它实现了<code>Clone</code>。因此，<code>s1</code>可以对<code>s2</code>赋值。<code>s1</code>被修改，两者输出内容不同。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本章覆盖有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为什么决定性的(deterministic)、隐式(implicit)的对象销毁是Rust的一大亮点&lt;/li&gt;
&lt;li&gt;对象所有者(ownership)的概念&lt;/li&gt;
&lt;li&gt;为什么自定义销毁可能有用，怎么创建&lt;/li&gt;
&lt;li&gt;三种赋值语义：共享(share)、拷贝(copy)、移动(move)&lt;/li&gt;
&lt;li&gt;为什么隐式共享对软件正确性是糟糕的&lt;/li&gt;
&lt;li&gt;为什么对象的移动(move semantics)比起拷贝(copy semantics)可能有更好的性能&lt;/li&gt;
&lt;li&gt;为什么某些类型需要拷贝(copy semantics)，某些不需要，怎么区分&lt;/li&gt;
&lt;li&gt;为什么某些类型需要是不可复制的(non-cloneable)，怎么区分&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    <content src="https://galudisu.info/%3Cp%3E%E6%9C%AC%E7%AB%A0%E8%A6%86%E7%9B%96%E6%9C%89%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E4%B8%BA%E4%BB%80%E4%B9%88%E5%86%B3%E5%AE%9A%E6%80%A7%E7%9A%84(deterministic)%E3%80%81%E9%9A%90%E5%BC%8F(implicit)%E7%9A%84%E5%AF%B9%E8%B1%A1%E9%94%80%E6%AF%81%E6%98%AFRust%E7%9A%84%E4%B8%80%E5%A4%A7%E4%BA%AE%E7%82%B9%3C/li%3E%3Cli%3E%E5%AF%B9%E8%B1%A1%E6%89%80%E6%9C%89%E8%80%85(ownership)%E7%9A%84%E6%A6%82%E5%BF%B5%3C/li%3E%3Cli%3E%E4%B8%BA%E4%BB%80%E4%B9%88%E8%87%AA%E5%AE%9A%E4%B9%89%E9%94%80%E6%AF%81%E5%8F%AF%E8%83%BD%E6%9C%89%E7%94%A8%EF%BC%8C%E6%80%8E%E4%B9%88%E5%88%9B%E5%BB%BA%3C/li%3E%3Cli%3E%E4%B8%89%E7%A7%8D%E8%B5%8B%E5%80%BC%E8%AF%AD%E4%B9%89%EF%BC%9A%E5%85%B1%E4%BA%AB(share)%E3%80%81%E6%8B%B7%E8%B4%9D(copy)%E3%80%81%E7%A7%BB%E5%8A%A8(move)%3C/li%3E%3Cli%3E%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9A%90%E5%BC%8F%E5%85%B1%E4%BA%AB%E5%AF%B9%E8%BD%AF%E4%BB%B6%E6%AD%A3%E7%A1%AE%E6%80%A7%E6%98%AF%E7%B3%9F%E7%B3%95%E7%9A%84%3C/li%3E%3Cli%3E%E4%B8%BA%E4%BB%80%E4%B9%88%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%A7%BB%E5%8A%A8(move%20semantics)%E6%AF%94%E8%B5%B7%E6%8B%B7%E8%B4%9D(copy%20semantics)%E5%8F%AF%E8%83%BD%E6%9C%89%E6%9B%B4%E5%A5%BD%E7%9A%84%E6%80%A7%E8%83%BD%3C/li%3E%3Cli%3E%E4%B8%BA%E4%BB%80%E4%B9%88%E6%9F%90%E4%BA%9B%E7%B1%BB%E5%9E%8B%E9%9C%80%E8%A6%81%E6%8B%B7%E8%B4%9D(copy%20semantics)%EF%BC%8C%E6%9F%90%E4%BA%9B%E4%B8%8D%E9%9C%80%E8%A6%81%EF%BC%8C%E6%80%8E%E4%B9%88%E5%8C%BA%E5%88%86%3C/li%3E%3Cli%3E%E4%B8%BA%E4%BB%80%E4%B9%88%E6%9F%90%E4%BA%9B%E7%B1%BB%E5%9E%8B%E9%9C%80%E8%A6%81%E6%98%AF%E4%B8%8D%E5%8F%AF%E5%A4%8D%E5%88%B6%E7%9A%84(non-cloneable)%EF%BC%8C%E6%80%8E%E4%B9%88%E5%8C%BA%E5%88%86%3C/li%3E%3C/ul%3E%3Cspan%20id=%22more%22%3E%3C/span%3E%3Ch2%20id=%22Deterministic-Destruction%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Deterministic-Destruction%22%3E%C2%B6%3C/a%3EDeterministic%20Destruction%3C/h2%3E%3Cp%3E%E5%89%8D%E9%9D%A2%EF%BC%8C%E6%88%91%E4%BB%AC%E7%9C%8B%E5%88%B0%E6%9C%89%E5%87%A0%E7%A7%8D%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%96%B9%E5%BC%8F%EF%BC%8C%E8%BF%99%E4%BA%9B%E5%88%86%E9%85%8D%E9%83%BD%E6%98%AF%E5%9C%A8stack%E5%92%8Cheap%E5%8F%91%E7%94%9F%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E4%B8%B4%E6%97%B6%E8%A1%A8%E8%BE%BE%E5%BC%8F%EF%BC%8C%E5%88%86%E9%85%8D%E5%9C%A8stack%EF%BC%9B%3C/li%3E%3Cli%3E%E5%8F%98%E9%87%8F(%E5%8C%85%E6%8B%AC%E6%95%B0%E7%BB%84)%EF%BC%8C%E5%88%86%E9%85%8D%E5%9C%A8stack%EF%BC%9B%3C/li%3E%3Cli%3E%E5%87%BD%E6%95%B0%E5%92%8C%E9%97%AD%E5%8C%85%E7%9A%84%E5%8F%82%E6%95%B0%EF%BC%8C%E5%88%86%E9%85%8D%E5%9C%A8stack%EF%BC%9B%3C/li%3E%3Cli%3E%3Ccode%3EBox%3C/code%3E%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%BC%95%E7%94%A8%E5%88%86%E9%85%8D%E5%9C%A8stack%EF%BC%8C%E5%BC%95%E7%94%A8%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%88%86%E9%85%8D%E5%9C%A8heap%EF%BC%9B%3C/li%3E%3Cli%3E%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E9%9B%86%E5%90%88(%E5%8C%85%E6%8B%ACvector%EF%BC%89,header%E5%88%86%E9%85%8D%E5%9C%A8stack%EF%BC%8C%E6%95%B0%E6%8D%AE%E5%88%86%E9%85%8D%E5%9C%A8heap%E3%80%82%3C/li%3E%3C/ul%3E%3Cp%3E%E5%AF%B9%E8%B1%A1%E2%80%9C%3Cstrong%3E%E7%9C%9F%E5%AE%9E%3C/strong%3E%E2%80%9D%E7%9A%84%E7%9E%AC%E6%97%B6%E5%88%86%E9%85%8D%E6%98%AF%E5%BE%88%E9%9A%BE%E9%A2%84%E6%B5%8B%E7%9A%84%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E5%8F%96%E5%86%B3%E4%BA%8E%E7%BC%96%E8%AF%91%E5%99%A8%E4%BC%98%E5%8C%96%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E6%88%91%E4%BB%AC%E8%80%83%E8%99%91%E2%80%9C%3Cstrong%3E%E6%A6%82%E5%BF%B5%3C/strong%3E%E2%80%9D%E4%B8%8A%E7%9A%84%E7%9E%AC%E6%97%B6%E5%88%86%E9%85%8D%E6%83%85%E5%86%B5%E3%80%82%3C/p%3E%3Cp%3E%E6%A6%82%E5%BF%B5%E4%B8%8A%EF%BC%8C%E5%BD%93%E5%AF%B9%E5%BA%94%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%87%BA%E7%8E%B0%E5%9C%A8%E4%BB%A3%E7%A0%81%E6%97%B6%E5%8F%91%E7%94%9Fstack%E5%88%86%E9%85%8D%EF%BC%8C%E5%9B%A0%E6%AD%A4%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E4%B8%B4%E6%97%B6%E8%A1%A8%E8%BE%BE%E5%BC%8F%EF%BC%8C%E5%8F%98%E9%87%8F%EF%BC%8C%E6%95%B0%E7%BB%84%E5%9C%A8%E5%AE%83%E4%BB%AC%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%87%BA%E7%8E%B0%E5%9C%A8%E4%BB%A3%E7%A0%81%E6%97%B6%E8%A2%AB%E5%88%86%E9%85%8D%EF%BC%9B%3C/li%3E%3Cli%3E%E5%87%BD%E6%95%B0%E5%92%8C%E9%97%AD%E5%8C%85%E7%9A%84%E5%8F%82%E6%95%B0%EF%BC%8C%E5%9C%A8%E5%87%BD%E6%95%B0/%E9%97%AD%E5%8C%85%E8%A2%AB%E8%B0%83%E7%94%A8%E6%97%B6%E8%A2%AB%E5%88%86%E9%85%8D%EF%BC%9B%3C/li%3E%3Cli%3E%3Ccode%3EBox%3C/code%3E%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%8C%E9%9B%86%E5%90%88header%EF%BC%8C%E5%9C%A8%E4%BB%A3%E7%A0%81%E7%AC%AC%E4%B8%80%E5%87%BA%E7%8E%B0%E6%97%B6%E8%A2%AB%E5%88%86%E9%85%8D%E3%80%82%3C/li%3E%3C/ul%3E%3Cp%3Eheap%E7%9A%84%E5%BD%93%E9%9C%80%E8%A6%81%E8%BF%99%E4%BA%9B%E6%95%B0%E6%8D%AE%E6%97%B6%EF%BC%8C%E8%BF%9B%E8%A1%8Cheap%E5%88%86%E9%85%8D%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%3Ccode%3EBox%3C/code%3E%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%88%86%E9%85%8D%EF%BC%8C%E7%94%B1%3Ccode%3EBox::new%3C/code%3E%E5%87%BD%E6%95%B0%E8%A7%A6%E5%8F%91%EF%BC%9B%3C/li%3E%3Cli%3E%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%AD%97%E7%AC%A6%E5%88%86%E9%85%8D%EF%BC%8C%E5%9C%A8%E5%AD%97%E7%AC%A6%E8%A2%AB%E6%B7%BB%E5%8A%A0%E5%88%B0%E8%AF%A5%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%97%B6%E8%A7%A6%E5%8F%91%EF%BC%9B%3C/li%3E%3Cli%3E%E9%9B%86%E5%90%88%E5%86%85%E5%AE%B9%E7%9A%84%E5%88%86%E9%85%8D%EF%BC%8C%E5%87%BA%E7%8E%B0%E5%9C%A8%E6%9C%89%E6%95%B0%E6%8D%AE%E8%A2%AB%E6%B7%BB%E5%8A%A0%E5%88%B0%E9%9B%86%E5%90%88%E6%97%B6%E3%80%82%3C/li%3E%3C/ul%3E%3Cp%3E%E4%B8%8A%E9%9D%A2%E8%BF%99%E4%BA%9B%E8%B7%9F%E5%A4%A7%E5%A4%9A%E6%95%B0%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E6%B2%A1%E4%B8%8D%E5%90%8C%E4%B9%8B%E5%A4%84%E3%80%82%E9%82%A3%E4%B9%88%E6%95%B0%E6%8D%AE%E7%9A%84%E9%94%80%E6%AF%81%E5%9C%A8%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E5%8F%91%E7%94%9F%EF%BC%9F%3C/p%3E%3Cp%3E%E6%A6%82%E5%BF%B5%E4%B8%8A%EF%BC%8C%E5%9C%A8Rust%E4%B8%AD%EF%BC%8C%E5%BD%93%E8%BF%99%E4%BA%9B%E6%95%B0%E6%8D%AE%E4%B8%8D%E5%86%8D%E5%8F%AF%E8%A2%AB%E8%AE%BF%E9%97%AE%E6%97%B6%EF%BC%8C%E8%87%AA%E5%8A%A8%E9%94%80%E6%AF%81%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E4%B8%B4%E6%97%B6%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%A2%AB%E5%9B%9E%E6%94%B6%EF%BC%8C%E5%BD%93%E5%AE%83%E5%9C%A8%E8%AF%AD%E5%8F%A5%E7%9A%84%E7%BB%93%E6%9D%9F%E4%BD%8D%E7%BD%AE(%E5%8D%B3%EF%BC%8C%E5%9C%A8%E4%B8%8B%E4%B8%80%E4%B8%AA%3Ccode%3E;%3C/code%3E%E4%BD%8D%E7%BD%AE%E6%88%96%E5%BD%93%E5%89%8Dscope%E7%9A%84%E7%BB%93%E6%9D%9F%E4%BD%8D%E7%BD%AE)%EF%BC%9B%3C/li%3E%3Cli%3E%E5%8F%98%E9%87%8F(%E5%8C%85%E6%8B%AC%E6%95%B0%E7%BB%84)%E8%A2%AB%E5%9B%9E%E6%94%B6%EF%BC%8C%E5%BD%93%E5%AE%83%E5%9C%A8scope%E7%9A%84%E5%A3%B0%E6%98%8E%E7%BB%93%E6%9D%9F%EF%BC%9B%3C/li%3E%3Cli%3E%E5%87%BD%E6%95%B0/%E9%97%AD%E5%8C%85%E7%9A%84%E5%8F%82%E6%95%B0%E7%9A%84%E5%9B%9E%E6%94%B6%EF%BC%8C%E5%87%BA%E7%8E%B0%E5%9C%A8%E5%87%BD%E6%95%B0/%E9%97%AD%E5%8C%85%E4%BD%93%E7%BB%93%E6%9D%9F%EF%BC%9B%3C/li%3E%3Cli%3E%3Ccode%3EBox%3C/code%3E%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%9B%9E%E6%94%B6%EF%BC%8C%E5%9C%A8%E5%BD%93%E5%89%8Dscope%E7%9A%84%E5%A3%B0%E6%98%8E%E7%BB%93%E6%9D%9F%EF%BC%9B%3C/li%3E%3Cli%3E%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%AD%97%E7%AC%A6%E8%A2%AB%E5%9B%9E%E6%94%B6%EF%BC%8C%E5%87%BA%E7%8E%B0%E5%9C%A8%E4%BB%8E%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E5%88%A0%E9%99%A4%E8%AF%A5%E5%AD%97%E7%AC%A6%E6%97%B6%EF%BC%8C%E6%88%96%E8%80%85%E6%95%B4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%88%A0%E9%99%A4%E6%97%B6%EF%BC%9B%3C/li%3E%3Cli%3E%E9%9B%86%E5%90%88%E4%B8%AD%E7%9A%84%E6%9D%A1%E7%9B%AE%E8%A2%AB%E5%9B%9E%E6%94%B6%EF%BC%8C%E5%87%BA%E7%8E%B0%E5%9C%A8%E4%BB%8E%E9%9B%86%E5%90%88%E4%B8%AD%E5%88%A0%E9%99%A4%E8%AF%A5%E6%9D%A1%E7%9B%AE%E6%97%B6%EF%BC%8C%E6%88%96%E8%80%85%E6%95%B4%E4%B8%AA%E9%9B%86%E5%90%88%E8%A2%AB%E5%88%A0%E9%99%A4%E6%97%B6%E3%80%82%3C/li%3E%3C/ul%3E%3Cp%3E%E8%BF%99%E4%B8%80%E6%A6%82%E5%BF%B5%E4%BD%BF%E5%BE%97Rust%E5%92%8C%E5%A4%A7%E9%83%A8%E5%88%86%E8%AF%AD%E8%A8%80%E5%8C%BA%E5%88%86%E5%BC%80%E6%9D%A5%E3%80%82%E4%BB%BB%E4%BD%95%E8%AF%AD%E8%A8%80%E9%83%BD%E6%9C%89%E4%B8%B4%E6%97%B6%E5%AF%B9%E8%B1%A1%E6%88%96%E6%A0%88%E5%88%86%E9%85%8D(stack-allocated)%E5%AF%B9%E8%B1%A1%EF%BC%8C%E8%BF%99%E7%A7%8D%E5%AF%B9%E8%B1%A1%E6%98%AF%E8%87%AA%E5%8A%A8%E5%9B%9E%E6%94%B6%E7%9A%84%E3%80%82%E4%BD%86%E5%A0%86%E5%88%86%E9%85%8D(heap-allocated)%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%9B%9E%E6%94%B6%EF%BC%8C%E4%B8%8D%E5%90%8C%E8%AF%AD%E8%A8%80%E5%90%84%E4%B8%8D%E7%9B%B8%E5%90%8C%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E6%9F%90%E4%BA%9B%E8%AF%AD%E8%A8%80%E4%B8%AD%EF%BC%8C%E8%AF%B8%E5%A6%82Pascal%EF%BC%8CC%EF%BC%8CC++%EF%BC%8Cheap%E4%B8%8A%E7%9A%84%E5%AF%B9%E8%B1%A1%E9%80%9A%E5%B8%B8%E4%BB%85%E8%83%BD%E6%98%BE%E5%BC%8F%E5%9C%B0%E8%B0%83%E7%94%A8%E7%B1%BB%E4%BC%BC%3Ccode%3Efree%3C/code%3E%E6%88%96%3Ccode%3Edelete%3C/code%3E%E8%BF%99%E4%BA%9B%E5%87%BD%E6%95%B0%E8%BF%9B%E8%A1%8C%E5%9B%9E%E6%94%B6%E3%80%82%E5%8F%A6%E4%B8%80%E4%BA%9B%E8%AF%AD%E8%A8%80%EF%BC%8C%E8%AF%B8%E5%A6%82Java%EF%BC%8CJavaScript%EF%BC%8CC+%EF%BC%8CPython%EF%BC%8C%E5%A0%86%E4%B8%8A%E7%9A%84%E5%AF%B9%E8%B1%A1%E4%B8%8D%E5%8F%AF%E8%AE%BF%E9%97%AE%E6%97%B6%EF%BC%8C%E5%B9%B6%E6%B2%A1%E6%9C%89%E7%AB%8B%E5%8D%B3%E8%BF%9B%E8%A1%8C%E5%9B%9E%E6%94%B6%EF%BC%8C%E8%80%8C%E6%98%AF%E6%9C%89%E4%B8%80%E4%B8%AA%E5%AE%9A%E6%9C%9F%E7%9A%84%E8%A1%8C%E7%A8%8B%EF%BC%8C%E7%94%A8%E6%9D%A5%E6%9F%A5%E6%89%BEheap%E4%B8%8D%E5%8F%AF%E8%BE%BE%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%B9%B6%E5%9B%9E%E6%94%B6%E8%BF%99%E4%BA%9B%E5%AF%B9%E8%B1%A1%E3%80%82%E8%BF%99%E7%A7%8D%E6%9C%BA%E5%88%B6%E7%A7%B0%E4%B8%BA%E2%80%9C%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E2%80%9D%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E7%B1%BB%E4%BC%BC%E5%9F%8E%E5%B8%82%E7%9A%84%E6%B8%85%E7%90%86%E7%B3%BB%E7%BB%9F%EF%BC%9A%E5%AE%83%E5%AE%9A%E6%9C%9F%E6%B8%85%E7%90%86%E5%9F%8E%E9%95%87%EF%BC%8C%E5%BD%93%E6%9C%89%E5%9E%83%E5%9C%BE%E5%A0%86%E7%A7%AF%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%9C%A8C++%E5%92%8C%E7%B1%BB%E4%BC%BC%E8%AF%AD%E8%A8%80%E4%B8%AD%EF%BC%8Cheap%E5%9B%9E%E6%94%B6%E6%97%A2%E6%98%AF%3Ccode%3E%E5%86%B3%E5%AE%9A%E6%80%A7%E7%9A%84%EF%BC%8Cdeterministic%3C/code%3E%EF%BC%8C%E4%B9%9F%E6%98%AF%3Ccode%3E%E6%98%BE%E5%BC%8F%E7%9A%84%EF%BC%8Cexplicit%3C/code%3E%E3%80%82%E5%86%B3%E5%AE%9A%E6%80%A7%E7%9A%84%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E5%9C%A8%E6%BA%90%E4%BB%A3%E7%A0%81%E7%9A%84%E5%AE%9A%E4%B9%89%E4%BD%8D%E7%BD%AE%EF%BC%8C%E4%BB%A5%E5%8F%8A%E6%98%AF%E6%98%BE%E5%BC%8F%E7%9A%84%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E8%A6%81%E6%B1%82%E7%A8%8B%E5%BA%8F%E5%91%98%E7%BC%96%E5%86%99%E6%8C%87%E5%AE%9A%E7%9A%84%E5%9B%9E%E6%94%B6%E8%AF%AD%E5%8F%A5%E3%80%82%E5%86%B3%E5%AE%9A%E6%80%A7%E7%9A%84%E5%A5%BD%E5%A4%84%E5%9C%A8%E4%BA%8E%EF%BC%8C%E5%8F%AF%E8%83%BD%E6%9C%89%E6%9B%B4%E5%A5%BD%E7%9A%84%E6%80%A7%E8%83%BD%EF%BC%8C%E7%A8%8B%E5%BA%8F%E5%91%98%E5%8F%AF%E8%83%BD%E6%9B%B4%E5%A5%BD%E5%9C%B0%E6%8E%A7%E5%88%B6%E3%80%82%E4%BD%86%E6%98%BE%E5%BC%8F%E7%9A%84%E5%8D%B4%E4%B8%8D%E5%A5%BD%EF%BC%8C%E5%9B%A0%E4%B8%BA%E4%B8%8D%E8%83%BD%E9%81%BF%E5%85%8D%E5%87%BA%E7%8E%B0%E9%94%99%E8%AF%AF%E7%9A%84%E5%9B%9E%E6%94%B6%EF%BC%8C%E4%B8%91%E9%99%8B%E7%9A%84bug%E7%BB%93%E6%9E%9C%E3%80%82%3C/p%3E%3Cp%3E%E7%9B%B8%E5%8F%8D%EF%BC%8C%E5%9C%A8Java%E5%92%8C%E7%B1%BB%E4%BC%BC%E8%AF%AD%E8%A8%80%E4%B8%AD%EF%BC%8Cheap%E5%9B%9E%E6%94%B6%E6%97%A2%E6%98%AF%3Ccode%3E%E9%9D%9E%E5%86%B3%E5%AE%9A%E6%80%A7%E7%9A%84%EF%BC%8Cnon-deterministic%3C/code%3E%EF%BC%8C%E4%B9%9F%E6%98%AF%3Ccode%3E%E9%9A%90%E5%BC%8F%E7%9A%84%EF%BC%8Cimplicit%3C/code%3E%E3%80%82%E9%9D%9E%E5%86%B3%E5%AE%9A%E6%80%A7%E7%9A%84%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E5%87%BA%E7%8E%B0%E6%9C%AA%E7%9F%A5%E7%9A%84%E6%89%A7%E8%A1%8C%E7%9E%AC%E6%97%B6%EF%BC%8C%E4%BB%A5%E5%8F%8A%E6%98%AF%E9%9A%90%E5%BC%8F%E7%9A%84%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E4%B8%8D%E9%9C%80%E8%A6%81%E6%8C%87%E5%AE%9A%E5%9B%9E%E6%94%B6%E8%AF%AD%E5%8F%A5%E3%80%82%E9%9D%9E%E5%86%B3%E5%AE%9A%E6%80%A7%E6%98%AF%E7%B3%9F%E7%B3%95%E7%9A%84%EF%BC%8C%E4%BD%86%E9%9A%90%E5%BC%8F%E7%9A%84%E7%BE%8E%E5%A5%BD%E7%9A%84%E3%80%82%3C/p%3E%3Cp%3E%E5%8C%BA%E5%88%AB%E4%BA%8E%E8%BF%99%E4%B8%A4%E7%A7%8D%E6%8A%80%E6%9C%AF%EF%BC%8C%E5%9C%A8Rust%E4%B8%AD%EF%BC%8C%E9%80%9A%E5%B8%B8%EF%BC%8Cheap%E7%9A%84%E5%9B%9E%E6%94%B6%E6%97%A2%E6%98%AF%3Ccode%3E%E5%86%B3%E5%AE%9A%E6%80%A7%E7%9A%84%EF%BC%8Cdeterministic%3C/code%3E%EF%BC%8C%E4%B9%9F%E6%98%AF%3Ccode%3E%E9%9A%90%E5%BC%8F%E7%9A%84%EF%BC%8Cimplicit%3C/code%3E%EF%BC%8C%E8%BF%99%E6%98%AFRust%E6%AF%94%E8%B5%B7%E5%85%B6%E5%AE%83%E8%AF%AD%E8%A8%80%E6%9B%B4%E5%A4%A7%E7%9A%84%E4%BC%98%E5%8A%BF%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E7%A7%8D%E5%8F%AF%E8%83%BD%E6%80%A7%E7%9A%84%E5%AE%9E%E7%8E%B0%EF%BC%8C%E6%98%AF%E5%9B%A0%E4%B8%BA%E9%81%B5%E5%BE%AA%E4%BA%86%E5%9F%BA%E4%BA%8E%E2%80%9C%3Ccode%3E%E6%89%80%E6%9C%89%E8%80%85%EF%BC%8Cownership%3C/code%3E%E2%80%9D%E7%9A%84%E6%A6%82%E5%BF%B5%EF%BC%8C%3C/p%3E%3Ch2%20id=%22Ownership%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Ownership%22%3E%C2%B6%3C/a%3EOwnership%3C/h2%3E%3Cp%3E%E9%A6%96%E5%85%88%E4%BB%8B%E7%BB%8D%E6%9C%AF%E8%AF%AD%E2%80%9C%3Cstrong%3E%3Ccode%3Eto%20own%3C/code%3E%3C/strong%3E%E2%80%9D%E3%80%82%E5%9C%A8%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%AD%EF%BC%8C%E5%AF%B9%E4%BA%8E%E4%B8%80%E4%B8%AA%E6%A0%87%E8%AF%86%E7%AC%A6%E6%88%96%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1A%EF%BC%8C%E6%8B%A5%E6%9C%89(to%20own)%E5%AF%B9%E8%B1%A1B%EF%BC%8C%E6%84%8F%E5%91%B3%E7%9D%80A%E5%8F%AF%E4%BB%A5%E5%AF%B9B%E8%BF%9B%E8%A1%8C%E5%9B%9E%E6%94%B6%EF%BC%8C%E5%AE%83%E6%9C%89%E4%B8%A4%E4%B8%AA%E6%84%8F%E4%B9%89%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3EOnly%20A%20can%20deallocate%20B.%3C/li%3E%3Cli%3EWhen%20A%20becomes%20unreachable,%20A%20must%20deallocate%20B.%3C/li%3E%3C/ul%3E%3Cp%3E%E5%9C%A8Rust%E4%B8%AD%E6%B2%A1%E6%9C%89%E6%98%BE%E7%A4%BA%E7%9A%84%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6%EF%BC%8C%E5%9B%A0%E6%AD%A4%E8%BF%99%E7%A7%8D%E5%AE%9A%E4%B9%89%E5%8F%AF%E4%BB%A5%E5%A4%8D%E8%BF%B0%E4%B8%BA%E2%80%9CA%20owns%20B%20means%20that%20B%20is%20deallocated%20%20when%20and%20only%20when%20A%20becomes%20unreachable%E2%80%9D%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E3%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ea%20=%20%3Cspan%20class=%22number%22%3E4%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eb%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22number%22%3E11%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E,%20%3Cspan%20class=%22number%22%3E33%3C/span%3E,%20%3Cspan%20class=%22number%22%3E44%3C/span%3E,%20%3Cspan%20class=%22number%22%3E55%3C/span%3E];%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%AF%A5%E7%A8%8B%E5%BA%8F%EF%BC%8C%E5%8F%98%E9%87%8F%3Ccode%3Ea%3C/code%3E%E6%8B%A5%E6%9C%89%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E5%88%9D%E5%A7%8B%E5%8C%96%E5%80%BC3%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%BD%93%3Ccode%3Ea%3C/code%3E%E7%A6%BB%E5%BC%80%E4%BA%86%E5%AE%83%E7%9A%84scope%EF%BC%8C%E5%8F%98%E6%88%90%E4%B8%8D%E5%8F%AF%E8%AE%BF%E9%97%AE%EF%BC%8C%E8%AF%A5%E5%88%9D%E5%A7%8B%E5%8C%96%E5%80%BC%E4%B8%BA3%E7%9A%84%E5%AF%B9%E8%B1%A1%E8%A2%AB%E5%9B%9E%E6%94%B6%E3%80%82%E6%88%91%E4%BB%AC%E4%B9%9F%E5%8F%AF%E4%BB%A5%E8%BF%99%E6%A0%B7%E8%AF%B4%E2%80%9C%3Ccode%3Ea%3C/code%3E%E6%98%AF%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%89%80%E6%9C%89%E8%80%85%EF%BC%8C%E5%AE%83%E7%94%B1%E5%80%BC3%E5%88%9D%E5%A7%8B%E5%8C%96%E2%80%9D%E3%80%82%E5%B0%BD%E7%AE%A1%EF%BC%8C%E6%88%91%E4%BB%AC%E4%B8%8D%E8%83%BD%E8%AF%B4%E2%80%9C%3Ccode%3Ea%3C/code%3E%E6%8B%A5%E6%9C%893%E2%80%9D%EF%BC%8C%E5%9B%A0%E4%B8%BA3%E6%98%AF%E4%B8%80%E4%B8%AA%E5%80%BC%EF%BC%8C%E4%B8%8D%E6%98%AF%E5%AF%B9%E8%B1%A1%EF%BC%9B%E4%BB%85%E5%AF%B9%E8%B1%A1%E6%89%8D%E8%83%BD%E8%A2%AB%E6%8B%A5%E6%9C%89(owned)%E3%80%82%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%EF%BC%8C%E6%9C%89%E5%BE%88%E5%A4%9A%E5%AF%B9%E8%B1%A1%E5%80%BC%E6%98%AF3%E7%9A%84%EF%BC%8C%3Ccode%3Ea%3C/code%3E%E6%8B%A5%E6%9C%89%E5%85%B6%E4%B8%AD%E4%B8%80%E4%B8%AA%E3%80%82%E5%9C%A8%E7%AC%AC%E4%BA%8C%E6%9D%A1%E8%AF%AD%E5%8F%A5%E4%B8%AD%EF%BC%8C%E8%AF%A5%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%80%BC%E5%8F%98%E4%B8%BA4%EF%BC%9B%E4%BD%86%E5%AE%83%E7%9A%84%E6%8B%A5%E6%9C%89%E8%80%85%E6%B2%A1%E6%9C%89%E5%8F%98%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E6%9C%80%E5%90%8E%E4%B8%80%E6%9D%A1%E8%AF%AD%E5%8F%A5%E4%B8%AD%EF%BC%8C%3Ccode%3Eb%3C/code%3E%E7%94%B1%E4%B8%80%E4%B8%AA5%E4%B8%AA%E5%85%83%E7%B4%A0%E7%9A%84vector%E5%88%9D%E5%A7%8B%E5%8C%96%E3%80%82%E8%BF%99%E4%B8%AAvector%E7%94%B1%E4%B8%80%E4%B8%AA%E5%A4%B4(header)%E5%92%8C%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E7%BC%93%E5%86%B2%E5%8C%BA(data%20buffer)%EF%BC%9Bheader%E7%9A%84%E5%AE%9E%E7%8E%B0%E7%94%B1%E4%B8%80%E4%B8%AA%E7%BB%93%E6%9E%84%E4%BD%93%E4%B8%89%E4%B8%AAfiled%E8%A1%A8%E7%A4%BA%EF%BC%9A%E4%B8%80%E4%B8%AA%E6%89%A7%E8%A1%8Cdata%20buffer%E7%9A%84%E6%8C%87%E9%92%88%EF%BC%8C%E4%B8%A4%E4%B8%AA%E6%95%B0(capacity%E3%80%81len)%EF%BC%9B%E6%95%B0%E6%8D%AE%E7%BC%93%E5%86%B2%E5%8C%BA%E5%8C%85%E5%90%AB5%E4%B8%AA%E6%9D%A1%E7%9B%AE%EF%BC%8C%E5%8F%A6%E5%A4%96%E5%8F%AF%E8%83%BD%E6%9C%89%E9%A2%9D%E5%A4%96%E7%9A%84%E7%A9%BA%E9%97%B4%E3%80%82%E8%BF%99%E9%87%8C%E6%88%91%E4%BB%AC%E5%8F%AF%E4%BB%A5%E8%AF%B4%E2%80%9C%3Ccode%3Eb%3C/code%3E%E6%8B%A5%E6%9C%89vector%E7%9A%84header%EF%BC%8C%E4%BB%A5%E5%8F%8A%E4%B8%80%E4%B8%AA%E6%8C%87%E9%92%88%EF%BC%8C%E8%AF%A5%E6%8C%87%E9%92%88%E5%8C%85%E5%90%AB%E6%95%B0%E6%8D%AE%E7%BC%93%E5%86%B2%E5%8C%BA%E7%9A%84%E6%8B%A5%E6%9C%89%E8%80%85%E5%A4%B4(header)%E2%80%9D%E3%80%82%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E5%BD%93%3Ccode%3Eb%3C/code%3E%E7%A6%BB%E5%BC%80%E4%BA%86%E5%AE%83%E7%9A%84scope%EF%BC%8Cvector%E7%9A%84%E5%A4%B4%E8%A2%AB%E5%9B%9E%E6%94%B6%EF%BC%9B%E5%BD%93vector%E7%9A%84header%E8%A2%AB%E5%9B%9E%E6%94%B6%E5%90%8E%EF%BC%8C%E5%AE%83%E5%8C%85%E5%90%AB%E7%9A%84%E6%8C%87%E9%92%88%E4%B8%8D%E5%8F%AF%E8%AE%BF%E9%97%AE%EF%BC%9B%E5%BD%93%E5%89%8D%E7%9A%84vector%E8%A1%A8%E7%A4%BA%E4%B8%BA%E4%B8%80%E4%B8%AA%E7%A9%BA%EF%BC%8C%E5%9B%A0%E6%AD%A4%E7%BC%93%E5%86%B2%E5%8C%BA%E7%9A%84%E6%9D%A1%E7%9B%AE%E8%A2%AB%E5%9B%9E%E6%94%B6%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8D%E6%98%AF%E6%AF%8F%E4%B8%AA%E5%BC%95%E7%94%A8%E6%89%80%E6%9C%89%E8%80%85%E6%98%AF%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E3%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea_ref%3C/span%3E%20=%20&amp;amp;a;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20a);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E9%87%8C%E7%9A%84%3Ccode%3Ea_ref%3C/code%3E%E5%8F%98%E9%87%8F%E6%8B%A5%E6%9C%89%E4%B8%80%E4%B8%AA%E5%BC%95%E7%94%A8%EF%BC%8C%E4%BD%86%E8%BF%99%E4%B8%AA%E5%BC%95%E7%94%A8%E4%BB%80%E4%B9%88%E9%83%BD%E6%B2%A1%E6%9C%89%E3%80%82%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E5%9C%A8%E8%BF%99%E4%B8%AA%E5%B5%8C%E5%85%A5%E5%9D%97%E7%9A%84%E7%BB%93%E6%9D%9F%E4%BD%8D%E7%BD%AE%EF%BC%8C%3Ccode%3Ea_ref%3C/code%3E%E5%8F%98%E9%87%8F%E7%A6%BB%E5%BC%80%E4%BA%86%E5%AE%83%E7%9A%84scope%EF%BC%8C%E8%AF%A5%E5%BC%95%E7%94%A8%E8%A2%AB%E5%9B%9E%E6%94%B6%EF%BC%8C%E4%BD%86%E5%BC%95%E7%94%A8%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%8D%B3%E8%BF%99%E4%B8%AA%E5%8C%85%E5%90%AB%E5%80%BC3%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E6%B2%A1%E6%9C%89%E7%AB%8B%E5%8D%B3%E8%A2%AB%E5%9B%9E%E6%94%B6%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E5%BF%85%E9%A1%BB%E5%9C%A8%E6%9C%80%E5%90%8E%E4%B8%80%E6%9D%A1%E8%AF%AD%E5%8F%A5%E6%89%93%E5%8D%B0%E8%BE%93%E5%87%BA%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%BA%E4%BA%86%E7%A1%AE%E4%BF%9D%E6%AF%8F%E4%B8%AA%E5%AF%B9%E8%B1%A1%E8%87%AA%E5%8A%A8%E5%9B%9E%E6%94%B6%EF%BC%8CRust%E4%B8%AD%E6%9C%89%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E8%A7%84%E5%88%99%EF%BC%8C%E5%9C%A8%E6%AF%8F%E4%B8%AA%E6%89%A7%E8%A1%8C%E7%9A%84%E7%9E%AC%E6%97%B6%EF%BC%8C%E6%AF%8F%E4%B8%AA%E5%AF%B9%E8%B1%A1%E6%9C%89%E4%B8%94%E4%BB%85%E8%83%BD%E6%9C%89%E4%B8%80%E4%B8%AA%E2%80%9Cowner%E2%80%9D%E3%80%82%E5%BD%93%E8%BF%99%E4%B8%AAowner%E8%A2%AB%E5%9B%9E%E6%94%B6%EF%BC%8C%E8%AF%A5%E5%AF%B9%E8%B1%A1%E8%87%AA%E8%BA%AB%E8%A2%AB%E5%9B%9E%E6%94%B6%E3%80%82%E5%A6%82%E6%9E%9C%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E6%9C%89%E5%87%A0%E4%B8%AAowner%EF%BC%8C%E8%BF%99%E4%B8%AA%E5%AF%B9%E8%B1%A1%E5%8F%AF%E8%83%BD%E8%A2%AB%E5%9B%9E%E6%94%B6%E5%87%A0%E6%AC%A1%EF%BC%8C%E8%BF%99%E6%98%AF%E4%B8%8D%E8%A2%AB%E5%85%81%E8%AE%B8%E7%9A%84%E3%80%82%E5%A6%82%E6%9E%9C%E5%AF%B9%E8%B1%A1%E6%B2%A1%E6%9C%89owner%EF%BC%8C%E8%AF%A5%E5%AF%B9%E8%B1%A1%E4%BB%8E%E4%B8%8D%E8%A2%AB%E5%9B%9E%E6%94%B6%EF%BC%8C%E8%BF%99%E7%A7%8D%E6%83%85%E5%86%B5%E5%8F%AB%E5%81%9A%E2%80%9C%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%EF%BC%8Cmemory%20leak%E2%80%9D%E3%80%82%3C/p%3E%3Ch2%20id=%22Destructors%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Destructors%22%3E%C2%B6%3C/a%3EDestructors%3C/h2%3E%3Cp%3E%E6%88%91%E4%BB%AC%E7%9C%8B%E5%88%B0%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%88%9B%E5%BB%BA%E6%9C%89%E4%B8%A4%E6%AD%A5%EF%BC%9A%E7%BB%99%E5%AF%B9%E8%B1%A1%E5%88%86%E9%85%8D%E5%86%85%E5%AD%98%EF%BC%8C%E5%88%9D%E5%A7%8B%E5%8C%96%E8%BF%99%E4%B8%AA%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E7%9A%84%E5%80%BC%E3%80%82%E5%AF%B9%E4%BA%8E%E5%A4%8D%E6%9D%82%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%88%9D%E5%A7%8B%E5%8C%96%E6%98%AF%E5%A6%82%E6%AD%A4%E5%A4%8D%E6%9D%82%EF%BC%8C%E9%80%9A%E5%B8%B8%E9%9C%80%E8%A6%81%E4%BD%BF%E7%94%A8%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E5%AE%9E%E7%8E%B0%E3%80%82%E8%BF%99%E4%B8%AA%E5%87%BD%E6%95%B0%E5%8F%AB%E2%80%9C%E6%9E%84%E9%80%A0%E5%99%A8%E2%80%9D%EF%BC%8C%E7%94%A8%E6%9D%A5%E2%80%9C%E6%9E%84%E9%80%A0%E2%80%9D%E4%B8%80%E4%B8%AA%E6%96%B0%E7%9A%84%E5%AF%B9%E8%B1%A1%E3%80%82%3C/p%3E%3Cp%3E%E6%88%91%E4%BB%AC%E5%88%9A%E7%9C%8B%E5%88%B0%EF%BC%8C%E5%BD%93%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E8%A2%AB%E5%9B%9E%E6%94%B6%EF%BC%8C%E4%BC%9A%E5%8F%91%E7%94%9F%E4%B8%80%E4%BA%9B%E5%A4%8D%E6%9D%82%E6%83%85%E5%86%B5%E3%80%82%E5%A6%82%E6%9E%9C%E5%9C%A8heap%E4%B8%AD%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E5%BC%95%E7%94%A8%E5%8F%A6%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%EF%BC%8C%E4%B8%80%E4%B8%AA%E7%BA%A7%E8%81%94(cascade)%E7%9A%84%E5%9B%9E%E6%94%B6%E5%8F%AF%E8%83%BD%E4%BC%9A%E5%8F%91%E7%94%9F%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%AF%B9%E8%B1%A1%E7%9A%84%E2%80%9C%E9%94%80%E6%AF%81%E2%80%9D%E5%8F%AF%E8%83%BD%E9%9C%80%E8%A6%81%E7%94%B1%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E5%A4%84%E7%90%86%EF%BC%8C%E7%A7%B0%E4%BD%9C%E2%80%9Cdestructor%EF%BC%8C%E7%84%9A%E7%83%A7%E7%82%89%EF%BC%8C%E9%94%80%E6%AF%81%E8%A3%85%E7%BD%AE%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E9%80%9A%E5%B8%B8%E9%94%80%E6%AF%81%E5%99%A8%E6%98%AF%E5%B1%9E%E4%BA%8E%E6%A0%87%E5%87%86%E5%BA%93%E7%9A%84%E4%B8%80%E9%83%A8%E5%88%86%EF%BC%8C%E4%BD%86%E6%9C%89%E6%97%B6%E4%BD%A0%E5%8F%AF%E8%83%BD%E9%9C%80%E8%A6%81%E5%9C%A8%E5%AF%B9%E8%B1%A1%E5%9B%9E%E6%94%B6%E6%97%B6%E5%81%9A%E4%B8%80%E4%BA%9Bcleanup%20code%E6%93%8D%E4%BD%9C%EF%BC%8C%E6%89%80%E4%BB%A5%E4%BD%A0%E9%9C%80%E8%A6%81%E5%86%99%E4%B8%80%E4%B8%AAdestructor%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E19%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E20%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E21%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E22%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E23%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E24%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E25%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E26%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E27%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E28%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ECommunicationChannel%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20address:%20%3Cspan%20class=%22type%22%3EString%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20port:%20%3Cspan%20class=%22type%22%3Eu16%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EDrop%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ECommunicationChannel%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edrop%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Closing%20port%20&amp;#123;&amp;#125;:&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.address,%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.port);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ECommunicationChannel%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ecreate%3C/span%3E(address:%20&amp;amp;%3Cspan%20class=%22type%22%3Estr%3C/span%3E,%20port:%20%3Cspan%20class=%22type%22%3Eu16%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20CommunicationChannel%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Operning%20port%20&amp;#123;&amp;#125;:&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20address,%20port);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20CommunicationChannel%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20address:%20address.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E(),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20port:%20port,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Esend%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E,%20msg:%20&amp;amp;%3Cspan%20class=%22type%22%3Estr%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Sent%20to%20&amp;#123;&amp;#125;:&amp;#123;&amp;#125;%20the%20message%20&amp;#x27;&amp;#123;&amp;#125;&amp;#x27;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.address,%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.port,%20msg);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Echannel%3C/span%3E%20=%20CommunicationChannel::%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecreate%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;usb4&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22number%22%3E879%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Echannel.%3Cspan%20class=%22title%20function_%20invoke__%22%3Esend%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Message%201&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Echannel%3C/span%3E%20=%20CommunicationChannel::%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecreate%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;eth1&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22number%22%3E12000%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Echannel.%3Cspan%20class=%22title%20function_%20invoke__%22%3Esend%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Message%202&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Echannel.%3Cspan%20class=%22title%20function_%20invoke__%22%3Esend%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Message%203&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%AF%A5%E7%A8%8B%E5%BA%8F%E5%B0%86%E6%89%93%E5%8D%B0%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20plaintext%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3EOperning%20port%20usb4:879%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ESent%20to%20usb4:879%20the%20message%20&amp;#x27;Message%201&amp;#x27;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EOperning%20port%20eth1:12000%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ESent%20to%20eth1:12000%20the%20message%20&amp;#x27;Message%202&amp;#x27;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EClosing%20port%20eth1:12000%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ESent%20to%20usb4:879%20the%20message%20&amp;#x27;Message%203&amp;#x27;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EClosing%20port%20usb4:879%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%AC%AC%E4%BA%8C%E6%9D%A1%E8%AF%AD%E5%8F%A5%E5%A3%B0%E6%98%8E%E6%96%B0%E7%9A%84%E7%B1%BB%E5%9E%8BCommunicationChannel%E7%94%A8%E4%BA%8E%E5%AE%9E%E7%8E%B0%3Ccode%3EDrop%3C/code%3E%E3%80%82%E8%BF%99%E4%B8%AAtrait%E6%9C%89%E4%B8%80%E4%B8%AA%E7%89%B9%E6%9C%89%E7%9A%84%E6%96%B9%E6%B3%95%3Ccode%3Edrop%3C/code%3E%EF%BC%8C%E5%AE%83%E4%BC%9A%E5%9C%A8%E5%AF%B9%E8%B1%A1%E8%A2%AB%E5%9B%9E%E6%94%B6%E6%97%B6%E8%87%AA%E5%8A%A8%E8%A2%AB%E8%B0%83%E7%94%A8%EF%BC%8C%E5%9B%A0%E6%AD%A4%E5%AE%83%E6%98%AF%E4%B8%80%E4%B8%AA%E2%80%9Cdestructor%E2%80%9D%E3%80%82%E9%80%9A%E5%B8%B8%EF%BC%8C%E7%BB%99%E4%B8%80%E4%B8%AA%E7%B1%BB%E5%9E%8B%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E9%94%80%E6%AF%81%E5%99%A8%EF%BC%8C%E4%B8%BA%E8%AF%A5%E7%B1%BB%E5%9E%8B%E5%AE%9E%E7%8E%B0%E8%BF%99%E4%B8%AA%3Ccode%3EDrop%3C/code%3Etrait%E5%8D%B3%E5%8F%AF%E3%80%82%E5%9B%A0%E4%B8%BA%E4%BB%BB%E4%BD%95%E6%B2%A1%E6%9C%89%E8%A2%AB%E5%AE%9A%E4%B9%89%E7%9A%84trait%EF%BC%8C%E4%B8%8D%E8%83%BD%E5%9C%A8%E7%A8%8B%E5%BA%8F%E5%A4%96%E9%83%A8%E5%AE%9E%E7%8E%B0%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%B8%89%E6%9D%A1%E8%AF%AD%E5%8F%A5%E6%98%AF%E4%B8%80%E4%B8%AA%E8%AF%AD%E5%8F%A5%E5%9D%97%EF%BC%8C%E4%B8%BA%E7%BB%93%E6%9E%84%E4%BD%93%E5%AE%9A%E4%B9%89%E4%BA%86%E4%B8%A4%E4%B8%AA%E6%96%B9%E6%B3%95%EF%BC%9A%3Ccode%3Ecreate%3C/code%3E%E6%9E%84%E9%80%A0%E5%99%A8%EF%BC%8C%3Ccode%3Esend%3C/code%3E%E6%96%B9%E6%B3%95%E3%80%82%3C/p%3E%3Cp%3E%E6%9C%80%E5%90%8E%E6%98%AF%E5%BA%94%E7%94%A8%E4%BB%A3%E7%A0%81%E3%80%82%E5%88%9B%E5%BB%BA%E4%BA%86%E4%B8%80%E4%B8%AACommunicationChannel%EF%BC%8C%E8%BF%99%E4%B8%AA%E5%88%9B%E5%BB%BA%E4%BC%9A%E6%89%93%E5%8D%B0%E4%B8%80%E8%A1%8C%E5%86%85%E5%AE%B9%E3%80%82%E6%8E%A5%E7%9D%80%E8%B0%83%E7%94%A8%E4%BA%86send%E6%96%B9%E6%B3%95%EF%BC%8C%E6%89%93%E5%8D%B0%E7%AC%AC%E4%BA%8C%E8%A1%8C%E5%86%85%E5%AE%B9%E3%80%82%E6%8E%A5%E7%9D%80%E6%98%AF%E5%86%85%E5%B5%8C%E8%AF%AD%E5%8F%A5%E5%9D%97%EF%BC%8C%E5%88%9B%E5%BB%BA%E4%BA%86%E5%8F%A6%E4%B8%80%E4%B8%AAchannel%EF%BC%8C%E6%89%93%E5%8D%B0%E7%AC%AC%E4%B8%89%E3%80%81%E5%9B%9B%E8%A1%8C%E5%86%85%E5%AE%B9%E3%80%82%3C/p%3E%3Cp%3E%E5%B5%8C%E5%A5%97%E8%AF%AD%E5%8F%A5%E5%9D%97%E5%86%85%E7%9A%84%E5%8F%98%E9%87%8F%E5%90%8D%E8%B7%9F%E5%AD%98%E5%9C%A8%E7%9A%84%E5%8F%98%E9%87%8F%E5%90%8D%E7%9B%B8%E5%90%8C%EF%BC%8C%E8%BF%99%E4%BC%9A%E5%AF%BC%E8%87%B4%E5%8F%98%E9%87%8F%E6%8A%95%E5%BD%B1(shadow)%E3%80%82%3C/p%3E%3Cp%3E%E6%8E%A5%E7%9D%80%E5%B5%8C%E5%A5%97%E8%AF%AD%E5%8F%A5%E7%BB%93%E6%9D%9F%E3%80%82%E8%BF%99%E5%8F%91%E7%94%9F%E7%8E%87%E5%86%85%E9%83%A8%E5%8F%98%E9%87%8F%E8%A2%AB%E9%94%80%E6%AF%81%EF%BC%8C%E5%9B%A0%E6%AD%A4%E5%AE%83%E7%9A%84%3Ccode%3Edrop%3C/code%3E%E6%96%B9%E6%B3%95%E8%A2%AB%E8%B0%83%E7%94%A8%EF%BC%8C%E4%BA%8E%E6%98%AF%E6%89%93%E5%8D%B0%E7%AC%AC%E4%BA%94%E8%A1%8C%E3%80%82%3C/p%3E%3Cp%3E%E7%8E%B0%E5%9C%A8%EF%BC%8C%E5%B5%8C%E5%A5%97%E8%AF%AD%E5%8F%A5%E5%9D%97%E7%BB%93%E6%9D%9F%E5%90%8E%EF%BC%8C%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8F%98%E9%87%8F%E5%86%8D%E6%AC%A1%E5%8F%AF%E8%A7%81%E3%80%82%3Ccode%3Esend%3C/code%3E%E6%96%B9%E6%B3%95%E5%86%8D%E6%AC%A1%E8%B0%83%E7%94%A8%EF%BC%8C%E6%89%93%E5%8D%B0%E4%B8%80%E8%A1%8C%E3%80%82%3C/p%3E%3Cp%3E%E6%9C%80%E5%90%8E%EF%BC%8C%E5%8F%98%E9%87%8F%E8%A2%AB%E9%94%80%E6%AF%81%EF%BC%8C%E6%89%93%E5%8D%B0%E6%9C%80%E5%90%8E%E4%B8%80%E8%A1%8C%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8Rust%E4%B8%AD%EF%BC%8C%E5%86%85%E5%AD%98%E6%97%A9%E5%B7%B2%E7%94%B1%E8%AF%AD%E8%A8%80%E5%92%8C%E6%A0%87%E5%87%86%E5%BA%93%E9%87%8A%E6%94%BE%E6%8E%89%E4%BA%86%EF%BC%8C%E5%9B%A0%E6%AD%A4%E6%B2%A1%E6%9C%89%E5%BF%85%E8%A6%81%E5%83%8FC%E8%AF%AD%E8%A8%80%E9%82%A3%E6%A0%B7%E8%B0%83%E7%94%A8%3Ccode%3Efree%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E6%88%96%E5%83%8FC++%E9%82%A3%E6%A0%B7%E8%B0%83%E7%94%A8%3Ccode%3Edelete%3C/code%3E%E3%80%82%E4%BD%86%E5%85%B6%E4%BB%96%E8%B5%84%E6%BA%90%E4%B8%8D%E4%BC%9A%E8%87%AA%E5%8A%A8%E9%87%8A%E6%94%BE%E3%80%82%E5%9B%A0%E6%AD%A4%E9%94%80%E6%AF%81%E5%99%A8(destructor)%E5%AF%B9%E4%BA%8E%E9%82%A3%E4%BA%9B%E5%89%AF%E4%BD%9C%E7%94%A8%E7%9A%84%E5%AE%9E%E7%8E%B0%E9%9D%9E%E5%B8%B8%E6%9C%89%E7%94%A8%EF%BC%9A%E8%AF%B8%E5%A6%82%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%EF%BC%8C%E9%80%9A%E8%AE%AF%E5%A4%84%E7%90%86%EF%BC%8CGUI%E7%AA%97%E5%8F%A3%EF%BC%8C%E5%9B%BE%E5%BD%A2%E8%B5%84%E6%BA%90%E7%AD%89%EF%BC%8C%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%AD%E6%97%A9%E5%B7%B2%E4%B8%BA%E8%B5%84%E6%BA%90%E7%9A%84%E5%A4%84%E7%90%86%E7%9A%84%E4%BB%BB%E4%BD%95%E7%B1%BB%E5%9E%8B%E6%8F%90%E4%BE%9B%E4%BA%86%3Ccode%3EDrop%3C/code%3E%E5%AE%9E%E7%8E%B0%E3%80%82%3C/p%3E%3Cp%3E%E9%94%80%E6%AF%81%E5%99%A8%E5%8F%AF%E4%BB%A5%E6%9B%B4%E5%A5%BD%E5%9C%B0%E7%90%86%E8%A7%A3%E5%86%85%E5%AD%98%E7%9A%84%E7%AE%A1%E7%90%86%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20(%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EDrop%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edrop%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Dropped%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.%3Cspan%20class=%22number%22%3E0%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_a%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3ES%3C/span%3E%20(%3Cspan%20class=%22number%22%3E1%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_b%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3ES%3C/span%3E%20(%3Cspan%20class=%22number%22%3E2%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_c%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3ES%3C/span%3E%20(%3Cspan%20class=%22number%22%3E3%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_d%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3ES%3C/span%3E%20(%3Cspan%20class=%22number%22%3E4%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_e%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3ES%3C/span%3E%20(%3Cspan%20class=%22number%22%3E5%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_f%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3ES%3C/span%3E%20(%3Cspan%20class=%22number%22%3E6%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;INNER&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;OUTER&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E6%89%93%E5%8D%B0%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20plaintext%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3EINNER%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EDropped%206%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EDropped%205%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EDropped%204%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EOUTER%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EDropped%203%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EDropped%202%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EDropped%201%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%B3%A8%E6%84%8F%E5%88%B0%E5%AF%B9%E8%B1%A1%E7%9A%84%E9%94%80%E6%AF%81%E7%9A%84%E9%A1%BA%E5%BA%8F%E8%B7%9F%E6%9E%84%E9%80%A0%E9%A1%BA%E5%BA%8F%E7%9B%B8%E5%8F%8D%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20(%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EDrop%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edrop%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Dropped%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.%3Cspan%20class=%22number%22%3E0%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3ES%3C/span%3E%20(%3Cspan%20class=%22number%22%3E1%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3ES%3C/span%3E%20(%3Cspan%20class=%22number%22%3E2%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3ES%3C/span%3E%20(%3Cspan%20class=%22number%22%3E3%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3ES%3C/span%3E%20(%3Cspan%20class=%22number%22%3E4%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3ES%3C/span%3E%20(%3Cspan%20class=%22number%22%3E5%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3ES%3C/span%3E%20(%3Cspan%20class=%22number%22%3E6%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;INNER&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;OUTER&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E6%89%93%E5%8D%B0%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20plaintext%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3EDropped%201%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EDropped%202%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EDropped%203%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EDropped%204%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EDropped%205%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EDropped%206%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EINNER%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EOUTER%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%9B%A0%E4%B8%BA%E5%8F%AA%E6%9C%89%E5%8D%A0%E4%BD%8D%E7%AC%A6%EF%BC%8C%E5%9B%A0%E6%AD%A4%E6%89%80%E6%9C%89%E5%AF%B9%E8%B1%A1%E9%83%BD%E6%98%AF%E4%B8%B4%E6%97%B6%E7%9A%84%E3%80%82%E4%B8%B4%E6%97%B6%E5%AF%B9%E8%B1%A1%E5%9C%A8%E5%AE%83%E4%BB%AC%E8%AF%AD%E5%8F%A5%E7%BB%93%E6%9D%9F%E4%BD%8D%E7%BD%AE%E5%B0%B1%E9%94%80%E6%AF%81%E4%BA%86%EF%BC%8C%E5%8D%B3%E7%BB%9F%E8%AE%A1%E5%88%B0%E5%88%86%E5%8F%B7(%3Ccode%3E;%3C/code%3E)%E7%AB%8B%E5%8D%B3%E9%94%80%E6%AF%81%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8A%E9%9D%A2%E7%9A%84%E7%A8%8B%E5%BA%8F%E5%92%8C%E4%B8%8B%E9%9D%A2%E7%9A%84%E6%98%AF%E7%AD%89%E4%BB%B7%E7%9A%84%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20(%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EDrop%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edrop%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Dropped%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.%3Cspan%20class=%22number%22%3E0%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Es%3C/span%3E%20(%3Cspan%20class=%22number%22%3E1%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3ES%3C/span%3E%20(%3Cspan%20class=%22number%22%3E2%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3ES%3C/span%3E%20(%3Cspan%20class=%22number%22%3E3%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3ES%3C/span%3E%20(%3Cspan%20class=%22number%22%3E4%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3ES%3C/span%3E%20(%3Cspan%20class=%22number%22%3E5%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3ES%3C/span%3E%20(%3Cspan%20class=%22number%22%3E6%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;INNER&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;OUTER&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Ch2%20id=%22Assignment-Semantics%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Assignment-Semantics%22%3E%C2%B6%3C/a%3EAssignment%20Semantics%3C/h2%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E7%A8%8B%E5%BA%8F%E5%81%9A%E4%BA%86%E4%BB%80%E4%B9%88%EF%BC%9F%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ev1%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22number%22%3E11%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E,%20%3Cspan%20class=%22number%22%3E33%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ev2%3C/span%3E%20=%20v1;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%A6%82%E5%BF%B5%E4%B8%8A%EF%BC%8C%3C/p%3E%3Cp%3E%E9%A6%96%E5%85%88%EF%BC%8C%3Ccode%3Ev1%3C/code%3E%E7%9A%84%E6%A0%87%E5%A4%B4(header)%E8%A2%AB%E5%88%86%E9%85%8D%E5%88%B0%E4%BA%86%E6%A0%88%E3%80%82%E7%84%B6%E5%90%8E%EF%BC%8C%3Ccode%3Ev1%3C/code%3E%E7%9A%84%E5%86%85%E5%AE%B9%EF%BC%8C%E4%BC%9A%E5%9C%A8%E5%A0%86%E4%B8%BA%E8%AF%A5%E5%86%85%E5%AE%B9%E5%88%86%E9%85%8D%E4%B8%80%E4%B8%AA%E7%BC%93%E5%86%B2%E5%8C%BA%EF%BC%8C%3Ccode%3Ev1%3C/code%3E%E7%9A%84%E5%85%83%E7%B4%A0%E4%B9%8B%E8%A2%AB%E6%8B%B7%E8%B4%9D%E5%88%B0%E8%BF%99%E4%B8%AA%E7%BC%93%E5%86%B2%E5%8C%BA%E3%80%82%E7%84%B6%E5%90%8E%E6%A0%87%E5%A4%B4(header)%E8%A2%AB%E5%88%9D%E5%A7%8B%E5%8C%96%EF%BC%8C%E4%BD%9C%E4%B8%BA%E5%BC%95%E7%94%A8%E6%8C%87%E5%90%91%E6%96%B0%E5%88%86%E9%85%8D%E7%9A%84%E5%A0%86%E7%BC%93%E5%86%B2%E3%80%82%3C/p%3E%3Cp%3E%E7%84%B6%E5%90%8E%EF%BC%8C%3Ccode%3Ev2%3C/code%3E%E7%9A%84%E6%A0%87%E5%A4%B4%E8%A2%AB%E5%88%86%E9%85%8D%E5%9C%A8%E6%A0%88%E3%80%82%E6%8E%A5%E7%9D%80%EF%BC%8C%E7%94%A8%3Ccode%3Ev1%3C/code%3E%E7%9A%84%E5%80%BC%E5%88%9D%E5%A7%8B%E5%8C%96%3Ccode%3Ev2%3C/code%3E%E3%80%82%E4%BD%86%EF%BC%8C%E8%BF%99%E6%98%AF%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%9A%84%EF%BC%9F%3C/p%3E%3Cp%3E%E9%80%9A%E5%B8%B8%E8%87%B3%E5%B0%91%E6%9C%89%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F%E5%AE%9E%E7%8E%B0%E8%BF%99%E7%A7%8D%E6%93%8D%E4%BD%9C%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%3Cp%3E%3Cstrong%3E%3Ccode%3EShare%20semantics%3C/code%3E%3C/strong%3E%EF%BC%9A%3Ccode%3Ev1%3C/code%3E%E7%9A%84%E6%A0%87%E5%A4%B4%E8%A2%AB%E6%8B%B7%E8%B4%9D%E5%88%B0%3Ccode%3Ev2%3C/code%3E%E7%9A%84%E6%A0%87%E5%A4%B4%EF%BC%8C%E5%85%B6%E5%AE%83%E4%B8%8D%E5%8F%91%E7%94%9F%E4%BB%BB%E4%BD%95%E6%93%8D%E4%BD%9C%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%94%A8%3Ccode%3Ev1%3C/code%3E%EF%BC%8C%E4%B9%9F%E5%8F%AF%E4%BB%A5%E7%94%A8%3Ccode%3Ev2%3C/code%3E%EF%BC%8C%E5%AE%83%E4%BB%AC%E9%83%BD%E5%90%8C%E6%97%B6%E6%8C%87%E5%90%91%E7%9B%B8%E5%90%8C%E7%9A%84%E5%A0%86%E7%BC%93%E5%86%B2%E5%8C%BA%EF%BC%9B%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%AE%83%E4%BB%AC%E6%8C%87%E5%90%91%E5%90%8C%E6%A0%B7%E7%9A%84%E5%86%85%E5%AE%B9%EF%BC%8C%E4%B8%8D%E6%98%AF%E7%9B%B8%E7%AD%89%E7%9A%84%EF%BC%8C%E8%80%8C%E6%98%AF%E5%94%AF%E4%B8%80%E7%9A%84%E3%80%82%E8%BF%99%E7%A7%8D%E6%9C%AF%E8%AF%AD%E7%9A%84%E5%B8%B8%E8%A7%81%E4%BA%8E%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E8%AF%AD%E8%A8%80%EF%BC%8C%E6%AF%94%E5%A6%82Java%E3%80%82%3C/p%3E%3C/li%3E%3Cli%3E%3Cp%3E%3Cstrong%3E%3Ccode%3ECopy%20semantics%3C/code%3E%3C/strong%3E%EF%BC%9A%E5%88%86%E9%85%8D%E5%8F%A6%E5%A4%96%E7%9A%84%E5%A0%86%E7%BC%93%E5%86%B2%E3%80%82%E5%AE%83%E5%92%8C%3Ccode%3Ev1%3C/code%3E%E4%BD%BF%E7%94%A8%E7%9A%84%E7%BC%93%E5%86%B2%E5%8C%BA%E6%9C%89%E5%90%8C%E6%A0%B7%E7%9A%84%E5%A4%A7%E5%B0%8F%EF%BC%8C%E5%B9%B6%E5%B0%86%E5%85%88%E5%AD%98%E7%9A%84%E7%BC%93%E5%86%B2%E5%8C%BA%E5%86%85%E5%AE%B9%E6%8B%B7%E8%B4%9D%E5%88%B0%E6%96%B0%E7%9A%84%E7%BC%93%E5%86%B2%E5%8C%BA%E3%80%82%E7%84%B6%E5%90%8E%3Ccode%3Ev2%3C/code%3E%E7%9A%84%E6%A0%87%E5%A4%B4%E8%A2%AB%E5%88%9D%E5%A7%8B%E5%8C%96%E6%8C%87%E5%90%91%E6%96%B0%E5%88%86%E9%85%8D%E7%9A%84%E7%BC%93%E5%86%B2%E5%8C%BA%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E4%B8%A4%E4%B8%AA%E5%8F%98%E9%87%8F%E6%8C%87%E5%90%91%E4%B8%A4%E4%B8%AA%E4%B8%8D%E5%90%8C%E7%9A%84%E7%BC%93%E5%86%B2%E5%8C%BA%E5%B9%B6%E4%B8%94%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9A%84%E5%86%85%E5%AE%B9%E7%9B%B8%E5%90%8C%E3%80%82%E8%BF%99%E7%A7%8D%E5%AE%9E%E7%8E%B0%EF%BC%8C%E6%98%AFC++%E7%9A%84%E9%BB%98%E8%AE%A4%E6%9C%BA%E5%88%B6%E3%80%82%3C/p%3E%3C/li%3E%3Cli%3E%3Cp%3E%3Cstrong%3E%3Ccode%3EMove%20semantics%3C/code%3E%3C/strong%3E%EF%BC%9A%3Ccode%3Ev1%3C/code%3E%E7%9A%84%E6%A0%87%E5%A4%B4%E8%A2%AB%E6%8B%B7%E8%B4%9D%E5%88%B0%3Ccode%3Ev2%3C/code%3E%E7%9A%84%E6%A0%87%E5%A4%B4%EF%BC%8C%E5%85%B6%E5%AE%83%E4%B8%8D%E5%8F%91%E7%94%9F%E4%BB%BB%E4%BD%95%E6%93%8D%E4%BD%9C%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%3Ccode%3Ev2%3C/code%3E%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%EF%BC%8C%E5%AE%83%E7%9A%84%E6%A0%87%E5%A4%B4%E6%8C%87%E5%90%91%E5%8E%9F%E5%85%88%3Ccode%3Ev1%3C/code%3E%E5%88%86%E9%85%8D%E7%9A%84%E5%A0%86%E7%BC%93%E5%86%B2%E5%8C%BA%EF%BC%8C%E4%BD%86%3Ccode%3Ev1%3C/code%3E%E4%B8%8D%E8%83%BD%E5%86%8D%E8%A2%AB%E4%BD%BF%E7%94%A8%E3%80%82%E8%BF%99%E7%A7%8D%E5%AE%9E%E7%8E%B0%EF%BC%8C%E6%98%AFRust%E7%9A%84%E9%BB%98%E8%AE%A4%E6%9C%BA%E5%88%B6%E3%80%82%3C/p%3E%3C/li%3E%3C/ul%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ev1%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22number%22%3E11%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E,%20%3Cspan%20class=%22number%22%3E33%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ev2%3C/span%3E%20=%20v1;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20v1.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E());%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%AF%A5%E4%BB%A3%E7%A0%81%E4%BA%A7%E7%94%9F%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%EF%BC%9A%E2%80%9Cuse%20of%20moved%20value:%20%3Ccode%3Ev1%3C/code%3E%E2%80%9D%E3%80%82%E5%BD%93%3Ccode%3Ev1%3C/code%3E%E7%9A%84%E5%80%BC%E6%8C%87%E6%B4%BE%E7%BB%99%3Ccode%3Ev2%3C/code%3E%E6%98%AF%EF%BC%8C%E5%8F%98%E9%87%8F%3Ccode%3Ev1%3C/code%3E%E7%BB%88%E6%AD%A2%E5%B9%B6%E9%80%80%E5%87%BA%E3%80%82%E5%86%8D%E6%AC%A1%E4%BD%BF%E7%94%A8%E6%98%AF%E4%B8%8D%E8%A2%AB%E7%BC%96%E8%AF%91%E5%99%A8%E5%85%81%E8%AE%B8%E7%9A%84%E3%80%82%3C/p%3E%3Cp%3E%E5%85%88%E7%9C%8B%E7%9C%8B%EF%BC%8C%E4%B8%BA%E4%BB%80%E4%B9%88Rust%E4%B8%8D%E5%AE%9E%E7%8E%B0%3Cstrong%3Eshare%20semantics%3C/strong%3E%E3%80%82%E9%A6%96%E5%85%88%EF%BC%8C%E5%A6%82%E6%9E%9C%E5%8F%98%E9%87%8F%E6%98%AF%E5%8F%AF%E5%8F%98%E7%9A%84%EF%BC%8C%E8%BF%99%E7%A7%8D%E8%AF%AD%E4%B9%89(semnatics)%E4%BC%9A%E6%9C%89%E5%87%A0%E5%88%86%E8%BF%B7%E6%83%91%E3%80%82%E5%9C%A8%E5%85%B1%E4%BA%AB%E6%9C%AF%E8%AF%AD(share%20semantics)%EF%BC%8C%E9%80%9A%E8%BF%87%E4%B8%80%E4%B8%AA%E5%8F%98%E9%87%8F%E6%9B%B4%E6%94%B9%E4%B8%80%E4%B8%AA%E6%9D%A1%E7%9B%AE%EF%BC%8C%E8%BF%99%E4%B8%AA%E6%9D%A1%E7%9B%AE%E4%B9%9F%E5%8F%AF%E4%BB%A5%E8%A2%AB%E5%85%B6%E5%AE%83%E5%8F%98%E9%87%8F%E6%9B%B4%E6%94%B9%E5%92%8C%E8%AE%BF%E9%97%AE%E3%80%82%E8%BF%99%E4%B8%8D%E6%98%AF%E7%9B%B4%E8%A7%89%EF%BC%8C%E5%8F%AF%E8%83%BD%E6%98%AFbug%E7%9A%84%E6%A0%B9%E6%BA%90%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%85%B1%E4%BA%AB%E6%9C%AF%E8%AF%AD(share%20senantics)%E4%BB%85%E5%9C%A8%E5%8F%AA%E8%AF%BB%E6%95%B0%E6%8D%AE(read-only%20data)%E8%83%BD%E8%A2%AB%E6%8E%A5%E6%94%B6%E3%80%82%3C/p%3E%3Cp%3E%E4%BD%86%E8%BF%99%E9%87%8C%E6%9C%89%E4%B8%AA%E5%A4%A7%E9%97%AE%E9%A2%98%EF%BC%8C%E5%AF%B9%E4%BA%8E%E5%86%85%E5%AD%98%E5%9B%9E%E6%94%B6%E3%80%82%E5%A6%82%E6%9E%9C%E4%BD%BF%E7%94%A8%E5%85%B1%E4%BA%AB%E6%9C%AF%E8%AF%AD%EF%BC%8C%3Ccode%3Ev1%3C/code%3E%E5%92%8C%3Ccode%3Ev2%3C/code%3E%E9%83%BD%E5%B0%86%E4%BC%9A%E6%8B%A5%E6%9C%89%E5%90%8C%E4%B8%80%E4%B8%AA%E5%8D%95%E4%B8%80%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BC%93%E5%86%B2%E5%8C%BA%EF%BC%8C%E5%9B%A0%E6%AD%A4%E5%BD%93%E4%BB%96%E4%BB%AC%E8%A2%AB%E5%9B%9E%E6%94%B6%E6%97%B6%EF%BC%8C%E5%90%8C%E6%A0%B7%E7%9A%84%E5%A0%86%E7%BC%93%E5%86%B2%E5%8C%BA%E4%BC%9A%E8%A2%AB%E5%9B%9E%E6%94%B6%E4%B8%A4%E6%AC%A1%E3%80%82%E4%B8%80%E4%B8%AA%E7%BC%93%E5%86%B2%E5%8C%BA%E4%B8%8D%E8%83%BD%E8%A2%AB%E5%88%86%E9%85%8D%E4%B8%A4%E6%AC%A1%EF%BC%8C%E8%80%8C%E4%B8%8D%E5%AF%BC%E8%87%B4%E5%86%85%E5%AD%98%E6%8D%9F%E8%80%97%E4%BB%A5%E5%8F%8A%E5%BC%95%E8%B5%B7%E7%A8%8B%E5%BA%8F%E5%B4%A9%E6%BA%83(program%20malfunction)%E3%80%82%E8%A6%81%E8%A7%A3%E5%86%B3%E8%BF%99%E4%B8%AA%E9%97%AE%E9%A2%98%EF%BC%8C%E8%AF%AD%E8%A8%80%E6%9C%AC%E8%BA%AB%E9%9C%80%E8%A6%81%E5%9C%A8scope%E7%BB%93%E6%9D%9F%E6%97%B6%E4%B8%8D%E5%AF%B9%E5%8F%98%E9%87%8F%E4%BD%BF%E7%94%A8%E7%9A%84%E5%86%85%E8%BF%9B%E8%A1%8C%E5%9B%9E%E6%94%B6%EF%BC%8C%E8%80%8C%E6%98%AF%E5%87%AD%E5%80%9FGC%E5%A4%84%E7%90%86%E3%80%82%3C/p%3E%3Cp%3E%E7%9B%B8%E5%8F%8D%EF%BC%8C%E6%8B%B7%E8%B4%9D%E8%AF%AD%E4%B9%89(copy%20semantics)%E5%92%8C%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89(move%20semantics)%E9%83%BD%E6%98%AF%E6%AD%A3%E7%A1%AE%E7%9A%84%E3%80%82%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8CRust%E8%A7%84%E5%88%99%E4%B8%8A%E6%8A%8A%E5%9B%9E%E6%94%B6%E7%9C%8B%E5%81%9A%E6%98%AF%E4%BB%BB%E4%BD%95%E5%AF%B9%E8%B1%A1%E5%BF%85%E9%A1%BB%E6%9C%89%E4%B8%94%E4%BB%85%E6%9C%89%E4%B8%80%E4%B8%AAowner%E3%80%82%E5%BD%93%E4%BD%BF%E7%94%A8%E6%8B%B7%E8%B4%9D%E8%AF%AD%E4%B9%89%E6%97%B6%EF%BC%8C%E5%8E%9F%E6%9D%A5%E7%9A%84vector%E7%BC%93%E5%86%B2%E5%8C%BA%E8%BF%98%E6%98%AF%E5%8E%9F%E6%9D%A5%E7%9A%84owner%EF%BC%8C%E5%8D%B3%E5%8F%98%E9%87%8F%3Ccode%3Ev1%3C/code%3E%E7%9A%84%E6%A0%87%E5%A4%B4%EF%BC%8C%E6%96%B0%E5%88%9B%E5%BB%BA%E7%9A%84%E7%BC%93%E5%86%B2%E5%8C%BA%EF%BC%8C%E6%9C%89%E6%96%B0%E7%9A%84owner%E5%BC%95%E7%94%A8%EF%BC%8C%E5%8D%B3%3Ccode%3Ev2%3C/code%3E%E7%9A%84%E6%A0%87%E5%A4%B4%E3%80%82%E5%8F%A6%E4%B8%80%E6%96%B9%E9%9D%A2%EF%BC%8C%E5%BD%93%E4%BD%BF%E7%94%A8%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89%E6%97%B6%EF%BC%8C%E5%8E%9F%E6%9D%A5%E5%8D%95%E4%B8%80vector%E7%BC%93%E5%86%B2%E5%8C%BA%E6%9B%B4%E6%94%B9%E5%AE%83%E7%9A%84owner%EF%BC%9A%E5%88%86%E9%85%8D%E4%B9%8B%E5%89%8D%EF%BC%8C%E7%BC%93%E5%86%B2%E5%8C%BA%E7%9A%84%E6%89%80%E6%9C%89%E8%80%85%E6%98%AF%3Ccode%3Ev1%3C/code%3E%E7%9A%84%E6%A0%87%E5%A4%B4reference%EF%BC%8C%E5%88%86%E9%85%8D%E4%B9%8B%E5%90%8E%EF%BC%8C%E6%89%80%E6%9C%89%E8%80%85%E6%9B%B4%E6%94%B9%E4%B8%BA%3Ccode%3Ev2%3C/code%3E%E7%9A%84%E6%A0%87%E5%A4%B4reference%E3%80%82%E5%9C%A8%E5%88%86%E9%85%8D%E4%B9%8B%E5%89%8D%EF%BC%8C%3Ccode%3Ev2%3C/code%3E%E7%9A%84%E6%A0%87%E5%A4%B4%E5%B9%B6%E4%B8%8D%E5%AD%98%E5%9C%A8%EF%BC%8C%E5%88%86%E9%85%8D%E4%B9%8B%E5%90%8E%EF%BC%8C%3Ccode%3Ev1%3C/code%3E%E7%9A%84%E6%A0%87%E5%A4%B4%E4%B8%8D%E5%86%8D%E5%AD%98%E5%9C%A8%E3%80%82%3C/p%3E%3Cp%3E%E9%82%A3%E4%B8%BA%E4%BB%80%E4%B9%88Rust%E4%B8%8D%E5%AE%9E%E7%8E%B0%E6%8B%B7%E8%B4%9D%E8%AF%AD%E4%B9%89(copy%20semantics)%EF%BC%9F%3C/p%3E%3Cp%3E%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E6%9F%90%E4%BA%9B%E6%83%85%E5%86%B5%E4%B8%8B%EF%BC%8C%E4%BD%BF%E7%94%A8%E6%8B%B7%E8%B4%9D%E8%AF%AD%E4%B9%89%E6%9B%B4%E5%90%88%E9%80%82%EF%BC%8C%E5%8F%A6%E4%B8%80%E4%BA%9B%E6%83%85%E5%86%B5%E4%B8%8B%EF%BC%8C%E4%BD%BF%E7%94%A8%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89%E6%9B%B4%E9%80%82%E5%90%88%E3%80%82%E7%94%9A%E8%87%B3C++%EF%BC%8C%E4%BB%8E2011%E5%B9%B4%E5%BC%80%E5%A7%8B%EF%BC%8C%E5%85%81%E8%AE%B8%E5%90%8C%E6%97%B6%E6%8B%B7%E8%B4%9D%E8%AF%AD%E4%B9%89%E5%92%8C%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20cpp%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22meta%22%3E#%3Cspan%20class=%22keyword%22%3Einclude%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;lt;iostream&amp;gt;%3C/span%3E%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22meta%22%3E#%3Cspan%20class=%22keyword%22%3Einclude%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;lt;vector&amp;gt;%3C/span%3E%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22function%22%3E%3Cspan%20class=%22type%22%3Eint%3C/span%3E%20%3Cspan%20class=%22title%22%3Emain%3C/span%3E%3Cspan%20class=%22params%22%3E()%3C/span%3E%20%3C/span%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eauto%3C/span%3E%20v1%20=%20std::vector&amp;lt;%3Cspan%20class=%22type%22%3Eint%3C/span%3E&amp;gt;%20&amp;#123;%3Cspan%20class=%22number%22%3E11%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E,%20%3Cspan%20class=%22number%22%3E33%3C/span%3E&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22type%22%3Econst%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eauto%3C/span%3E%20v2%20=%20v1;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22type%22%3Econst%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eauto%3C/span%3E%20v3%20=%20%3Cspan%20class=%22built_in%22%3Emove%3C/span%3E(v1);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Estd::count%20&amp;lt;&amp;lt;%20v%3Cspan%20class=%22number%22%3E1.%3C/span%3E%3Cspan%20class=%22built_in%22%3Esize%3C/span%3E()%20&amp;lt;&amp;lt;%20%3Cspan%20class=%22string%22%3E&amp;quot;%20&amp;quot;%3C/span%3E%20&amp;lt;&amp;lt;%20v%3Cspan%20class=%22number%22%3E2.%3C/span%3E%3Cspan%20class=%22built_in%22%3Esize%3C/span%3E()%20&amp;lt;&amp;lt;%20%3Cspan%20class=%22string%22%3E&amp;quot;%20&amp;quot;%3C/span%3E%20&amp;lt;&amp;lt;%20v%3Cspan%20class=%22number%22%3E3.%3C/span%3E%3Cspan%20class=%22built_in%22%3Esize%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E6%AE%B5C%3Cins%3E%E7%A8%8B%E5%BA%8F%E4%BC%9A%E6%89%93%E5%8D%B0%EF%BC%9A0%203%203%E3%80%82%3Ccode%3Ev1%3C/code%3E%E9%A6%96%E5%85%88%E8%A2%AB%E6%8B%B7%E8%B4%9D%E5%88%B0%3Ccode%3Ev2%3C/code%3E%EF%BC%8C%E7%84%B6%E5%90%8E%E7%A7%BB%E5%8A%A8%E5%88%B0%3Ccode%3Ev3%3C/code%3E%E3%80%82C%3C/ins%3E%E6%A0%87%E5%87%86%E5%87%BD%E6%95%B0%3Ccode%3Emove%3C/code%3E%E4%BC%9A%E6%B8%85%E7%A9%BAvector%E4%BD%86%E4%B8%8D%E4%BC%9A%E8%AE%A9%E5%85%B6undefined%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%9C%A8%E6%9C%80%E5%90%8E%EF%BC%8C%3Ccode%3Ev2%3C/code%3E%E6%9C%89%E4%B8%89%E4%B8%AA%E5%85%83%E7%B4%A0%E7%9A%84%E6%8B%B7%E8%B4%9D%EF%BC%8C%3Ccode%3Ev3%3C/code%3E%E5%B0%B1%E6%98%AF%E5%8E%9F%E6%9D%A5%E7%9A%84%3Ccode%3Ev1%3C/code%3E%EF%BC%8C%3Ccode%3Ev1%3C/code%3E%E5%8F%98%E4%B8%BA%E7%A9%BA%E3%80%82%3C/p%3E%3Cp%3ERust%E4%B8%AD%E4%B9%9F%E5%85%81%E8%AE%B8%E6%8B%B7%E8%B4%9D%E8%AF%AD%E4%B9%89%E5%92%8C%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ev1%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22number%22%3E11%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E,%20%3Cspan%20class=%22number%22%3E33%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ev2%3C/span%3E%20=%20v1.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eclone%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ev3%3C/span%3E%20=%20v1;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20ILLEGAL:%20print!(&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;,%20v1.len());%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20v2.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E(),%20v3.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E());%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%B0%86%E4%BC%9A%E6%89%93%E5%8D%B0%EF%BC%9A3%203%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E6%AE%B5%E7%A8%8B%E5%BA%8F%E5%92%8CC%3Cins%3E%E7%B1%BB%E4%BC%BC%EF%BC%8C%E4%BD%86%E4%B8%8D%E8%83%BD%E5%86%8D%E8%AE%BF%E9%97%AE%3Ccode%3Ev1%3C/code%3E%E4%BA%86%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E8%A2%AB%E7%A7%BB%E5%8A%A8%E4%BA%86%E3%80%82%E5%9B%A0%E4%B8%BAC%3C/ins%3E%E7%9A%84%E9%BB%98%E8%AE%A4%E8%AF%AD%E4%B9%89%E6%98%AF%E6%8B%B7%E8%B4%9D%E8%AF%AD%E4%B9%89(copy%20semantics)%EF%BC%8C%E6%89%80%E4%BB%A5%E9%9C%80%E8%A6%81%E8%B0%83%E7%94%A8%3Ccode%3Emove%3C/code%3E%E6%A0%87%E5%87%86%E5%87%BD%E6%95%B0%E6%9D%A5%E8%BF%9B%E8%A1%8C%E5%AF%B9%E8%B1%A1%E7%A7%BB%E5%8A%A8%EF%BC%9B%E8%80%8CRust%E7%9A%84%E9%BB%98%E8%AE%A4%E8%AF%AD%E4%B9%89%E6%98%AF%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89(move%20semantics)%EF%BC%8C%E6%89%80%E4%BB%A5%E9%9C%80%E8%A6%81%E8%B0%83%E7%94%A8%E6%A0%87%E5%87%86%E5%87%BD%E6%95%B0%3Ccode%3Eclone%3C/code%3E%E8%BF%9B%E8%A1%8C%E6%8B%B7%E8%B4%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%8F%A6%E5%A4%96%EF%BC%8C%3Ccode%3Ev1%3C/code%3E%E8%99%BD%E5%B7%B2%E8%A2%AB%E7%A7%BB%E5%8A%A8%EF%BC%8C%E4%BD%86%E4%BB%8D%E7%84%B6%E5%8F%AF%E8%AE%BF%E9%97%AE%EF%BC%8C%E5%8F%AA%E4%B8%8D%E8%BF%87%E5%86%85%E5%AE%B9%E4%B8%BA%E7%A9%BA%EF%BC%8CRust%E4%B8%AD%E8%A2%AB%E7%A7%BB%E5%8A%A8%E7%9A%84%E5%8F%98%E9%87%8F%E4%B8%8D%E5%8F%AF%E5%86%8D%E8%A2%AB%E8%AE%BF%E9%97%AE%E3%80%82%3C/p%3E%3Ch2%20id=%22Copying-vs-Moving-Performance%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Copying-vs-Moving-Performance%22%3E%C2%B6%3C/a%3ECopying%20vs.%20Moving%20Performance%3C/h2%3E%3Cp%3ERust%E5%81%8F%E5%90%91%E4%BA%8E%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89%E7%9A%84%E9%80%89%E6%8B%A9%E6%98%AF%E4%BB%8E%E6%80%A7%E8%83%BD%E6%96%B9%E9%9D%A2%E8%80%83%E9%87%8F%E7%9A%84%E3%80%82%E5%AF%B9%E4%BA%8E%E6%8B%A5%E6%9C%89%E5%A0%86%E7%BC%93%E5%86%B2%E5%8C%BA%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E6%AF%94%E5%A6%82vector%EF%BC%8C%E7%A7%BB%E5%8A%A8%E6%AF%94%E6%8B%B7%E8%B4%9D%E8%A6%81%E5%BF%AB%EF%BC%8C%E5%9B%A0%E4%B8%BA%E7%A7%BB%E5%8A%A8%E7%9A%84%E4%BB%85%E6%98%AFheader%EF%BC%8C%E7%84%B6%E8%80%8C%E5%A6%82%E6%9E%9C%E6%98%AF%E6%8B%B7%E8%B4%9D%E4%B8%80%E4%B8%AAvector%EF%BC%8C%E8%A6%81%E6%B1%82%E5%88%86%E9%85%8D%E5%92%8C%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B8%80%E4%B8%AA%E5%8F%AF%E8%83%BD%E7%9A%84%E5%A0%86%E7%BC%93%E5%86%B2%E5%8C%BA%EF%BC%8C%E5%AE%83%E6%9C%80%E7%BB%88%E4%BC%9A%E8%A2%AB%E5%9B%9E%E6%94%B6%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8C++%E4%B8%AD%EF%BC%8C%E8%A2%AB%E7%A7%BB%E5%8A%A8%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%84%8F%E5%91%B3%E7%9D%80%E4%B8%8D%E5%9C%A8%E8%A2%AB%E4%BD%BF%E7%94%A8%E4%BA%86%EF%BC%8C%E4%BD%86%E8%AF%AD%E8%A8%80%E4%B8%BA%E4%BA%86%E5%AF%B9%E9%81%97%E7%95%99%E4%BB%A3%E7%A0%81%E5%81%9A%E5%90%8E%E5%90%91%E5%85%BC%E5%AE%B9(backward-compatible)%EF%BC%8C%E8%A2%AB%E7%A7%BB%E5%8A%A8%E7%9A%84%E5%AF%B9%E8%B1%A1%E4%BB%8D%E7%84%B6%E5%8F%AF%E4%BB%A5%E8%AE%BF%E9%97%AE%EF%BC%8C%E8%BF%99%E5%8F%AF%E8%83%BD%E4%BC%9A%E7%BB%99%E5%BC%80%E5%8F%91%E8%80%85%E5%86%8D%E6%AC%A1%E4%BD%BF%E7%94%A8%E8%AF%A5%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%9C%BA%E4%BC%9A%E3%80%82%E5%8F%A6%E5%A4%96%EF%BC%8C%E6%B8%85%E7%A9%BA%E4%B8%80%E4%B8%AA%E8%A2%AB%E7%A7%BB%E5%8A%A8%E7%9A%84vector%E6%9C%89%E8%BE%83%E5%B0%8F%E7%9A%84%E6%B6%88%E8%80%97%EF%BC%8C%E5%8D%B3%E5%BD%93%E4%B8%80%E4%B8%AAvector%E8%A2%AB%E9%94%80%E6%AF%81%EF%BC%8C%E4%BC%9A%E6%A3%80%E6%B5%8B%E5%AE%83%E6%98%AF%E5%90%A6%E4%B8%BA%E7%A9%BA%EF%BC%8C%E8%BF%99%E4%B9%9F%E6%9C%89%E8%BE%83%E5%B0%8F%E6%B6%88%E8%80%97%E3%80%82Rust%E8%A2%AB%E8%AE%BE%E8%AE%A1%E9%81%BF%E5%85%8D%E6%89%8B%E5%8A%A8%E7%A7%BB%E5%8A%A8%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%9B%A0%E6%AD%A4%E4%B8%8D%E4%BC%9A%E6%9C%89%E4%B8%8D%E6%AD%A3%E5%BD%93%E7%9A%84%E7%A7%BB%E5%8A%A8vector%EF%BC%8C%E5%9B%A0%E4%B8%BA%E7%BC%96%E8%AF%91%E5%99%A8%E7%9F%A5%E9%81%93vector%E8%A2%AB%E7%A7%BB%E5%8A%A8%E4%BA%86%EF%BC%8C%E5%8F%AF%E4%BB%A5%E4%BA%A7%E7%94%9F%E6%9B%B4%E5%A5%BD%E7%9A%84%E4%BB%A3%E7%A0%81%E3%80%82%3C/p%3E%3Cp%3E%E6%88%91%E4%BB%AC%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87%E4%B8%8B%E9%9D%A2%E4%BB%A3%E7%A0%81%E5%BA%A6%E9%87%8F%E6%80%A7%E8%83%BD%E7%9A%84%E5%BD%B1%E5%93%8D%EF%BC%8C%E8%BF%99%E5%B9%B6%E4%B8%8D%E7%AE%80%E5%8D%95%EF%BC%8C%E5%9B%A0%E4%B8%BA%E7%BC%96%E8%AF%91%E4%BC%98%E5%8C%96%E5%99%A8%E4%BC%9A%E7%A7%BB%E9%99%A4loop%E5%86%85%E7%9A%84%E5%B7%A5%E4%BD%9C%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E4%BB%A3%E7%A0%81%E4%BD%BF%E7%94%A8%E4%BA%86%E6%8B%B7%E8%B4%9D%E8%AF%AD%E4%B9%89%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Euse%3C/span%3E%20std::time::Instant;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eelapsed_ms%3C/span%3E(t1:%20Instant,%20t2:%20Instant)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et%3C/span%3E%20=%20t2%20-%20t1;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20t.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eas_secs%3C/span%3E()%20%3Cspan%20class=%22keyword%22%3Eas%3C/span%3E%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E%20*%20%3Cspan%20class=%22number%22%3E1000%3C/span%3E.%20+%20t.%3Cspan%20class=%22title%20function_%20invoke__%22%3Esubsec_nanos%3C/span%3E()%20%3Cspan%20class=%22keyword%22%3Eas%3C/span%3E%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E%20/%20%3Cspan%20class=%22number%22%3E1e6%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Econst%3C/span%3E%20N_ITER:%20%3Cspan%20class=%22type%22%3Eusize%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E100_000_000%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Estart_time%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..N_ITER%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ev1%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22number%22%3E11%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ev2%3C/span%3E%20=%20v1.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eclone%3C/span%3E();%20%20%20%20%3Cspan%20class=%22comment%22%3E/%20Copy%20semantics%20is%20used%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev2.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(i);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20v1[%3Cspan%20class=%22number%22%3E1%3C/span%3E]%20+%20v2[%3Cspan%20class=%22number%22%3E2%3C/span%3E]%20==%20v2[%3Cspan%20class=%22number%22%3E0%3C/span%3E]%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Error&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Efinish_time%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20ns%20per%20iteration&#92;n&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eelapsed_ms%3C/span%3E(start_time,%20finish_time)%20*%20%3Cspan%20class=%22number%22%3E1e6%3C/span%3E%20/%20N_ITER%20%3Cspan%20class=%22keyword%22%3Eas%3C/span%3E%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E6%98%AFC++%E7%9A%84%E7%AD%89%E4%BB%B7%E5%AE%9E%E7%8E%B0%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20cpp%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22meta%22%3E#%3Cspan%20class=%22keyword%22%3Einclude%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;lt;iostream&amp;gt;%3C/span%3E%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22meta%22%3E#%3Cspan%20class=%22keyword%22%3Einclude%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;lt;vector&amp;gt;%3C/span%3E%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22meta%22%3E#%3Cspan%20class=%22keyword%22%3Einclude%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;lt;ctime&amp;gt;%3C/span%3E%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22function%22%3E%3Cspan%20class=%22type%22%3Eint%3C/span%3E%20%3Cspan%20class=%22title%22%3Emain%3C/span%3E%3Cspan%20class=%22params%22%3E()%3C/span%3E%20%3C/span%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22type%22%3Econst%3C/span%3E%20%3Cspan%20class=%22type%22%3Eint%3C/span%3E%20n_iter%20=%20%3Cspan%20class=%22number%22%3E100000000%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eauto%3C/span%3E%20start_time%20=%20%3Cspan%20class=%22built_in%22%3Eclock%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20(%3Cspan%20class=%22type%22%3Eint%3C/span%3E%20i%20=%20%3Cspan%20class=%22number%22%3E0%3C/span%3E;%20i%20&amp;lt;%20n_iter;%20++i)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eauto%3C/span%3E%20v1%20=%20std::vector&amp;lt;%3Cspan%20class=%22type%22%3Eint%3C/span%3E&amp;gt;%20&amp;#123;%20%3Cspan%20class=%22number%22%3E11%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E%20&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eauto%3C/span%3E%20v2%20=%20v1;%3Cspan%20class=%22comment%22%3E/%20Copy%20semantics%20is%20used%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev%3Cspan%20class=%22number%22%3E2.%3C/span%3E%3Cspan%20class=%22built_in%22%3Epush_back%3C/span%3E(i);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20(v2[%3Cspan%20class=%22number%22%3E1%3C/span%3E]%20+%20v2[%3Cspan%20class=%22number%22%3E2%3C/span%3E]%20=%20v2[%3Cspan%20class=%22number%22%3E0%3C/span%3E])%20&amp;#123;%20std::cout%20&amp;lt;&amp;lt;%20%3Cspan%20class=%22string%22%3E&amp;quot;Error&amp;quot;%3C/span%3E;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eauto%3C/span%3E%20finish_time%20=%20%3Cspan%20class=%22built_in%22%3Eclock%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Estd::cout%20&amp;lt;&amp;lt;%20(finish_time%20-%20start_time)%20*%20%3Cspan%20class=%22number%22%3E1.e9%3C/span%3E%20/%20CLOCKS_PER_SEC%20/%20n_iter%20&amp;lt;&amp;lt;%20%3Cspan%20class=%22string%22%3E&amp;quot;%20ns%20per%20iteration&#92;n&amp;quot;%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%B8%8B%E9%9D%A2Rust%E7%A8%8B%E5%BA%8F%E4%BD%BF%E7%94%A8%E4%BA%86%E7%A7%BB%E5%8A%A8%E6%9C%AF%E8%AF%AD%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Euse%3C/span%3E%20std::time::Instant;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eelapsed_ms%3C/span%3E(t1:%20Instant,%20t2:%20Instant)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et%3C/span%3E%20=%20t2%20-%20t1;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20t.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eas_secs%3C/span%3E()%20%3Cspan%20class=%22keyword%22%3Eas%3C/span%3E%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E%20*%20%3Cspan%20class=%22number%22%3E1000%3C/span%3E.%20+%20t.%3Cspan%20class=%22title%20function_%20invoke__%22%3Esubsec_nanos%3C/span%3E()%20%3Cspan%20class=%22keyword%22%3Eas%3C/span%3E%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E%20/%20%3Cspan%20class=%22number%22%3E1e6%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Econst%3C/span%3E%20N_ITER:%20%3Cspan%20class=%22type%22%3Eusize%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E100_000_000%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Estart_time%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..N_ITER%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ev1%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22number%22%3E11%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ev2%3C/span%3E%20=%20v1;%20%20%20%20%3Cspan%20class=%22comment%22%3E/%20Move%20semantics%20is%20used%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev2.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(i);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20v1[%3Cspan%20class=%22number%22%3E1%3C/span%3E]%20+%20v2[%3Cspan%20class=%22number%22%3E2%3C/span%3E]%20==%20v2[%3Cspan%20class=%22number%22%3E0%3C/span%3E]%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Error&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Efinish_time%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20ns%20per%20iteration&#92;n&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eelapsed_ms%3C/span%3E(start_time,%20finish_time)%20*%20%3Cspan%20class=%22number%22%3E1e6%3C/span%3E%20/%20N_ITER%20%3Cspan%20class=%22keyword%22%3Eas%3C/span%3E%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3EC++%E7%9A%84%E7%AD%89%E4%BB%B7%E5%AE%9E%E7%8E%B0%E4%B8%BA%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20cpp%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22meta%22%3E#%3Cspan%20class=%22keyword%22%3Einclude%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;lt;iostream&amp;gt;%3C/span%3E%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22meta%22%3E#%3Cspan%20class=%22keyword%22%3Einclude%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;lt;vector&amp;gt;%3C/span%3E%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22meta%22%3E#%3Cspan%20class=%22keyword%22%3Einclude%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;lt;ctime&amp;gt;%3C/span%3E%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22function%22%3E%3Cspan%20class=%22type%22%3Eint%3C/span%3E%20%3Cspan%20class=%22title%22%3Emain%3C/span%3E%3Cspan%20class=%22params%22%3E()%3C/span%3E%20%3C/span%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22type%22%3Econst%3C/span%3E%20%3Cspan%20class=%22type%22%3Eint%3C/span%3E%20n_iter%20=%20%3Cspan%20class=%22number%22%3E100000000%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eauto%3C/span%3E%20start_time%20=%20%3Cspan%20class=%22built_in%22%3Eclock%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20(%3Cspan%20class=%22type%22%3Eint%3C/span%3E%20i%20=%20%3Cspan%20class=%22number%22%3E0%3C/span%3E;%20i%20&amp;lt;%20n_iter;%20++i)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eauto%3C/span%3E%20v1%20=%20std::vector&amp;lt;%3Cspan%20class=%22type%22%3Eint%3C/span%3E&amp;gt;%20&amp;#123;%20%3Cspan%20class=%22number%22%3E11%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E%20&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eauto%3C/span%3E%20v2%20=%20%3Cspan%20class=%22built_in%22%3Emove%3C/span%3E(v1);%3Cspan%20class=%22comment%22%3E/%20Move%20semantics%20is%20used%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev%3Cspan%20class=%22number%22%3E2.%3C/span%3E%3Cspan%20class=%22built_in%22%3Epush_back%3C/span%3E(i);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20(v2[%3Cspan%20class=%22number%22%3E1%3C/span%3E]%20+%20v2[%3Cspan%20class=%22number%22%3E2%3C/span%3E]%20=%20v2[%3Cspan%20class=%22number%22%3E0%3C/span%3E])%20&amp;#123;%20std::cout%20&amp;lt;&amp;lt;%20%3Cspan%20class=%22string%22%3E&amp;quot;Error&amp;quot;%3C/span%3E;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eauto%3C/span%3E%20finish_time%20=%20%3Cspan%20class=%22built_in%22%3Eclock%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Estd::cout%20&amp;lt;&amp;lt;%20(finish_time%20-%20start_time)%20*%20%3Cspan%20class=%22number%22%3E1.e9%3C/span%3E%20/%20CLOCKS_PER_SEC%20/%20n_iter%20&amp;lt;&amp;lt;%20%3Cspan%20class=%22string%22%3E&amp;quot;%20ns%20per%20iteration&#92;n&amp;quot;%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E6%98%AF%E7%BC%96%E8%AF%91%E4%BC%98%E5%8C%96%E5%90%8E%E7%9A%84%E5%A4%A7%E8%87%B4%E7%9A%84%E6%97%B6%E9%97%B4%E6%8D%9F%E8%80%97%EF%BC%8C%3C/p%3E%3Ctable%3E%3Cthead%3E%3Ctr%3E%3Cth%3E%3C/th%3E%3Cth%3ERust%3C/th%3E%3Cth%3EC++%3C/th%3E%3C/tr%3E%3C/thead%3E%3Ctbody%3E%3Ctr%3E%3Ctd%3ECopy%20semantics%3C/td%3E%3Ctd%3E157%3C/td%3E%3Ctd%3E87%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%3EMove%20semantics%3C/td%3E%3Ctd%3E67%3C/td%3E%3Ctd%3E67%3C/td%3E%3C/tr%3E%3C/tbody%3E%3C/table%3E%3Cp%3E%E4%B8%8D%E7%AE%A1%E6%98%AF%E5%9C%A8C%3Cins%3E%E8%BF%98%E6%98%AFRust%E4%B8%AD%EF%BC%8C%E7%A7%BB%E5%8A%A8%E6%9C%AF%E8%AF%AD%E9%83%BD%E8%A6%81%E6%AF%94%E6%8B%B7%E8%B4%9D%E6%9C%AF%E8%AF%AD%E8%A6%81%E5%BF%AB%E3%80%82%E5%9C%A8%E8%BF%99%E6%96%B9%E9%9D%A2%EF%BC%8C%E7%A7%BB%E5%8A%A8%E6%9C%AF%E8%AF%AD%E4%B8%A4%E8%80%85%E9%83%BD%E5%B7%AE%E4%B8%8D%E5%A4%9A%EF%BC%8C%E6%8B%B7%E8%B4%9D%E6%9C%AF%E8%AF%AD%E6%96%B9%E9%9D%A2C%3C/ins%3E%E8%A6%81%E6%AF%94Rust%E5%A5%BD%E5%BE%88%E5%A4%9A%E3%80%82%3C/p%3E%3Ch2%20id=%22Moving-and-Destroying-Objects%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Moving-and-Destroying-Objects%22%3E%C2%B6%3C/a%3EMoving%20and%20Destroying%20Objects%3C/h2%3E%3Cp%3E%E6%89%80%E6%9C%89%E8%BF%99%E4%BA%9B%E6%A6%82%E5%BF%B5%E4%B8%8D%E5%8D%95%E6%98%AF%E5%AF%B9vector%EF%BC%8C%E4%BB%BB%E4%BD%95%E6%9C%89%E7%BC%93%E5%86%B2%E5%8C%BA%E5%BC%95%E7%94%A8%E7%9A%84%E5%AF%B9%E8%B1%A1%E9%83%BD%E9%80%82%E7%94%A8%EF%BC%8C%E8%AD%AC%E5%A6%82%3Ccode%3EString%3C/code%3E%E6%88%96%3Ccode%3EBox%3C/code%3E%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Es1%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;abcd&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Es2%3C/span%3E%20=%20s1.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eclone%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Es3%3C/span%3E%20=%20s1;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20ILLEGAL:%20print!(&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;,%20s1.len());%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20s2.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E(),%20s3.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E());%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E5%92%8CC++%E7%B1%BB%E4%BC%BC%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20cpp%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22meta%22%3E#%3Cspan%20class=%22keyword%22%3Einclude%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;lt;iostream&amp;gt;%3C/span%3E%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22meta%22%3E#%3Cspan%20class=%22keyword%22%3Einclude%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;lt;string&amp;gt;%3C/span%3E%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22function%22%3E%3Cspan%20class=%22type%22%3Eint%3C/span%3E%20%3Cspan%20class=%22title%22%3Emain%3C/span%3E%3Cspan%20class=%22params%22%3E()%3C/span%3E%20%3C/span%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eauto%3C/span%3E%20s1%20=%20std::string%20&amp;#123;%20%3Cspan%20class=%22string%22%3E&amp;quot;abcd&amp;quot;%3C/span%3E%20&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22type%22%3Econst%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eauto%3C/span%3E%20s2%20=%20s1;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22type%22%3Econst%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eauto%3C/span%3E%20s3%20=%20%3Cspan%20class=%22built_in%22%3Emove%3C/span%3E(s1);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Estd::cout%20&amp;lt;&amp;lt;%20s%3Cspan%20class=%22number%22%3E1.%3C/span%3E%3Cspan%20class=%22built_in%22%3Esize%3C/span%3E()%20&amp;lt;&amp;lt;%20%3Cspan%20class=%22string%22%3E&amp;quot;%20&amp;quot;%3C/span%3E%20&amp;lt;&amp;lt;%20s%3Cspan%20class=%22number%22%3E2.%3C/span%3E%3Cspan%20class=%22built_in%22%3Esize%3C/span%3E()%20&amp;lt;&amp;lt;%20%3Cspan%20class=%22string%22%3E&amp;quot;%20&amp;quot;%3C/span%3E%20&amp;lt;&amp;lt;%20s%3Cspan%20class=%22number%22%3E3.%3C/span%3E%3Cspan%20class=%22built_in%22%3Esize%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%89%8D%E9%9D%A2%E8%AF%B4%E8%BF%87%EF%BC%8C%E8%A2%AB%E7%A7%BB%E5%8A%A8%E7%9A%84%E5%AF%B9%E8%B1%A1%E4%B8%8D%E8%83%BD%E5%86%8D%E8%AE%BF%E9%97%AE%EF%BC%8C%E5%9B%A0%E6%AD%A4%3Ccode%3Es1%3C/code%3E%E8%AE%BF%E9%97%AE%E6%97%B6%E4%BC%9A%E5%AF%BC%E8%87%B4%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%EF%BC%9B%E8%80%8C%E5%AF%B9%E4%BA%8EC++%EF%BC%8C%E5%8E%9F%E6%9D%A5%E7%9A%84%3Ccode%3Es1%3C/code%3E%E4%BC%9A%E7%BD%AE%E4%B8%BA%E7%A9%BA%EF%BC%8C%E6%89%80%E4%BB%A5%E4%BC%9A%E8%BE%93%E5%87%BA0%204%204%E3%80%82%3C/p%3E%3Cp%3E%E5%AF%B9%E4%BA%8E%3Ccode%3EBox%3C/code%3E%E7%B1%BB%E5%9E%8B%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei1%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3EBox%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E(%3Cspan%20class=%22number%22%3E12345i16%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei2%3C/span%3E%20=%20i1.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eclone%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei3%3C/span%3E%20=%20i1;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20ILLEGAL:%20print!(&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;,%20i1);%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20i2,%20i3);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%AF%B9%E5%BA%94%E7%9A%84C++%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20cpp%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22meta%22%3E#%3Cspan%20class=%22keyword%22%3Einclude%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;lt;iostream&amp;gt;%3C/span%3E%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22meta%22%3E#%3Cspan%20class=%22keyword%22%3Einclude%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;lt;memory&amp;gt;%3C/span%3E%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22function%22%3E%3Cspan%20class=%22type%22%3Eint%3C/span%3E%20%3Cspan%20class=%22title%22%3Emain%3C/span%3E%3Cspan%20class=%22params%22%3E()%3C/span%3E%20%3C/span%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eauto%3C/span%3E%20i1%20=%20std::unique_ptr&amp;lt;%3Cspan%20class=%22type%22%3Eshort%3C/span%3E&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Enew%3C/span%3E%20%3Cspan%20class=%22built_in%22%3Eshort%3C/span%3E(%3Cspan%20class=%22number%22%3E12345%3C/span%3E)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22type%22%3Econst%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eauto%3C/span%3E%20i2%20=%20std::unique_ptr&amp;lt;%3Cspan%20class=%22type%22%3Eshort%3C/span%3E&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Enew%3C/span%3E%20%3Cspan%20class=%22built_in%22%3Eshort%3C/span%3E(*i1)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22type%22%3Econst%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eauto%3C/span%3E%20i3%20=%20%3Cspan%20class=%22built_in%22%3Emove%3C/span%3E(i1);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Estd::cout%20&amp;lt;&amp;lt;%20(%3Cspan%20class=%22type%22%3Ebool%3C/span%3E)i1%20&amp;lt;&amp;lt;%20%3Cspan%20class=%22string%22%3E&amp;quot;%20&amp;quot;%3C/span%3E%20&amp;lt;&amp;lt;%20(%3Cspan%20class=%22type%22%3Ebool%3C/span%3E)i2%20&amp;lt;&amp;lt;%20%3Cspan%20class=%22string%22%3E&amp;quot;%20&amp;quot;%3C/span%3E%20&amp;lt;&amp;lt;%20(%3Cspan%20class=%22type%22%3Ebool%3C/span%3E)i3%20&amp;lt;&amp;lt;%20%3Cspan%20class=%22string%22%3E&amp;quot;%20&amp;quot;%3C/span%3E%20&amp;lt;&amp;lt;%20*i2%20&amp;lt;&amp;lt;%20%3Cspan%20class=%22string%22%3E&amp;quot;%20&amp;quot;%3C/span%3E%20&amp;lt;&amp;lt;%20*i3;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3ERust%E7%A8%8B%E5%BA%8F%E4%BC%9A%E8%BE%93%E5%87%BA12345%2012345%EF%BC%8C%E4%BB%BB%E4%BD%95%E8%AE%BF%E9%97%AE%3Ccode%3Ei1%3C/code%3E%E9%83%BD%E4%BC%9A%E5%AF%BC%E8%87%B4%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%E3%80%82C++%E4%BC%9A%E8%BE%93%E5%87%BA0%201%201%2012345%2012345%E3%80%82%E5%9B%A0%E4%B8%BA%E4%BB%85%3Ccode%3Ei1%3C/code%3E%E6%98%AFnull%EF%BC%8C%E5%AE%83%E8%A2%AB%E7%A7%BB%E5%8A%A8%E5%88%B0%3Ccode%3Ei3%3C/code%3E%E4%BA%86%E3%80%82%3C/p%3E%3Cp%3E%E4%BB%85%E5%BD%93%E4%BB%96%E4%BB%AC%E8%A2%AB%E7%94%A8%E4%BA%8E%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B8%80%E4%B8%AA%E5%8F%98%E9%87%8F%EF%BC%8C%E7%BB%99%E4%B8%80%E4%B8%AA%E6%9C%89%E5%80%BC%E7%9A%84%E5%8F%98%E9%87%8F%E9%87%8D%E6%96%B0%E8%B5%8B%E5%80%BC%EF%BC%8C%E5%AF%B9%E8%B1%A1%E4%B8%8D%E8%A2%AB%E7%A7%BB%E5%8A%A8%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ev1%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22literal%22%3Efalse%3C/span%3E;%20%3Cspan%20class=%22number%22%3E3%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ev2%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22literal%22%3Efalse%3C/span%3E;%20%3Cspan%20class=%22number%22%3E2%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev2%20=%20v1;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev1;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%BB%A5%E5%8F%8A%E7%BB%99%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E5%80%BC%E6%97%B6%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E(v2:%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Ebool%3C/span%3E&amp;gt;)%20&amp;#123;&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ev1%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22literal%22%3Efalse%3C/span%3E;%20%3Cspan%20class=%22number%22%3E3%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(v1);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev1;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%BB%A5%E5%8F%8A%E6%8C%87%E6%B4%BE%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%9C%A8%E5%BD%93%E5%89%8D%E6%B2%A1%E6%9C%89%E5%AE%9E%E9%99%85%E5%A0%86%E5%88%86%E9%85%8D%E6%97%B6%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ev1%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22literal%22%3Efalse%3C/span%3E;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ev2%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22literal%22%3Efalse%3C/span%3E;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev2%20=%20v1;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev1;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BC%96%E8%AF%91%E4%B8%8A%E9%9D%A2%E4%BB%BB%E4%BD%95%E4%B8%89%E6%9D%A1%E7%A8%8B%E5%BA%8F%EF%BC%8C%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E8%AF%AD%E5%8F%A5%E9%83%BD%E4%BC%9A%E5%AF%BC%E8%87%B4%E2%80%9Cuse%20of%20a%20moved%20value%E2%80%9D%E7%9A%84%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%EF%BC%8C%3C/p%3E%3Cp%3E%E5%B0%A4%E5%85%B6%E6%98%AF%EF%BC%8C%E5%9C%A8%E7%A8%8B%E5%BA%8F%E6%9C%80%E5%90%8E%EF%BC%8C%3Ccode%3Ev1%3C/code%3E%E8%A2%AB%E7%A7%BB%E5%8A%A8%E5%88%B0%3Ccode%3Ev2%3C/code%3E%EF%BC%8C%E5%8D%B3%E4%BD%BF%E4%BB%96%E4%BB%AC%E9%83%BD%E4%B8%BA%E7%A9%BA%EF%BC%8C%E5%9B%A0%E6%AD%A4%E5%AE%83%E4%BB%AC%E6%B2%A1%E6%9C%89%E5%A0%86%E7%A9%BA%E9%97%B4%E8%A2%AB%E4%BD%BF%E7%94%A8%E3%80%82%E4%B8%BA%E4%BB%80%E4%B9%88%EF%BC%9F%E5%9B%A0%E4%B8%BA%E7%A7%BB%E5%8A%A8%E8%A7%84%E5%88%99%E7%94%B1%E7%BC%96%E8%AF%91%E5%99%A8%E6%8F%90%E4%BE%9B%EF%BC%8C%E5%9B%A0%E6%AD%A4%E5%AE%83%E5%9C%A8%E8%BF%90%E8%A1%8C%E6%9C%9F%E5%BF%85%E9%A1%BB%E6%98%AF%E7%8B%AC%E7%AB%8B%E7%9A%84%E5%86%85%E5%AE%B9%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E7%9A%84%E4%BB%A3%E7%A0%81%EF%BC%8C%E6%9C%80%E5%90%8E%E4%B8%80%E8%A1%8C%E4%B9%9F%E4%BC%9A%E5%AF%BC%E8%87%B4%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20&amp;#123;&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Es1%3C/span%3E%20=%20S%20&amp;#123;&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Es2%3C/span%3E%20=%20s1;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Es1;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BC%96%E8%AF%91%E5%99%A8%E5%8F%AF%E4%BB%A5%E7%A1%AE%E5%88%87%E7%9F%A5%E9%81%93%E8%BF%99%E4%B8%AA%E5%BC%95%E7%94%A8%E4%B8%8D%E4%BC%9A%E6%8C%87%E5%90%91heap%EF%BC%8C%E4%BD%86%E4%BB%8D%E7%84%B6%E7%BC%96%E8%AF%91%E6%8A%A5%E9%94%99%E3%80%82%E4%B8%BA%E4%BB%80%E4%B9%88Rust%E4%B8%8D%E4%B8%BA%E8%AF%A5%E7%B1%BB%E5%9E%8B%E4%BD%BF%E7%94%A8%E6%8B%B7%E8%B4%9D%E8%AF%AD%E4%B9%89%EF%BC%9F%3C/p%3E%3Cp%3E%E5%AE%83%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86%E6%98%AF%E8%BF%99%E6%A0%B7%E7%9A%84%E3%80%82%E7%94%A8%E6%88%B7%E5%AE%9A%E4%B9%89%E7%9A%84%E7%B1%BB%E5%9E%8B%3Ccode%3ES%3C/code%3E%E7%8E%B0%E5%9C%A8%E6%B2%A1%E6%9C%89%E5%BC%95%E7%94%A8%E5%86%85%E5%AD%98%EF%BC%8C%E4%BD%86%E5%9C%A8%E5%B0%86%E6%9D%A5%E8%BD%AF%E4%BB%B6%E7%BB%B4%E6%8A%A4%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E6%8C%87%E5%90%91%E5%A0%86%E7%9A%84%E5%BC%95%E7%94%A8%E5%8F%AF%E8%83%BD%E4%BC%9A%E8%A2%AB%E6%B7%BB%E5%8A%A0%EF%BC%8C%E5%8D%B3%3Ccode%3ES%3C/code%3E%E5%8F%AF%E8%83%BD%E4%BC%9A%E8%A2%AB%E4%BD%9C%E4%B8%BA%E5%AD%97%E6%AE%B5(field)%E7%AD%89%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%A6%82%E6%9E%9C%E4%B8%BA%3Ccode%3ES%3C/code%3E%E5%AE%9E%E7%8E%B0%E4%BA%86%E6%8B%B7%E8%B4%9D%E8%AF%AD%E4%B9%89%EF%BC%8C%E5%BD%93%E7%A8%8B%E5%BA%8F%E6%BA%90%E8%A2%AB%E6%9B%B4%E6%94%B9%EF%BC%8C%E4%B8%80%E4%B8%AA%3Ccode%3EString%3C/code%3E%E3%80%81%3Ccode%3EBox%3C/code%3E%E3%80%81%E6%88%96%E9%9B%86%E5%90%88%EF%BC%8C%E7%9B%B4%E6%8E%A5%E6%88%96%E9%97%B4%E6%8E%A5%E5%9C%B0%E6%B7%BB%E5%8A%A0%E5%88%B0%3Ccode%3ES%3C/code%3E%EF%BC%8C%E4%BC%9A%E5%AF%BC%E8%87%B4%E5%BE%88%E5%A4%9A%E9%94%99%E8%AF%AF%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E4%BD%9C%E4%B8%BA%E8%A7%84%E5%88%99%EF%BC%8C%E6%9C%80%E5%90%8E%E4%BF%9D%E7%95%99%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89%E3%80%82%3C/p%3E%3Ch2%20id=%22Need-for-Copy-Semantics%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Need-for-Copy-Semantics%22%3E%C2%B6%3C/a%3ENeed%20for%20Copy%20Semantics%3C/h2%3E%3Cp%3E%E6%88%91%E4%BB%AC%E7%9C%8B%E5%88%B0%E5%BE%88%E5%A4%9A%E7%B1%BB%E5%9E%8B%E4%BD%BF%E7%94%A8%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89%EF%BC%8C%E5%8C%85%E6%8B%ACvector%EF%BC%8C%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%8Cboxes%EF%BC%8C%E7%BB%93%E6%9E%84%E4%BD%93%E2%80%A6%20%E4%B8%8B%E9%9D%A2%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%98%AF%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei1%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E123%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_i2%3C/span%3E%20=%20i1;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Es1%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;abc&amp;quot;%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_s2%3C/span%3E%20=%20s1;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Er1%3C/span%3E%20=%20&amp;amp;i1;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_r2%3C/span%3E%20=%20r1;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20i1,%20s1,%20r1);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C123%20abc%20123%E2%80%9D%E3%80%82%E6%80%8E%E4%B9%88%E6%9D%A5%E7%9A%84%EF%BC%9F%3C/p%3E%3Cp%3E%E9%A6%96%E5%85%88%EF%BC%8C%E5%AF%B9%E4%BA%8E%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%9E%8B%EF%BC%8C%E9%9D%99%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%8C%E5%BC%95%E7%94%A8%EF%BC%8CRust%E4%B8%8D%E4%BD%BF%E7%94%A8%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89%E3%80%82%E5%AF%B9%E4%BA%8E%E8%BF%99%E4%BA%9B%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%EF%BC%8CRust%E4%BD%BF%E7%94%A8%E6%8B%B7%E8%B4%9D%E8%AF%AD%E4%B9%89%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%BA%E4%BB%80%E4%B9%88%EF%BC%9F%E5%89%8D%E9%9D%A2%E7%9C%8B%E5%88%B0%EF%BC%8C%E5%A6%82%E6%9E%9C%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E5%8F%AF%E4%BB%A5%E2%80%9C%E6%8B%A5%E6%9C%89%E2%80%9D%E4%B8%80%E4%B8%AA%E6%88%96%E5%A4%9A%E4%B8%AA%E5%A0%86%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%AE%83%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%BA%94%E8%AF%A5%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89%EF%BC%9B%E4%BD%86%E5%A6%82%E6%9E%9C%E4%B8%8D%E8%83%BD%E2%80%9C%E6%8B%A5%E6%9C%89%E2%80%9D%E4%BB%BB%E4%BD%95%E5%A0%86%E5%86%85%E5%AD%98%EF%BC%8C%E5%AE%83%E4%BB%85%E5%8F%AF%E4%BB%A5%E5%AE%9E%E7%8E%B0%E6%8B%B7%E8%B4%9D%E8%AF%AD%E4%B9%89%E3%80%82%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89%E5%AF%B9%E4%BA%8E%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%9E%8B%E6%9D%A5%E8%AF%B4%E6%98%AF%E4%B8%AA%E9%BA%BB%E7%83%A6%E7%9A%84%E4%B8%9C%E8%A5%BF%EF%BC%8C%E8%80%8C%E4%B8%94%E5%AE%83%E4%B9%9F%E4%B8%8D%E9%80%82%E5%90%88%E4%BA%8E%E8%A2%AB%E6%94%B9%E5%8F%98%E6%9D%A5%E2%80%9C%E6%8B%A5%E6%9C%89%E2%80%9D%E6%9F%90%E4%BA%9B%E5%A0%86%E5%AF%B9%E8%B1%A1%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%AF%B9%E4%BA%8E%E8%BF%99%E4%BA%9B%E7%B1%BB%E5%9E%8B%E6%9D%A5%E8%AF%B4%EF%BC%8C%E6%8B%B7%E8%B4%9D%E8%AF%AD%E4%B9%89%E6%98%AF%E5%AE%89%E5%85%A8%E7%9A%84%E3%80%81%E9%AB%98%E6%95%88%E7%9A%84%E3%80%81%E5%B9%B6%E4%B8%94%E6%9B%B4%E6%96%B9%E4%BE%BF%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8CRust%E4%B8%AD%E7%9A%84%E6%9F%90%E4%BA%9B%E7%B1%BB%E5%9E%8B%E5%AE%9E%E7%8E%B0%E4%BA%86%E6%8B%B7%E8%B4%9D%E8%AF%AD%E4%B9%89%EF%BC%8C%E5%8F%A6%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%8E%B0%E4%BA%86%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89%E3%80%82%E5%8F%A6%E5%A4%96%EF%BC%8Cnumbers%E3%80%81Booleans%E3%80%81static%20strings%E3%80%81arrays%E3%80%81tuples%E3%80%81references%E5%AE%9E%E7%8E%B0%E4%BA%86%E6%8B%B7%E8%B4%9D%E8%AF%AD%E4%B9%89%E3%80%82%E7%9B%B8%E5%8F%8D%EF%BC%8Cdynamic%20strings%E3%80%81boxes%E3%80%81%E9%9B%86%E5%90%88(%E5%8C%85%E6%8B%ACvectors)%E3%80%81enums%E3%80%81structs%E3%80%81tuple-structs%E5%9D%87%E9%BB%98%E8%AE%A4%E5%AE%9E%E7%8E%B0%E4%BA%86%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89%E3%80%82%3C/p%3E%3Ch2%20id=%22Cloning-Objects%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Cloning-Objects%22%3E%C2%B6%3C/a%3ECloning%20Objects%3C/h2%3E%3Cp%3E%E7%84%B6%E8%80%8C%EF%BC%8C%E5%AF%B9%E4%BA%8E%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%8B%B7%E8%B4%9D%EF%BC%8C%E6%9C%89%E5%8F%A6%E4%B8%80%E7%A7%8D%E9%87%8D%E8%A6%81%E7%9A%84%E5%8C%BA%E5%88%86%E3%80%82%E6%89%80%E6%9C%89%E5%AE%9E%E7%8E%B0%E6%8B%B7%E8%B4%9D%E8%AF%AD%E4%B9%89%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87%E6%8C%87%E6%B4%BE%E7%9A%84%E6%96%B9%E5%BC%8F%E7%AE%80%E5%8D%95%E5%9C%B0%E6%8B%B7%E8%B4%9D%EF%BC%9B%E4%BD%86%E5%AF%B9%E4%BA%8E%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%9D%A5%E8%AF%B4%E4%B9%9F%E5%8F%AF%E4%BB%A5%E8%BF%9B%E8%A1%8C%E6%8B%B7%E8%B4%9D%EF%BC%8C%E4%BD%86%E9%9C%80%E8%A6%81%E4%BD%BF%E7%94%A8%E6%A0%87%E5%87%86%E5%BA%93%E7%9A%84%3Ccode%3Eclone%3C/code%3E%E3%80%82%E5%AF%B9%E4%BA%8E%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%81boxed%E5%AF%B9%E8%B1%A1%E3%80%81vector%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%3Ccode%3Eclone%3C/code%3E%E5%87%BD%E6%95%B0%E3%80%82%E4%BD%86%E5%AF%B9%E4%BA%8E%E6%9F%90%E4%BA%9B%E7%B1%BB%E5%9E%8B%EF%BC%8C%E4%B8%8D%E8%83%BD%E4%BD%BF%E7%94%A8%3Ccode%3Eclone%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E5%9B%A0%E4%B8%BA%E6%B2%A1%E6%9C%89%E5%90%88%E9%80%82%E7%9A%84%E6%8B%B7%E8%B4%9D%E7%B1%BB%E5%9E%8B%E3%80%82%E4%BE%8B%E5%A6%82%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%EF%BC%8C%E4%B8%80%E4%B8%AAGUI%E7%AA%97%E5%8F%A3%E5%A4%84%E7%90%86%EF%BC%8C%E6%88%96%E4%B8%80%E4%B8%AA%E4%BA%92%E6%96%A5%E9%94%81%E5%A4%84%E7%90%86%E3%80%82%E5%A6%82%E6%9E%9C%E4%BD%A0%E6%8B%B7%E8%B4%9D%E4%BA%86%E5%AE%83%EF%BC%8C%E7%84%B6%E5%90%8E%E9%94%80%E6%AF%81%E6%9F%90%E4%B8%80%E4%BB%BD%E6%8B%B7%E8%B4%9D%EF%BC%8C%E6%BA%90%E8%B5%84%E6%BA%90%E4%BC%9A%E8%A2%AB%E9%87%8A%E6%94%BE%EF%BC%8C%E5%85%B6%E5%AE%83%E6%8B%B7%E8%B4%9D%E7%9A%84%E5%A4%84%E7%90%86%E4%BC%9A%E5%89%8D%E5%90%8E%E4%B8%8D%E4%B8%80%E8%87%B4%EF%BC%9A%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%85%B3%E4%BA%8E%E5%8F%AF%E8%A2%AB%E6%8B%B7%E8%B4%9D%E7%9A%84%E8%83%BD%E5%8A%9B%EF%BC%8C%E4%BC%9A%E6%9C%89%E4%B8%89%E7%A7%8D%E4%B8%8D%E5%90%8C%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E5%AF%B9%E8%B1%A1%E4%B8%8D%E2%80%9C%E6%8B%A5%E6%9C%89%E2%80%9D%E4%BB%BB%E4%BD%95%E4%B8%9C%E8%A5%BF%EF%BC%8C%E6%8B%B7%E8%B4%9D%E6%98%AF%E5%BB%89%E4%BB%B7%E7%9A%84%E3%80%81%E5%AE%B9%E6%98%93%E7%9A%84%E3%80%82%3C/li%3E%3Cli%3E%E5%AF%B9%E8%B1%A1%E2%80%9C%E6%8B%A5%E6%9C%89%E2%80%9D%E6%9F%90%E4%BA%9B%E5%A0%86%E5%AF%B9%E8%B1%A1%EF%BC%8C%E4%BD%86%E4%B8%8D%E2%80%9C%E6%8B%A5%E6%9C%89%E2%80%9D%E5%86%85%E9%83%A8%E8%B5%84%E6%BA%90%EF%BC%8C%E6%89%80%E4%BB%A5%E5%8F%AF%E4%BB%A5%E8%A2%AB%E6%8B%B7%E8%B4%9D%EF%BC%8C%E4%BD%86%E8%BF%90%E8%A1%8C%E6%9C%9F%E6%9C%89%E8%BE%83%E5%A4%A7%E6%8D%9F%E8%80%97%E3%80%82%3C/li%3E%3Cli%3E%E5%AF%B9%E8%B1%A1%E2%80%9C%E6%8B%A5%E6%9C%89%E2%80%9D%E5%86%85%E9%83%A8%E8%B5%84%E6%BA%90%EF%BC%8C%E8%AD%AC%E5%A6%82%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E3%80%81GUI%E7%AA%97%E5%8F%A3%E5%A4%84%E7%90%86%EF%BC%8C%E6%89%80%E4%BB%A5%E5%AE%83%E4%B8%8D%E8%83%BD%E8%A2%AB%E6%8B%B7%E8%B4%9D%E3%80%82%3C/li%3E%3C/ul%3E%3Cp%3E%E7%AC%AC%E4%B8%80%E7%B1%BB%E5%AF%B9%E8%B1%A1%EF%BC%8C%E7%A7%B0%E4%B8%BA%E2%80%9C%E5%8F%AF%E6%8B%B7%E8%B4%9D%E5%AF%B9%E8%B1%A1%EF%BC%8Ccopyable%20objects%E2%80%9D%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AF%B9%E4%BA%8E%E8%BF%99%E7%B1%BB%E5%AF%B9%E8%B1%A1%E6%9D%A5%E8%AF%B4%EF%BC%8C%E6%8B%B7%E8%B4%9D%E6%9B%B4%E5%8A%A0%E9%AB%98%E6%95%88%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%BA%8C%E7%A7%8D%E5%AF%B9%E8%B1%A1%EF%BC%8C%E7%A7%B0%E4%B8%BA%E2%80%9C%E5%85%8B%E9%9A%86%E8%80%8C%E9%9D%9E%E6%8B%B7%E8%B4%9D%E5%AF%B9%E8%B1%A1%EF%BC%8Ccloneable%20but%20non-copyable%20objects%E2%80%9D%EF%BC%8C%E9%A1%BE%E5%90%8D%E6%80%9D%E4%B9%89%EF%BC%8C%E8%BF%99%E7%B1%BB%E5%AF%B9%E8%B1%A1%E5%8F%AF%E4%BB%A5%E5%AE%9E%E7%8E%B0%E6%8B%B7%E8%B4%9D%E8%AF%AD%E4%B9%89%EF%BC%8C%E4%BD%86%E4%B9%9F%E5%BA%94%E8%AF%A5%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89%EF%BC%8C%E4%BB%A5%E9%81%BF%E5%85%8D%E8%BF%90%E8%A1%8C%E6%9C%9F%E9%9D%9E%E5%BF%85%E8%A6%81%E7%9A%84%E5%89%AF%E6%9C%AC%E6%B6%88%E8%80%97%E3%80%82%E7%94%9A%E8%87%B3%EF%BC%8C%E9%9C%80%E8%A6%81%E6%98%BE%E5%BC%8F%E6%8F%90%E4%BE%9B%E4%B8%80%E4%B8%AA%E6%96%B9%E6%B3%95%E8%BF%9B%E8%A1%8C%E5%A4%8D%E5%88%B6%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%B8%89%E7%A7%8D%E7%B1%BB%E5%9E%8B%EF%BC%8C%E5%BA%94%E8%AF%A5%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89%EF%BC%8C%E4%BD%86%E4%B8%8D%E5%BA%94%E8%AF%A5%E6%8F%90%E4%BE%9B%E5%A4%8D%E5%88%B6%E6%96%B9%E6%B3%95%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E6%8B%A5%E6%9C%89%E7%9A%84%E8%B5%84%E6%BA%90%E4%B8%8D%E8%83%BD%E5%9C%A8Rust%E4%BB%A3%E7%A0%81%E5%A4%8D%E5%88%B6%EF%BC%8C%E8%BF%99%E7%A7%8D%E8%B5%84%E6%BA%90%E4%BB%85%E8%83%BD%E6%9C%89%E4%B8%80%E4%B8%AA%E2%80%9Cowner%E2%80%9D%EF%BC%8C%E6%89%80%E4%BB%A5%E8%BF%99%E7%B1%BB%E7%A7%B0%E4%B9%8B%E4%B8%BA%E2%80%9C%E4%B8%8D%E5%8F%AF%E6%8B%B7%E8%B4%9D%E5%AF%B9%E8%B1%A1%EF%BC%8Cnon-cloneable%20objects%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E7%84%B6%EF%BC%8C%E4%BB%BB%E4%BD%95%E5%AF%B9%E8%B1%A1%E5%8F%AF%E8%87%AA%E5%8A%A8%E8%A2%AB%E6%8B%B7%E8%B4%9D%E4%B9%9F%E5%8F%AF%E6%98%BE%E5%BC%8F%E5%9C%B0%E8%A2%AB%E6%8B%B7%E8%B4%9D%EF%BC%8C%E6%89%80%E4%BB%A5%E4%BB%BB%E4%BD%95%E5%8F%AF%E6%8B%B7%E8%B4%9D%E5%AF%B9%E8%B1%A1(copyable%20object)%E4%B9%9F%E6%98%AF%E4%B8%80%E4%B8%AA%E5%8F%AF%E5%85%8B%E9%9A%86%E5%AF%B9%E8%B1%A1(cloneable%20object)%E3%80%82%3C/p%3E%3Cp%3E%E6%80%BB%E7%BB%93%EF%BC%8C%E6%9F%90%E4%BA%9B%E5%AF%B9%E8%B1%A1%E4%B8%8D%E8%83%BD%E8%A2%AB%E5%85%8B%E9%9A%86(%E5%A6%82%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86)%EF%BC%8C%E6%9F%90%E4%BA%9B%E5%8F%AF%E4%BB%A5%E6%8B%B7%E8%B4%9D(%E6%98%BE%E5%BC%8F%E5%9C%B0)%EF%BC%8C%E6%9F%90%E4%BA%9B%E5%8F%AF%E4%BB%A5%E9%9A%90%E5%BC%8F%E6%8B%B7%E8%B4%9D(%E5%A6%82%E6%95%B0%E5%AD%97)%EF%BC%8C%E6%9F%90%E4%BA%9B%E4%B8%8D%E8%83%BD%E6%8B%B7%E8%B4%9D(%E5%A6%82%E9%9B%86%E5%90%88)%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%BA%E4%BA%86%E5%8C%BA%E5%88%86%E8%BF%99%E4%B8%89%E8%80%85%EF%BC%8CRust%E6%A0%87%E5%87%86%E5%BA%93%E5%8C%85%E5%90%AB%E6%9C%89%E4%B8%A4%E4%B8%AA%E7%89%B9%E6%AE%8A%E7%9A%84trait%EF%BC%9A%3Ccode%3ECopy%3C/code%3E%E5%92%8C%3Ccode%3EClone%3C/code%3E%E3%80%82%E4%BB%BB%E4%BD%95%E7%B1%BB%E5%9E%8B%E5%AE%9E%E7%8E%B0%E4%BA%86%3Ccode%3ECopy%3C/code%3E%E7%9A%84%E6%98%AF%E5%8F%AF%E6%8B%B7%E8%B4%9D%E7%9A%84%EF%BC%9B%E4%BB%BB%E4%BD%95%E7%B1%BB%E5%9E%8B%E5%AE%9E%E7%8E%B0%E4%BA%86%3Ccode%3EClone%3C/code%3E%E6%98%AF%E5%8F%AF%E5%85%8B%E9%9A%86%E7%9A%84%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E8%BF%99%E4%B8%89%E7%A7%8D%E5%8F%AF%E4%BB%A5%E6%96%87%E5%AD%97%E6%8F%8F%E8%BF%B0%E4%B8%BA%E5%A6%82%E4%B8%8B%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E5%AF%B9%E8%B1%A1%E5%AE%9E%E7%8E%B0%E4%BA%86%3Ccode%3ECopy%3C/code%3E%E5%92%8C%3Ccode%3EClone%3C/code%3E%E7%9A%84%EF%BC%8C%E5%8C%85%E5%90%AB%E6%8B%B7%E8%B4%9D%E8%AF%AD%E4%B9%89%EF%BC%8C%E4%B9%9F%E5%8F%AF%E4%BB%A5%E6%98%BE%E5%BC%8F%E5%85%8B%E9%9A%86%E3%80%82%E4%BE%8B%E5%A6%82%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%9E%8B%E3%80%82%3C/li%3E%3Cli%3E%E5%AF%B9%E8%B1%A1%E5%AE%9E%E7%8E%B0%E4%BA%86%3Ccode%3EClone%3C/code%3E%EF%BC%8C%E4%BD%86%E6%B2%A1%E6%9C%89%E5%AE%9E%E7%8E%B0%3Ccode%3ECopy%3C/code%3E%E7%9A%84%EF%BC%8C%E5%AE%83%E4%BB%AC%E5%AE%9E%E7%8E%B0%E4%BA%86%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%98%BE%E5%BC%8F%E5%85%8B%E9%9A%86%E3%80%82%E4%BE%8B%E5%A6%82%E9%9B%86%E5%90%88%E7%B1%BB%E5%9E%8B%E3%80%82%3C/li%3E%3Cli%3E%E6%97%A2%E6%B2%A1%E6%9C%89%E5%AE%9E%E7%8E%B0%3Ccode%3ECopy%3C/code%3E%EF%BC%8C%E4%B9%9F%E6%B2%A1%E6%9C%89%E5%AE%9E%E7%8E%B0%3Ccode%3EClone%3C/code%3E%E7%9A%84%EF%BC%8C%E5%B1%9E%E4%BA%8E%E4%B8%8D%E5%8F%AF%E5%A4%8D%E5%88%B6%EF%BC%8C%E5%AE%83%E4%BB%AC%E5%AE%9E%E7%8E%B0%E4%BA%86%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89%EF%BC%8C%E4%BE%8B%E5%A6%82%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E7%AD%89%E3%80%82%3C/li%3E%3Cli%3E%E6%B2%A1%E6%9C%89%E5%AF%B9%E8%B1%A1%E6%98%AF%E5%AE%9E%E7%8E%B0%E4%BA%86%3Ccode%3ECopy%3C/code%3E%EF%BC%8C%E5%8D%B4%E6%B2%A1%E6%9C%89%3Ccode%3EClone%3C/code%3E%E7%9A%84%E3%80%82%E8%BF%99%E6%84%8F%E5%91%B3%E7%9D%80%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%8B%B7%E8%B4%9D%E6%98%AF%E9%9A%90%E5%BC%8F%E7%9A%84%EF%BC%8C%E5%8D%B4%E4%B8%8D%E8%83%BD%E6%98%BE%E5%BC%8F%E8%B0%83%E7%94%A8%EF%BC%8C%E8%BF%99%E6%98%AF%E6%97%A0%E6%84%8F%E4%B9%89%E7%9A%84%E3%80%82%3C/li%3E%3C/ul%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E4%BE%8B%E5%AD%90%E5%B1%95%E7%A4%BA%E6%89%80%E6%9C%89%E7%9A%84%E6%83%85%E5%86%B5%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea1%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E123%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eb1%3C/span%3E%20=%20a1.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eclone%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ec1%3C/span%3E%20=%20b1;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20a1,%20b1,%20c1);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea2%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E::&amp;lt;%3Cspan%20class=%22type%22%3Ebool%3C/span%3E&amp;gt;::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eb2%3C/span%3E%20=%20a2.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eclone%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ec2%3C/span%3E%20=%20b2;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;%20&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20a2);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20ILLEGAL:%20print!(&amp;quot;%20&amp;#123;:?&amp;#125;&amp;quot;,%20b2);%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;%20&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20c2);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea3%3C/span%3E%20=%20std::fs::File::%3Cspan%20class=%22title%20function_%20invoke__%22%3Eopen%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;.&amp;quot;%3C/span%3E).%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20ILLEGAL:%20let%20b3%20=%20a3.clone();%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ec3%3C/span%3E%20=%20a3;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20ILLEGAL:%20print!(&amp;quot;%20&amp;#123;:?&amp;#125;&amp;quot;,%20a3);%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;%20&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20c3);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C%3Ccode%3E123%20123%20123%20[]%20[]%20File%3C/code%3E%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E6%AD%A4%E5%A4%84%E4%B8%89%E5%A4%84%E6%B3%A8%E9%87%8A%E7%9A%84%E5%9C%B0%E6%96%B9%E6%98%AF%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%E8%AF%AD%E5%8F%A5%E3%80%82%3C/p%3E%3Cp%3E%E9%A6%96%E5%85%88%EF%BC%8C%3Ccode%3Ea1%3C/code%3E%E6%98%AF%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%9E%8B%EF%BC%8C%E6%89%80%E4%BB%A5%E8%BF%99%E7%A7%8D%E7%B1%BB%E5%9E%8B%E5%8F%AF%E4%BB%A5%E9%9A%90%E5%BC%8F%E6%8B%B7%E8%B4%9D%EF%BC%8C%E4%B9%9F%E5%8F%AF%E4%BB%A5%E6%98%BE%E5%BC%8F%E5%85%8B%E9%9A%86(clone)%E3%80%82%E6%89%80%E4%BB%A5%E6%AD%A4%E5%A4%84%E4%B8%89%E4%B8%AA%E5%AF%B9%E8%B1%A1%E6%9C%89%E5%90%8C%E6%A0%B7%E7%9A%84%E5%80%BC%EF%BC%8C%E5%B9%B6%E6%89%93%E5%8D%B0%E8%BE%93%E5%87%BA%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E4%B8%BA%3Ccode%3Ea2%3C/code%3E%E6%98%AF%E4%B8%80%E4%B8%AA%E9%9B%86%E5%90%88%E7%B1%BB%E5%9E%8B%EF%BC%8C%E8%BF%99%E7%A7%8D%E7%B1%BB%E5%9E%8B%E5%8F%AF%E4%BB%A5%E5%85%8B%E9%9A%86%EF%BC%8C%E4%BD%86%E4%B8%8D%E8%83%BD%E6%8B%B7%E8%B4%9D%EF%BC%8C%E6%89%80%E4%BB%A5%3Ccode%3Eb2%3C/code%3E%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87%3Ccode%3Ea2%3C/code%3E%E6%98%BE%E5%BC%8F%E5%85%8B%E9%9A%86%EF%BC%8C%E5%AF%B9%3Ccode%3Eb2%3C/code%3E%E5%88%B0%3Ccode%3Ec2%3C/code%3E%E7%9A%84%E8%B5%8B%E5%80%BC%E6%98%AF%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89%EF%BC%8C%3Ccode%3Eb2%3C/code%3E%E4%B8%8D%E5%8F%AF%E5%86%8D%E8%AE%BF%E9%97%AE%E3%80%82%3C/p%3E%3Cp%3E%E5%AF%B9%E4%BA%8E%3Ccode%3Ea3%3C/code%3E%E8%80%8C%E8%A8%80%EF%BC%8C%E5%AE%83%E6%98%AF%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6handle%EF%BC%8C%E8%BF%99%E7%A7%8D%E7%B1%BB%E5%9E%8B%E4%B8%8D%E8%83%BD%E8%A2%AB%E5%85%8B%E9%9A%86%EF%BC%8C%E5%B0%9D%E8%AF%95%E7%BC%96%E8%AF%91%3Ccode%3Ea3.clone()%3C/code%3E%E4%BC%9A%E5%87%BA%E7%8E%B0%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%EF%BC%8C%E4%BB%A5%E5%8F%8A%E5%AF%B9%3Ccode%3Ea3%3C/code%3E%E5%88%B0%3Ccode%3Ec3%3C/code%3E%E7%9A%84%E8%B5%8B%E5%80%BC%E6%98%AF%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89%EF%BC%8C%E5%AF%B9%E8%B1%A1%E8%A2%AB%E7%A7%BB%E5%8A%A8%E4%BA%86%EF%BC%8C%3Ccode%3Ea3%3C/code%3E%E4%B8%8D%E5%8F%AF%E5%86%8D%E8%AE%BF%E9%97%AE%E3%80%82%3C/p%3E%3Ch2%20id=%22Making-Types-Cloneable-or-Copyable%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Making-Types-Cloneable-or-Copyable%22%3E%C2%B6%3C/a%3EMaking%20Types%20Cloneable%20or%20Copyable%3C/h2%3E%3Cp%3E%E5%89%8D%E9%9D%A2%E8%AF%B4%E8%BF%87%EF%BC%8C%E6%9E%9A%E4%B8%BE%EF%BC%8C%E7%BB%93%E6%9E%84%E4%BD%93%EF%BC%8C%E5%85%83%E7%BB%84-%E7%BB%93%E6%9E%84%E4%BD%93%EF%BC%8C%E9%BB%98%E8%AE%A4%E9%83%BD%E6%B2%A1%E6%9C%89%E5%AE%9E%E7%8E%B0%3Ccode%3ECopy%3C/code%3E%E5%92%8C%3Ccode%3EClone%3C/code%3E%E3%80%82%E5%9B%A0%E6%AD%A4%E5%AE%83%E6%98%AF%E4%B8%8D%E5%8F%AF%E5%85%8B%E9%9A%86%E7%9A%84%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E4%BD%A0%E5%8F%AF%E8%83%BD%E9%9C%80%E8%A6%81%E4%BB%85%E5%AE%9E%E7%8E%B0%3Ccode%3EClone%3C/code%3E%EF%BC%8C%E5%8F%88%E6%88%96%3Ccode%3ECopy%3C/code%3E%E5%92%8C%3Ccode%3EClone%3C/code%3E%E9%83%BD%E9%9C%80%E8%A6%81%E6%9C%89%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E4%BB%A3%E7%A0%81%E6%98%AF%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20&amp;#123;&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Es%3C/span%3E%20=%20S%20&amp;#123;&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Es.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eclone%3C/span%3E();%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%89%80%E4%BB%A5%E4%BD%A0%E4%BC%9A%E4%B8%BA%E5%85%B6%E5%AE%9E%E7%8E%B0%3Ccode%3EClone%3C/code%3E%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20&amp;#123;&amp;#125;%20%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EClone%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eclone%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E%20&amp;#123;&amp;#125;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Es%3C/span%3E%20=%20S%20&amp;#123;&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Es.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eclone%3C/span%3E();%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E4%BA%9B%E5%AE%9E%E7%8E%B0%E5%86%99%E6%B3%95%EF%BC%8C%E5%9C%A8%E5%89%8D%E9%9D%A2%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E4%BB%8B%E7%BB%8D%E8%BF%87%EF%BC%8C%E4%BD%A0%E9%9C%80%E8%A6%81%E4%B8%BA%E5%85%B6%E5%AE%9E%E7%8E%B0%3Ccode%3Eclone%3C/code%3E%E6%96%B9%E6%B3%95%EF%BC%8C%3C/p%3E%3Cp%3E%E5%8F%A6%E5%A4%96%EF%BC%8C%E5%AE%9E%E7%8E%B0%E7%9A%84%3Ccode%3EClone%3C/code%3E%E6%96%B9%E6%B3%95%EF%BC%8C%E4%B8%8D%E8%83%BD%E9%9A%90%E5%BC%8F%E4%BD%BF%E7%94%A8%E6%8B%B7%E8%B4%9D%E8%AF%AD%E4%B9%89%EF%BC%8C%E6%89%80%E4%BB%A5%E4%B8%8B%E9%9D%A2%E4%BB%A3%E7%A0%81%E6%98%AF%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20&amp;#123;&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EClone%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eclone%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E%20&amp;#123;&amp;#125;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Es%3C/span%3E%20=%20S%20&amp;#123;&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Es.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eclone%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_s2%3C/span%3E%20=%20s;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Es;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%89%80%E4%BB%A5%EF%BC%8C%E4%BD%A0%E9%9C%80%E8%A6%81%E5%AE%9E%E7%8E%B0%3Ccode%3ECopy%3C/code%3E%EF%BC%8C%E4%BD%BF%E5%85%B6%E5%90%88%E6%B3%95%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20&amp;#123;&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EClone%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eclone%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E%20&amp;#123;&amp;#125;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ECopy%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20&amp;#123;&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Es%3C/span%3E%20=%20S%20&amp;#123;&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Es.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eclone%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_s2%3C/span%3E%20=%20s;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Es;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%B8%BB%E8%A6%81%E5%88%B0%3Ccode%3ECopy%3C/code%3E%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8F%AF%E4%BB%A5%E4%B8%BA%E7%A9%BA%EF%BC%9B%E5%8F%AA%E8%A6%81%E5%A3%B0%E6%98%8E%E4%BA%86%3Ccode%3ECopy%3C/code%3E%E7%9A%84%E5%AE%9E%E7%8E%B0%EF%BC%8C%E6%8B%B7%E8%B4%9D%E8%AF%AD%E4%B9%89%E5%B0%B1%E6%BF%80%E6%B4%BB%E4%BA%86%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E5%86%99%E6%B3%95%E5%8D%B4%E6%98%AF%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20&amp;#123;&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ECopy%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20&amp;#123;&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BC%96%E8%AF%91%E5%99%A8%E4%BC%9A%E6%8A%B1%E6%80%A8%EF%BC%9A%E2%80%9C%3Ccode%3Ethe%20trait%20bound%20%3C/code%3Emain::S:std::clone::Clone%3Ccode%3E%20is%20not%20satisfied%3C/code%3E%E2%80%9D%E3%80%82%3Ccode%3ECopy%3C/code%3E%E7%9A%84%E5%AE%9E%E7%8E%B0%EF%BC%8C%E5%89%8D%E6%8F%90%E6%9D%A1%E4%BB%B6%E6%98%AF%3Ccode%3EClone%3C/code%3E%E4%B9%9F%E5%AE%9E%E7%8E%B0%E4%BA%86%EF%BC%8C%3C/p%3E%3Cp%3E%E4%BD%86%E4%B8%8B%E9%9D%A2%E5%86%99%E6%B3%95%E4%B9%9F%E6%98%AF%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20&amp;#123;%20x:%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E&amp;gt;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ECopy%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20&amp;#123;&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EClone%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eclone%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E%20&amp;#123;%20*%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BC%96%E8%AF%91%E4%BA%A7%E7%94%9F%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF%EF%BC%8C%E2%80%9Cthe%20trait%20%3Ccode%3ECopy%3C/code%3E%20may%20not%20be%20implemented%20for%20this%20type%E2%80%9D%E3%80%82%E5%91%8A%E8%AF%89%E4%BD%A0%3Ccode%3EVec&amp;lt;i2&amp;gt;%3C/code%3E%E7%B1%BB%E5%9E%8B%E6%B2%A1%E6%9C%89%E5%AE%9E%E7%8E%B0%3Ccode%3ECopy%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3ERust%E5%85%81%E8%AE%B8%E5%AE%9E%E7%8E%B0%3Ccode%3ECopy%3C/code%3E%EF%BC%8C%E4%BB%85%E8%83%BD%E5%85%81%E8%AE%B8%E5%85%B6%E7%B1%BB%E5%9E%8B%E6%98%AF%E5%8C%85%E5%90%AB%E5%8F%AF%E6%8B%B7%E8%B4%9D%E5%AF%B9%E8%B1%A1%E7%9A%84%EF%BC%8C%E5%9B%A0%E4%B8%BA%E6%8B%B7%E8%B4%9D%E5%AF%B9%E8%B1%A1%EF%BC%8C%E6%84%8F%E5%91%B3%E7%9D%80%E4%BC%9A%E6%8B%B7%E8%B4%9D%E5%AE%83%E7%9A%84%E6%89%80%E6%9C%89%E6%88%90%E5%91%98(members)%E3%80%82%E8%BF%99%E9%87%8C%EF%BC%8C%3Ccode%3EVec%3C/code%3E%E6%B2%A1%E6%9C%89%E5%AE%9E%E7%8E%B0%3Ccode%3ECopy%3C/code%3E%EF%BC%8C%E6%89%80%E4%BB%A5%3Ccode%3ES%3C/code%3E%E4%B9%9F%E4%B8%8D%E8%83%BD%E5%AE%9E%E7%8E%B0%E6%8B%B7%E8%B4%9D%E8%AF%AD%E4%B9%89%E3%80%82%3C/p%3E%3Cp%3E%E7%9B%B8%E5%8F%8D%EF%BC%8C%E4%B8%8B%E9%9D%A2%E4%BB%A3%E7%A0%81%E6%98%AF%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20&amp;#123;%20x:%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E&amp;gt;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EClone%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eclone%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ES%20&amp;#123;%20x:%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.x.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eclone%3C/span%3E()%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Es1%3C/span%3E%20=%20S%20&amp;#123;%20x:%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22number%22%3E12%3C/span%3E]%20&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Es2%3C/span%3E%20=%20s1.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eclone%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Es1.x[%3Cspan%20class=%22number%22%3E0%3C/span%3E]%20+=%20%3Cspan%20class=%22number%22%3E1%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20s1.x[%3Cspan%20class=%22number%22%3E0%3C/span%3E],%20s2.x[%3Cspan%20class=%22number%22%3E0%3C/span%3E]);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C13%2012%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E9%87%8C%EF%BC%8C%3Ccode%3ES%3C/code%3E%E7%BB%93%E6%9E%84%E4%BD%93%E4%B8%8D%E6%98%AF%E5%8F%AF%E6%8B%B7%E8%B4%9D%E7%9A%84%EF%BC%8C%E4%BD%86%E5%8D%B4%E6%98%AF%E5%8F%AF%E5%85%8B%E9%9A%86%E7%9A%84(clonable)%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E5%AE%9E%E7%8E%B0%E4%BA%86%3Ccode%3EClone%3C/code%3E%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%3Ccode%3Es1%3C/code%3E%E5%8F%AF%E4%BB%A5%E5%AF%B9%3Ccode%3Es2%3C/code%3E%E8%B5%8B%E5%80%BC%E3%80%82%3Ccode%3Es1%3C/code%3E%E8%A2%AB%E4%BF%AE%E6%94%B9%EF%BC%8C%E4%B8%A4%E8%80%85%E8%BE%93%E5%87%BA%E5%86%85%E5%AE%B9%E4%B8%8D%E5%90%8C%E3%80%82%3C/p%3E" type="image"/>
    
    
    <category term="learning" scheme="https://galudisu.info/categories/learning/"/>
    
    
    <category term="rust" scheme="https://galudisu.info/tags/rust/"/>
    
  </entry>
  
  <entry>
    <title>rust基础入门[20] - Standard Library Collections</title>
    <link href="https://galudisu.info/2023/01/20/rust/beginning/chapter20_Standard%20Library%20Collections/"/>
    <id>https://galudisu.info/2023/01/20/rust/beginning/chapter20_Standard%20Library%20Collections/</id>
    <published>2023-01-20T07:50:46.000Z</published>
    <updated>2025-04-27T11:59:08.282Z</updated>
    
    <content type="html"><![CDATA[<p>本章覆盖有：</p><ul><li>如何度量运行部分代码所花费的时间</li><li>基于性能因素，如何使用哪种类型的集合</li><li>集合中的各种操作中哪个更好：顺序扫描(sequential scan)、两端插入和删除(insertion and removal of items at both ends)、删除最大项(removal of the largest item)、搜索(search)、键搜索(search by key)、保持顺序(keeping items sorted)</li></ul><span id="more"></span><h2 id="Collections"><a class="header-anchor" href="#Collections">¶</a>Collections</h2><p>数组、向量、结构体、元组结构体、元组、枚举属于数据类型，它们的对象可能包含几个其它对象。然而，对于结构体、元组-结构体、元组、枚举，每个包含的对象，需要指定声明类型和构造类型，它们不能存储多个对象。相反数组和向量的数据类型会包含多个对象，这一类对象称为“集合”。</p><p>数组和向量是最佳集合：内存高效，读取速度快，CPU缓存高效，能通过索引快速访问内部元素。当然，在某些情况不尽是高效的，这种情况下需要使用其它集合。Rust标准库提供了各种各样的集合类型：<code>VecDeque&lt;T&gt;</code>、<code>LinkedList&lt;T&gt;</code>、<code>BinaryHeap&lt;T&gt;</code>、<code>BTreeSet&lt;T&gt;</code>、<code>BTreeMap&lt;K,V&gt;</code>、<code>HashSet&lt;T&gt;</code>和<code>HashMap&lt;K,V&gt;</code>。</p><p>说到集合，数组是一个单独案例，因为它完全是栈分配的，以及在编译期已经定义了大小。而对于其它集合，包括vector，元素个数可变，它将header存储在stack，数据部分则存储在堆。这种称为“动态数据集dynamically-sized collections”。</p><h2 id="Measuring-Execution-Time"><a class="header-anchor" href="#Measuring-Execution-Time">¶</a>Measuring Execution Time</h2><p>集合的选取更多地由它的性能决定，先绕开这方面内容，看看如何精确度量不同Rust代码所花费的性能。</p><p>对于软件开发者来说性能是很重要的一方面。单个函数的运行，高级语言都要求命令处理花费至毫秒和秒级别，像Rust这类低级语言，都要求毫秒甚至纳秒。</p><p>在Rust标准库中，有几个函数可以度量源代码消耗的时间，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::time::Instant;</span><br><span class="line"></span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">elapsed_ms</span>(t1: Instant, t2: Instant) <span class="punctuation">-&gt;</span> <span class="type">f64</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">t</span> = t2 - t1;</span><br><span class="line">    t.<span class="title function_ invoke__">as_secs</span>() <span class="keyword">as</span> <span class="type">f64</span> * <span class="number">1000</span>. + t.<span class="title function_ invoke__">subsec_nanos</span>() <span class="keyword">as</span> <span class="type">f64</span> / <span class="number">1e6</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">time0</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">0</span>..<span class="number">10_000</span> &#123;</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">time1</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, <span class="title function_ invoke__">elapsed_ms</span>(time0, time1));</span><br></pre></td></tr></table></figure><p>程序会打印0到9999的整数，然后将所花费的毫秒数输出。</p><p>所花费的时间跟计算机能力有关，当然也跟编译器的优化有关。</p><p>前面章节说到，可以用<code>rustc</code>来编译源代码文件，但是这个命令并没有编译器优化，只是单纯生成机器码用于调试，它不是高效的。</p><p>如果你对性能感兴趣，可以带上编译参数<code>-O</code>。省略这个参数，所有优化都是禁用的。</p><p>因此，这章示例可以通过下面命令行编译优化，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rustc -O main.rs</span><br></pre></td></tr></table></figure><p>要度量一个时间，你应该用<code>Instant</code>类的<code>now</code>函数。这个类型定义在Rust的标准库中。</p><h2 id="Performing-Arbitrary-Insertions-and-Removals"><a class="header-anchor" href="#Performing-Arbitrary-Insertions-and-Removals">¶</a>Performing Arbitrary Insertions and Removals</h2><p>回到原来的集合处理。下面程序是非常高效的，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> SIZE: <span class="type">usize</span> = <span class="number">100_000_000</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">t0</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">v</span> = <span class="type">Vec</span>::&lt;<span class="type">usize</span>&gt;::<span class="title function_ invoke__">with_capacity</span>(SIZE);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">t1</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">0</span>..SIZE &#123;</span><br><span class="line">v.<span class="title function_ invoke__">push</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">t2</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="variable">_</span> <span class="keyword">in</span> <span class="number">0</span>..SIZE &#123;</span><br><span class="line">v.<span class="title function_ invoke__">pop</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">t3</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125; &#123;&#125;&quot;</span>, <span class="title function_ invoke__">elapsed_ms</span>(t0, t1), <span class="title function_ invoke__">elapsed_ms</span>(t1, t2), <span class="title function_ invoke__">elapsed_ms</span>(t2, t3));</span><br></pre></td></tr></table></figure><p>记得添加<code>-O</code>进行编译。</p><p>程序将打印三段数字，它是由编译器、或者有操作系统所决定。</p><p>假设你本机输出的数据是：“0.002667 454.516057 87.302678”。</p><p>这意味着创建一个vector为这个<code>usize</code>对象分配“房间”，它占64位系统800M，以及少于3毫秒的消耗时间。要将一千万的值塞入这个空间，不使用内存派遣，少于1秒的损耗时间，同时还要删除所有数据，花费1/10秒的时间。</p><p>如果不加<code>-O</code>参数编译，你会发现它花费时间非常大。</p><p>相反，下面的程序非常低效，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> SIZE: <span class="type">usize</span> = <span class="number">100_000_000</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">t0</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">v</span> = <span class="type">Vec</span>::&lt;<span class="type">usize</span>&gt;::<span class="title function_ invoke__">with_capacity</span>(SIZE);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">t1</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">0</span>..SIZE &#123;</span><br><span class="line">v.<span class="title function_ invoke__">insert</span>(<span class="number">0</span>, i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">t2</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="variable">_</span> <span class="keyword">in</span> <span class="number">0</span>..SIZE &#123;</span><br><span class="line">v.<span class="title function_ invoke__">remove</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">t3</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125; &#123;&#125;&quot;</span>, <span class="title function_ invoke__">elapsed_ms</span>(t0, t1), <span class="title function_ invoke__">elapsed_ms</span>(t1, t2), <span class="title function_ invoke__">elapsed_ms</span>(t2, t3));</span><br></pre></td></tr></table></figure><p>它会打印：“0.00178 2038.879344 2029.447851”。</p><p>要创建一个800KB的vector，花费少于2毫秒的时间，但是插入数据却花费了多于2秒的时间，以及差不多等同的时间用来删除数据。这里发现插入动作，比前面花费更多的时间。</p><p>导致两者的差异很好解析。</p><p>从栈顶添加元素，只需要确保有足够的空间，然后将数据拷贝到缓冲区，增加元素个数。对于计算机来说，处理这些时间少于5纳秒，包括迭代器的移位动作。</p><p>同样，对于从栈顶删除元素，确保vector不为空，然后递减元素，花费不到1纳秒的时间。</p><p>相反，从vector的开始部分插入元素，首先你需要将地址进行转换，每次有新的元素过来，都要释放地址空间。虽然转换很快，随着元素个数的增加，要插入首位置的元素也越来越多。</p><p>类似的，要从首位置移除元素，需要将所有元素都转换一遍，不仅仅是首位置，</p><p>从计算复杂度表示，栈顶(尾部)插入或删除元素是<code>O(K)</code>复杂度，它是常量复杂度(constant complexity)；而对于从栈尾(首部)插入或删除元素是<code>O(N)</code>复杂度，它是线性复杂度(linear complexity)。</p><p>即使是在中间部分插入或删除数据，性能可能会稍微好一点，但仍然比在栈顶插入或删除数据要慢。</p><h2 id="Queues"><a class="header-anchor" href="#Queues">¶</a>Queues</h2><p>如果是在首部和尾部同时有插入或删除动作，这个vector不会是一个优化集合。典型情况类似于Queue，它在尾部插入元素，在首部萃取元素，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> SIZE: <span class="type">usize</span> = <span class="number">40_000</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">t0</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">v</span> = <span class="type">Vec</span>::&lt;<span class="type">usize</span>&gt;::<span class="title function_ invoke__">new</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">0</span>..SIZE &#123;</span><br><span class="line">v.<span class="title function_ invoke__">push</span>(i);</span><br><span class="line">v.<span class="title function_ invoke__">push</span>(SIZE + i);</span><br><span class="line">v.<span class="title function_ invoke__">remove</span>(<span class="number">0</span>);</span><br><span class="line">v.<span class="title function_ invoke__">push</span>(SIZE * <span class="number">2</span> + i);</span><br><span class="line">v.<span class="title function_ invoke__">remove</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">t1</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line"><span class="keyword">while</span> v.<span class="title function_ invoke__">len</span>() &gt; <span class="number">0</span> &#123;</span><br><span class="line">v.<span class="title function_ invoke__">remove</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">t2</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>, <span class="title function_ invoke__">elapsed_ms</span>(t0, t1), <span class="title function_ invoke__">elapsed_ms</span>(t1, t2));</span><br></pre></td></tr></table></figure><p>可能的输出会是：“561.189636 276.056133”。</p><p>代码中，创建了一个空的vector，用了4千次循环，将三个数插入栈顶，以及在栈顶删除两个元素。第二个循环体内，每次从栈顶删除元素。第一个循环片段花费了大约半秒的时间，第二个循环体花费了大约四分之一秒。实际上，大部分时间都用在了萃取元素上，插入其实是非常快的。</p><p>我们希望插入元素总是发生在栈尾，萃取(extract)元素总是在栈顶，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> SIZE: <span class="type">usize</span> = <span class="number">40_000</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">t0</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">v</span> = <span class="type">Vec</span>::&lt;<span class="type">usize</span>&gt;::<span class="title function_ invoke__">new</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">0</span>..SIZE &#123;</span><br><span class="line">v.<span class="title function_ invoke__">insert</span>(<span class="number">0</span>, i);</span><br><span class="line">v.<span class="title function_ invoke__">insert</span>(<span class="number">0</span>, SIZE + i);</span><br><span class="line">v.<span class="title function_ invoke__">pop</span>();</span><br><span class="line">v.<span class="title function_ invoke__">insert</span>(<span class="number">0</span>, SIZE * <span class="number">2</span> + i);</span><br><span class="line">v.<span class="title function_ invoke__">pop</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">t1</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line"><span class="keyword">while</span> v.<span class="title function_ invoke__">len</span>() &gt; <span class="number">0</span> &#123;</span><br><span class="line">v.<span class="title function_ invoke__">pop</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">t2</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>, <span class="title function_ invoke__">elapsed_ms</span>(t0, t1), <span class="title function_ invoke__">elapsed_ms</span>(t1, t2));</span><br></pre></td></tr></table></figure><p>结果可能打印：“790.365012 0.000112”。</p><p>现在插入很慢，删除却很快。可是总共花费的时间并没有提升多少。我们尝试用<code>VecDeque</code>类型，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> SIZE: <span class="type">usize</span> = <span class="number">40_000</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">t0</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">v</span> = std::collections::VecDeque::&lt;<span class="type">usize</span>&gt;::<span class="title function_ invoke__">new</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">0</span>..SIZE &#123;</span><br><span class="line">v.<span class="title function_ invoke__">insert</span>(<span class="number">0</span>, i);</span><br><span class="line">v.<span class="title function_ invoke__">insert</span>(<span class="number">0</span>, SIZE + i);</span><br><span class="line">v.<span class="title function_ invoke__">pop</span>();</span><br><span class="line">v.<span class="title function_ invoke__">insert</span>(<span class="number">0</span>, SIZE * <span class="number">2</span> + i);</span><br><span class="line">v.<span class="title function_ invoke__">pop</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">t1</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line"><span class="keyword">while</span> v.<span class="title function_ invoke__">len</span>() &gt; <span class="number">0</span> &#123;</span><br><span class="line">v.<span class="title function_ invoke__">pop</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">t2</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>, <span class="title function_ invoke__">elapsed_ms</span>(t0, t1), <span class="title function_ invoke__">elapsed_ms</span>(t1, t2));</span><br></pre></td></tr></table></figure><p>结果打印：“0.40793 0.050257”。</p><p>整段程序花费不到半毫秒的时间，这里需要显式声明<code>VecDeque</code>的类型，它是“vector-like double-ended queue”的缩写，“queue”表示的是“sequential collection into which items are inserted at one end and from which items are extracted at the other end”。“double-ended”表示在尾部插入元素，也可以在尾部萃取元素，不带有penalty。“vector-like”表示具有vector相似的操作。</p><p>要在vector栈顶添加或删除元素，可以简单使用<code>push</code>和<code>pop</code>，而对于<code>双端队列，double-ended queue</code>，需要理解两端的实现是等效的，插入元素可以用<code>push_front</code>和<code>push_back</code>，也可以在两端用<code>pop_front</code>和<code>pop_back</code>删除元素。虽然<code>VecDeque</code>类型支持<code>insert</code>和<code>remove</code>函数，但不被推荐使用，因为它不是高效的。</p><p>给出的队列非常高效，为什么我们总是用它，而是选择用vector？</p><p>原因是vector更普遍的操作是迭代、元素访问，这种时间损耗一直保持为常量因素。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> SIZE: <span class="type">usize</span> = <span class="number">40_000</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">v</span> = <span class="type">Vec</span>::&lt;<span class="type">usize</span>&gt;::<span class="title function_ invoke__">new</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">vd</span> = std::collections::VecDeque::&lt;<span class="type">usize</span>&gt;::<span class="title function_ invoke__">new</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="variable">t0</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">0</span>..SIZE &#123;</span><br><span class="line">v.<span class="title function_ invoke__">push</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">t1</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">0</span>..SIZE &#123;</span><br><span class="line">vd.<span class="title function_ invoke__">push_back</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">count</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="number">2</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> v.<span class="title function_ invoke__">iter</span>() &#123;</span><br><span class="line">count += i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">t3</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> vd.<span class="title function_ invoke__">iter</span>() &#123;</span><br><span class="line">count += i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">t4</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125;&quot;</span>, count,</span><br><span class="line"><span class="title function_ invoke__">elapsed_ms</span>(t0, t1), <span class="title function_ invoke__">elapsed_ms</span>(t1, t2),</span><br><span class="line"><span class="title function_ invoke__">elapsed_ms</span>(t2, t3), <span class="title function_ invoke__">elapsed_ms</span>(t3, t4));</span><br></pre></td></tr></table></figure><p>可能打印：“1599960000 0.230073 0.203979 0.013144 0.035295”。</p><p>会发现，<code>Vec</code>和<code>VecDeque</code>几乎花费相当的时间，但对于扫描整个集合元素，<code>Vec</code>效率要高出两倍。</p><h2 id="Linked-Lists"><a class="header-anchor" href="#Linked-Lists">¶</a>Linked Lists</h2><p>对于某些应用，可能会频繁地在中间位置插入或删除元素。这种情况，向量(vector)和对象(queue)不是高效的，所以需要引入新的集合类型——<code>LinkedList</code>。</p><p>然而，如果你需要在一个集合进行大量操作，譬如添加或删除很多个条目，会比<code>Vec</code>或<code>VecDeque</code>要快很多，它会创建一个新的临时集合，并由临时集合替换原来的集合。</p><p><code>LinkedList</code>的使用，不应该用于那些需要频繁读取的位置做插入或删除操作。</p><h2 id="Binary-Heaps"><a class="header-anchor" href="#Binary-Heaps">¶</a>Binary Heaps</h2><p>访问集合还有另外一种方式，即所谓的“优先队列”。它出现在仅有两个函数的地方：插入元素和萃取元素。但每个元素都有优先值，萃取(extract)元素需要根据优先级获取。使用Vector时，可以类似下面这种方式包含这种行为，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">add</span>(v: &amp;<span class="keyword">mut</span> <span class="type">Vec</span>&lt;<span class="type">i32</span>&gt;, a: <span class="type">i32</span>) &#123;</span><br><span class="line">v.<span class="title function_ invoke__">push</span>(a);</span><br><span class="line">v.<span class="title function_ invoke__">sort</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">a</span> = [<span class="number">48</span>, <span class="number">18</span>, <span class="number">20</span>, <span class="number">35</span>, <span class="number">17</span>, <span class="number">13</span>, <span class="number">39</span>, <span class="number">12</span>, <span class="number">42</span>, <span class="number">33</span>, <span class="number">29</span>, <span class="number">27</span>, <span class="number">50</span>, <span class="number">16</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">v</span> = <span class="type">Vec</span>::&lt;<span class="type">i32</span>&gt;::<span class="title function_ invoke__">new</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">0</span>..a.<span class="title function_ invoke__">len</span>() / <span class="number">2</span> &#123;</span><br><span class="line"><span class="title function_ invoke__">add</span>(&amp;<span class="keyword">mut</span> v, a[i * <span class="number">2</span>]);</span><br><span class="line"><span class="title function_ invoke__">add</span>(&amp;<span class="keyword">mut</span> v, a[i * <span class="number">2</span> + <span class="number">1</span>]);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, v.<span class="title function_ invoke__">pop</span>().<span class="title function_ invoke__">unwrap</span>());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> ! v.<span class="title function_ invoke__">is_empty</span>() &#123;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, v.<span class="title function_ invoke__">pop</span>().<span class="title function_ invoke__">unwrap</span>());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>每次将数组元素添加到vector时，vector都进行一次排序，它的元素保持升阶的顺序。所以vector的值的萃取也总可以得到最大值。</p><p>下面是另一种等价实现，只不过是在萃取前进行排序，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">extract</span>(v: &amp;<span class="keyword">mut</span> <span class="type">Vec</span>&lt;<span class="type">i32</span>&gt;) <span class="punctuation">-&gt;</span> OPtion&lt;<span class="type">i32</span>&gt; &#123;</span><br><span class="line">v.<span class="title function_ invoke__">sort</span>();</span><br><span class="line">v.<span class="title function_ invoke__">pop</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">a</span> = [<span class="number">48</span>, <span class="number">18</span>, <span class="number">20</span>, <span class="number">35</span>, <span class="number">17</span>, <span class="number">13</span>, <span class="number">39</span>, <span class="number">12</span>, <span class="number">42</span>, <span class="number">33</span>, <span class="number">29</span>, <span class="number">27</span>, <span class="number">50</span>, <span class="number">16</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">v</span> = <span class="type">Vec</span>::&lt;<span class="type">i32</span>&gt;::<span class="title function_ invoke__">new</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">0</span>..a.<span class="title function_ invoke__">len</span>() / <span class="number">2</span> &#123;</span><br><span class="line">v.<span class="title function_ invoke__">push</span>(a[i * <span class="number">2</span>]);</span><br><span class="line">v.<span class="title function_ invoke__">push</span>(a[i * <span class="number">2</span> + <span class="number">1</span>]);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, <span class="title function_ invoke__">extract</span>(&amp;<span class="keyword">mut</span> v).<span class="title function_ invoke__">unwrap</span>());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> ! v.<span class="title function_ invoke__">is_empty</span>() &#123;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, <span class="title function_ invoke__">extract</span>(&amp;<span class="keyword">mut</span> v).<span class="title function_ invoke__">unwrap</span>());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这两个代码都有不好之处在于频繁调用了<code>sort</code>函数，它有较大消耗。</p><p>下面是一个等价实现，并且更快，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">a</span> = [<span class="number">48</span>, <span class="number">18</span>, <span class="number">20</span>, <span class="number">35</span>, <span class="number">17</span>, <span class="number">13</span>, <span class="number">39</span>, <span class="number">12</span>, <span class="number">42</span>, <span class="number">33</span>, <span class="number">29</span>, <span class="number">27</span>, <span class="number">50</span>, <span class="number">16</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">v</span> = std::collections::BinaryHeap::&lt;<span class="type">i32</span>&gt;::<span class="title function_ invoke__">new</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">0</span>..a.<span class="title function_ invoke__">len</span>() / <span class="number">2</span> &#123;</span><br><span class="line">v.<span class="title function_ invoke__">push</span>(a[i * <span class="number">2</span>]);</span><br><span class="line">v.<span class="title function_ invoke__">push</span>(a[i * <span class="number">2</span> + <span class="number">1</span>]);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, v.<span class="title function_ invoke__">pop</span>().<span class="title function_ invoke__">unwrap</span>());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> ! v.<span class="title function_ invoke__">is_empty</span>() &#123;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, v.<span class="title function_ invoke__">pop</span>().<span class="title function_ invoke__">unwrap</span>());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的二叉堆(binary heap)类似vector一样，可以调用<code>push</code>和<code>pop</code>函数，不同的是，二叉堆的<code>pop</code>函数萃取的是容器中最大的值。</p><h2 id="Ordered-Sets-and-Unordered-Sets"><a class="header-anchor" href="#Ordered-Sets-and-Unordered-Sets">¶</a>Ordered Sets and Unordered Sets</h2><p>集合概念中的Set是一种不包含重复元素的概念，存储这个元素的一个高效实现是“hashtable”，对应集合类型的<code>HashSet</code>。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">arr</span> = [<span class="number">6</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">0</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">v</span> = <span class="type">Vec</span>::&lt;_&gt;::<span class="title function_ invoke__">new</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">hs</span> = std::collections::HashSet::&lt;_&gt;::<span class="title function_ invoke__">new</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">bs</span> = std::collections::BTreeSet::&lt;_&gt;::<span class="title function_ invoke__">new</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> arr.<span class="title function_ invoke__">iter</span>() &#123;</span><br><span class="line">v.<span class="title function_ invoke__">push</span>(i);</span><br><span class="line">hs.<span class="title function_ invoke__">insert</span>(i);</span><br><span class="line">bs.<span class="title function_ invoke__">insert</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;Vec:&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> v.<span class="title function_ invoke__">iter</span>() &#123; <span class="built_in">print!</span>(<span class="string">&quot; &#123;&#125;&quot;</span>, i); &#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;. &#123;:?&#125;, v);</span></span><br><span class="line"><span class="string">print!(&quot;</span>HashSet :<span class="string">&quot;);</span></span><br><span class="line"><span class="string">for i in hs.iter() &#123; print!(&quot;</span> &#123;&#125;<span class="string">&quot;, i); &#125;</span></span><br><span class="line"><span class="string">println!(&quot;</span>. &#123;:?&#125;, hs);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;BTreeSet:&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> bs.<span class="title function_ invoke__">iter</span>() &#123; <span class="built_in">print!</span>(<span class="string">&quot; &#123;&#125;&quot;</span>, i); &#125;</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;. &#123;:?&#125;&quot;</span>, bs);</span><br></pre></td></tr></table></figure><p>会打印，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Vec: 6 8 2 8 4 9 6 1 8 0. [6, 8, 2, 8, 4, 9, 6, 1, 8, 0]</span><br><span class="line">HashSet : 8 2 9 6 4 0 1. &#123;8, 2, 9, 6, 4, 0, 1&#125;</span><br><span class="line">BTreeSet: 0 1 2 4 6 8 9. &#123;0, 1, 2, 4, 6, 8, 9&#125;</span><br></pre></td></tr></table></figure><p><code>Vec v</code>集合包含所有插入元素，保留插入顺序；<code>Hashset hs</code>集合不包含重复元素；<code>BTreeSet bs</code>进行了插入排序。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">elapsed_ms</span>(t1: Instant, t2: Instant) <span class="punctuation">-&gt;</span> <span class="type">f64</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">t</span> = t2 - t1;</span><br><span class="line">    t.<span class="title function_ invoke__">as_secs</span>() <span class="keyword">as</span> <span class="type">f64</span> * <span class="number">1000</span>. + t.<span class="title function_ invoke__">subsec_nanos</span>() <span class="keyword">as</span> <span class="type">f64</span> / <span class="number">1e6</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> SIZE: <span class="type">i32</span> = <span class="number">40_000</span>;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">ns_per_op</span>(t1: Instant, t2: Instant) <span class="punctuation">-&gt;</span> <span class="type">f64</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">elapsed_ms</span>(t1, t2) / SIZE <span class="keyword">as</span> <span class="type">f64</span> * <span class="number">1_000_000</span>.</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">main</span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">v</span> = <span class="type">Vec</span>::&lt;_&gt;::<span class="title function_ invoke__">new</span>();</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">hs</span> = std::collections::HashSet::&lt;_&gt;::<span class="title function_ invoke__">new</span>();</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">bs</span> = std::collections::BTreeSet::&lt;_&gt;::<span class="title function_ invoke__">new</span>();</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">t0</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line">    <span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">0</span>..SIZE &#123; v.<span class="title function_ invoke__">push</span>(i); &#125;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">t1</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line">    <span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">0</span>..SIZE &#123; hs.<span class="title function_ invoke__">insert</span>(i); &#125;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">t2</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line">    <span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">0</span>..SIZE &#123; bs.<span class="title function_ invoke__">insert</span>(i); &#125;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">t3</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line">    <span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">0</span>..SIZE &#123; <span class="keyword">if</span> ! v.<span class="title function_ invoke__">contains</span>(&amp;i) &#123; <span class="keyword">return</span>; &#125; &#125;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">t4</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line">    v.<span class="title function_ invoke__">swap</span>(<span class="number">10_000</span>, <span class="number">20_000</span>);</span><br><span class="line">    v.<span class="title function_ invoke__">sort</span>();</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">t5</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line">    <span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">0</span>..SIZE &#123;</span><br><span class="line">        <span class="keyword">if</span> v.<span class="title function_ invoke__">binary_search</span>(&amp;i).<span class="title function_ invoke__">is_err</span>() &#123; <span class="keyword">return</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">t6</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line">    <span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">0</span>..SIZE &#123; <span class="keyword">if</span> ! hs.<span class="title function_ invoke__">contains</span>(&amp;i) &#123; <span class="keyword">return</span>; &#125; &#125;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">t7</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line">    <span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">0</span>..SIZE &#123; <span class="keyword">if</span> ! bs.<span class="title function_ invoke__">contains</span>(&amp;i) &#123; <span class="keyword">return</span>; &#125; &#125;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">t8</span> = Instant::<span class="title function_ invoke__">now</span>();</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;Pushes in Vec: &#123;&#125;&quot;</span>, <span class="title function_ invoke__">ns_per_op</span>(t0, t1));</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;Insertions in HashSet: &#123;&#125;&quot;</span>, <span class="title function_ invoke__">ns_per_op</span>(t1, t2));</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;Insertions in BTreeSet: &#123;&#125;&quot;</span>, <span class="title function_ invoke__">ns_per_op</span>(t2, t3));</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;Linear search in Vec: &#123;&#125;&quot;</span>, <span class="title function_ invoke__">ns_per_op</span>(t3, t4));</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;Sort of Vec: &#123;&#125;&quot;</span>, <span class="title function_ invoke__">ns_per_op</span>(t4, t5));</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;Binary search in Vec: &#123;&#125;&quot;</span>, <span class="title function_ invoke__">ns_per_op</span>(t5, t6));</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;Search in HashSet: &#123;&#125;&quot;</span>, <span class="title function_ invoke__">ns_per_op</span>(t6, t7));</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;Search in BTreeSet: &#123;&#125;&quot;</span>, <span class="title function_ invoke__">ns_per_op</span>(t7, t8));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将会打印：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Pushes in Vec: 6.4021</span><br><span class="line">Insertions in HashSet: 139.214</span><br><span class="line">Insertions in BTreeSet: 127.3047</span><br><span class="line">Linear search in Vec: 17389.3111</span><br><span class="line">Sort of Vec: 3.1132</span><br><span class="line">Binary search in Vec: 47.7641</span><br><span class="line">Search in HashSet: 36.5041</span><br><span class="line">Search in BTreeSet: 56.2444</span><br></pre></td></tr></table></figure><p>栈顶插入元素，花费6纳秒，<code>HashSet</code>和<code>BTreeSet</code>插入元素，花费接近20倍。</p><p>线性方式搜索vector，花费时间非常大，改为二分查找算法后，平均在50纳秒的时间。所以，如果插入比查找少的情况，每次插入元素之后进行排序，再用二分查找会更加高效。</p><p><code>HashSet</code>的查找花费40纳秒左右；<code>BTreeSet</code>的查找花费接近60纳秒左右。</p><p>优化数据结构的原则是，</p><p>首先声明一个trait，它包含有该数据结构的方法签名，接着实现这个trait，再测试这个trait的实现方法的性能，如果性能太低。重构代码进行优化，知道满意的实现。</p><h2 id="Ordered-Dictionaries-and-Unordered-Dictionaries"><a class="header-anchor" href="#Ordered-Dictionaries-and-Unordered-Dictionaries">¶</a>Ordered Dictionaries and Unordered Dictionaries</h2><p>集合处理简单的存储、访问使用外，另一种常见用法是“字典”，即由“key”进行访问。</p><p>字典可以看做是key-value对，它的处理由key决定。所以，字典不能有两个相同的key。</p><p>Rust标准库中提供了<code>HashMap</code>和<code>BTreeMap</code>的算法实现，类同于<code>HashSet</code>，<code>HashMap</code>不进行排序，但速度较快；<code>BTreeMap</code>较慢，但按顺序存储。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">arr</span> = [(<span class="number">640</span>, <span class="string">&#x27;T&#x27;</span>), (<span class="number">917</span>, <span class="string">&#x27;C&#x27;</span>), (<span class="number">412</span>, <span class="string">&#x27;S&#x27;</span>), (<span class="number">670</span>, <span class="string">&#x27;T&#x27;</span>), (<span class="number">917</span>, <span class="string">&#x27;L&#x27;</span>)];</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">v</span> = <span class="type">Vec</span>::&lt;_&gt;::<span class="title function_ invoke__">new</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">hs</span> = std::collections::HashMap::&lt;_, _&gt;::<span class="title function_ invoke__">new</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">bs</span> = std::collections::BTreeMap::&lt;_, _&gt;::<span class="title function_ invoke__">new</span>();</span><br><span class="line"><span class="keyword">for</span> &amp;(key, value) <span class="keyword">in</span> arr.<span class="title function_ invoke__">iter</span>() &#123;</span><br><span class="line">v.<span class="title function_ invoke__">push</span>((key, value));</span><br><span class="line">hs.<span class="title function_ invoke__">insert</span>(key, value);</span><br><span class="line">bs.<span class="title function_ invoke__">insert</span>(key, value);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;Vec:&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> &amp;(key, value) <span class="keyword">in</span> v.<span class="title function_ invoke__">iter</span>() &#123;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot; &#123;&#125;: &#123;&#125;,&quot;</span>, key, value);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;\n &#123;:?&#125;&quot;</span>, v);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;HashMap:&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (key, value) <span class="keyword">in</span> hs.<span class="title function_ invoke__">iter</span>() &#123;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot; &#123;&#125;: &#123;&#125;,&quot;</span>, key, value);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;\n &#123;:?&#125;&quot;</span>, hs);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;BTreeMap:&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (key, value) <span class="keyword">in</span> bs.<span class="title function_ invoke__">iter</span>() &#123;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot; &#123;&#125;: &#123;&#125;,&quot;</span>, key, value);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;\n &#123;:?&#125;&quot;</span>, bs);</span><br></pre></td></tr></table></figure><p>结果打印：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Vec: 640: T, 917: C, 412: S, 670: T, 917: L,</span><br><span class="line"> [(640, &#x27;T&#x27;), (917, &#x27;C&#x27;), (412, &#x27;S&#x27;), (670, &#x27;T&#x27;), (917, &#x27;L&#x27;)]</span><br><span class="line">HashMap: 640: T, 412: S, 917: L, 670: T,</span><br><span class="line"> &#123;640: &#x27;T&#x27;, 412: &#x27;S&#x27;, 917: &#x27;L&#x27;, 670: &#x27;T&#x27;&#125;</span><br><span class="line">BTreeMap: 412: S, 640: T, 670: T, 917: L,</span><br><span class="line"> &#123;412: &#x27;S&#x27;, 640: &#x27;T&#x27;, 670: &#x27;T&#x27;, 917: &#x27;L&#x27;&#125;</span><br></pre></td></tr></table></figure><p>字典中不允许重复的key，但允许重复的value，以及<code>BTreeMap</code>按照key顺序排列，而<code>HashMap</code>顺序随机。</p><p>它们的性能类似于<code>HashSet</code>和<code>BTreeSet</code>。</p><h2 id="Collections-in-C-and-in-Rust"><a class="header-anchor" href="#Collections-in-C-and-in-Rust">¶</a>Collections in C++ and in Rust</h2><p>C++标准库中对应Rust集合列表如下，某些集合库在Rust中并没有对应，用<code>~</code>标记表示最相似的集合，</p><table><thead><tr><th style="text-align:left">C++</th><th style="text-align:left">Rust</th></tr></thead><tbody><tr><td style="text-align:left"><code>array&lt;T&gt;</code></td><td style="text-align:left"><code>[T]</code></td></tr><tr><td style="text-align:left"><code>vector&lt;T&gt;</code></td><td style="text-align:left"><code>Vec&lt;T&gt;</code></td></tr><tr><td style="text-align:left"><code>deque&lt;T&gt;</code></td><td style="text-align:left"><code>VecDeque&lt;T&gt;</code></td></tr><tr><td style="text-align:left"><code>forward_list&lt;T&gt;</code></td><td style="text-align:left"><code>~ LinkedList&lt;T&gt;</code></td></tr><tr><td style="text-align:left"><code>list&lt;T&gt;</code></td><td style="text-align:left"><code>LinkedList&lt;T&gt;</code></td></tr><tr><td style="text-align:left"><code>stack&lt;T&gt;</code></td><td style="text-align:left"><code>~ Vec&lt;T&gt;</code></td></tr><tr><td style="text-align:left"><code>queue&lt;T&gt;</code></td><td style="text-align:left"><code>~ VecDeque&lt;T&gt;</code></td></tr><tr><td style="text-align:left"><code>priority_queue&lt;T&gt;</code></td><td style="text-align:left"><code>BinaryHeap&lt;T&gt;</code></td></tr><tr><td style="text-align:left"><code>set&lt;T&gt;</code></td><td style="text-align:left"><code>BTreeSet&lt;T&gt;</code></td></tr><tr><td style="text-align:left"><code>multiset&lt;T&gt;</code></td><td style="text-align:left"><code>~ BTreeMap&lt;T,u32&gt;</code></td></tr><tr><td style="text-align:left"><code>map&lt;K,V&gt;</code></td><td style="text-align:left"><code>BTreeMap&lt;K,V&gt;</code></td></tr><tr><td style="text-align:left"><code>multimap&lt;K,V&gt;</code></td><td style="text-align:left"><code>~ BTreeMap&lt;K, (V,u32)&gt;</code></td></tr><tr><td style="text-align:left"><code>unordered_set&lt;T&gt;</code></td><td style="text-align:left"><code>HashSet&lt;T&gt;</code></td></tr><tr><td style="text-align:left"><code>unordered_multiset&lt;T&gt;</code></td><td style="text-align:left"><code>~ HashMap&lt;T,u32&gt;</code></td></tr><tr><td style="text-align:left"><code>unordered_map&lt;K,V&gt;</code></td><td style="text-align:left"><code>HashMap&lt;K,V&gt;</code></td></tr><tr><td style="text-align:left"><code>unordered_multimap&lt;K,V&gt;</code></td><td style="text-align:left"><code>~ HashMap&lt;K,(V,u32)&gt;</code></td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;p&gt;本章覆盖有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如何度量运行部分代码所花费的时间&lt;/li&gt;
&lt;li&gt;基于性能因素，如何使用哪种类型的集合&lt;/li&gt;
&lt;li&gt;集合中的各种操作中哪个更好：顺序扫描(sequential scan)、两端插入和删除(insertion and removal of items at both ends)、删除最大项(removal of the largest item)、搜索(search)、键搜索(search by key)、保持顺序(keeping items sorted)&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    <content src="https://galudisu.info/%3Cp%3E%E6%9C%AC%E7%AB%A0%E8%A6%86%E7%9B%96%E6%9C%89%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E5%A6%82%E4%BD%95%E5%BA%A6%E9%87%8F%E8%BF%90%E8%A1%8C%E9%83%A8%E5%88%86%E4%BB%A3%E7%A0%81%E6%89%80%E8%8A%B1%E8%B4%B9%E7%9A%84%E6%97%B6%E9%97%B4%3C/li%3E%3Cli%3E%E5%9F%BA%E4%BA%8E%E6%80%A7%E8%83%BD%E5%9B%A0%E7%B4%A0%EF%BC%8C%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%93%AA%E7%A7%8D%E7%B1%BB%E5%9E%8B%E7%9A%84%E9%9B%86%E5%90%88%3C/li%3E%3Cli%3E%E9%9B%86%E5%90%88%E4%B8%AD%E7%9A%84%E5%90%84%E7%A7%8D%E6%93%8D%E4%BD%9C%E4%B8%AD%E5%93%AA%E4%B8%AA%E6%9B%B4%E5%A5%BD%EF%BC%9A%E9%A1%BA%E5%BA%8F%E6%89%AB%E6%8F%8F(sequential%20scan)%E3%80%81%E4%B8%A4%E7%AB%AF%E6%8F%92%E5%85%A5%E5%92%8C%E5%88%A0%E9%99%A4(insertion%20and%20removal%20of%20items%20at%20both%20ends)%E3%80%81%E5%88%A0%E9%99%A4%E6%9C%80%E5%A4%A7%E9%A1%B9(removal%20of%20the%20largest%20item)%E3%80%81%E6%90%9C%E7%B4%A2(search)%E3%80%81%E9%94%AE%E6%90%9C%E7%B4%A2(search%20by%20key)%E3%80%81%E4%BF%9D%E6%8C%81%E9%A1%BA%E5%BA%8F(keeping%20items%20sorted)%3C/li%3E%3C/ul%3E%3Cspan%20id=%22more%22%3E%3C/span%3E%3Ch2%20id=%22Collections%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Collections%22%3E%C2%B6%3C/a%3ECollections%3C/h2%3E%3Cp%3E%E6%95%B0%E7%BB%84%E3%80%81%E5%90%91%E9%87%8F%E3%80%81%E7%BB%93%E6%9E%84%E4%BD%93%E3%80%81%E5%85%83%E7%BB%84%E7%BB%93%E6%9E%84%E4%BD%93%E3%80%81%E5%85%83%E7%BB%84%E3%80%81%E6%9E%9A%E4%B8%BE%E5%B1%9E%E4%BA%8E%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%EF%BC%8C%E5%AE%83%E4%BB%AC%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%8F%AF%E8%83%BD%E5%8C%85%E5%90%AB%E5%87%A0%E4%B8%AA%E5%85%B6%E5%AE%83%E5%AF%B9%E8%B1%A1%E3%80%82%E7%84%B6%E8%80%8C%EF%BC%8C%E5%AF%B9%E4%BA%8E%E7%BB%93%E6%9E%84%E4%BD%93%E3%80%81%E5%85%83%E7%BB%84-%E7%BB%93%E6%9E%84%E4%BD%93%E3%80%81%E5%85%83%E7%BB%84%E3%80%81%E6%9E%9A%E4%B8%BE%EF%BC%8C%E6%AF%8F%E4%B8%AA%E5%8C%85%E5%90%AB%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E9%9C%80%E8%A6%81%E6%8C%87%E5%AE%9A%E5%A3%B0%E6%98%8E%E7%B1%BB%E5%9E%8B%E5%92%8C%E6%9E%84%E9%80%A0%E7%B1%BB%E5%9E%8B%EF%BC%8C%E5%AE%83%E4%BB%AC%E4%B8%8D%E8%83%BD%E5%AD%98%E5%82%A8%E5%A4%9A%E4%B8%AA%E5%AF%B9%E8%B1%A1%E3%80%82%E7%9B%B8%E5%8F%8D%E6%95%B0%E7%BB%84%E5%92%8C%E5%90%91%E9%87%8F%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%BC%9A%E5%8C%85%E5%90%AB%E5%A4%9A%E4%B8%AA%E5%AF%B9%E8%B1%A1%EF%BC%8C%E8%BF%99%E4%B8%80%E7%B1%BB%E5%AF%B9%E8%B1%A1%E7%A7%B0%E4%B8%BA%E2%80%9C%E9%9B%86%E5%90%88%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E6%95%B0%E7%BB%84%E5%92%8C%E5%90%91%E9%87%8F%E6%98%AF%E6%9C%80%E4%BD%B3%E9%9B%86%E5%90%88%EF%BC%9A%E5%86%85%E5%AD%98%E9%AB%98%E6%95%88%EF%BC%8C%E8%AF%BB%E5%8F%96%E9%80%9F%E5%BA%A6%E5%BF%AB%EF%BC%8CCPU%E7%BC%93%E5%AD%98%E9%AB%98%E6%95%88%EF%BC%8C%E8%83%BD%E9%80%9A%E8%BF%87%E7%B4%A2%E5%BC%95%E5%BF%AB%E9%80%9F%E8%AE%BF%E9%97%AE%E5%86%85%E9%83%A8%E5%85%83%E7%B4%A0%E3%80%82%E5%BD%93%E7%84%B6%EF%BC%8C%E5%9C%A8%E6%9F%90%E4%BA%9B%E6%83%85%E5%86%B5%E4%B8%8D%E5%B0%BD%E6%98%AF%E9%AB%98%E6%95%88%E7%9A%84%EF%BC%8C%E8%BF%99%E7%A7%8D%E6%83%85%E5%86%B5%E4%B8%8B%E9%9C%80%E8%A6%81%E4%BD%BF%E7%94%A8%E5%85%B6%E5%AE%83%E9%9B%86%E5%90%88%E3%80%82Rust%E6%A0%87%E5%87%86%E5%BA%93%E6%8F%90%E4%BE%9B%E4%BA%86%E5%90%84%E7%A7%8D%E5%90%84%E6%A0%B7%E7%9A%84%E9%9B%86%E5%90%88%E7%B1%BB%E5%9E%8B%EF%BC%9A%3Ccode%3EVecDeque&amp;lt;T&amp;gt;%3C/code%3E%E3%80%81%3Ccode%3ELinkedList&amp;lt;T&amp;gt;%3C/code%3E%E3%80%81%3Ccode%3EBinaryHeap&amp;lt;T&amp;gt;%3C/code%3E%E3%80%81%3Ccode%3EBTreeSet&amp;lt;T&amp;gt;%3C/code%3E%E3%80%81%3Ccode%3EBTreeMap&amp;lt;K,V&amp;gt;%3C/code%3E%E3%80%81%3Ccode%3EHashSet&amp;lt;T&amp;gt;%3C/code%3E%E5%92%8C%3Ccode%3EHashMap&amp;lt;K,V&amp;gt;%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E8%AF%B4%E5%88%B0%E9%9B%86%E5%90%88%EF%BC%8C%E6%95%B0%E7%BB%84%E6%98%AF%E4%B8%80%E4%B8%AA%E5%8D%95%E7%8B%AC%E6%A1%88%E4%BE%8B%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E5%AE%8C%E5%85%A8%E6%98%AF%E6%A0%88%E5%88%86%E9%85%8D%E7%9A%84%EF%BC%8C%E4%BB%A5%E5%8F%8A%E5%9C%A8%E7%BC%96%E8%AF%91%E6%9C%9F%E5%B7%B2%E7%BB%8F%E5%AE%9A%E4%B9%89%E4%BA%86%E5%A4%A7%E5%B0%8F%E3%80%82%E8%80%8C%E5%AF%B9%E4%BA%8E%E5%85%B6%E5%AE%83%E9%9B%86%E5%90%88%EF%BC%8C%E5%8C%85%E6%8B%ACvector%EF%BC%8C%E5%85%83%E7%B4%A0%E4%B8%AA%E6%95%B0%E5%8F%AF%E5%8F%98%EF%BC%8C%E5%AE%83%E5%B0%86header%E5%AD%98%E5%82%A8%E5%9C%A8stack%EF%BC%8C%E6%95%B0%E6%8D%AE%E9%83%A8%E5%88%86%E5%88%99%E5%AD%98%E5%82%A8%E5%9C%A8%E5%A0%86%E3%80%82%E8%BF%99%E7%A7%8D%E7%A7%B0%E4%B8%BA%E2%80%9C%E5%8A%A8%E6%80%81%E6%95%B0%E6%8D%AE%E9%9B%86dynamically-sized%20collections%E2%80%9D%E3%80%82%3C/p%3E%3Ch2%20id=%22Measuring-Execution-Time%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Measuring-Execution-Time%22%3E%C2%B6%3C/a%3EMeasuring%20Execution%20Time%3C/h2%3E%3Cp%3E%E9%9B%86%E5%90%88%E7%9A%84%E9%80%89%E5%8F%96%E6%9B%B4%E5%A4%9A%E5%9C%B0%E7%94%B1%E5%AE%83%E7%9A%84%E6%80%A7%E8%83%BD%E5%86%B3%E5%AE%9A%EF%BC%8C%E5%85%88%E7%BB%95%E5%BC%80%E8%BF%99%E6%96%B9%E9%9D%A2%E5%86%85%E5%AE%B9%EF%BC%8C%E7%9C%8B%E7%9C%8B%E5%A6%82%E4%BD%95%E7%B2%BE%E7%A1%AE%E5%BA%A6%E9%87%8F%E4%B8%8D%E5%90%8CRust%E4%BB%A3%E7%A0%81%E6%89%80%E8%8A%B1%E8%B4%B9%E7%9A%84%E6%80%A7%E8%83%BD%E3%80%82%3C/p%3E%3Cp%3E%E5%AF%B9%E4%BA%8E%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E8%80%85%E6%9D%A5%E8%AF%B4%E6%80%A7%E8%83%BD%E6%98%AF%E5%BE%88%E9%87%8D%E8%A6%81%E7%9A%84%E4%B8%80%E6%96%B9%E9%9D%A2%E3%80%82%E5%8D%95%E4%B8%AA%E5%87%BD%E6%95%B0%E7%9A%84%E8%BF%90%E8%A1%8C%EF%BC%8C%E9%AB%98%E7%BA%A7%E8%AF%AD%E8%A8%80%E9%83%BD%E8%A6%81%E6%B1%82%E5%91%BD%E4%BB%A4%E5%A4%84%E7%90%86%E8%8A%B1%E8%B4%B9%E8%87%B3%E6%AF%AB%E7%A7%92%E5%92%8C%E7%A7%92%E7%BA%A7%E5%88%AB%EF%BC%8C%E5%83%8FRust%E8%BF%99%E7%B1%BB%E4%BD%8E%E7%BA%A7%E8%AF%AD%E8%A8%80%EF%BC%8C%E9%83%BD%E8%A6%81%E6%B1%82%E6%AF%AB%E7%A7%92%E7%94%9A%E8%87%B3%E7%BA%B3%E7%A7%92%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8Rust%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%AD%EF%BC%8C%E6%9C%89%E5%87%A0%E4%B8%AA%E5%87%BD%E6%95%B0%E5%8F%AF%E4%BB%A5%E5%BA%A6%E9%87%8F%E6%BA%90%E4%BB%A3%E7%A0%81%E6%B6%88%E8%80%97%E7%9A%84%E6%97%B6%E9%97%B4%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Euse%3C/span%3E%20std::time::Instant;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eelapsed_ms%3C/span%3E(t1:%20Instant,%20t2:%20Instant)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et%3C/span%3E%20=%20t2%20-%20t1;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20t.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eas_secs%3C/span%3E()%20%3Cspan%20class=%22keyword%22%3Eas%3C/span%3E%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E%20*%20%3Cspan%20class=%22number%22%3E1000%3C/span%3E.%20+%20t.%3Cspan%20class=%22title%20function_%20invoke__%22%3Esubsec_nanos%3C/span%3E()%20%3Cspan%20class=%22keyword%22%3Eas%3C/span%3E%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E%20/%20%3Cspan%20class=%22number%22%3E1e6%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Etime0%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..%3Cspan%20class=%22number%22%3E10_000%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20i);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Etime1%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eelapsed_ms%3C/span%3E(time0,%20time1));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%A8%8B%E5%BA%8F%E4%BC%9A%E6%89%93%E5%8D%B00%E5%88%B09999%E7%9A%84%E6%95%B4%E6%95%B0%EF%BC%8C%E7%84%B6%E5%90%8E%E5%B0%86%E6%89%80%E8%8A%B1%E8%B4%B9%E7%9A%84%E6%AF%AB%E7%A7%92%E6%95%B0%E8%BE%93%E5%87%BA%E3%80%82%3C/p%3E%3Cp%3E%E6%89%80%E8%8A%B1%E8%B4%B9%E7%9A%84%E6%97%B6%E9%97%B4%E8%B7%9F%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%83%BD%E5%8A%9B%E6%9C%89%E5%85%B3%EF%BC%8C%E5%BD%93%E7%84%B6%E4%B9%9F%E8%B7%9F%E7%BC%96%E8%AF%91%E5%99%A8%E7%9A%84%E4%BC%98%E5%8C%96%E6%9C%89%E5%85%B3%E3%80%82%3C/p%3E%3Cp%3E%E5%89%8D%E9%9D%A2%E7%AB%A0%E8%8A%82%E8%AF%B4%E5%88%B0%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%94%A8%3Ccode%3Erustc%3C/code%3E%E6%9D%A5%E7%BC%96%E8%AF%91%E6%BA%90%E4%BB%A3%E7%A0%81%E6%96%87%E4%BB%B6%EF%BC%8C%E4%BD%86%E6%98%AF%E8%BF%99%E4%B8%AA%E5%91%BD%E4%BB%A4%E5%B9%B6%E6%B2%A1%E6%9C%89%E7%BC%96%E8%AF%91%E5%99%A8%E4%BC%98%E5%8C%96%EF%BC%8C%E5%8F%AA%E6%98%AF%E5%8D%95%E7%BA%AF%E7%94%9F%E6%88%90%E6%9C%BA%E5%99%A8%E7%A0%81%E7%94%A8%E4%BA%8E%E8%B0%83%E8%AF%95%EF%BC%8C%E5%AE%83%E4%B8%8D%E6%98%AF%E9%AB%98%E6%95%88%E7%9A%84%E3%80%82%3C/p%3E%3Cp%3E%E5%A6%82%E6%9E%9C%E4%BD%A0%E5%AF%B9%E6%80%A7%E8%83%BD%E6%84%9F%E5%85%B4%E8%B6%A3%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%B8%A6%E4%B8%8A%E7%BC%96%E8%AF%91%E5%8F%82%E6%95%B0%3Ccode%3E-O%3C/code%3E%E3%80%82%E7%9C%81%E7%95%A5%E8%BF%99%E4%B8%AA%E5%8F%82%E6%95%B0%EF%BC%8C%E6%89%80%E6%9C%89%E4%BC%98%E5%8C%96%E9%83%BD%E6%98%AF%E7%A6%81%E7%94%A8%E7%9A%84%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E8%BF%99%E7%AB%A0%E7%A4%BA%E4%BE%8B%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87%E4%B8%8B%E9%9D%A2%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%BC%96%E8%AF%91%E4%BC%98%E5%8C%96%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3Erustc%20-O%20main.rs%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%A6%81%E5%BA%A6%E9%87%8F%E4%B8%80%E4%B8%AA%E6%97%B6%E9%97%B4%EF%BC%8C%E4%BD%A0%E5%BA%94%E8%AF%A5%E7%94%A8%3Ccode%3EInstant%3C/code%3E%E7%B1%BB%E7%9A%84%3Ccode%3Enow%3C/code%3E%E5%87%BD%E6%95%B0%E3%80%82%E8%BF%99%E4%B8%AA%E7%B1%BB%E5%9E%8B%E5%AE%9A%E4%B9%89%E5%9C%A8Rust%E7%9A%84%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%AD%E3%80%82%3C/p%3E%3Ch2%20id=%22Performing-Arbitrary-Insertions-and-Removals%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Performing-Arbitrary-Insertions-and-Removals%22%3E%C2%B6%3C/a%3EPerforming%20Arbitrary%20Insertions%20and%20Removals%3C/h2%3E%3Cp%3E%E5%9B%9E%E5%88%B0%E5%8E%9F%E6%9D%A5%E7%9A%84%E9%9B%86%E5%90%88%E5%A4%84%E7%90%86%E3%80%82%E4%B8%8B%E9%9D%A2%E7%A8%8B%E5%BA%8F%E6%98%AF%E9%9D%9E%E5%B8%B8%E9%AB%98%E6%95%88%E7%9A%84%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Econst%3C/span%3E%20SIZE:%20%3Cspan%20class=%22type%22%3Eusize%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E100_000_000%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et0%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ev%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E::&amp;lt;%3Cspan%20class=%22type%22%3Eusize%3C/span%3E&amp;gt;::%3Cspan%20class=%22title%20function_%20invoke__%22%3Ewith_capacity%3C/span%3E(SIZE);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et1%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..SIZE%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(i);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et2%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..SIZE%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epop%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et3%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eelapsed_ms%3C/span%3E(t0,%20t1),%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eelapsed_ms%3C/span%3E(t1,%20t2),%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eelapsed_ms%3C/span%3E(t2,%20t3));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%AE%B0%E5%BE%97%E6%B7%BB%E5%8A%A0%3Ccode%3E-O%3C/code%3E%E8%BF%9B%E8%A1%8C%E7%BC%96%E8%AF%91%E3%80%82%3C/p%3E%3Cp%3E%E7%A8%8B%E5%BA%8F%E5%B0%86%E6%89%93%E5%8D%B0%E4%B8%89%E6%AE%B5%E6%95%B0%E5%AD%97%EF%BC%8C%E5%AE%83%E6%98%AF%E7%94%B1%E7%BC%96%E8%AF%91%E5%99%A8%E3%80%81%E6%88%96%E8%80%85%E6%9C%89%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%89%80%E5%86%B3%E5%AE%9A%E3%80%82%3C/p%3E%3Cp%3E%E5%81%87%E8%AE%BE%E4%BD%A0%E6%9C%AC%E6%9C%BA%E8%BE%93%E5%87%BA%E7%9A%84%E6%95%B0%E6%8D%AE%E6%98%AF%EF%BC%9A%E2%80%9C0.002667%20454.516057%2087.302678%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E6%84%8F%E5%91%B3%E7%9D%80%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAvector%E4%B8%BA%E8%BF%99%E4%B8%AA%3Ccode%3Eusize%3C/code%3E%E5%AF%B9%E8%B1%A1%E5%88%86%E9%85%8D%E2%80%9C%E6%88%BF%E9%97%B4%E2%80%9D%EF%BC%8C%E5%AE%83%E5%8D%A064%E4%BD%8D%E7%B3%BB%E7%BB%9F800M%EF%BC%8C%E4%BB%A5%E5%8F%8A%E5%B0%91%E4%BA%8E3%E6%AF%AB%E7%A7%92%E7%9A%84%E6%B6%88%E8%80%97%E6%97%B6%E9%97%B4%E3%80%82%E8%A6%81%E5%B0%86%E4%B8%80%E5%8D%83%E4%B8%87%E7%9A%84%E5%80%BC%E5%A1%9E%E5%85%A5%E8%BF%99%E4%B8%AA%E7%A9%BA%E9%97%B4%EF%BC%8C%E4%B8%8D%E4%BD%BF%E7%94%A8%E5%86%85%E5%AD%98%E6%B4%BE%E9%81%A3%EF%BC%8C%E5%B0%91%E4%BA%8E1%E7%A7%92%E7%9A%84%E6%8D%9F%E8%80%97%E6%97%B6%E9%97%B4%EF%BC%8C%E5%90%8C%E6%97%B6%E8%BF%98%E8%A6%81%E5%88%A0%E9%99%A4%E6%89%80%E6%9C%89%E6%95%B0%E6%8D%AE%EF%BC%8C%E8%8A%B1%E8%B4%B91/10%E7%A7%92%E7%9A%84%E6%97%B6%E9%97%B4%E3%80%82%3C/p%3E%3Cp%3E%E5%A6%82%E6%9E%9C%E4%B8%8D%E5%8A%A0%3Ccode%3E-O%3C/code%3E%E5%8F%82%E6%95%B0%E7%BC%96%E8%AF%91%EF%BC%8C%E4%BD%A0%E4%BC%9A%E5%8F%91%E7%8E%B0%E5%AE%83%E8%8A%B1%E8%B4%B9%E6%97%B6%E9%97%B4%E9%9D%9E%E5%B8%B8%E5%A4%A7%E3%80%82%3C/p%3E%3Cp%3E%E7%9B%B8%E5%8F%8D%EF%BC%8C%E4%B8%8B%E9%9D%A2%E7%9A%84%E7%A8%8B%E5%BA%8F%E9%9D%9E%E5%B8%B8%E4%BD%8E%E6%95%88%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Econst%3C/span%3E%20SIZE:%20%3Cspan%20class=%22type%22%3Eusize%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E100_000_000%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et0%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ev%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E::&amp;lt;%3Cspan%20class=%22type%22%3Eusize%3C/span%3E&amp;gt;::%3Cspan%20class=%22title%20function_%20invoke__%22%3Ewith_capacity%3C/span%3E(SIZE);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et1%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..SIZE%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Einsert%3C/span%3E(%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20i);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et2%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..SIZE%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eremove%3C/span%3E(%3Cspan%20class=%22number%22%3E0%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et3%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eelapsed_ms%3C/span%3E(t0,%20t1),%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eelapsed_ms%3C/span%3E(t1,%20t2),%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eelapsed_ms%3C/span%3E(t2,%20t3));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%AE%83%E4%BC%9A%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C0.00178%202038.879344%202029.447851%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E8%A6%81%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA800KB%E7%9A%84vector%EF%BC%8C%E8%8A%B1%E8%B4%B9%E5%B0%91%E4%BA%8E2%E6%AF%AB%E7%A7%92%E7%9A%84%E6%97%B6%E9%97%B4%EF%BC%8C%E4%BD%86%E6%98%AF%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE%E5%8D%B4%E8%8A%B1%E8%B4%B9%E4%BA%86%E5%A4%9A%E4%BA%8E2%E7%A7%92%E7%9A%84%E6%97%B6%E9%97%B4%EF%BC%8C%E4%BB%A5%E5%8F%8A%E5%B7%AE%E4%B8%8D%E5%A4%9A%E7%AD%89%E5%90%8C%E7%9A%84%E6%97%B6%E9%97%B4%E7%94%A8%E6%9D%A5%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE%E3%80%82%E8%BF%99%E9%87%8C%E5%8F%91%E7%8E%B0%E6%8F%92%E5%85%A5%E5%8A%A8%E4%BD%9C%EF%BC%8C%E6%AF%94%E5%89%8D%E9%9D%A2%E8%8A%B1%E8%B4%B9%E6%9B%B4%E5%A4%9A%E7%9A%84%E6%97%B6%E9%97%B4%E3%80%82%3C/p%3E%3Cp%3E%E5%AF%BC%E8%87%B4%E4%B8%A4%E8%80%85%E7%9A%84%E5%B7%AE%E5%BC%82%E5%BE%88%E5%A5%BD%E8%A7%A3%E6%9E%90%E3%80%82%3C/p%3E%3Cp%3E%E4%BB%8E%E6%A0%88%E9%A1%B6%E6%B7%BB%E5%8A%A0%E5%85%83%E7%B4%A0%EF%BC%8C%E5%8F%AA%E9%9C%80%E8%A6%81%E7%A1%AE%E4%BF%9D%E6%9C%89%E8%B6%B3%E5%A4%9F%E7%9A%84%E7%A9%BA%E9%97%B4%EF%BC%8C%E7%84%B6%E5%90%8E%E5%B0%86%E6%95%B0%E6%8D%AE%E6%8B%B7%E8%B4%9D%E5%88%B0%E7%BC%93%E5%86%B2%E5%8C%BA%EF%BC%8C%E5%A2%9E%E5%8A%A0%E5%85%83%E7%B4%A0%E4%B8%AA%E6%95%B0%E3%80%82%E5%AF%B9%E4%BA%8E%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%9D%A5%E8%AF%B4%EF%BC%8C%E5%A4%84%E7%90%86%E8%BF%99%E4%BA%9B%E6%97%B6%E9%97%B4%E5%B0%91%E4%BA%8E5%E7%BA%B3%E7%A7%92%EF%BC%8C%E5%8C%85%E6%8B%AC%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%9A%84%E7%A7%BB%E4%BD%8D%E5%8A%A8%E4%BD%9C%E3%80%82%3C/p%3E%3Cp%3E%E5%90%8C%E6%A0%B7%EF%BC%8C%E5%AF%B9%E4%BA%8E%E4%BB%8E%E6%A0%88%E9%A1%B6%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0%EF%BC%8C%E7%A1%AE%E4%BF%9Dvector%E4%B8%8D%E4%B8%BA%E7%A9%BA%EF%BC%8C%E7%84%B6%E5%90%8E%E9%80%92%E5%87%8F%E5%85%83%E7%B4%A0%EF%BC%8C%E8%8A%B1%E8%B4%B9%E4%B8%8D%E5%88%B01%E7%BA%B3%E7%A7%92%E7%9A%84%E6%97%B6%E9%97%B4%E3%80%82%3C/p%3E%3Cp%3E%E7%9B%B8%E5%8F%8D%EF%BC%8C%E4%BB%8Evector%E7%9A%84%E5%BC%80%E5%A7%8B%E9%83%A8%E5%88%86%E6%8F%92%E5%85%A5%E5%85%83%E7%B4%A0%EF%BC%8C%E9%A6%96%E5%85%88%E4%BD%A0%E9%9C%80%E8%A6%81%E5%B0%86%E5%9C%B0%E5%9D%80%E8%BF%9B%E8%A1%8C%E8%BD%AC%E6%8D%A2%EF%BC%8C%E6%AF%8F%E6%AC%A1%E6%9C%89%E6%96%B0%E7%9A%84%E5%85%83%E7%B4%A0%E8%BF%87%E6%9D%A5%EF%BC%8C%E9%83%BD%E8%A6%81%E9%87%8A%E6%94%BE%E5%9C%B0%E5%9D%80%E7%A9%BA%E9%97%B4%E3%80%82%E8%99%BD%E7%84%B6%E8%BD%AC%E6%8D%A2%E5%BE%88%E5%BF%AB%EF%BC%8C%E9%9A%8F%E7%9D%80%E5%85%83%E7%B4%A0%E4%B8%AA%E6%95%B0%E7%9A%84%E5%A2%9E%E5%8A%A0%EF%BC%8C%E8%A6%81%E6%8F%92%E5%85%A5%E9%A6%96%E4%BD%8D%E7%BD%AE%E7%9A%84%E5%85%83%E7%B4%A0%E4%B9%9F%E8%B6%8A%E6%9D%A5%E8%B6%8A%E5%A4%9A%E3%80%82%3C/p%3E%3Cp%3E%E7%B1%BB%E4%BC%BC%E7%9A%84%EF%BC%8C%E8%A6%81%E4%BB%8E%E9%A6%96%E4%BD%8D%E7%BD%AE%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0%EF%BC%8C%E9%9C%80%E8%A6%81%E5%B0%86%E6%89%80%E6%9C%89%E5%85%83%E7%B4%A0%E9%83%BD%E8%BD%AC%E6%8D%A2%E4%B8%80%E9%81%8D%EF%BC%8C%E4%B8%8D%E4%BB%85%E4%BB%85%E6%98%AF%E9%A6%96%E4%BD%8D%E7%BD%AE%EF%BC%8C%3C/p%3E%3Cp%3E%E4%BB%8E%E8%AE%A1%E7%AE%97%E5%A4%8D%E6%9D%82%E5%BA%A6%E8%A1%A8%E7%A4%BA%EF%BC%8C%E6%A0%88%E9%A1%B6(%E5%B0%BE%E9%83%A8)%E6%8F%92%E5%85%A5%E6%88%96%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0%E6%98%AF%3Ccode%3EO(K)%3C/code%3E%E5%A4%8D%E6%9D%82%E5%BA%A6%EF%BC%8C%E5%AE%83%E6%98%AF%E5%B8%B8%E9%87%8F%E5%A4%8D%E6%9D%82%E5%BA%A6(constant%20complexity)%EF%BC%9B%E8%80%8C%E5%AF%B9%E4%BA%8E%E4%BB%8E%E6%A0%88%E5%B0%BE(%E9%A6%96%E9%83%A8)%E6%8F%92%E5%85%A5%E6%88%96%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0%E6%98%AF%3Ccode%3EO(N)%3C/code%3E%E5%A4%8D%E6%9D%82%E5%BA%A6%EF%BC%8C%E5%AE%83%E6%98%AF%E7%BA%BF%E6%80%A7%E5%A4%8D%E6%9D%82%E5%BA%A6(linear%20complexity)%E3%80%82%3C/p%3E%3Cp%3E%E5%8D%B3%E4%BD%BF%E6%98%AF%E5%9C%A8%E4%B8%AD%E9%97%B4%E9%83%A8%E5%88%86%E6%8F%92%E5%85%A5%E6%88%96%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE%EF%BC%8C%E6%80%A7%E8%83%BD%E5%8F%AF%E8%83%BD%E4%BC%9A%E7%A8%8D%E5%BE%AE%E5%A5%BD%E4%B8%80%E7%82%B9%EF%BC%8C%E4%BD%86%E4%BB%8D%E7%84%B6%E6%AF%94%E5%9C%A8%E6%A0%88%E9%A1%B6%E6%8F%92%E5%85%A5%E6%88%96%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE%E8%A6%81%E6%85%A2%E3%80%82%3C/p%3E%3Ch2%20id=%22Queues%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Queues%22%3E%C2%B6%3C/a%3EQueues%3C/h2%3E%3Cp%3E%E5%A6%82%E6%9E%9C%E6%98%AF%E5%9C%A8%E9%A6%96%E9%83%A8%E5%92%8C%E5%B0%BE%E9%83%A8%E5%90%8C%E6%97%B6%E6%9C%89%E6%8F%92%E5%85%A5%E6%88%96%E5%88%A0%E9%99%A4%E5%8A%A8%E4%BD%9C%EF%BC%8C%E8%BF%99%E4%B8%AAvector%E4%B8%8D%E4%BC%9A%E6%98%AF%E4%B8%80%E4%B8%AA%E4%BC%98%E5%8C%96%E9%9B%86%E5%90%88%E3%80%82%E5%85%B8%E5%9E%8B%E6%83%85%E5%86%B5%E7%B1%BB%E4%BC%BC%E4%BA%8EQueue%EF%BC%8C%E5%AE%83%E5%9C%A8%E5%B0%BE%E9%83%A8%E6%8F%92%E5%85%A5%E5%85%83%E7%B4%A0%EF%BC%8C%E5%9C%A8%E9%A6%96%E9%83%A8%E8%90%83%E5%8F%96%E5%85%83%E7%B4%A0%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Econst%3C/span%3E%20SIZE:%20%3Cspan%20class=%22type%22%3Eusize%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E40_000%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et0%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ev%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E::&amp;lt;%3Cspan%20class=%22type%22%3Eusize%3C/span%3E&amp;gt;::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..SIZE%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(i);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(SIZE%20+%20i);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eremove%3C/span%3E(%3Cspan%20class=%22number%22%3E0%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(SIZE%20*%20%3Cspan%20class=%22number%22%3E2%3C/span%3E%20+%20i);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eremove%3C/span%3E(%3Cspan%20class=%22number%22%3E0%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et1%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ewhile%3C/span%3E%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E()%20&amp;gt;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eremove%3C/span%3E(%3Cspan%20class=%22number%22%3E0%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et2%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eelapsed_ms%3C/span%3E(t0,%20t1),%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eelapsed_ms%3C/span%3E(t1,%20t2));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%8F%AF%E8%83%BD%E7%9A%84%E8%BE%93%E5%87%BA%E4%BC%9A%E6%98%AF%EF%BC%9A%E2%80%9C561.189636%20276.056133%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E4%BB%A3%E7%A0%81%E4%B8%AD%EF%BC%8C%E5%88%9B%E5%BB%BA%E4%BA%86%E4%B8%80%E4%B8%AA%E7%A9%BA%E7%9A%84vector%EF%BC%8C%E7%94%A8%E4%BA%864%E5%8D%83%E6%AC%A1%E5%BE%AA%E7%8E%AF%EF%BC%8C%E5%B0%86%E4%B8%89%E4%B8%AA%E6%95%B0%E6%8F%92%E5%85%A5%E6%A0%88%E9%A1%B6%EF%BC%8C%E4%BB%A5%E5%8F%8A%E5%9C%A8%E6%A0%88%E9%A1%B6%E5%88%A0%E9%99%A4%E4%B8%A4%E4%B8%AA%E5%85%83%E7%B4%A0%E3%80%82%E7%AC%AC%E4%BA%8C%E4%B8%AA%E5%BE%AA%E7%8E%AF%E4%BD%93%E5%86%85%EF%BC%8C%E6%AF%8F%E6%AC%A1%E4%BB%8E%E6%A0%88%E9%A1%B6%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0%E3%80%82%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%BE%AA%E7%8E%AF%E7%89%87%E6%AE%B5%E8%8A%B1%E8%B4%B9%E4%BA%86%E5%A4%A7%E7%BA%A6%E5%8D%8A%E7%A7%92%E7%9A%84%E6%97%B6%E9%97%B4%EF%BC%8C%E7%AC%AC%E4%BA%8C%E4%B8%AA%E5%BE%AA%E7%8E%AF%E4%BD%93%E8%8A%B1%E8%B4%B9%E4%BA%86%E5%A4%A7%E7%BA%A6%E5%9B%9B%E5%88%86%E4%B9%8B%E4%B8%80%E7%A7%92%E3%80%82%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E5%A4%A7%E9%83%A8%E5%88%86%E6%97%B6%E9%97%B4%E9%83%BD%E7%94%A8%E5%9C%A8%E4%BA%86%E8%90%83%E5%8F%96%E5%85%83%E7%B4%A0%E4%B8%8A%EF%BC%8C%E6%8F%92%E5%85%A5%E5%85%B6%E5%AE%9E%E6%98%AF%E9%9D%9E%E5%B8%B8%E5%BF%AB%E7%9A%84%E3%80%82%3C/p%3E%3Cp%3E%E6%88%91%E4%BB%AC%E5%B8%8C%E6%9C%9B%E6%8F%92%E5%85%A5%E5%85%83%E7%B4%A0%E6%80%BB%E6%98%AF%E5%8F%91%E7%94%9F%E5%9C%A8%E6%A0%88%E5%B0%BE%EF%BC%8C%E8%90%83%E5%8F%96(extract)%E5%85%83%E7%B4%A0%E6%80%BB%E6%98%AF%E5%9C%A8%E6%A0%88%E9%A1%B6%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Econst%3C/span%3E%20SIZE:%20%3Cspan%20class=%22type%22%3Eusize%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E40_000%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et0%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ev%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E::&amp;lt;%3Cspan%20class=%22type%22%3Eusize%3C/span%3E&amp;gt;::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..SIZE%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Einsert%3C/span%3E(%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20i);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Einsert%3C/span%3E(%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20SIZE%20+%20i);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epop%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Einsert%3C/span%3E(%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20SIZE%20*%20%3Cspan%20class=%22number%22%3E2%3C/span%3E%20+%20i);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epop%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et1%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ewhile%3C/span%3E%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E()%20&amp;gt;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epop%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et2%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eelapsed_ms%3C/span%3E(t0,%20t1),%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eelapsed_ms%3C/span%3E(t1,%20t2));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%8F%AF%E8%83%BD%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C790.365012%200.000112%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E7%8E%B0%E5%9C%A8%E6%8F%92%E5%85%A5%E5%BE%88%E6%85%A2%EF%BC%8C%E5%88%A0%E9%99%A4%E5%8D%B4%E5%BE%88%E5%BF%AB%E3%80%82%E5%8F%AF%E6%98%AF%E6%80%BB%E5%85%B1%E8%8A%B1%E8%B4%B9%E7%9A%84%E6%97%B6%E9%97%B4%E5%B9%B6%E6%B2%A1%E6%9C%89%E6%8F%90%E5%8D%87%E5%A4%9A%E5%B0%91%E3%80%82%E6%88%91%E4%BB%AC%E5%B0%9D%E8%AF%95%E7%94%A8%3Ccode%3EVecDeque%3C/code%3E%E7%B1%BB%E5%9E%8B%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Econst%3C/span%3E%20SIZE:%20%3Cspan%20class=%22type%22%3Eusize%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E40_000%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et0%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ev%3C/span%3E%20=%20std::collections::VecDeque::&amp;lt;%3Cspan%20class=%22type%22%3Eusize%3C/span%3E&amp;gt;::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..SIZE%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Einsert%3C/span%3E(%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20i);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Einsert%3C/span%3E(%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20SIZE%20+%20i);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epop%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Einsert%3C/span%3E(%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20SIZE%20*%20%3Cspan%20class=%22number%22%3E2%3C/span%3E%20+%20i);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epop%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et1%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ewhile%3C/span%3E%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E()%20&amp;gt;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epop%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et2%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eelapsed_ms%3C/span%3E(t0,%20t1),%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eelapsed_ms%3C/span%3E(t1,%20t2));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C0.40793%200.050257%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E6%95%B4%E6%AE%B5%E7%A8%8B%E5%BA%8F%E8%8A%B1%E8%B4%B9%E4%B8%8D%E5%88%B0%E5%8D%8A%E6%AF%AB%E7%A7%92%E7%9A%84%E6%97%B6%E9%97%B4%EF%BC%8C%E8%BF%99%E9%87%8C%E9%9C%80%E8%A6%81%E6%98%BE%E5%BC%8F%E5%A3%B0%E6%98%8E%3Ccode%3EVecDeque%3C/code%3E%E7%9A%84%E7%B1%BB%E5%9E%8B%EF%BC%8C%E5%AE%83%E6%98%AF%E2%80%9Cvector-like%20double-ended%20queue%E2%80%9D%E7%9A%84%E7%BC%A9%E5%86%99%EF%BC%8C%E2%80%9Cqueue%E2%80%9D%E8%A1%A8%E7%A4%BA%E7%9A%84%E6%98%AF%E2%80%9Csequential%20collection%20into%20which%20items%20are%20inserted%20at%20one%20end%20and%20from%20which%20items%20are%20extracted%20at%20the%20other%20end%E2%80%9D%E3%80%82%E2%80%9Cdouble-ended%E2%80%9D%E8%A1%A8%E7%A4%BA%E5%9C%A8%E5%B0%BE%E9%83%A8%E6%8F%92%E5%85%A5%E5%85%83%E7%B4%A0%EF%BC%8C%E4%B9%9F%E5%8F%AF%E4%BB%A5%E5%9C%A8%E5%B0%BE%E9%83%A8%E8%90%83%E5%8F%96%E5%85%83%E7%B4%A0%EF%BC%8C%E4%B8%8D%E5%B8%A6%E6%9C%89penalty%E3%80%82%E2%80%9Cvector-like%E2%80%9D%E8%A1%A8%E7%A4%BA%E5%85%B7%E6%9C%89vector%E7%9B%B8%E4%BC%BC%E7%9A%84%E6%93%8D%E4%BD%9C%E3%80%82%3C/p%3E%3Cp%3E%E8%A6%81%E5%9C%A8vector%E6%A0%88%E9%A1%B6%E6%B7%BB%E5%8A%A0%E6%88%96%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%3Ccode%3Epush%3C/code%3E%E5%92%8C%3Ccode%3Epop%3C/code%3E%EF%BC%8C%E8%80%8C%E5%AF%B9%E4%BA%8E%3Ccode%3E%E5%8F%8C%E7%AB%AF%E9%98%9F%E5%88%97%EF%BC%8Cdouble-ended%20queue%3C/code%3E%EF%BC%8C%E9%9C%80%E8%A6%81%E7%90%86%E8%A7%A3%E4%B8%A4%E7%AB%AF%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%98%AF%E7%AD%89%E6%95%88%E7%9A%84%EF%BC%8C%E6%8F%92%E5%85%A5%E5%85%83%E7%B4%A0%E5%8F%AF%E4%BB%A5%E7%94%A8%3Ccode%3Epush_front%3C/code%3E%E5%92%8C%3Ccode%3Epush_back%3C/code%3E%EF%BC%8C%E4%B9%9F%E5%8F%AF%E4%BB%A5%E5%9C%A8%E4%B8%A4%E7%AB%AF%E7%94%A8%3Ccode%3Epop_front%3C/code%3E%E5%92%8C%3Ccode%3Epop_back%3C/code%3E%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0%E3%80%82%E8%99%BD%E7%84%B6%3Ccode%3EVecDeque%3C/code%3E%E7%B1%BB%E5%9E%8B%E6%94%AF%E6%8C%81%3Ccode%3Einsert%3C/code%3E%E5%92%8C%3Ccode%3Eremove%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E4%BD%86%E4%B8%8D%E8%A2%AB%E6%8E%A8%E8%8D%90%E4%BD%BF%E7%94%A8%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E4%B8%8D%E6%98%AF%E9%AB%98%E6%95%88%E7%9A%84%E3%80%82%3C/p%3E%3Cp%3E%E7%BB%99%E5%87%BA%E7%9A%84%E9%98%9F%E5%88%97%E9%9D%9E%E5%B8%B8%E9%AB%98%E6%95%88%EF%BC%8C%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E4%BB%AC%E6%80%BB%E6%98%AF%E7%94%A8%E5%AE%83%EF%BC%8C%E8%80%8C%E6%98%AF%E9%80%89%E6%8B%A9%E7%94%A8vector%EF%BC%9F%3C/p%3E%3Cp%3E%E5%8E%9F%E5%9B%A0%E6%98%AFvector%E6%9B%B4%E6%99%AE%E9%81%8D%E7%9A%84%E6%93%8D%E4%BD%9C%E6%98%AF%E8%BF%AD%E4%BB%A3%E3%80%81%E5%85%83%E7%B4%A0%E8%AE%BF%E9%97%AE%EF%BC%8C%E8%BF%99%E7%A7%8D%E6%97%B6%E9%97%B4%E6%8D%9F%E8%80%97%E4%B8%80%E7%9B%B4%E4%BF%9D%E6%8C%81%E4%B8%BA%E5%B8%B8%E9%87%8F%E5%9B%A0%E7%B4%A0%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E19%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E20%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E21%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E22%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E23%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E24%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Econst%3C/span%3E%20SIZE:%20%3Cspan%20class=%22type%22%3Eusize%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E40_000%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ev%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E::&amp;lt;%3Cspan%20class=%22type%22%3Eusize%3C/span%3E&amp;gt;::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Evd%3C/span%3E%20=%20std::collections::VecDeque::&amp;lt;%3Cspan%20class=%22type%22%3Eusize%3C/span%3E&amp;gt;::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et0%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..SIZE%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(i);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et1%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..SIZE%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Evd.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush_back%3C/span%3E(i);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ecount%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E0%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22number%22%3E2%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ecount%20+=%20i;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et3%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20vd.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ecount%20+=%20i;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et4%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20count,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Eelapsed_ms%3C/span%3E(t0,%20t1),%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eelapsed_ms%3C/span%3E(t1,%20t2),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Eelapsed_ms%3C/span%3E(t2,%20t3),%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eelapsed_ms%3C/span%3E(t3,%20t4));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%8F%AF%E8%83%BD%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C1599960000%200.230073%200.203979%200.013144%200.035295%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E4%BC%9A%E5%8F%91%E7%8E%B0%EF%BC%8C%3Ccode%3EVec%3C/code%3E%E5%92%8C%3Ccode%3EVecDeque%3C/code%3E%E5%87%A0%E4%B9%8E%E8%8A%B1%E8%B4%B9%E7%9B%B8%E5%BD%93%E7%9A%84%E6%97%B6%E9%97%B4%EF%BC%8C%E4%BD%86%E5%AF%B9%E4%BA%8E%E6%89%AB%E6%8F%8F%E6%95%B4%E4%B8%AA%E9%9B%86%E5%90%88%E5%85%83%E7%B4%A0%EF%BC%8C%3Ccode%3EVec%3C/code%3E%E6%95%88%E7%8E%87%E8%A6%81%E9%AB%98%E5%87%BA%E4%B8%A4%E5%80%8D%E3%80%82%3C/p%3E%3Ch2%20id=%22Linked-Lists%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Linked-Lists%22%3E%C2%B6%3C/a%3ELinked%20Lists%3C/h2%3E%3Cp%3E%E5%AF%B9%E4%BA%8E%E6%9F%90%E4%BA%9B%E5%BA%94%E7%94%A8%EF%BC%8C%E5%8F%AF%E8%83%BD%E4%BC%9A%E9%A2%91%E7%B9%81%E5%9C%B0%E5%9C%A8%E4%B8%AD%E9%97%B4%E4%BD%8D%E7%BD%AE%E6%8F%92%E5%85%A5%E6%88%96%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0%E3%80%82%E8%BF%99%E7%A7%8D%E6%83%85%E5%86%B5%EF%BC%8C%E5%90%91%E9%87%8F(vector)%E5%92%8C%E5%AF%B9%E8%B1%A1(queue)%E4%B8%8D%E6%98%AF%E9%AB%98%E6%95%88%E7%9A%84%EF%BC%8C%E6%89%80%E4%BB%A5%E9%9C%80%E8%A6%81%E5%BC%95%E5%85%A5%E6%96%B0%E7%9A%84%E9%9B%86%E5%90%88%E7%B1%BB%E5%9E%8B%E2%80%94%E2%80%94%3Ccode%3ELinkedList%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E7%84%B6%E8%80%8C%EF%BC%8C%E5%A6%82%E6%9E%9C%E4%BD%A0%E9%9C%80%E8%A6%81%E5%9C%A8%E4%B8%80%E4%B8%AA%E9%9B%86%E5%90%88%E8%BF%9B%E8%A1%8C%E5%A4%A7%E9%87%8F%E6%93%8D%E4%BD%9C%EF%BC%8C%E8%AD%AC%E5%A6%82%E6%B7%BB%E5%8A%A0%E6%88%96%E5%88%A0%E9%99%A4%E5%BE%88%E5%A4%9A%E4%B8%AA%E6%9D%A1%E7%9B%AE%EF%BC%8C%E4%BC%9A%E6%AF%94%3Ccode%3EVec%3C/code%3E%E6%88%96%3Ccode%3EVecDeque%3C/code%3E%E8%A6%81%E5%BF%AB%E5%BE%88%E5%A4%9A%EF%BC%8C%E5%AE%83%E4%BC%9A%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%96%B0%E7%9A%84%E4%B8%B4%E6%97%B6%E9%9B%86%E5%90%88%EF%BC%8C%E5%B9%B6%E7%94%B1%E4%B8%B4%E6%97%B6%E9%9B%86%E5%90%88%E6%9B%BF%E6%8D%A2%E5%8E%9F%E6%9D%A5%E7%9A%84%E9%9B%86%E5%90%88%E3%80%82%3C/p%3E%3Cp%3E%3Ccode%3ELinkedList%3C/code%3E%E7%9A%84%E4%BD%BF%E7%94%A8%EF%BC%8C%E4%B8%8D%E5%BA%94%E8%AF%A5%E7%94%A8%E4%BA%8E%E9%82%A3%E4%BA%9B%E9%9C%80%E8%A6%81%E9%A2%91%E7%B9%81%E8%AF%BB%E5%8F%96%E7%9A%84%E4%BD%8D%E7%BD%AE%E5%81%9A%E6%8F%92%E5%85%A5%E6%88%96%E5%88%A0%E9%99%A4%E6%93%8D%E4%BD%9C%E3%80%82%3C/p%3E%3Ch2%20id=%22Binary-Heaps%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Binary-Heaps%22%3E%C2%B6%3C/a%3EBinary%20Heaps%3C/h2%3E%3Cp%3E%E8%AE%BF%E9%97%AE%E9%9B%86%E5%90%88%E8%BF%98%E6%9C%89%E5%8F%A6%E5%A4%96%E4%B8%80%E7%A7%8D%E6%96%B9%E5%BC%8F%EF%BC%8C%E5%8D%B3%E6%89%80%E8%B0%93%E7%9A%84%E2%80%9C%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E2%80%9D%E3%80%82%E5%AE%83%E5%87%BA%E7%8E%B0%E5%9C%A8%E4%BB%85%E6%9C%89%E4%B8%A4%E4%B8%AA%E5%87%BD%E6%95%B0%E7%9A%84%E5%9C%B0%E6%96%B9%EF%BC%9A%E6%8F%92%E5%85%A5%E5%85%83%E7%B4%A0%E5%92%8C%E8%90%83%E5%8F%96%E5%85%83%E7%B4%A0%E3%80%82%E4%BD%86%E6%AF%8F%E4%B8%AA%E5%85%83%E7%B4%A0%E9%83%BD%E6%9C%89%E4%BC%98%E5%85%88%E5%80%BC%EF%BC%8C%E8%90%83%E5%8F%96(extract)%E5%85%83%E7%B4%A0%E9%9C%80%E8%A6%81%E6%A0%B9%E6%8D%AE%E4%BC%98%E5%85%88%E7%BA%A7%E8%8E%B7%E5%8F%96%E3%80%82%E4%BD%BF%E7%94%A8Vector%E6%97%B6%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%B1%BB%E4%BC%BC%E4%B8%8B%E9%9D%A2%E8%BF%99%E7%A7%8D%E6%96%B9%E5%BC%8F%E5%8C%85%E5%90%AB%E8%BF%99%E7%A7%8D%E8%A1%8C%E4%B8%BA%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eadd%3C/span%3E(v:%20&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E&amp;gt;,%20a:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(a);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Esort%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E48%3C/span%3E,%20%3Cspan%20class=%22number%22%3E18%3C/span%3E,%20%3Cspan%20class=%22number%22%3E20%3C/span%3E,%20%3Cspan%20class=%22number%22%3E35%3C/span%3E,%20%3Cspan%20class=%22number%22%3E17%3C/span%3E,%20%3Cspan%20class=%22number%22%3E13%3C/span%3E,%20%3Cspan%20class=%22number%22%3E39%3C/span%3E,%20%3Cspan%20class=%22number%22%3E12%3C/span%3E,%20%3Cspan%20class=%22number%22%3E42%3C/span%3E,%20%3Cspan%20class=%22number%22%3E33%3C/span%3E,%20%3Cspan%20class=%22number%22%3E29%3C/span%3E,%20%3Cspan%20class=%22number%22%3E27%3C/span%3E,%20%3Cspan%20class=%22number%22%3E50%3C/span%3E,%20%3Cspan%20class=%22number%22%3E16%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ev%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E::&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E&amp;gt;::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..a.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E()%20/%20%3Cspan%20class=%22number%22%3E2%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Eadd%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20v,%20a[i%20*%20%3Cspan%20class=%22number%22%3E2%3C/span%3E]);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Eadd%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20v,%20a[i%20*%20%3Cspan%20class=%22number%22%3E2%3C/span%3E%20+%20%3Cspan%20class=%22number%22%3E1%3C/span%3E]);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epop%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ewhile%3C/span%3E%20!%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eis_empty%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epop%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%AF%8F%E6%AC%A1%E5%B0%86%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E6%B7%BB%E5%8A%A0%E5%88%B0vector%E6%97%B6%EF%BC%8Cvector%E9%83%BD%E8%BF%9B%E8%A1%8C%E4%B8%80%E6%AC%A1%E6%8E%92%E5%BA%8F%EF%BC%8C%E5%AE%83%E7%9A%84%E5%85%83%E7%B4%A0%E4%BF%9D%E6%8C%81%E5%8D%87%E9%98%B6%E7%9A%84%E9%A1%BA%E5%BA%8F%E3%80%82%E6%89%80%E4%BB%A5vector%E7%9A%84%E5%80%BC%E7%9A%84%E8%90%83%E5%8F%96%E4%B9%9F%E6%80%BB%E5%8F%AF%E4%BB%A5%E5%BE%97%E5%88%B0%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E6%98%AF%E5%8F%A6%E4%B8%80%E7%A7%8D%E7%AD%89%E4%BB%B7%E5%AE%9E%E7%8E%B0%EF%BC%8C%E5%8F%AA%E4%B8%8D%E8%BF%87%E6%98%AF%E5%9C%A8%E8%90%83%E5%8F%96%E5%89%8D%E8%BF%9B%E8%A1%8C%E6%8E%92%E5%BA%8F%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eextract%3C/span%3E(v:%20&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E&amp;gt;)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20OPtion&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Esort%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epop%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E48%3C/span%3E,%20%3Cspan%20class=%22number%22%3E18%3C/span%3E,%20%3Cspan%20class=%22number%22%3E20%3C/span%3E,%20%3Cspan%20class=%22number%22%3E35%3C/span%3E,%20%3Cspan%20class=%22number%22%3E17%3C/span%3E,%20%3Cspan%20class=%22number%22%3E13%3C/span%3E,%20%3Cspan%20class=%22number%22%3E39%3C/span%3E,%20%3Cspan%20class=%22number%22%3E12%3C/span%3E,%20%3Cspan%20class=%22number%22%3E42%3C/span%3E,%20%3Cspan%20class=%22number%22%3E33%3C/span%3E,%20%3Cspan%20class=%22number%22%3E29%3C/span%3E,%20%3Cspan%20class=%22number%22%3E27%3C/span%3E,%20%3Cspan%20class=%22number%22%3E50%3C/span%3E,%20%3Cspan%20class=%22number%22%3E16%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ev%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E::&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E&amp;gt;::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..a.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E()%20/%20%3Cspan%20class=%22number%22%3E2%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(a[i%20*%20%3Cspan%20class=%22number%22%3E2%3C/span%3E]);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(a[i%20*%20%3Cspan%20class=%22number%22%3E2%3C/span%3E%20+%20%3Cspan%20class=%22number%22%3E1%3C/span%3E]);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eextract%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20v).%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ewhile%3C/span%3E%20!%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eis_empty%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eextract%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20v).%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E4%B8%A4%E4%B8%AA%E4%BB%A3%E7%A0%81%E9%83%BD%E6%9C%89%E4%B8%8D%E5%A5%BD%E4%B9%8B%E5%A4%84%E5%9C%A8%E4%BA%8E%E9%A2%91%E7%B9%81%E8%B0%83%E7%94%A8%E4%BA%86%3Ccode%3Esort%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E5%AE%83%E6%9C%89%E8%BE%83%E5%A4%A7%E6%B6%88%E8%80%97%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E6%98%AF%E4%B8%80%E4%B8%AA%E7%AD%89%E4%BB%B7%E5%AE%9E%E7%8E%B0%EF%BC%8C%E5%B9%B6%E4%B8%94%E6%9B%B4%E5%BF%AB%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E48%3C/span%3E,%20%3Cspan%20class=%22number%22%3E18%3C/span%3E,%20%3Cspan%20class=%22number%22%3E20%3C/span%3E,%20%3Cspan%20class=%22number%22%3E35%3C/span%3E,%20%3Cspan%20class=%22number%22%3E17%3C/span%3E,%20%3Cspan%20class=%22number%22%3E13%3C/span%3E,%20%3Cspan%20class=%22number%22%3E39%3C/span%3E,%20%3Cspan%20class=%22number%22%3E12%3C/span%3E,%20%3Cspan%20class=%22number%22%3E42%3C/span%3E,%20%3Cspan%20class=%22number%22%3E33%3C/span%3E,%20%3Cspan%20class=%22number%22%3E29%3C/span%3E,%20%3Cspan%20class=%22number%22%3E27%3C/span%3E,%20%3Cspan%20class=%22number%22%3E50%3C/span%3E,%20%3Cspan%20class=%22number%22%3E16%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ev%3C/span%3E%20=%20std::collections::BinaryHeap::&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E&amp;gt;::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..a.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E()%20/%20%3Cspan%20class=%22number%22%3E2%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(a[i%20*%20%3Cspan%20class=%22number%22%3E2%3C/span%3E]);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(a[i%20*%20%3Cspan%20class=%22number%22%3E2%3C/span%3E%20+%20%3Cspan%20class=%22number%22%3E1%3C/span%3E]);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epop%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ewhile%3C/span%3E%20!%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eis_empty%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epop%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E9%87%8C%E7%9A%84%E4%BA%8C%E5%8F%89%E5%A0%86(binary%20heap)%E7%B1%BB%E4%BC%BCvector%E4%B8%80%E6%A0%B7%EF%BC%8C%E5%8F%AF%E4%BB%A5%E8%B0%83%E7%94%A8%3Ccode%3Epush%3C/code%3E%E5%92%8C%3Ccode%3Epop%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E4%B8%8D%E5%90%8C%E7%9A%84%E6%98%AF%EF%BC%8C%E4%BA%8C%E5%8F%89%E5%A0%86%E7%9A%84%3Ccode%3Epop%3C/code%3E%E5%87%BD%E6%95%B0%E8%90%83%E5%8F%96%E7%9A%84%E6%98%AF%E5%AE%B9%E5%99%A8%E4%B8%AD%E6%9C%80%E5%A4%A7%E7%9A%84%E5%80%BC%E3%80%82%3C/p%3E%3Ch2%20id=%22Ordered-Sets-and-Unordered-Sets%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Ordered-Sets-and-Unordered-Sets%22%3E%C2%B6%3C/a%3EOrdered%20Sets%20and%20Unordered%20Sets%3C/h2%3E%3Cp%3E%E9%9B%86%E5%90%88%E6%A6%82%E5%BF%B5%E4%B8%AD%E7%9A%84Set%E6%98%AF%E4%B8%80%E7%A7%8D%E4%B8%8D%E5%8C%85%E5%90%AB%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%E7%9A%84%E6%A6%82%E5%BF%B5%EF%BC%8C%E5%AD%98%E5%82%A8%E8%BF%99%E4%B8%AA%E5%85%83%E7%B4%A0%E7%9A%84%E4%B8%80%E4%B8%AA%E9%AB%98%E6%95%88%E5%AE%9E%E7%8E%B0%E6%98%AF%E2%80%9Chashtable%E2%80%9D%EF%BC%8C%E5%AF%B9%E5%BA%94%E9%9B%86%E5%90%88%E7%B1%BB%E5%9E%8B%E7%9A%84%3Ccode%3EHashSet%3C/code%3E%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E6%3C/span%3E,%20%3Cspan%20class=%22number%22%3E8%3C/span%3E,%20%3Cspan%20class=%22number%22%3E2%3C/span%3E,%20%3Cspan%20class=%22number%22%3E8%3C/span%3E,%20%3Cspan%20class=%22number%22%3E4%3C/span%3E,%20%3Cspan%20class=%22number%22%3E9%3C/span%3E,%20%3Cspan%20class=%22number%22%3E6%3C/span%3E,%20%3Cspan%20class=%22number%22%3E1%3C/span%3E,%20%3Cspan%20class=%22number%22%3E8%3C/span%3E,%20%3Cspan%20class=%22number%22%3E0%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ev%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E::&amp;lt;_&amp;gt;::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ehs%3C/span%3E%20=%20std::collections::HashSet::&amp;lt;_&amp;gt;::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ebs%3C/span%3E%20=%20std::collections::BTreeSet::&amp;lt;_&amp;gt;::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20arr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(i);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ehs.%3Cspan%20class=%22title%20function_%20invoke__%22%3Einsert%3C/span%3E(i);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ebs.%3Cspan%20class=%22title%20function_%20invoke__%22%3Einsert%3C/span%3E(i);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Vec:&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E()%20&amp;#123;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20i);%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;.%20&amp;#123;:?&amp;#125;,%20v);%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22string%22%3Eprint!(&amp;quot;%3C/span%3EHashSet%20:%3Cspan%20class=%22string%22%3E&amp;quot;);%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22string%22%3Efor%20i%20in%20hs.iter()%20&amp;#123;%20print!(&amp;quot;%3C/span%3E%20&amp;#123;&amp;#125;%3Cspan%20class=%22string%22%3E&amp;quot;,%20i);%20&amp;#125;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22string%22%3Eprintln!(&amp;quot;%3C/span%3E.%20&amp;#123;:?&amp;#125;,%20hs);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;BTreeSet:&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20bs.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E()%20&amp;#123;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20i);%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;.%20&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20bs);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%BC%9A%E6%89%93%E5%8D%B0%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20plaintext%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3EVec:%206%208%202%208%204%209%206%201%208%200.%20[6,%208,%202,%208,%204,%209,%206,%201,%208,%200]%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EHashSet%20:%208%202%209%206%204%200%201.%20&amp;#123;8,%202,%209,%206,%204,%200,%201&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EBTreeSet:%200%201%202%204%206%208%209.%20&amp;#123;0,%201,%202,%204,%206,%208,%209&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%3Ccode%3EVec%20v%3C/code%3E%E9%9B%86%E5%90%88%E5%8C%85%E5%90%AB%E6%89%80%E6%9C%89%E6%8F%92%E5%85%A5%E5%85%83%E7%B4%A0%EF%BC%8C%E4%BF%9D%E7%95%99%E6%8F%92%E5%85%A5%E9%A1%BA%E5%BA%8F%EF%BC%9B%3Ccode%3EHashset%20hs%3C/code%3E%E9%9B%86%E5%90%88%E4%B8%8D%E5%8C%85%E5%90%AB%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%EF%BC%9B%3Ccode%3EBTreeSet%20bs%3C/code%3E%E8%BF%9B%E8%A1%8C%E4%BA%86%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E19%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E20%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E21%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E22%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E23%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E24%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E25%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E26%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E27%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E28%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E29%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E30%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E31%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E32%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E33%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E34%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E35%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E36%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E37%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E38%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E39%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E40%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E41%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E42%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eelapsed_ms%3C/span%3E(t1:%20Instant,%20t2:%20Instant)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et%3C/span%3E%20=%20t2%20-%20t1;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20t.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eas_secs%3C/span%3E()%20%3Cspan%20class=%22keyword%22%3Eas%3C/span%3E%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E%20*%20%3Cspan%20class=%22number%22%3E1000%3C/span%3E.%20+%20t.%3Cspan%20class=%22title%20function_%20invoke__%22%3Esubsec_nanos%3C/span%3E()%20%3Cspan%20class=%22keyword%22%3Eas%3C/span%3E%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E%20/%20%3Cspan%20class=%22number%22%3E1e6%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Econst%3C/span%3E%20SIZE:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E40_000%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ens_per_op%3C/span%3E(t1:%20Instant,%20t2:%20Instant)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eelapsed_ms%3C/span%3E(t1,%20t2)%20/%20SIZE%20%3Cspan%20class=%22keyword%22%3Eas%3C/span%3E%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E%20*%20%3Cspan%20class=%22number%22%3E1_000_000%3C/span%3E.%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Emain%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ev%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E::&amp;lt;_&amp;gt;::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ehs%3C/span%3E%20=%20std::collections::HashSet::&amp;lt;_&amp;gt;::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ebs%3C/span%3E%20=%20std::collections::BTreeSet::&amp;lt;_&amp;gt;::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et0%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..SIZE%20&amp;#123;%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(i);%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et1%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..SIZE%20&amp;#123;%20hs.%3Cspan%20class=%22title%20function_%20invoke__%22%3Einsert%3C/span%3E(i);%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et2%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..SIZE%20&amp;#123;%20bs.%3Cspan%20class=%22title%20function_%20invoke__%22%3Einsert%3C/span%3E(i);%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et3%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..SIZE%20&amp;#123;%20%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20!%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Econtains%3C/span%3E(&amp;amp;i)%20&amp;#123;%20%3Cspan%20class=%22keyword%22%3Ereturn%3C/span%3E;%20&amp;#125;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et4%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eswap%3C/span%3E(%3Cspan%20class=%22number%22%3E10_000%3C/span%3E,%20%3Cspan%20class=%22number%22%3E20_000%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Esort%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et5%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..SIZE%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Ebinary_search%3C/span%3E(&amp;amp;i).%3Cspan%20class=%22title%20function_%20invoke__%22%3Eis_err%3C/span%3E()%20&amp;#123;%20%3Cspan%20class=%22keyword%22%3Ereturn%3C/span%3E;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et6%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..SIZE%20&amp;#123;%20%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20!%20hs.%3Cspan%20class=%22title%20function_%20invoke__%22%3Econtains%3C/span%3E(&amp;amp;i)%20&amp;#123;%20%3Cspan%20class=%22keyword%22%3Ereturn%3C/span%3E;%20&amp;#125;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et7%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..SIZE%20&amp;#123;%20%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20!%20bs.%3Cspan%20class=%22title%20function_%20invoke__%22%3Econtains%3C/span%3E(&amp;amp;i)%20&amp;#123;%20%3Cspan%20class=%22keyword%22%3Ereturn%3C/span%3E;%20&amp;#125;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Et8%3C/span%3E%20=%20Instant::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enow%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Pushes%20in%20Vec:%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ens_per_op%3C/span%3E(t0,%20t1));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Insertions%20in%20HashSet:%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ens_per_op%3C/span%3E(t1,%20t2));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Insertions%20in%20BTreeSet:%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ens_per_op%3C/span%3E(t2,%20t3));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Linear%20search%20in%20Vec:%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ens_per_op%3C/span%3E(t3,%20t4));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Sort%20of%20Vec:%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ens_per_op%3C/span%3E(t4,%20t5));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Binary%20search%20in%20Vec:%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ens_per_op%3C/span%3E(t5,%20t6));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Search%20in%20HashSet:%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ens_per_op%3C/span%3E(t6,%20t7));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Search%20in%20BTreeSet:%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ens_per_op%3C/span%3E(t7,%20t8));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%B0%86%E4%BC%9A%E6%89%93%E5%8D%B0%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20plaintext%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3EPushes%20in%20Vec:%206.4021%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EInsertions%20in%20HashSet:%20139.214%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EInsertions%20in%20BTreeSet:%20127.3047%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ELinear%20search%20in%20Vec:%2017389.3111%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ESort%20of%20Vec:%203.1132%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EBinary%20search%20in%20Vec:%2047.7641%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ESearch%20in%20HashSet:%2036.5041%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ESearch%20in%20BTreeSet:%2056.2444%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%A0%88%E9%A1%B6%E6%8F%92%E5%85%A5%E5%85%83%E7%B4%A0%EF%BC%8C%E8%8A%B1%E8%B4%B96%E7%BA%B3%E7%A7%92%EF%BC%8C%3Ccode%3EHashSet%3C/code%3E%E5%92%8C%3Ccode%3EBTreeSet%3C/code%3E%E6%8F%92%E5%85%A5%E5%85%83%E7%B4%A0%EF%BC%8C%E8%8A%B1%E8%B4%B9%E6%8E%A5%E8%BF%9120%E5%80%8D%E3%80%82%3C/p%3E%3Cp%3E%E7%BA%BF%E6%80%A7%E6%96%B9%E5%BC%8F%E6%90%9C%E7%B4%A2vector%EF%BC%8C%E8%8A%B1%E8%B4%B9%E6%97%B6%E9%97%B4%E9%9D%9E%E5%B8%B8%E5%A4%A7%EF%BC%8C%E6%94%B9%E4%B8%BA%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95%E5%90%8E%EF%BC%8C%E5%B9%B3%E5%9D%87%E5%9C%A850%E7%BA%B3%E7%A7%92%E7%9A%84%E6%97%B6%E9%97%B4%E3%80%82%E6%89%80%E4%BB%A5%EF%BC%8C%E5%A6%82%E6%9E%9C%E6%8F%92%E5%85%A5%E6%AF%94%E6%9F%A5%E6%89%BE%E5%B0%91%E7%9A%84%E6%83%85%E5%86%B5%EF%BC%8C%E6%AF%8F%E6%AC%A1%E6%8F%92%E5%85%A5%E5%85%83%E7%B4%A0%E4%B9%8B%E5%90%8E%E8%BF%9B%E8%A1%8C%E6%8E%92%E5%BA%8F%EF%BC%8C%E5%86%8D%E7%94%A8%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E4%BC%9A%E6%9B%B4%E5%8A%A0%E9%AB%98%E6%95%88%E3%80%82%3C/p%3E%3Cp%3E%3Ccode%3EHashSet%3C/code%3E%E7%9A%84%E6%9F%A5%E6%89%BE%E8%8A%B1%E8%B4%B940%E7%BA%B3%E7%A7%92%E5%B7%A6%E5%8F%B3%EF%BC%9B%3Ccode%3EBTreeSet%3C/code%3E%E7%9A%84%E6%9F%A5%E6%89%BE%E8%8A%B1%E8%B4%B9%E6%8E%A5%E8%BF%9160%E7%BA%B3%E7%A7%92%E5%B7%A6%E5%8F%B3%E3%80%82%3C/p%3E%3Cp%3E%E4%BC%98%E5%8C%96%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%9A%84%E5%8E%9F%E5%88%99%E6%98%AF%EF%BC%8C%3C/p%3E%3Cp%3E%E9%A6%96%E5%85%88%E5%A3%B0%E6%98%8E%E4%B8%80%E4%B8%AAtrait%EF%BC%8C%E5%AE%83%E5%8C%85%E5%90%AB%E6%9C%89%E8%AF%A5%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%9A%84%E6%96%B9%E6%B3%95%E7%AD%BE%E5%90%8D%EF%BC%8C%E6%8E%A5%E7%9D%80%E5%AE%9E%E7%8E%B0%E8%BF%99%E4%B8%AAtrait%EF%BC%8C%E5%86%8D%E6%B5%8B%E8%AF%95%E8%BF%99%E4%B8%AAtrait%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95%E7%9A%84%E6%80%A7%E8%83%BD%EF%BC%8C%E5%A6%82%E6%9E%9C%E6%80%A7%E8%83%BD%E5%A4%AA%E4%BD%8E%E3%80%82%E9%87%8D%E6%9E%84%E4%BB%A3%E7%A0%81%E8%BF%9B%E8%A1%8C%E4%BC%98%E5%8C%96%EF%BC%8C%E7%9F%A5%E9%81%93%E6%BB%A1%E6%84%8F%E7%9A%84%E5%AE%9E%E7%8E%B0%E3%80%82%3C/p%3E%3Ch2%20id=%22Ordered-Dictionaries-and-Unordered-Dictionaries%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Ordered-Dictionaries-and-Unordered-Dictionaries%22%3E%C2%B6%3C/a%3EOrdered%20Dictionaries%20and%20Unordered%20Dictionaries%3C/h2%3E%3Cp%3E%E9%9B%86%E5%90%88%E5%A4%84%E7%90%86%E7%AE%80%E5%8D%95%E7%9A%84%E5%AD%98%E5%82%A8%E3%80%81%E8%AE%BF%E9%97%AE%E4%BD%BF%E7%94%A8%E5%A4%96%EF%BC%8C%E5%8F%A6%E4%B8%80%E7%A7%8D%E5%B8%B8%E8%A7%81%E7%94%A8%E6%B3%95%E6%98%AF%E2%80%9C%E5%AD%97%E5%85%B8%E2%80%9D%EF%BC%8C%E5%8D%B3%E7%94%B1%E2%80%9Ckey%E2%80%9D%E8%BF%9B%E8%A1%8C%E8%AE%BF%E9%97%AE%E3%80%82%3C/p%3E%3Cp%3E%E5%AD%97%E5%85%B8%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%81%9A%E6%98%AFkey-value%E5%AF%B9%EF%BC%8C%E5%AE%83%E7%9A%84%E5%A4%84%E7%90%86%E7%94%B1key%E5%86%B3%E5%AE%9A%E3%80%82%E6%89%80%E4%BB%A5%EF%BC%8C%E5%AD%97%E5%85%B8%E4%B8%8D%E8%83%BD%E6%9C%89%E4%B8%A4%E4%B8%AA%E7%9B%B8%E5%90%8C%E7%9A%84key%E3%80%82%3C/p%3E%3Cp%3ERust%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%AD%E6%8F%90%E4%BE%9B%E4%BA%86%3Ccode%3EHashMap%3C/code%3E%E5%92%8C%3Ccode%3EBTreeMap%3C/code%3E%E7%9A%84%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0%EF%BC%8C%E7%B1%BB%E5%90%8C%E4%BA%8E%3Ccode%3EHashSet%3C/code%3E%EF%BC%8C%3Ccode%3EHashMap%3C/code%3E%E4%B8%8D%E8%BF%9B%E8%A1%8C%E6%8E%92%E5%BA%8F%EF%BC%8C%E4%BD%86%E9%80%9F%E5%BA%A6%E8%BE%83%E5%BF%AB%EF%BC%9B%3Ccode%3EBTreeMap%3C/code%3E%E8%BE%83%E6%85%A2%EF%BC%8C%E4%BD%86%E6%8C%89%E9%A1%BA%E5%BA%8F%E5%AD%98%E5%82%A8%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E19%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E20%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E21%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E22%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E23%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E24%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[(%3Cspan%20class=%22number%22%3E640%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;T&amp;#x27;%3C/span%3E),%20(%3Cspan%20class=%22number%22%3E917%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;C&amp;#x27;%3C/span%3E),%20(%3Cspan%20class=%22number%22%3E412%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;S&amp;#x27;%3C/span%3E),%20(%3Cspan%20class=%22number%22%3E670%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;T&amp;#x27;%3C/span%3E),%20(%3Cspan%20class=%22number%22%3E917%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;L&amp;#x27;%3C/span%3E)];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ev%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E::&amp;lt;_&amp;gt;::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ehs%3C/span%3E%20=%20std::collections::HashMap::&amp;lt;_,%20_&amp;gt;::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ebs%3C/span%3E%20=%20std::collections::BTreeMap::&amp;lt;_,%20_&amp;gt;::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20&amp;amp;(key,%20value)%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20arr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E((key,%20value));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ehs.%3Cspan%20class=%22title%20function_%20invoke__%22%3Einsert%3C/span%3E(key,%20value);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ebs.%3Cspan%20class=%22title%20function_%20invoke__%22%3Einsert%3C/span%3E(key,%20value);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Vec:&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20&amp;amp;(key,%20value)%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;%20&amp;#123;&amp;#125;:%20&amp;#123;&amp;#125;,&amp;quot;%3C/span%3E,%20key,%20value);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&#92;n%20&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20v);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;HashMap:&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20(key,%20value)%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20hs.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;%20&amp;#123;&amp;#125;:%20&amp;#123;&amp;#125;,&amp;quot;%3C/span%3E,%20key,%20value);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&#92;n%20&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20hs);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;BTreeMap:&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20(key,%20value)%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20bs.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;%20&amp;#123;&amp;#125;:%20&amp;#123;&amp;#125;,&amp;quot;%3C/span%3E,%20key,%20value);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&#92;n%20&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20bs);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E6%89%93%E5%8D%B0%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20plaintext%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3EVec:%20640:%20T,%20917:%20C,%20412:%20S,%20670:%20T,%20917:%20L,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20[(640,%20&amp;#x27;T&amp;#x27;),%20(917,%20&amp;#x27;C&amp;#x27;),%20(412,%20&amp;#x27;S&amp;#x27;),%20(670,%20&amp;#x27;T&amp;#x27;),%20(917,%20&amp;#x27;L&amp;#x27;)]%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EHashMap:%20640:%20T,%20412:%20S,%20917:%20L,%20670:%20T,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20&amp;#123;640:%20&amp;#x27;T&amp;#x27;,%20412:%20&amp;#x27;S&amp;#x27;,%20917:%20&amp;#x27;L&amp;#x27;,%20670:%20&amp;#x27;T&amp;#x27;&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EBTreeMap:%20412:%20S,%20640:%20T,%20670:%20T,%20917:%20L,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20&amp;#123;412:%20&amp;#x27;S&amp;#x27;,%20640:%20&amp;#x27;T&amp;#x27;,%20670:%20&amp;#x27;T&amp;#x27;,%20917:%20&amp;#x27;L&amp;#x27;&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%AD%97%E5%85%B8%E4%B8%AD%E4%B8%8D%E5%85%81%E8%AE%B8%E9%87%8D%E5%A4%8D%E7%9A%84key%EF%BC%8C%E4%BD%86%E5%85%81%E8%AE%B8%E9%87%8D%E5%A4%8D%E7%9A%84value%EF%BC%8C%E4%BB%A5%E5%8F%8A%3Ccode%3EBTreeMap%3C/code%3E%E6%8C%89%E7%85%A7key%E9%A1%BA%E5%BA%8F%E6%8E%92%E5%88%97%EF%BC%8C%E8%80%8C%3Ccode%3EHashMap%3C/code%3E%E9%A1%BA%E5%BA%8F%E9%9A%8F%E6%9C%BA%E3%80%82%3C/p%3E%3Cp%3E%E5%AE%83%E4%BB%AC%E7%9A%84%E6%80%A7%E8%83%BD%E7%B1%BB%E4%BC%BC%E4%BA%8E%3Ccode%3EHashSet%3C/code%3E%E5%92%8C%3Ccode%3EBTreeSet%3C/code%3E%E3%80%82%3C/p%3E%3Ch2%20id=%22Collections-in-C-and-in-Rust%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Collections-in-C-and-in-Rust%22%3E%C2%B6%3C/a%3ECollections%20in%20C++%20and%20in%20Rust%3C/h2%3E%3Cp%3EC++%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%AD%E5%AF%B9%E5%BA%94Rust%E9%9B%86%E5%90%88%E5%88%97%E8%A1%A8%E5%A6%82%E4%B8%8B%EF%BC%8C%E6%9F%90%E4%BA%9B%E9%9B%86%E5%90%88%E5%BA%93%E5%9C%A8Rust%E4%B8%AD%E5%B9%B6%E6%B2%A1%E6%9C%89%E5%AF%B9%E5%BA%94%EF%BC%8C%E7%94%A8%3Ccode%3E~%3C/code%3E%E6%A0%87%E8%AE%B0%E8%A1%A8%E7%A4%BA%E6%9C%80%E7%9B%B8%E4%BC%BC%E7%9A%84%E9%9B%86%E5%90%88%EF%BC%8C%3C/p%3E%3Ctable%3E%3Cthead%3E%3Ctr%3E%3Cth%20style=%22text-align:left%22%3EC++%3C/th%3E%3Cth%20style=%22text-align:left%22%3ERust%3C/th%3E%3C/tr%3E%3C/thead%3E%3Ctbody%3E%3Ctr%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3Earray&amp;lt;T&amp;gt;%3C/code%3E%3C/td%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3E[T]%3C/code%3E%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3Evector&amp;lt;T&amp;gt;%3C/code%3E%3C/td%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3EVec&amp;lt;T&amp;gt;%3C/code%3E%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3Edeque&amp;lt;T&amp;gt;%3C/code%3E%3C/td%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3EVecDeque&amp;lt;T&amp;gt;%3C/code%3E%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3Eforward_list&amp;lt;T&amp;gt;%3C/code%3E%3C/td%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3E~%20LinkedList&amp;lt;T&amp;gt;%3C/code%3E%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3Elist&amp;lt;T&amp;gt;%3C/code%3E%3C/td%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3ELinkedList&amp;lt;T&amp;gt;%3C/code%3E%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3Estack&amp;lt;T&amp;gt;%3C/code%3E%3C/td%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3E~%20Vec&amp;lt;T&amp;gt;%3C/code%3E%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3Equeue&amp;lt;T&amp;gt;%3C/code%3E%3C/td%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3E~%20VecDeque&amp;lt;T&amp;gt;%3C/code%3E%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3Epriority_queue&amp;lt;T&amp;gt;%3C/code%3E%3C/td%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3EBinaryHeap&amp;lt;T&amp;gt;%3C/code%3E%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3Eset&amp;lt;T&amp;gt;%3C/code%3E%3C/td%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3EBTreeSet&amp;lt;T&amp;gt;%3C/code%3E%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3Emultiset&amp;lt;T&amp;gt;%3C/code%3E%3C/td%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3E~%20BTreeMap&amp;lt;T,u32&amp;gt;%3C/code%3E%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3Emap&amp;lt;K,V&amp;gt;%3C/code%3E%3C/td%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3EBTreeMap&amp;lt;K,V&amp;gt;%3C/code%3E%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3Emultimap&amp;lt;K,V&amp;gt;%3C/code%3E%3C/td%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3E~%20BTreeMap&amp;lt;K,%20(V,u32)&amp;gt;%3C/code%3E%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3Eunordered_set&amp;lt;T&amp;gt;%3C/code%3E%3C/td%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3EHashSet&amp;lt;T&amp;gt;%3C/code%3E%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3Eunordered_multiset&amp;lt;T&amp;gt;%3C/code%3E%3C/td%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3E~%20HashMap&amp;lt;T,u32&amp;gt;%3C/code%3E%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3Eunordered_map&amp;lt;K,V&amp;gt;%3C/code%3E%3C/td%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3EHashMap&amp;lt;K,V&amp;gt;%3C/code%3E%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3Eunordered_multimap&amp;lt;K,V&amp;gt;%3C/code%3E%3C/td%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3E~%20HashMap&amp;lt;K,(V,u32)&amp;gt;%3C/code%3E%3C/td%3E%3C/tr%3E%3C/tbody%3E%3C/table%3E" type="image"/>
    
    
    <category term="learning" scheme="https://galudisu.info/categories/learning/"/>
    
    
    <category term="rust" scheme="https://galudisu.info/tags/rust/"/>
    
  </entry>
  
  <entry>
    <title>rust基础入门[19] - Object-Oriented Programming</title>
    <link href="https://galudisu.info/2023/01/19/rust/beginning/chapter19_Object-Oriented%20Programming/"/>
    <id>https://galudisu.info/2023/01/19/rust/beginning/chapter19_Object-Oriented%20Programming/</id>
    <published>2023-01-19T07:50:46.000Z</published>
    <updated>2025-04-27T11:59:08.282Z</updated>
    
    <content type="html"><![CDATA[<p>本章覆盖有：</p><ul><li>不使用trait，继承方式实现关联类型的函数</li><li>Rust面向对象和C++面向对象的区别</li><li>那些trait可以实现哪些type，哪些不能</li><li>如何指定一个方法更改对象</li><li>构造对象的一些约定方法</li><li>为什么Rust不适用数据继承</li><li>什么是静态派遣，什么是动态派遣，如何实现，如何使用</li></ul><span id="more"></span><h2 id="Inherent-Implementations"><a class="header-anchor" href="#Inherent-Implementations">¶</a>Inherent Implementations</h2><p>前面章节，我们看到如何解决下面的问题。你有一个结构体<code>Stru</code>，用于两个方面：用作名称空间，里面有一个函数<code>f1</code>，用作表达式<code>Stru::f1(500_000)</code>的调用；用作创建实例，实例名为<code>s</code>，这个实例可以调用<code>f2</code>方法，例如<code>s.f2(456).x</code>。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">trait</span> <span class="title class_">Tr</span> &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">f1</span>(a: <span class="type">u32</span>) <span class="punctuation">-&gt;</span> <span class="type">bool</span>;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">f2</span>(&amp;<span class="keyword">self</span>, b: <span class="type">u16</span>) <span class="punctuation">-&gt;</span> <span class="keyword">Self</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Stru</span> &#123;</span><br><span class="line">    x: <span class="type">u16</span>,</span><br><span class="line">    y: <span class="type">u16</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">Tr</span> <span class="keyword">for</span> <span class="title class_">Stru</span> &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">f1</span>(a: <span class="type">u32</span>) <span class="punctuation">-&gt;</span> <span class="type">bool</span> &#123;</span><br><span class="line">        a == <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">f2</span>(&amp;<span class="keyword">self</span>, b: <span class="type">u16</span>) <span class="punctuation">-&gt;</span> <span class="keyword">Self</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> b == <span class="keyword">self</span>.x || b == <span class="keyword">self</span>.y &#123;</span><br><span class="line">            Stru &#123;</span><br><span class="line">                x: <span class="keyword">self</span>.x + <span class="number">1</span>,</span><br><span class="line">                y: <span class="keyword">self</span>.y + <span class="number">1</span>,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            Stru &#123;</span><br><span class="line">                x: <span class="keyword">self</span>.x - <span class="number">1</span>,</span><br><span class="line">                y: <span class="keyword">self</span>.y - <span class="number">1</span>,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">s</span> = Stru &#123; x: <span class="number">23</span>, y: <span class="number">456</span> &#125;;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>, Stru::<span class="title function_ invoke__">f1</span>(<span class="number">500_000</span>), s.<span class="title function_ invoke__">f2</span>(<span class="number">456</span>).x);</span><br></pre></td></tr></table></figure><p>结果将打印：<code>false 24</code>。</p><p>首先，<code>Tr</code>被声明，带有两个方法签名，<code>f1</code>和<code>f2</code>，<code>Stru</code>结构体被声明。然后，trait<code>Tr</code>有该结构体的实现。最后实例化结构体变量，并调用这两个方法。</p><p>这种模式很常见，下面有一种简化的写法，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Stru</span> &#123;</span><br><span class="line">    x: <span class="type">u16</span>,</span><br><span class="line">    y: <span class="type">u16</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">Stru</span> &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">f1</span>(a: <span class="type">u32</span>) <span class="punctuation">-&gt;</span> <span class="type">bool</span> &#123;</span><br><span class="line">        a == <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">f2</span>(&amp;<span class="keyword">self</span>, b: <span class="type">u16</span>) <span class="punctuation">-&gt;</span> <span class="keyword">Self</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> b == <span class="keyword">self</span>.x || b == <span class="keyword">self</span>.y &#123;</span><br><span class="line">            Stru &#123;</span><br><span class="line">                x: <span class="keyword">self</span>.x + <span class="number">1</span>,</span><br><span class="line">                y: <span class="keyword">self</span>.y + <span class="number">1</span>,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            Stru &#123;</span><br><span class="line">                x: <span class="keyword">self</span>.x - <span class="number">1</span>,</span><br><span class="line">                y: <span class="keyword">self</span>.y - <span class="number">1</span>,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">s</span> = Stru &#123; x: <span class="number">23</span>, y: <span class="number">456</span> &#125;;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>, Stru::<span class="title function_ invoke__">f1</span>(<span class="number">500_000</span>), s.<span class="title function_ invoke__">f2</span>(<span class="number">456</span>).x);</span><br></pre></td></tr></table></figure><p>这段代码将trait部分移除了，但需要推断trait的名字；因此，对于<code>impl</code>语句,它直接作用于类型，所以不需要trait。这种类型有继承实现。</p><p>从面向对象的角度，它表示：我们有一个自定义类型，<code>Stru</code>，带有某些数据成员，x和y；以及某些方法，<code>f1</code>和<code>f2</code>。</p><p><code>C++</code>的类似实现如下，</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">Stru</span> &#123;</span><br><span class="line">        <span class="type">unsigned</span> <span class="type">short</span> x;</span><br><span class="line">        <span class="type">unsigned</span> <span class="type">short</span> y;</span><br><span class="line">        <span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">f1</span><span class="params">(<span class="type">unsigned</span> <span class="type">long</span> a)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> a == <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function">Stru <span class="title">f2</span><span class="params">(<span class="type">unsigned</span> <span class="type">short</span> b)</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> b == x || b == y ?</span><br><span class="line">                Stru &#123;</span><br><span class="line">                    (<span class="type">unsigned</span> <span class="type">short</span>)(x + <span class="number">1</span>),</span><br><span class="line">                    (<span class="type">unsigned</span> <span class="type">short</span>)(y + <span class="number">1</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            :</span><br><span class="line">                Stru &#123;</span><br><span class="line">                    (<span class="type">unsigned</span> <span class="type">short</span>)(x - <span class="number">1</span>),</span><br><span class="line">                    (<span class="type">unsigned</span> <span class="type">short</span>)(y - <span class="number">1</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    Stru s = &#123; <span class="number">23</span>, <span class="number">456</span> &#125;;</span><br><span class="line">    std::cout &lt;&lt; std::boolalpha &lt;&lt; Stru::<span class="built_in">f1</span>(<span class="number">500000</span>) &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; s.<span class="built_in">f2</span>(<span class="number">456</span>).x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Rust方法中，参数以<code>self</code>开头的称为“对象方法object methods”；不以<code>self</code>开头的称为“类方法class methods”。</p><p>在一个对象方法内，<code>self</code>关键表示当前对象，类似其它面向对象语言的<code>self</code>或<code>this</code>。</p><p>要调用带有<code>self</code>参数的方法，使用点操作，如<code>s.f2(456)</code>；调用不带<code>self</code>参数的方法，使用函数调用方式，语法像<code>Stru::f1(500_000)</code>，类型名后带两个冒号，其后跟着方法名。</p><p><code>Rust</code>和<code>C++</code>字段访问方式的不同在于，Rust中必须写<code>self.x</code>，但<code>C++</code>或其它语言对应可能是<code>this -&gt; x</code>，甚至可以不写，例如Java中的字段<code>this.x</code>和<code>x</code>都一样。</p><p>Rust和其它面向对象语言的不同在于，大部分面向对象语言对当前对象的参考(<code>this</code>、<code>self</code>或<code>Me</code>)总是一个指针(pointer)或一个引用(reference)。在Rust中，方法前面中的<code>&amp;self</code>是个引用<code>reference</code>，<code>self</code>则是当前对象的一个拷贝。</p><h2 id="Peculiarities-of-Rust-Object-Orientation"><a class="header-anchor" href="#Peculiarities-of-Rust-Object-Orientation">¶</a>Peculiarities of Rust Object-Orientation</h2><p>Rust和其它面向对象语言还有几点不同的地方：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">S::<span class="title function_ invoke__">f2</span>();</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">S</span> &#123; <span class="keyword">fn</span> <span class="title function_">f1</span>() &#123; <span class="built_in">print!</span>(<span class="string">&quot;1&quot;</span>); &#125; &#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">S</span> &#123; &#125;</span><br><span class="line">S::<span class="title function_ invoke__">f1</span>();</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">S</span> &#123; <span class="keyword">fn</span> <span class="title function_">f2</span>() &#123; <span class="built_in">print!</span>(<span class="string">&quot;2&quot;</span>); &#125; <span class="keyword">fn</span> <span class="title function_">_f3</span>() &#123;&#125; &#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">S</span> &#123;&#125;</span><br></pre></td></tr></table></figure><p><code>impl</code>的实现只要在同一个范围，可以不用关心它的位置和顺序。结构体和函数也可以在调用之后再定义。不过为了便于阅读，通常会先声明，后面再使用。</p><p>在同一个范围内，只允许有一个<code>struct S</code>语句；而对于<code>impl S</code>语句可以有多个。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">S1</span> &#123;&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">S2</span> &#123;&#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">S1</span> &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">f</span>() &#123;&#125;</span><br><span class="line">    <span class="comment">//ILLEGAL: fn f(a: i32) &#123;&#125;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">S2</span> &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">f</span>() &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">S1::<span class="title function_ invoke__">f</span>();</span><br><span class="line">S2::<span class="title function_ invoke__">f</span>();</span><br></pre></td></tr></table></figure><p>在Rust中，同一个范围不允许有同名函数。一个类型表示一个范围。因此，对于<code>S1</code>类型，不能有两个<code>f</code>的方法，即使它有不同的参数。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> <span class="title class_">Continent</span> &#123;</span><br><span class="line">    Africa,</span><br><span class="line">    America,</span><br><span class="line">    Asia,</span><br><span class="line">    Europe,</span><br><span class="line">    Oceania,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">Contient</span> &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">name</span>(&amp;<span class="keyword">self</span>) <span class="punctuation">-&gt;</span> &amp;<span class="type">str</span> &#123;</span><br><span class="line">        <span class="keyword">match</span> *<span class="keyword">self</span> &#123;</span><br><span class="line">            Continent::Afria =&gt; <span class="string">&quot;Africa&quot;</span>,</span><br><span class="line">            Continent::America =&gt; <span class="string">&quot;America&quot;</span>,</span><br><span class="line">            Continent::Asia =&gt; <span class="string">&quot;Asia&quot;</span>,</span><br><span class="line">            Continent::Europe =&gt; <span class="string">&quot;Europe&quot;</span>,</span><br><span class="line">            Continent::Oceania =&gt; <span class="string">&quot;Oceania&quot;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, Continent::Asia.<span class="title function_ invoke__">name</span>());</span><br></pre></td></tr></table></figure><p>在Rust中，不仅可以在结构体添加方法，其它任何定义的类型都可以，诸如枚举和元组-结构体。</p><p>但原生数据类型不能直接添加方法。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">impl</span> <span class="title class_">i32</span> &#123;&#125;</span><br></pre></td></tr></table></figure><p>这段代码尝试给<code>i32</code>原生类型添加方法，即使方法体是空的，编译器会报错：“only a single inherent implementation marked with <code>#[lang = &quot;i32&quot;]</code> is allowed for the <code>i32</code> primitive”。意思是说，<code>i32</code>原生类型仅能有一处实现，也就是仅能在语言自身和标准库中提供。</p><p>另外也不能直接对标准库或其它库中的非原生类型添加方法，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">impl</span> <span class="title class_">Vec</span>&lt;<span class="type">i32</span>&gt; &#123;&#125;</span><br></pre></td></tr></table></figure><p>对于这段代码，编译器会报错：“cannot define inherent <code>impl</code> for a type outside of the crate where the type is defined.”。这里的“crate”指一个程序或一个库。因为<code>Vec</code>泛型类型被定义在标准库，这段错误信息告诉你，<code>Vec</code>不能在标准库的外部继承实现。</p><p>对于trait，也不能在标准库或其它库的外部实现，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">impl</span> <span class="title class_">std</span>::iter::<span class="built_in">Iterator</span> <span class="keyword">for</span> <span class="title class_">i32</span> &#123;&#125;</span><br></pre></td></tr></table></figure><p>这段代码，编译器会报错：“only traits defined in the current crate can be implemented for arbitrary types”。意思是说，“Iterator”并没有被声明在你的代码范围内，“i32”没有声明在代码中，trait不能对该类型实现。</p><p>所以，反过来说，定义在可见范围的任何类型、任何trait都可以实现，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">trait</span> <span class="title class_">Tr</span> &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">f1</span>();</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">f2</span>(&amp;<span class="keyword">self</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">Tr</span> <span class="keyword">for</span> <span class="title class_">bool</span> &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">f1</span>() &#123; <span class="built_in">print!</span>(<span class="string">&quot;Tr::f1 &quot;</span>); &#125;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">f2</span>(&amp;<span class="keyword">self</span>) &#123; <span class="built_in">print!</span>(<span class="string">&quot;Tr::f2 &quot;</span>); &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">bool</span>::<span class="title function_ invoke__">f1</span>();</span><br><span class="line"><span class="literal">true</span>.<span class="title function_ invoke__">f2</span>();</span><br></pre></td></tr></table></figure><p>结果打印：“Tr::f1 Tr::f2”。</p><p>任何类型都可以通过trait实现代码，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Pair</span>(<span class="type">u32</span>, <span class="type">u32</span>);</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">std</span>::iter::<span class="built_in">Iterator</span> <span class="keyword">for</span> <span class="title class_">Pair</span> &#123;</span><br><span class="line">    <span class="keyword">type</span> <span class="title class_">Item</span> = <span class="type">u32</span>;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">next</span>(&amp;<span class="keyword">mut</span> <span class="keyword">self</span>) <span class="punctuation">-&gt;</span> <span class="type">Option</span>&lt;<span class="keyword">Self</span>::Item&gt; &#123;</span><br><span class="line">        <span class="literal">None</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">a</span> = <span class="title function_ invoke__">Pair</span>(<span class="number">23u32</span>, <span class="number">34u32</span>);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, a.<span class="title function_ invoke__">next</span>());</span><br></pre></td></tr></table></figure><p>将会打印：“None”。</p><p>首先是“Pair”已经定义，以及“Iterator”定义在标准库中，被用来实现“Pair”类型。两者都在作用域可见并且不冲突。</p><p>总结！</p><ul><li>如果<code>Ty</code>是一个类型，允许有<code>impl Ty</code>，要求<code>Ty</code>被声明在当前crate。</li><li>如果<code>Tr</code>是一个trait，允许有<code>impl Tr for Ty</code>，要求<code>Tr</code>或<code>Ty</code>被声明在当前crate，不能两者都是标准库或其它库的一部分。</li></ul><table><thead><tr><th></th><th><code>Tr</code>在当前rate</th><th><code>Tr</code>在其它crate</th></tr></thead><tbody><tr><td><code>Ty</code>在当前crate</td><td><code>impl Tr for Ty</code> 允许</td><td><code>impl Tr for Ty</code> 允许</td></tr><tr><td><code>Ty</code>在其它crate</td><td><code>impl Tr for Ty</code> 允许</td><td><code>impl Tr for Ty</code> 不合法</td></tr></tbody></table><h2 id="Mutating-Methods"><a class="header-anchor" href="#Mutating-Methods">¶</a>Mutating Methods</h2><p>Rust中，任何不带<code>mut</code>关键字的，都是immutable的。这对于虚拟参数(pseudo-argument)<code>self</code>也一样。如果想通过方法，更改其作用的对象，需要带上关键字<code>mut</code>。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">S</span> &#123; x: <span class="type">u32</span> &#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">S</span> &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">get_x</span>(&amp;<span class="keyword">self</span>) <span class="punctuation">-&gt;</span> <span class="type">u32</span> &#123; <span class="keyword">self</span>.x &#125;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">set_x</span>(&amp;<span class="keyword">mut</span> <span class="keyword">self</span>, x: <span class="type">u32</span>) &#123; <span class="keyword">self</span>.x = x; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">s</span> = S &#123; x: <span class="number">12</span> &#125;;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, s.<span class="title function_ invoke__">get_x</span>());</span><br><span class="line">s.<span class="title function_ invoke__">set_x</span>(<span class="number">17</span>);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, s.<span class="title function_ invoke__">get_x</span>());</span><br></pre></td></tr></table></figure><p><code>C++</code>的等价实现如下，</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">S</span> &#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> x;</span><br><span class="line"><span class="function"><span class="type">unsigned</span> <span class="type">long</span> <span class="title">get_x</span><span class="params">()</span> <span class="type">const</span> </span>&#123; <span class="keyword">return</span> x; &#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">set_x</span><span class="params">(<span class="type">unsigned</span> <span class="type">long</span> x)</span> </span>&#123; <span class="keyword">this</span> -&gt; x = x; &#125;</span><br><span class="line">&#125;;</span><br><span class="line">S s = &#123; <span class="number">12</span> &#125;;</span><br><span class="line">std::cout &lt;&lt; s.<span class="built_in">get_x</span>() &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">s.<span class="built_in">set_x</span>(<span class="number">17</span>);</span><br><span class="line">std::cout &lt;&lt; s.<span class="built_in">get_x</span>() &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Constructors"><a class="header-anchor" href="#Constructors">¶</a>Constructors</h2><p>每次用到构造对象时，我们都需要指定它的所有字段。</p><p>为了独立于方法实现的方式处理对象，某些语言会提供“构造器”这个特性。Rust中也提供了一个或多个方法，不需要接收<code>self</code>参数，但有<code>Self</code>返回的实现。这类方法就是构造器，Rust中没有构造器的明确语法写法，但有一些惯例(convention)。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Number</span> &#123;</span><br><span class="line">x: <span class="type">f64</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">Number</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">new</span>() <span class="punctuation">-&gt;</span> Number &#123; Number &#123; x: <span class="number">0</span>. &#125; &#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">from</span>(x: <span class="type">f64</span>) <span class="punctuation">-&gt;</span> Number &#123; Number &#123; x: x &#125; &#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">value</span>(&amp;<span class="keyword">self</span>) <span class="punctuation">-&gt;</span> <span class="type">f64</span> &#123; <span class="keyword">self</span>.x &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">a</span> = Number::<span class="title function_ invoke__">new</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="variable">b</span> = Number::<span class="title function_ invoke__">from</span>(<span class="number">2.3</span>);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>, a.<span class="title function_ invoke__">value</span>(), b.<span class="title function_ invoke__">value</span>());</span><br></pre></td></tr></table></figure><p><code>new</code>和<code>from</code>方法是构造器。按照惯例，不带参数的构造器命名为<code>new</code>，带有一个参数的构造器命名为<code>from</code>。然而，通常有很多构造器仅带一个参数的；这些构造器中仅有一个命名为<code>from</code>。</p><p>这种惯例在标准库中有实例，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">a</span> = <span class="type">String</span>::<span class="title function_ invoke__">new</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="variable">b</span> = <span class="type">String</span>::<span class="title function_ invoke__">from</span>(<span class="string">&quot;abcd&quot;</span>);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;(&#123;&#125;) (&#123;&#125;);&quot;</span>, a, b);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">c</span> = <span class="type">Vec</span>::&lt;<span class="type">i32</span>&gt;::<span class="title function_ invoke__">new</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="variable">d</span> = <span class="type">Vec</span>::&lt;<span class="type">u8</span>&gt;::<span class="title function_ invoke__">from</span>(<span class="string">&quot;abcd&quot;</span>);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot; &#123;:?&#125; &#123;:?&#125;&quot;</span>, c, d);</span><br></pre></td></tr></table></figure><h2 id="Composition-Instead-of-Inheritance"><a class="header-anchor" href="#Composition-Instead-of-Inheritance">¶</a>Composition Instead of Inheritance</h2><p>面向对象中有三种继承：数据继承、方法实现继承、方法接口继承。Rust中不支持数据继承，因为它会带来很多问题，Rust中使用组合方式来替代数据继承的实现。</p><p>假设我们有一个类型，它表示将字符文本画在屏幕上，另外要创建一个类型表示这个文本的框。为了简单，用控制台打印，替代画文本，用中括号代替这个矩形。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Text</span> &#123; characters: <span class="type">String</span> &#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">Text</span> &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">from</span>(text: &amp;<span class="type">str</span>) <span class="punctuation">-&gt;</span> Text &#123;</span><br><span class="line">        Text &#123; characters: text.<span class="title function_ invoke__">to_string</span>() &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">draw</span>(&amp;<span class="keyword">self</span>) &#123;</span><br><span class="line">        <span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, <span class="keyword">self</span>.characters);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">BoxedText</span> &#123;</span><br><span class="line">    text: Text,</span><br><span class="line">    first: <span class="type">char</span>,</span><br><span class="line">    last: <span class="type">char</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">BoxedText</span> &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">with_text_and_borders</span>(</span><br><span class="line">        text: &amp;<span class="type">str</span>, first: <span class="type">char</span>, last: <span class="type">char</span>) <span class="punctuation">-&gt;</span> BoxedText &#123;</span><br><span class="line">            BoxedText &#123;</span><br><span class="line">                text: Text::<span class="title function_ invoke__">from</span>(text),</span><br><span class="line">                first: first,</span><br><span class="line">                last: last,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">draw</span>(&amp;<span class="keyword">self</span>) &#123;</span><br><span class="line">        <span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, <span class="keyword">self</span>.first);</span><br><span class="line">        <span class="keyword">self</span>.text.<span class="title function_ invoke__">draw</span>();</span><br><span class="line">        <span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, <span class="keyword">self</span>.last);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">greeting</span> = Text::<span class="title function_ invoke__">from</span>(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">greeting.<span class="title function_ invoke__">draw</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="variable">boxed_greeting</span> = </span><br><span class="line">BoxedText::<span class="title function_ invoke__">with_text_and_borders</span>(<span class="string">&quot;Hi&quot;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;, &quot;</span>);</span><br><span class="line">boxed_greeting.<span class="title function_ invoke__">draw</span>();</span><br></pre></td></tr></table></figure><p>第二条语句定义了两个方法：<code>from</code>，它是一个构造器；<code>draw</code>，打印输出字符内容。</p><p>现在想利用已有的结构和方法，来创建一个新的结构<code>BoxedText</code>。它是继承的一种常见方法。</p><p>在Rust中，如其使用继承，你可以创建一个<code>BoxedText</code>结构体来“包含”<code>Text</code>类型对象。然后创建对应的方法封装这个类型<code>with_text_and_borders</code>。这段代码中，代码复用出现在几个地方：</p><ul><li><code>struct BoxedText</code>的第一个字段是<code>Text</code>类型，它复用了数据结构，</li><li><code>BoxedText</code>构造器用到了<code>Text::from(text)</code>，它复用了<code>Text</code>的构造器，</li><li><code>BoxedText</code>的方法体<code>draw</code>内，用到了<code>self.text.draw();</code>。它复用了<code>Text</code>的方法<code>draw</code>，</li></ul><h2 id="Memory-Usage-of-Composition"><a class="header-anchor" href="#Memory-Usage-of-Composition">¶</a>Memory Usage of Composition</h2><p>组合和继承的内存使用没有区别。它们都需要内存，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Base1</span> &#123;</span><br><span class="line">_x: <span class="type">f64</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Base2</span> &#123;&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Derived1</span> &#123;</span><br><span class="line">_b1: Base1,</span><br><span class="line">_b2: Base2,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Derived2</span> &#123;</span><br><span class="line">_d1: Derived1,</span><br><span class="line">_other: <span class="type">f64</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">use</span> std::mem:size_of;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125;&quot;</span>,</span><br><span class="line">size_of::&lt;Base1&gt;(), size_of::&lt;Base2&gt;(),</span><br><span class="line">size_of::&lt;Derived1&gt;(), size_of::&lt;Derived2&gt;());</span><br></pre></td></tr></table></figure><p>打印输出为：“8 0 8 16”。<code>Base1</code>是一个仅包含8字节数的结构体，所以它占8个字节；<code>Base2</code>结构体不包含任何东西，占0个字节；<code>Derived1</code>是一个包含两个结构体的结构体，一个占8，一个占0，总共占8个字节；<code>Derived2</code>是一个包含8字节结构体，以及一个8字节字段，总共占16字节。我们看到内存使用是非常高效的。</p><h2 id="Static-Dispatch"><a class="header-anchor" href="#Static-Dispatch">¶</a>Static Dispatch</h2><p>Rust不是动态语言，所以，下面写法是不允许的，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">draw_text</span>(txt) &#123;</span><br><span class="line">txt.<span class="title function_ invoke__">draw</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里希望，如果<code>txt</code>的类型是<code>Text</code>，则调用<code>Text</code>对应的<code>draw</code>方法；如果<code>txt</code>的类型是<code>BoxedText</code>，则调用<code>BoxedText</code>的方法<code>draw</code>。因为Rust是强静态语言，要实现这个方案，有两种不等价的实现方式，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">trait</span> <span class="title class_">Draw</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">draw</span>(&amp;<span class="keyword">self</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Text</span> &#123; characters: <span class="type">String</span> &#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">Text</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">from</span>(text: &amp;<span class="type">str</span>) <span class="punctuation">-&gt;</span> Text &#123;</span><br><span class="line">Text &#123; characters: text.<span class="title function_ invoke__">to_string</span>() &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">Draw</span> <span class="keyword">for</span> <span class="title class_">Text</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">draw</span>(&amp;<span class="keyword">self</span>) &#123;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, <span class="keyword">self</span>.characters);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">BoxedText</span> &#123;</span><br><span class="line">text: Text,</span><br><span class="line">first: <span class="type">char</span>,</span><br><span class="line">last: <span class="type">char</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">BoxedText</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">with_text_and_borders</span>(text: &amp;<span class="type">str</span>, first: <span class="type">char</span>, last: <span class="type">char</span>) <span class="punctuation">-&gt;</span> BoxedText &#123;</span><br><span class="line">BoxedText &#123;</span><br><span class="line">text: Text::<span class="title function_ invoke__">from</span>(text),</span><br><span class="line">first: first,</span><br><span class="line">last: last,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">Draw</span> <span class="keyword">for</span> <span class="title class_">BoxedText</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">draw</span>(&amp;<span class="keyword">self</span>) &#123;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, <span class="keyword">self</span>.first);</span><br><span class="line"><span class="keyword">self</span>.text.<span class="title function_ invoke__">draw</span>();</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, <span class="keyword">self</span>.last);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">greeting</span> = Text::<span class="title function_ invoke__">from</span>(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">boxed_greeting</span> = </span><br><span class="line">BoxedText::<span class="title function_ invoke__">with_text_and_borders</span>(<span class="string">&quot;Hi&quot;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// SOLUTION 1 //</span></span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">draw_text</span>&lt;T&gt;(txt: T) <span class="keyword">where</span> T: Draw &#123;</span><br><span class="line">txt.<span class="title function_ invoke__">draw</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">draw_text</span>(greeting);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;, &quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">draw_text</span>(boxed_greeting);</span><br></pre></td></tr></table></figure><p>这里定义了泛型函数，并使用<code>where</code>从句确定类型边界。我们需要在这里引申解析静态派遣(static dispatch)这个概念。</p><p>首先声明了<code>Draw</code>，作为一个对象，拥有drawn的能力。</p><p>然后<code>Text</code>和<code>BoxedText</code>类型被声明，有对应的方法，有两个构造函数<code>Text::from</code>和<code>BoxedText::with_text_and_borders</code>；它们的<code>draw</code>函数的实现都继承来自<code>Draw</code>。</p><p>SOLUTION 1中的方法，<code>draw_text</code>泛型方法接收类型参数<code>T</code>，<code>T</code>是任何实现了<code>Draw</code>的类型。</p><p>因此，不乱编译器计数器在哪里调用<code>draw_text</code>函数，它会决定参数的类型，并检测该类型是否实现<code>Draw</code>。如果没有对应类型，编译器报错，若有具体的类型，会生成具体版本的<code>draw_text</code>函数，泛型函数体内的<code>draw</code>方法的调用，会被替换为对应<code>T</code>的实现的<code>draw</code>的方法。</p><p>这种技术称为“静态派遣static dispatch”。在计算机科学中，<code>dispatch</code>表示有几个同名函数时，选择调用哪个函数。在这段程序中，有两个函数命名为<code>draw</code>，因此派遣从两者中选择一个。在该程序中，选择由编译器处理，在编译期，这种派遣是“静态的static”。</p><h2 id="Dynamic-Dispatch"><a class="header-anchor" href="#Dynamic-Dispatch">¶</a>Dynamic Dispatch</h2><p>上面的程序可以稍作改变，改变最后几行代码，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SOLUTION 1/bis //</span></span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">draw_text</span>&lt;T&gt;(txt: &amp;T) <span class="keyword">where</span> T: Draw &#123;</span><br><span class="line">txt.<span class="title function_ invoke__">draw</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">draw_text</span>(&amp;greeting);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;, &quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">draw_text</span>(&amp;boxed_greeeting);</span><br></pre></td></tr></table></figure><p>这里把接收参数，改为了一个reference，即在方法签名的参数带上<code>&amp;</code>，以及两处调用带上<code>&amp;</code>。</p><p>这种方案仍然是静态派遣。因此，可以看到静态派遣工作在值传递(pass-by-value)和引用传递(pass-by-reference)上。</p><p>上面的代码可以改变下，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SOLUTION 2 //</span></span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">draw_text</span>(txt: &amp;Draw) &#123;</span><br><span class="line">txt.<span class="title function_ invoke__">draw</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">draw_text</span>(&amp;greeting);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;, &quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">draw_text</span>(&amp;boxed_greeting);</span><br></pre></td></tr></table></figure><p>该程序保留原来的行为，但使用了另一种技术。仅改变了<code>draw_text</code>的签名，删除了<code>T</code>类型参数，删除了<code>where</code>从句，参数用<code>&amp;Draw</code>替换了<code>&amp;T</code>。现在，由原来的泛型函数，替换为具体的函数，它的参数是对trait的一个引用。</p><p>不同的是，一个trait不是一个类型(type)。你不能声明一个变量或一个函数参数用trait来表示它的类型。但对trait的reference是一个有效的类型。然而，它不是普通的引用。</p><p>在第一个地方，如果它是一个普通引用，它不能将引用，传递<code>Text</code>或<code>BoxedText</code>中函数的参数；但实际上，它是允许的，考虑如下，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">trait</span> <span class="title class_">Tr</span> &#123;&#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">Tr</span> <span class="keyword">for</span> <span class="title class_">bool</span> &#123;&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_a</span>: &amp;Tr = &amp;<span class="literal">true</span>;</span><br></pre></td></tr></table></figure><p>这里<code>bool</code>类型实现了<code>Tr</code>trait，所以<code>&amp;true</code>的引用的值类型是<code>bool</code>，可以初始化给变量<code>_a</code>，<code>_a</code>是<code>Tr</code>的一个引用。</p><p>相反，下面写法是不合法的，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">trait</span> <span class="title class_">Tr</span> &#123;&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_a</span>: &amp;Tr = &amp;<span class="literal">true</span>;</span><br></pre></td></tr></table></figure><p>这里，<code>bool</code> 没有<code>Tr</code>的实现，因此<code>&amp;true</code>这个对<code>bool</code>的值引用，不能被初始化为<code>Tr</code>的引用。</p><p>通常地，任何对类型<code>T</code>的引用，都可以初始化为一个实现<code>T</code>的trait的一个引用。将参数传递给函数，是一种初始化处理，因此任何对类型<code>T</code>的引用，可以作为函数参数进行传递，这个参数引用的<code>trait</code>是<code>T</code>的实现。</p><p>在第二处，如果<code>&amp;Draw</code>是一个普通指针，<code>txt</code>是指针的类型，表达式<code>txt.draw()</code>会调用相同的函数，取决于引用对象<code>txt</code>的名字。如其说需要一个dispatch，实际我们需要的是，当<code>draw_text</code>接收一个<code>Text</code>时，<code>Text</code>类型关联的<code>draw</code>方法被调用；当<code>draw_tet</code>接收一个<code>BoxedText</code>时，<code>BoxedText</code>类型关联的<code>draw</code>方法被调用。</p><p>所以，这里的<code>&amp;Draw</code>并不是一个普通的指针，而一个能够根据引用对象的类型，选择调用方法的指针。这是一种派遣(dispatch)，但发生在运行时，因此叫做“动态派遣(dynamic dispatch)”。</p><p>动态派遣在C++中的通过<code>virtual</code>关键字处理，尽管机制略有不同。</p><h2 id="Implementation-of-References-to-Traits"><a class="header-anchor" href="#Implementation-of-References-to-Traits">¶</a>Implementation of References to Traits</h2><p>回到原来代码关于派遣的问题，将最后几行替换如下代码，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> st::mem::size_of_val;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125; &#123;&#125;, &#123;&#125; &#123;&#125; &#123;&#125;, &quot;</span>,</span><br><span class="line"><span class="title function_ invoke__">size_of_val</span>(&amp;greeting),</span><br><span class="line"><span class="title function_ invoke__">size_of_val</span>(&amp;&amp;greeting),</span><br><span class="line"><span class="title function_ invoke__">size_of_val</span>(&amp;&amp;&amp;greeting),</span><br><span class="line"><span class="title function_ invoke__">size_of_val</span>(&amp;boxed_greeting),</span><br><span class="line"><span class="title function_ invoke__">size_of_val</span>(&amp;&amp;boxed_greeting),</span><br><span class="line"><span class="title function_ invoke__">size_of_val</span>(&amp;&amp;&amp;boxed_greeting));</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">draw_text</span>(txt: &amp;Draw) &#123;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125; &#123;&#125; &quot;</span>,</span><br><span class="line"><span class="title function_ invoke__">size_of_val</span>(txt),</span><br><span class="line"><span class="title function_ invoke__">size_of_val</span>(&amp;txt),</span><br><span class="line"><span class="title function_ invoke__">size_of_val</span>(&amp;&amp;txt));</span><br><span class="line">txt.<span class="title function_ invoke__">draw</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">draw_text</span>(&amp;greeting);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;, &quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">draw_text</span>(&amp;boxed_greeting);</span><br></pre></td></tr></table></figure><p>在64位目标机器上，会打印：“<code>24 8 8, 32 8 8, 24 16 8 Hello, 32 16 8 [Hi]</code>”。</p><p><code>size_of_val</code>定义在标准库的一个泛型函数，接收对象的引用，返回该引用对象的字节大小。</p><p>首先，<code>greeting</code>变量被处理。它的类型是<code>Text</code>结构体，仅包含一个<code>String</code>对象。我们已经探讨过<code>String</code>对象在栈上占24个字节，附带在堆一个缓冲区。这个缓冲区不会在<code>size_of_val</code>函数的计算范围内。</p><p>接着打印<code>Text</code>引用的大小，<code>Text</code>的引用是普通引用，占8个字节。</p><p>类似地，<code>boxed_greeting</code>变量是个结构体，有两个<code>char</code>对象。每个占4个字节，一共有24 + 4 + 4 = 32字节。</p><p>对于表达式<code>&amp;greeting</code>，有类型<code>&amp;Text</code>，它作为参数传递给<code>draw_text</code>函数，该函数实例化<code>txt</code>参数，参数类型是<code>&amp;Draw</code>。</p><p>由于<code>txt</code>是一种引用，所以可以由表达式<code>size_of_val(txt)</code>计算。它会返回引用对象的大小。但就是哪个才是<code>&amp;Draw</code>的引用对象？明显，一定不是<code>Draw</code>，因为<code>Draw</code>不是类型。实际上，在编译期不能确定。它需要运行期，有初始化<code>txt</code>参数的表达式决定。首先，第一次接收的<code>txt</code>参数的引用类型是<code>Text</code>，占24个字节。</p><p>当接收的<code>txt</code>参数的引用类型是<code>BoxedText</code>时，它占32个字节，将被打印。</p><p>回到<code>greeting</code>的调用处，我们发现表达式<code>size_of_val(&amp;txt)</code>的值是16。这很奇怪。这个表达式是求类型<code>&amp;Draw</code>对象的大小，由类型<code>&amp;Text</code>的对象初始化。所以，实际上用了一个常规8字节引用来初始化一个16字节的trait引用？为什么对trait的引用这么大？</p><p>实际上，任何对trait的引用有两个字段。第一个字段，是初始化引用的一个拷贝；第二个字段，是一个指针，用于选择合适“版本”的<code>draw</code>函数，或者说其它函数的动态派遣。它的名字是“虚拟表指针，virtual table pointer”。该名称来源于C++。</p><p>最后，trait的引用的引用被打印，它是个常规引用，所以占8个字节。</p><h2 id="Static-vs-Dynamic-Dispatch"><a class="header-anchor" href="#Static-vs-Dynamic-Dispatch">¶</a>Static vs. Dynamic Dispatch</h2><p>我们可以用静态派遣，也可以用动态派遣，哪个更适合？</p><p>“静态static”意味着“编译期”，“动态dynamic”意味着“运行期”，静态要求更多的编译时间，以及生成更多更快的代码，但如果编译期没有足够的可用信息，动态方案是唯一可能的选择。</p><p>假设将原来的示例程序更改一下需求，要求如果字符串是“b”，则输出带边框，否则，直接输出文本。</p><p>使用静态派遣，程序最后部分会变为，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SOLUTION 1/ter //</span></span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">draw_text</span>&lt;T&gt;(txt: T) <span class="keyword">where</span> T: Draw &#123;</span><br><span class="line">txt.<span class="title function_ invoke__">draw</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">input</span> = <span class="type">String</span>::<span class="title function_ invoke__">new</span>();</span><br><span class="line">std::io::<span class="title function_ invoke__">stdin</span>().<span class="title function_ invoke__">read_line</span>(&amp;<span class="keyword">mut</span> input).<span class="title function_ invoke__">unwrap</span>();</span><br><span class="line"><span class="keyword">if</span> input.<span class="title function_ invoke__">trim</span>() == <span class="string">&quot;b&quot;</span> &#123;</span><br><span class="line"><span class="title function_ invoke__">draw_text</span>(boxed_greeting);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="title function_ invoke__">draw_text</span>(greeting);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当使用动态派遣，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SOLUTION 2/bis //</span></span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">draw_text</span>(txt: &amp;Draw) &#123;</span><br><span class="line">txt.<span class="title function_ invoke__">draw</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">input</span> = <span class="type">String</span>::<span class="title function_ invoke__">new</span>();</span><br><span class="line">std::io::<span class="title function_ invoke__">stdin</span>().<span class="title function_ invoke__">read_line</span>(&amp;<span class="keyword">mut</span> input).<span class="title function_ invoke__">unwrap</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="variable">dr</span>: &amp;Draw = <span class="keyword">if</span> input.<span class="title function_ invoke__">trim</span>() == <span class="string">&quot;b&quot;</span> &#123;</span><br><span class="line">&amp;boxed_greeting</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">&amp;greeting</span><br><span class="line">&#125;;</span><br><span class="line"><span class="title function_ invoke__">draw_text</span>(dr);</span><br></pre></td></tr></table></figure><p>静态派遣要求写几个函数调用，动态派遣允许你将选择的对象派遣给变量<code>dr</code>，然后仅需要些一个函数接收这个变量。</p><p>另外，静态派遣使用了泛型方法，这个技术可以会导致代码膨胀，可能最后会变得越来越慢。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本章覆盖有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不使用trait，继承方式实现关联类型的函数&lt;/li&gt;
&lt;li&gt;Rust面向对象和C++面向对象的区别&lt;/li&gt;
&lt;li&gt;那些trait可以实现哪些type，哪些不能&lt;/li&gt;
&lt;li&gt;如何指定一个方法更改对象&lt;/li&gt;
&lt;li&gt;构造对象的一些约定方法&lt;/li&gt;
&lt;li&gt;为什么Rust不适用数据继承&lt;/li&gt;
&lt;li&gt;什么是静态派遣，什么是动态派遣，如何实现，如何使用&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    <content src="https://galudisu.info/%3Cp%3E%E6%9C%AC%E7%AB%A0%E8%A6%86%E7%9B%96%E6%9C%89%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E4%B8%8D%E4%BD%BF%E7%94%A8trait%EF%BC%8C%E7%BB%A7%E6%89%BF%E6%96%B9%E5%BC%8F%E5%AE%9E%E7%8E%B0%E5%85%B3%E8%81%94%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%87%BD%E6%95%B0%3C/li%3E%3Cli%3ERust%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%92%8CC++%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%8C%BA%E5%88%AB%3C/li%3E%3Cli%3E%E9%82%A3%E4%BA%9Btrait%E5%8F%AF%E4%BB%A5%E5%AE%9E%E7%8E%B0%E5%93%AA%E4%BA%9Btype%EF%BC%8C%E5%93%AA%E4%BA%9B%E4%B8%8D%E8%83%BD%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E6%8C%87%E5%AE%9A%E4%B8%80%E4%B8%AA%E6%96%B9%E6%B3%95%E6%9B%B4%E6%94%B9%E5%AF%B9%E8%B1%A1%3C/li%3E%3Cli%3E%E6%9E%84%E9%80%A0%E5%AF%B9%E8%B1%A1%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BA%A6%E5%AE%9A%E6%96%B9%E6%B3%95%3C/li%3E%3Cli%3E%E4%B8%BA%E4%BB%80%E4%B9%88Rust%E4%B8%8D%E9%80%82%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%A7%E6%89%BF%3C/li%3E%3Cli%3E%E4%BB%80%E4%B9%88%E6%98%AF%E9%9D%99%E6%80%81%E6%B4%BE%E9%81%A3%EF%BC%8C%E4%BB%80%E4%B9%88%E6%98%AF%E5%8A%A8%E6%80%81%E6%B4%BE%E9%81%A3%EF%BC%8C%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%EF%BC%8C%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%3C/li%3E%3C/ul%3E%3Cspan%20id=%22more%22%3E%3C/span%3E%3Ch2%20id=%22Inherent-Implementations%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Inherent-Implementations%22%3E%C2%B6%3C/a%3EInherent%20Implementations%3C/h2%3E%3Cp%3E%E5%89%8D%E9%9D%A2%E7%AB%A0%E8%8A%82%EF%BC%8C%E6%88%91%E4%BB%AC%E7%9C%8B%E5%88%B0%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E4%B8%8B%E9%9D%A2%E7%9A%84%E9%97%AE%E9%A2%98%E3%80%82%E4%BD%A0%E6%9C%89%E4%B8%80%E4%B8%AA%E7%BB%93%E6%9E%84%E4%BD%93%3Ccode%3EStru%3C/code%3E%EF%BC%8C%E7%94%A8%E4%BA%8E%E4%B8%A4%E4%B8%AA%E6%96%B9%E9%9D%A2%EF%BC%9A%E7%94%A8%E4%BD%9C%E5%90%8D%E7%A7%B0%E7%A9%BA%E9%97%B4%EF%BC%8C%E9%87%8C%E9%9D%A2%E6%9C%89%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%3Ccode%3Ef1%3C/code%3E%EF%BC%8C%E7%94%A8%E4%BD%9C%E8%A1%A8%E8%BE%BE%E5%BC%8F%3Ccode%3EStru::f1(500_000)%3C/code%3E%E7%9A%84%E8%B0%83%E7%94%A8%EF%BC%9B%E7%94%A8%E4%BD%9C%E5%88%9B%E5%BB%BA%E5%AE%9E%E4%BE%8B%EF%BC%8C%E5%AE%9E%E4%BE%8B%E5%90%8D%E4%B8%BA%3Ccode%3Es%3C/code%3E%EF%BC%8C%E8%BF%99%E4%B8%AA%E5%AE%9E%E4%BE%8B%E5%8F%AF%E4%BB%A5%E8%B0%83%E7%94%A8%3Ccode%3Ef2%3C/code%3E%E6%96%B9%E6%B3%95%EF%BC%8C%E4%BE%8B%E5%A6%82%3Ccode%3Es.f2(456).x%3C/code%3E%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E19%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E20%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E21%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E22%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E23%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E24%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E25%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E26%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E27%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E28%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etrait%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ETr%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef1%3C/span%3E(a:%20%3Cspan%20class=%22type%22%3Eu32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef2%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E,%20b:%20%3Cspan%20class=%22type%22%3Eu16%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EStru%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20x:%20%3Cspan%20class=%22type%22%3Eu16%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20y:%20%3Cspan%20class=%22type%22%3Eu16%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ETr%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EStru%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef1%3C/span%3E(a:%20%3Cspan%20class=%22type%22%3Eu32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20a%20==%20%3Cspan%20class=%22number%22%3E0%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef2%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E,%20b:%20%3Cspan%20class=%22type%22%3Eu16%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20b%20==%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.x%20||%20b%20==%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.y%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20Stru%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20x:%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.x%20+%20%3Cspan%20class=%22number%22%3E1%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20y:%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.y%20+%20%3Cspan%20class=%22number%22%3E1%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20&amp;#125;%20%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20Stru%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20x:%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.x%20-%20%3Cspan%20class=%22number%22%3E1%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20y:%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.y%20-%20%3Cspan%20class=%22number%22%3E1%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Es%3C/span%3E%20=%20Stru%20&amp;#123;%20x:%20%3Cspan%20class=%22number%22%3E23%3C/span%3E,%20y:%20%3Cspan%20class=%22number%22%3E456%3C/span%3E%20&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20Stru::%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef1%3C/span%3E(%3Cspan%20class=%22number%22%3E500_000%3C/span%3E),%20s.%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef2%3C/span%3E(%3Cspan%20class=%22number%22%3E456%3C/span%3E).x);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E6%89%93%E5%8D%B0%EF%BC%9A%3Ccode%3Efalse%2024%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E9%A6%96%E5%85%88%EF%BC%8C%3Ccode%3ETr%3C/code%3E%E8%A2%AB%E5%A3%B0%E6%98%8E%EF%BC%8C%E5%B8%A6%E6%9C%89%E4%B8%A4%E4%B8%AA%E6%96%B9%E6%B3%95%E7%AD%BE%E5%90%8D%EF%BC%8C%3Ccode%3Ef1%3C/code%3E%E5%92%8C%3Ccode%3Ef2%3C/code%3E%EF%BC%8C%3Ccode%3EStru%3C/code%3E%E7%BB%93%E6%9E%84%E4%BD%93%E8%A2%AB%E5%A3%B0%E6%98%8E%E3%80%82%E7%84%B6%E5%90%8E%EF%BC%8Ctrait%3Ccode%3ETr%3C/code%3E%E6%9C%89%E8%AF%A5%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E5%AE%9E%E7%8E%B0%E3%80%82%E6%9C%80%E5%90%8E%E5%AE%9E%E4%BE%8B%E5%8C%96%E7%BB%93%E6%9E%84%E4%BD%93%E5%8F%98%E9%87%8F%EF%BC%8C%E5%B9%B6%E8%B0%83%E7%94%A8%E8%BF%99%E4%B8%A4%E4%B8%AA%E6%96%B9%E6%B3%95%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E7%A7%8D%E6%A8%A1%E5%BC%8F%E5%BE%88%E5%B8%B8%E8%A7%81%EF%BC%8C%E4%B8%8B%E9%9D%A2%E6%9C%89%E4%B8%80%E7%A7%8D%E7%AE%80%E5%8C%96%E7%9A%84%E5%86%99%E6%B3%95%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E19%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E20%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E21%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E22%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E23%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E24%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EStru%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20x:%20%3Cspan%20class=%22type%22%3Eu16%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20y:%20%3Cspan%20class=%22type%22%3Eu16%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EStru%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef1%3C/span%3E(a:%20%3Cspan%20class=%22type%22%3Eu32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20a%20==%20%3Cspan%20class=%22number%22%3E0%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef2%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E,%20b:%20%3Cspan%20class=%22type%22%3Eu16%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20b%20==%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.x%20||%20b%20==%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.y%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20Stru%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20x:%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.x%20+%20%3Cspan%20class=%22number%22%3E1%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20y:%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.y%20+%20%3Cspan%20class=%22number%22%3E1%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20&amp;#125;%20%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20Stru%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20x:%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.x%20-%20%3Cspan%20class=%22number%22%3E1%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20y:%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.y%20-%20%3Cspan%20class=%22number%22%3E1%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Es%3C/span%3E%20=%20Stru%20&amp;#123;%20x:%20%3Cspan%20class=%22number%22%3E23%3C/span%3E,%20y:%20%3Cspan%20class=%22number%22%3E456%3C/span%3E%20&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20Stru::%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef1%3C/span%3E(%3Cspan%20class=%22number%22%3E500_000%3C/span%3E),%20s.%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef2%3C/span%3E(%3Cspan%20class=%22number%22%3E456%3C/span%3E).x);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E6%AE%B5%E4%BB%A3%E7%A0%81%E5%B0%86trait%E9%83%A8%E5%88%86%E7%A7%BB%E9%99%A4%E4%BA%86%EF%BC%8C%E4%BD%86%E9%9C%80%E8%A6%81%E6%8E%A8%E6%96%ADtrait%E7%9A%84%E5%90%8D%E5%AD%97%EF%BC%9B%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%AF%B9%E4%BA%8E%3Ccode%3Eimpl%3C/code%3E%E8%AF%AD%E5%8F%A5,%E5%AE%83%E7%9B%B4%E6%8E%A5%E4%BD%9C%E7%94%A8%E4%BA%8E%E7%B1%BB%E5%9E%8B%EF%BC%8C%E6%89%80%E4%BB%A5%E4%B8%8D%E9%9C%80%E8%A6%81trait%E3%80%82%E8%BF%99%E7%A7%8D%E7%B1%BB%E5%9E%8B%E6%9C%89%E7%BB%A7%E6%89%BF%E5%AE%9E%E7%8E%B0%E3%80%82%3C/p%3E%3Cp%3E%E4%BB%8E%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9A%84%E8%A7%92%E5%BA%A6%EF%BC%8C%E5%AE%83%E8%A1%A8%E7%A4%BA%EF%BC%9A%E6%88%91%E4%BB%AC%E6%9C%89%E4%B8%80%E4%B8%AA%E8%87%AA%E5%AE%9A%E4%B9%89%E7%B1%BB%E5%9E%8B%EF%BC%8C%3Ccode%3EStru%3C/code%3E%EF%BC%8C%E5%B8%A6%E6%9C%89%E6%9F%90%E4%BA%9B%E6%95%B0%E6%8D%AE%E6%88%90%E5%91%98%EF%BC%8Cx%E5%92%8Cy%EF%BC%9B%E4%BB%A5%E5%8F%8A%E6%9F%90%E4%BA%9B%E6%96%B9%E6%B3%95%EF%BC%8C%3Ccode%3Ef1%3C/code%3E%E5%92%8C%3Ccode%3Ef2%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%3Ccode%3EC++%3C/code%3E%E7%9A%84%E7%B1%BB%E4%BC%BC%E5%AE%9E%E7%8E%B0%E5%A6%82%E4%B8%8B%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20cpp%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E19%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E20%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E21%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E22%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E23%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E24%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E25%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22meta%22%3E#%3Cspan%20class=%22keyword%22%3Einclude%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;lt;iostream&amp;gt;%3C/span%3E%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22function%22%3E%3Cspan%20class=%22type%22%3Eint%3C/span%3E%20%3Cspan%20class=%22title%22%3Emain%3C/span%3E%3Cspan%20class=%22params%22%3E()%3C/span%3E%20%3C/span%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EStru%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22type%22%3Eunsigned%3C/span%3E%20%3Cspan%20class=%22type%22%3Eshort%3C/span%3E%20x;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22type%22%3Eunsigned%3C/span%3E%20%3Cspan%20class=%22type%22%3Eshort%3C/span%3E%20y;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22function%22%3E%3Cspan%20class=%22type%22%3Estatic%3C/span%3E%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E%20%3Cspan%20class=%22title%22%3Ef1%3C/span%3E%3Cspan%20class=%22params%22%3E(%3Cspan%20class=%22type%22%3Eunsigned%3C/span%3E%20%3Cspan%20class=%22type%22%3Elong%3C/span%3E%20a)%3C/span%3E%20%3C/span%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22keyword%22%3Ereturn%3C/span%3E%20a%20==%20%3Cspan%20class=%22number%22%3E0%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22function%22%3EStru%20%3Cspan%20class=%22title%22%3Ef2%3C/span%3E%3Cspan%20class=%22params%22%3E(%3Cspan%20class=%22type%22%3Eunsigned%3C/span%3E%20%3Cspan%20class=%22type%22%3Eshort%3C/span%3E%20b)%3C/span%3E%20%3Cspan%20class=%22type%22%3Econst%3C/span%3E%20%3C/span%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22keyword%22%3Ereturn%3C/span%3E%20b%20==%20x%20||%20b%20==%20y%20?%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20Stru%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(%3Cspan%20class=%22type%22%3Eunsigned%3C/span%3E%20%3Cspan%20class=%22type%22%3Eshort%3C/span%3E)(x%20+%20%3Cspan%20class=%22number%22%3E1%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(%3Cspan%20class=%22type%22%3Eunsigned%3C/span%3E%20%3Cspan%20class=%22type%22%3Eshort%3C/span%3E)(y%20+%20%3Cspan%20class=%22number%22%3E1%3C/span%3E)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20:%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20Stru%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(%3Cspan%20class=%22type%22%3Eunsigned%3C/span%3E%20%3Cspan%20class=%22type%22%3Eshort%3C/span%3E)(x%20-%20%3Cspan%20class=%22number%22%3E1%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(%3Cspan%20class=%22type%22%3Eunsigned%3C/span%3E%20%3Cspan%20class=%22type%22%3Eshort%3C/span%3E)(y%20-%20%3Cspan%20class=%22number%22%3E1%3C/span%3E)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20Stru%20s%20=%20&amp;#123;%20%3Cspan%20class=%22number%22%3E23%3C/span%3E,%20%3Cspan%20class=%22number%22%3E456%3C/span%3E%20&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20std::cout%20&amp;lt;&amp;lt;%20std::boolalpha%20&amp;lt;&amp;lt;%20Stru::%3Cspan%20class=%22built_in%22%3Ef1%3C/span%3E(%3Cspan%20class=%22number%22%3E500000%3C/span%3E)%20&amp;lt;&amp;lt;%20%3Cspan%20class=%22string%22%3E&amp;quot;%20&amp;quot;%3C/span%3E%20&amp;lt;&amp;lt;%20s.%3Cspan%20class=%22built_in%22%3Ef2%3C/span%3E(%3Cspan%20class=%22number%22%3E456%3C/span%3E).x;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3ERust%E6%96%B9%E6%B3%95%E4%B8%AD%EF%BC%8C%E5%8F%82%E6%95%B0%E4%BB%A5%3Ccode%3Eself%3C/code%3E%E5%BC%80%E5%A4%B4%E7%9A%84%E7%A7%B0%E4%B8%BA%E2%80%9C%E5%AF%B9%E8%B1%A1%E6%96%B9%E6%B3%95object%20methods%E2%80%9D%EF%BC%9B%E4%B8%8D%E4%BB%A5%3Ccode%3Eself%3C/code%3E%E5%BC%80%E5%A4%B4%E7%9A%84%E7%A7%B0%E4%B8%BA%E2%80%9C%E7%B1%BB%E6%96%B9%E6%B3%95class%20methods%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E6%96%B9%E6%B3%95%E5%86%85%EF%BC%8C%3Ccode%3Eself%3C/code%3E%E5%85%B3%E9%94%AE%E8%A1%A8%E7%A4%BA%E5%BD%93%E5%89%8D%E5%AF%B9%E8%B1%A1%EF%BC%8C%E7%B1%BB%E4%BC%BC%E5%85%B6%E5%AE%83%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AF%AD%E8%A8%80%E7%9A%84%3Ccode%3Eself%3C/code%3E%E6%88%96%3Ccode%3Ethis%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E8%A6%81%E8%B0%83%E7%94%A8%E5%B8%A6%E6%9C%89%3Ccode%3Eself%3C/code%3E%E5%8F%82%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95%EF%BC%8C%E4%BD%BF%E7%94%A8%E7%82%B9%E6%93%8D%E4%BD%9C%EF%BC%8C%E5%A6%82%3Ccode%3Es.f2(456)%3C/code%3E%EF%BC%9B%E8%B0%83%E7%94%A8%E4%B8%8D%E5%B8%A6%3Ccode%3Eself%3C/code%3E%E5%8F%82%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95%EF%BC%8C%E4%BD%BF%E7%94%A8%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E6%96%B9%E5%BC%8F%EF%BC%8C%E8%AF%AD%E6%B3%95%E5%83%8F%3Ccode%3EStru::f1(500_000)%3C/code%3E%EF%BC%8C%E7%B1%BB%E5%9E%8B%E5%90%8D%E5%90%8E%E5%B8%A6%E4%B8%A4%E4%B8%AA%E5%86%92%E5%8F%B7%EF%BC%8C%E5%85%B6%E5%90%8E%E8%B7%9F%E7%9D%80%E6%96%B9%E6%B3%95%E5%90%8D%E3%80%82%3C/p%3E%3Cp%3E%3Ccode%3ERust%3C/code%3E%E5%92%8C%3Ccode%3EC++%3C/code%3E%E5%AD%97%E6%AE%B5%E8%AE%BF%E9%97%AE%E6%96%B9%E5%BC%8F%E7%9A%84%E4%B8%8D%E5%90%8C%E5%9C%A8%E4%BA%8E%EF%BC%8CRust%E4%B8%AD%E5%BF%85%E9%A1%BB%E5%86%99%3Ccode%3Eself.x%3C/code%3E%EF%BC%8C%E4%BD%86%3Ccode%3EC++%3C/code%3E%E6%88%96%E5%85%B6%E5%AE%83%E8%AF%AD%E8%A8%80%E5%AF%B9%E5%BA%94%E5%8F%AF%E8%83%BD%E6%98%AF%3Ccode%3Ethis%20-&amp;gt;%20x%3C/code%3E%EF%BC%8C%E7%94%9A%E8%87%B3%E5%8F%AF%E4%BB%A5%E4%B8%8D%E5%86%99%EF%BC%8C%E4%BE%8B%E5%A6%82Java%E4%B8%AD%E7%9A%84%E5%AD%97%E6%AE%B5%3Ccode%3Ethis.x%3C/code%3E%E5%92%8C%3Ccode%3Ex%3C/code%3E%E9%83%BD%E4%B8%80%E6%A0%B7%E3%80%82%3C/p%3E%3Cp%3ERust%E5%92%8C%E5%85%B6%E5%AE%83%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AF%AD%E8%A8%80%E7%9A%84%E4%B8%8D%E5%90%8C%E5%9C%A8%E4%BA%8E%EF%BC%8C%E5%A4%A7%E9%83%A8%E5%88%86%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AF%AD%E8%A8%80%E5%AF%B9%E5%BD%93%E5%89%8D%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%8F%82%E8%80%83(%3Ccode%3Ethis%3C/code%3E%E3%80%81%3Ccode%3Eself%3C/code%3E%E6%88%96%3Ccode%3EMe%3C/code%3E)%E6%80%BB%E6%98%AF%E4%B8%80%E4%B8%AA%E6%8C%87%E9%92%88(pointer)%E6%88%96%E4%B8%80%E4%B8%AA%E5%BC%95%E7%94%A8(reference)%E3%80%82%E5%9C%A8Rust%E4%B8%AD%EF%BC%8C%E6%96%B9%E6%B3%95%E5%89%8D%E9%9D%A2%E4%B8%AD%E7%9A%84%3Ccode%3E&amp;amp;self%3C/code%3E%E6%98%AF%E4%B8%AA%E5%BC%95%E7%94%A8%3Ccode%3Ereference%3C/code%3E%EF%BC%8C%3Ccode%3Eself%3C/code%3E%E5%88%99%E6%98%AF%E5%BD%93%E5%89%8D%E5%AF%B9%E8%B1%A1%E7%9A%84%E4%B8%80%E4%B8%AA%E6%8B%B7%E8%B4%9D%E3%80%82%3C/p%3E%3Ch2%20id=%22Peculiarities-of-Rust-Object-Orientation%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Peculiarities-of-Rust-Object-Orientation%22%3E%C2%B6%3C/a%3EPeculiarities%20of%20Rust%20Object-Orientation%3C/h2%3E%3Cp%3ERust%E5%92%8C%E5%85%B6%E5%AE%83%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AF%AD%E8%A8%80%E8%BF%98%E6%9C%89%E5%87%A0%E7%82%B9%E4%B8%8D%E5%90%8C%E7%9A%84%E5%9C%B0%E6%96%B9%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3ES::%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef2%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef1%3C/span%3E()%20&amp;#123;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;1&amp;quot;%3C/span%3E);%20&amp;#125;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20&amp;#123;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ES::%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef1%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef2%3C/span%3E()%20&amp;#123;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;2&amp;quot;%3C/span%3E);%20&amp;#125;%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3E_f3%3C/span%3E()%20&amp;#123;&amp;#125;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20&amp;#123;&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%3Ccode%3Eimpl%3C/code%3E%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8F%AA%E8%A6%81%E5%9C%A8%E5%90%8C%E4%B8%80%E4%B8%AA%E8%8C%83%E5%9B%B4%EF%BC%8C%E5%8F%AF%E4%BB%A5%E4%B8%8D%E7%94%A8%E5%85%B3%E5%BF%83%E5%AE%83%E7%9A%84%E4%BD%8D%E7%BD%AE%E5%92%8C%E9%A1%BA%E5%BA%8F%E3%80%82%E7%BB%93%E6%9E%84%E4%BD%93%E5%92%8C%E5%87%BD%E6%95%B0%E4%B9%9F%E5%8F%AF%E4%BB%A5%E5%9C%A8%E8%B0%83%E7%94%A8%E4%B9%8B%E5%90%8E%E5%86%8D%E5%AE%9A%E4%B9%89%E3%80%82%E4%B8%8D%E8%BF%87%E4%B8%BA%E4%BA%86%E4%BE%BF%E4%BA%8E%E9%98%85%E8%AF%BB%EF%BC%8C%E9%80%9A%E5%B8%B8%E4%BC%9A%E5%85%88%E5%A3%B0%E6%98%8E%EF%BC%8C%E5%90%8E%E9%9D%A2%E5%86%8D%E4%BD%BF%E7%94%A8%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E5%90%8C%E4%B8%80%E4%B8%AA%E8%8C%83%E5%9B%B4%E5%86%85%EF%BC%8C%E5%8F%AA%E5%85%81%E8%AE%B8%E6%9C%89%E4%B8%80%E4%B8%AA%3Ccode%3Estruct%20S%3C/code%3E%E8%AF%AD%E5%8F%A5%EF%BC%9B%E8%80%8C%E5%AF%B9%E4%BA%8E%3Ccode%3Eimpl%20S%3C/code%3E%E8%AF%AD%E5%8F%A5%E5%8F%AF%E4%BB%A5%E6%9C%89%E5%A4%9A%E4%B8%AA%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES1%3C/span%3E%20&amp;#123;&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES2%3C/span%3E%20&amp;#123;&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES1%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E()%20&amp;#123;&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22comment%22%3E/ILLEGAL:%20fn%20f(a:%20i32)%20&amp;#123;&amp;#125;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES2%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E()%20&amp;#123;&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ES1::%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ES2::%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E();%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%9C%A8Rust%E4%B8%AD%EF%BC%8C%E5%90%8C%E4%B8%80%E4%B8%AA%E8%8C%83%E5%9B%B4%E4%B8%8D%E5%85%81%E8%AE%B8%E6%9C%89%E5%90%8C%E5%90%8D%E5%87%BD%E6%95%B0%E3%80%82%E4%B8%80%E4%B8%AA%E7%B1%BB%E5%9E%8B%E8%A1%A8%E7%A4%BA%E4%B8%80%E4%B8%AA%E8%8C%83%E5%9B%B4%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%AF%B9%E4%BA%8E%3Ccode%3ES1%3C/code%3E%E7%B1%BB%E5%9E%8B%EF%BC%8C%E4%B8%8D%E8%83%BD%E6%9C%89%E4%B8%A4%E4%B8%AA%3Ccode%3Ef%3C/code%3E%E7%9A%84%E6%96%B9%E6%B3%95%EF%BC%8C%E5%8D%B3%E4%BD%BF%E5%AE%83%E6%9C%89%E4%B8%8D%E5%90%8C%E7%9A%84%E5%8F%82%E6%95%B0%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E19%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eenum%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EContinent%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20Africa,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20America,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20Asia,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20Europe,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20Oceania,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EContient%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ename%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20&amp;amp;%3Cspan%20class=%22type%22%3Estr%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22keyword%22%3Ematch%3C/span%3E%20*%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20Continent::Afria%20=&amp;gt;%20%3Cspan%20class=%22string%22%3E&amp;quot;Africa&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20Continent::America%20=&amp;gt;%20%3Cspan%20class=%22string%22%3E&amp;quot;America&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20Continent::Asia%20=&amp;gt;%20%3Cspan%20class=%22string%22%3E&amp;quot;Asia&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20Continent::Europe%20=&amp;gt;%20%3Cspan%20class=%22string%22%3E&amp;quot;Europe&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20Continent::Oceania%20=&amp;gt;%20%3Cspan%20class=%22string%22%3E&amp;quot;Oceania&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20Continent::Asia.%3Cspan%20class=%22title%20function_%20invoke__%22%3Ename%3C/span%3E());%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%9C%A8Rust%E4%B8%AD%EF%BC%8C%E4%B8%8D%E4%BB%85%E5%8F%AF%E4%BB%A5%E5%9C%A8%E7%BB%93%E6%9E%84%E4%BD%93%E6%B7%BB%E5%8A%A0%E6%96%B9%E6%B3%95%EF%BC%8C%E5%85%B6%E5%AE%83%E4%BB%BB%E4%BD%95%E5%AE%9A%E4%B9%89%E7%9A%84%E7%B1%BB%E5%9E%8B%E9%83%BD%E5%8F%AF%E4%BB%A5%EF%BC%8C%E8%AF%B8%E5%A6%82%E6%9E%9A%E4%B8%BE%E5%92%8C%E5%85%83%E7%BB%84-%E7%BB%93%E6%9E%84%E4%BD%93%E3%80%82%3C/p%3E%3Cp%3E%E4%BD%86%E5%8E%9F%E7%94%9F%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B8%8D%E8%83%BD%E7%9B%B4%E6%8E%A5%E6%B7%BB%E5%8A%A0%E6%96%B9%E6%B3%95%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3Ei32%3C/span%3E%20&amp;#123;&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E6%AE%B5%E4%BB%A3%E7%A0%81%E5%B0%9D%E8%AF%95%E7%BB%99%3Ccode%3Ei32%3C/code%3E%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%9E%8B%E6%B7%BB%E5%8A%A0%E6%96%B9%E6%B3%95%EF%BC%8C%E5%8D%B3%E4%BD%BF%E6%96%B9%E6%B3%95%E4%BD%93%E6%98%AF%E7%A9%BA%E7%9A%84%EF%BC%8C%E7%BC%96%E8%AF%91%E5%99%A8%E4%BC%9A%E6%8A%A5%E9%94%99%EF%BC%9A%E2%80%9Conly%20a%20single%20inherent%20implementation%20marked%20with%20%3Ccode%3E#[lang%20=%20&amp;quot;i32&amp;quot;]%3C/code%3E%20is%20allowed%20for%20the%20%3Ccode%3Ei32%3C/code%3E%20primitive%E2%80%9D%E3%80%82%E6%84%8F%E6%80%9D%E6%98%AF%E8%AF%B4%EF%BC%8C%3Ccode%3Ei32%3C/code%3E%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%9E%8B%E4%BB%85%E8%83%BD%E6%9C%89%E4%B8%80%E5%A4%84%E5%AE%9E%E7%8E%B0%EF%BC%8C%E4%B9%9F%E5%B0%B1%E6%98%AF%E4%BB%85%E8%83%BD%E5%9C%A8%E8%AF%AD%E8%A8%80%E8%87%AA%E8%BA%AB%E5%92%8C%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%AD%E6%8F%90%E4%BE%9B%E3%80%82%3C/p%3E%3Cp%3E%E5%8F%A6%E5%A4%96%E4%B9%9F%E4%B8%8D%E8%83%BD%E7%9B%B4%E6%8E%A5%E5%AF%B9%E6%A0%87%E5%87%86%E5%BA%93%E6%88%96%E5%85%B6%E5%AE%83%E5%BA%93%E4%B8%AD%E7%9A%84%E9%9D%9E%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%9E%8B%E6%B7%BB%E5%8A%A0%E6%96%B9%E6%B3%95%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E&amp;gt;%20&amp;#123;&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%AF%B9%E4%BA%8E%E8%BF%99%E6%AE%B5%E4%BB%A3%E7%A0%81%EF%BC%8C%E7%BC%96%E8%AF%91%E5%99%A8%E4%BC%9A%E6%8A%A5%E9%94%99%EF%BC%9A%E2%80%9Ccannot%20define%20inherent%20%3Ccode%3Eimpl%3C/code%3E%20for%20a%20type%20outside%20of%20the%20crate%20where%20the%20type%20is%20defined.%E2%80%9D%E3%80%82%E8%BF%99%E9%87%8C%E7%9A%84%E2%80%9Ccrate%E2%80%9D%E6%8C%87%E4%B8%80%E4%B8%AA%E7%A8%8B%E5%BA%8F%E6%88%96%E4%B8%80%E4%B8%AA%E5%BA%93%E3%80%82%E5%9B%A0%E4%B8%BA%3Ccode%3EVec%3C/code%3E%E6%B3%9B%E5%9E%8B%E7%B1%BB%E5%9E%8B%E8%A2%AB%E5%AE%9A%E4%B9%89%E5%9C%A8%E6%A0%87%E5%87%86%E5%BA%93%EF%BC%8C%E8%BF%99%E6%AE%B5%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF%E5%91%8A%E8%AF%89%E4%BD%A0%EF%BC%8C%3Ccode%3EVec%3C/code%3E%E4%B8%8D%E8%83%BD%E5%9C%A8%E6%A0%87%E5%87%86%E5%BA%93%E7%9A%84%E5%A4%96%E9%83%A8%E7%BB%A7%E6%89%BF%E5%AE%9E%E7%8E%B0%E3%80%82%3C/p%3E%3Cp%3E%E5%AF%B9%E4%BA%8Etrait%EF%BC%8C%E4%B9%9F%E4%B8%8D%E8%83%BD%E5%9C%A8%E6%A0%87%E5%87%86%E5%BA%93%E6%88%96%E5%85%B6%E5%AE%83%E5%BA%93%E7%9A%84%E5%A4%96%E9%83%A8%E5%AE%9E%E7%8E%B0%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3Estd%3C/span%3E::iter::%3Cspan%20class=%22built_in%22%3EIterator%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3Ei32%3C/span%3E%20&amp;#123;&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E6%AE%B5%E4%BB%A3%E7%A0%81%EF%BC%8C%E7%BC%96%E8%AF%91%E5%99%A8%E4%BC%9A%E6%8A%A5%E9%94%99%EF%BC%9A%E2%80%9Conly%20traits%20defined%20in%20the%20current%20crate%20can%20be%20implemented%20for%20arbitrary%20types%E2%80%9D%E3%80%82%E6%84%8F%E6%80%9D%E6%98%AF%E8%AF%B4%EF%BC%8C%E2%80%9CIterator%E2%80%9D%E5%B9%B6%E6%B2%A1%E6%9C%89%E8%A2%AB%E5%A3%B0%E6%98%8E%E5%9C%A8%E4%BD%A0%E7%9A%84%E4%BB%A3%E7%A0%81%E8%8C%83%E5%9B%B4%E5%86%85%EF%BC%8C%E2%80%9Ci32%E2%80%9D%E6%B2%A1%E6%9C%89%E5%A3%B0%E6%98%8E%E5%9C%A8%E4%BB%A3%E7%A0%81%E4%B8%AD%EF%BC%8Ctrait%E4%B8%8D%E8%83%BD%E5%AF%B9%E8%AF%A5%E7%B1%BB%E5%9E%8B%E5%AE%9E%E7%8E%B0%E3%80%82%3C/p%3E%3Cp%3E%E6%89%80%E4%BB%A5%EF%BC%8C%E5%8F%8D%E8%BF%87%E6%9D%A5%E8%AF%B4%EF%BC%8C%E5%AE%9A%E4%B9%89%E5%9C%A8%E5%8F%AF%E8%A7%81%E8%8C%83%E5%9B%B4%E7%9A%84%E4%BB%BB%E4%BD%95%E7%B1%BB%E5%9E%8B%E3%80%81%E4%BB%BB%E4%BD%95trait%E9%83%BD%E5%8F%AF%E4%BB%A5%E5%AE%9E%E7%8E%B0%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etrait%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ETr%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef1%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef2%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ETr%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3Ebool%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef1%3C/span%3E()%20&amp;#123;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Tr::f1%20&amp;quot;%3C/span%3E);%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef2%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20&amp;#123;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Tr::f2%20&amp;quot;%3C/span%3E);%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22type%22%3Ebool%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef1%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef2%3C/span%3E();%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9CTr::f1%20Tr::f2%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E4%BB%BB%E4%BD%95%E7%B1%BB%E5%9E%8B%E9%83%BD%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87trait%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%A0%81%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EPair%3C/span%3E(%3Cspan%20class=%22type%22%3Eu32%3C/span%3E,%20%3Cspan%20class=%22type%22%3Eu32%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3Estd%3C/span%3E::iter::%3Cspan%20class=%22built_in%22%3EIterator%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EPair%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Etype%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EItem%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3Eu32%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Enext%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3EOption%3C/span%3E&amp;lt;%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E::Item&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22literal%22%3ENone%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3EPair%3C/span%3E(%3Cspan%20class=%22number%22%3E23u32%3C/span%3E,%20%3Cspan%20class=%22number%22%3E34u32%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20a.%3Cspan%20class=%22title%20function_%20invoke__%22%3Enext%3C/span%3E());%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%B0%86%E4%BC%9A%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9CNone%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E9%A6%96%E5%85%88%E6%98%AF%E2%80%9CPair%E2%80%9D%E5%B7%B2%E7%BB%8F%E5%AE%9A%E4%B9%89%EF%BC%8C%E4%BB%A5%E5%8F%8A%E2%80%9CIterator%E2%80%9D%E5%AE%9A%E4%B9%89%E5%9C%A8%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%AD%EF%BC%8C%E8%A2%AB%E7%94%A8%E6%9D%A5%E5%AE%9E%E7%8E%B0%E2%80%9CPair%E2%80%9D%E7%B1%BB%E5%9E%8B%E3%80%82%E4%B8%A4%E8%80%85%E9%83%BD%E5%9C%A8%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%8F%AF%E8%A7%81%E5%B9%B6%E4%B8%94%E4%B8%8D%E5%86%B2%E7%AA%81%E3%80%82%3C/p%3E%3Cp%3E%E6%80%BB%E7%BB%93%EF%BC%81%3C/p%3E%3Cul%3E%3Cli%3E%E5%A6%82%E6%9E%9C%3Ccode%3ETy%3C/code%3E%E6%98%AF%E4%B8%80%E4%B8%AA%E7%B1%BB%E5%9E%8B%EF%BC%8C%E5%85%81%E8%AE%B8%E6%9C%89%3Ccode%3Eimpl%20Ty%3C/code%3E%EF%BC%8C%E8%A6%81%E6%B1%82%3Ccode%3ETy%3C/code%3E%E8%A2%AB%E5%A3%B0%E6%98%8E%E5%9C%A8%E5%BD%93%E5%89%8Dcrate%E3%80%82%3C/li%3E%3Cli%3E%E5%A6%82%E6%9E%9C%3Ccode%3ETr%3C/code%3E%E6%98%AF%E4%B8%80%E4%B8%AAtrait%EF%BC%8C%E5%85%81%E8%AE%B8%E6%9C%89%3Ccode%3Eimpl%20Tr%20for%20Ty%3C/code%3E%EF%BC%8C%E8%A6%81%E6%B1%82%3Ccode%3ETr%3C/code%3E%E6%88%96%3Ccode%3ETy%3C/code%3E%E8%A2%AB%E5%A3%B0%E6%98%8E%E5%9C%A8%E5%BD%93%E5%89%8Dcrate%EF%BC%8C%E4%B8%8D%E8%83%BD%E4%B8%A4%E8%80%85%E9%83%BD%E6%98%AF%E6%A0%87%E5%87%86%E5%BA%93%E6%88%96%E5%85%B6%E5%AE%83%E5%BA%93%E7%9A%84%E4%B8%80%E9%83%A8%E5%88%86%E3%80%82%3C/li%3E%3C/ul%3E%3Ctable%3E%3Cthead%3E%3Ctr%3E%3Cth%3E%3C/th%3E%3Cth%3E%3Ccode%3ETr%3C/code%3E%E5%9C%A8%E5%BD%93%E5%89%8Drate%3C/th%3E%3Cth%3E%3Ccode%3ETr%3C/code%3E%E5%9C%A8%E5%85%B6%E5%AE%83crate%3C/th%3E%3C/tr%3E%3C/thead%3E%3Ctbody%3E%3Ctr%3E%3Ctd%3E%3Ccode%3ETy%3C/code%3E%E5%9C%A8%E5%BD%93%E5%89%8Dcrate%3C/td%3E%3Ctd%3E%3Ccode%3Eimpl%20Tr%20for%20Ty%3C/code%3E%20%E5%85%81%E8%AE%B8%3C/td%3E%3Ctd%3E%3Ccode%3Eimpl%20Tr%20for%20Ty%3C/code%3E%20%E5%85%81%E8%AE%B8%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%3E%3Ccode%3ETy%3C/code%3E%E5%9C%A8%E5%85%B6%E5%AE%83crate%3C/td%3E%3Ctd%3E%3Ccode%3Eimpl%20Tr%20for%20Ty%3C/code%3E%20%E5%85%81%E8%AE%B8%3C/td%3E%3Ctd%3E%3Ccode%3Eimpl%20Tr%20for%20Ty%3C/code%3E%20%E4%B8%8D%E5%90%88%E6%B3%95%3C/td%3E%3C/tr%3E%3C/tbody%3E%3C/table%3E%3Ch2%20id=%22Mutating-Methods%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Mutating-Methods%22%3E%C2%B6%3C/a%3EMutating%20Methods%3C/h2%3E%3Cp%3ERust%E4%B8%AD%EF%BC%8C%E4%BB%BB%E4%BD%95%E4%B8%8D%E5%B8%A6%3Ccode%3Emut%3C/code%3E%E5%85%B3%E9%94%AE%E5%AD%97%E7%9A%84%EF%BC%8C%E9%83%BD%E6%98%AFimmutable%E7%9A%84%E3%80%82%E8%BF%99%E5%AF%B9%E4%BA%8E%E8%99%9A%E6%8B%9F%E5%8F%82%E6%95%B0(pseudo-argument)%3Ccode%3Eself%3C/code%3E%E4%B9%9F%E4%B8%80%E6%A0%B7%E3%80%82%E5%A6%82%E6%9E%9C%E6%83%B3%E9%80%9A%E8%BF%87%E6%96%B9%E6%B3%95%EF%BC%8C%E6%9B%B4%E6%94%B9%E5%85%B6%E4%BD%9C%E7%94%A8%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E9%9C%80%E8%A6%81%E5%B8%A6%E4%B8%8A%E5%85%B3%E9%94%AE%E5%AD%97%3Ccode%3Emut%3C/code%3E%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20&amp;#123;%20x:%20%3Cspan%20class=%22type%22%3Eu32%3C/span%3E%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eget_x%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Eu32%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.x%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eset_x%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E,%20x:%20%3Cspan%20class=%22type%22%3Eu32%3C/span%3E)%20&amp;#123;%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.x%20=%20x;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Es%3C/span%3E%20=%20S%20&amp;#123;%20x:%20%3Cspan%20class=%22number%22%3E12%3C/span%3E%20&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20s.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eget_x%3C/span%3E());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Es.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eset_x%3C/span%3E(%3Cspan%20class=%22number%22%3E17%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20s.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eget_x%3C/span%3E());%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%3Ccode%3EC++%3C/code%3E%E7%9A%84%E7%AD%89%E4%BB%B7%E5%AE%9E%E7%8E%B0%E5%A6%82%E4%B8%8B%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20cpp%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22meta%22%3E#%3Cspan%20class=%22keyword%22%3Einclude%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;lt;iostream&amp;gt;%3C/span%3E%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22function%22%3E%3Cspan%20class=%22type%22%3Eint%3C/span%3E%20%3Cspan%20class=%22title%22%3Emain%3C/span%3E%3Cspan%20class=%22params%22%3E()%3C/span%3E%20%3C/span%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22type%22%3Eunsigned%3C/span%3E%20%3Cspan%20class=%22type%22%3Elong%3C/span%3E%20x;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22function%22%3E%3Cspan%20class=%22type%22%3Eunsigned%3C/span%3E%20%3Cspan%20class=%22type%22%3Elong%3C/span%3E%20%3Cspan%20class=%22title%22%3Eget_x%3C/span%3E%3Cspan%20class=%22params%22%3E()%3C/span%3E%20%3Cspan%20class=%22type%22%3Econst%3C/span%3E%20%3C/span%3E&amp;#123;%20%3Cspan%20class=%22keyword%22%3Ereturn%3C/span%3E%20x;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22function%22%3E%3Cspan%20class=%22type%22%3Evoid%3C/span%3E%20%3Cspan%20class=%22title%22%3Eset_x%3C/span%3E%3Cspan%20class=%22params%22%3E(%3Cspan%20class=%22type%22%3Eunsigned%3C/span%3E%20%3Cspan%20class=%22type%22%3Elong%3C/span%3E%20x)%3C/span%3E%20%3C/span%3E&amp;#123;%20%3Cspan%20class=%22keyword%22%3Ethis%3C/span%3E%20-&amp;gt;%20x%20=%20x;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ES%20s%20=%20&amp;#123;%20%3Cspan%20class=%22number%22%3E12%3C/span%3E%20&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Estd::cout%20&amp;lt;&amp;lt;%20s.%3Cspan%20class=%22built_in%22%3Eget_x%3C/span%3E()%20&amp;lt;&amp;lt;%20%3Cspan%20class=%22string%22%3E&amp;quot;%20&amp;quot;%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Es.%3Cspan%20class=%22built_in%22%3Eset_x%3C/span%3E(%3Cspan%20class=%22number%22%3E17%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Estd::cout%20&amp;lt;&amp;lt;%20s.%3Cspan%20class=%22built_in%22%3Eget_x%3C/span%3E()%20&amp;lt;&amp;lt;%20%3Cspan%20class=%22string%22%3E&amp;quot;%20&amp;quot;%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Ch2%20id=%22Constructors%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Constructors%22%3E%C2%B6%3C/a%3EConstructors%3C/h2%3E%3Cp%3E%E6%AF%8F%E6%AC%A1%E7%94%A8%E5%88%B0%E6%9E%84%E9%80%A0%E5%AF%B9%E8%B1%A1%E6%97%B6%EF%BC%8C%E6%88%91%E4%BB%AC%E9%83%BD%E9%9C%80%E8%A6%81%E6%8C%87%E5%AE%9A%E5%AE%83%E7%9A%84%E6%89%80%E6%9C%89%E5%AD%97%E6%AE%B5%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%BA%E4%BA%86%E7%8B%AC%E7%AB%8B%E4%BA%8E%E6%96%B9%E6%B3%95%E5%AE%9E%E7%8E%B0%E7%9A%84%E6%96%B9%E5%BC%8F%E5%A4%84%E7%90%86%E5%AF%B9%E8%B1%A1%EF%BC%8C%E6%9F%90%E4%BA%9B%E8%AF%AD%E8%A8%80%E4%BC%9A%E6%8F%90%E4%BE%9B%E2%80%9C%E6%9E%84%E9%80%A0%E5%99%A8%E2%80%9D%E8%BF%99%E4%B8%AA%E7%89%B9%E6%80%A7%E3%80%82Rust%E4%B8%AD%E4%B9%9F%E6%8F%90%E4%BE%9B%E4%BA%86%E4%B8%80%E4%B8%AA%E6%88%96%E5%A4%9A%E4%B8%AA%E6%96%B9%E6%B3%95%EF%BC%8C%E4%B8%8D%E9%9C%80%E8%A6%81%E6%8E%A5%E6%94%B6%3Ccode%3Eself%3C/code%3E%E5%8F%82%E6%95%B0%EF%BC%8C%E4%BD%86%E6%9C%89%3Ccode%3ESelf%3C/code%3E%E8%BF%94%E5%9B%9E%E7%9A%84%E5%AE%9E%E7%8E%B0%E3%80%82%E8%BF%99%E7%B1%BB%E6%96%B9%E6%B3%95%E5%B0%B1%E6%98%AF%E6%9E%84%E9%80%A0%E5%99%A8%EF%BC%8CRust%E4%B8%AD%E6%B2%A1%E6%9C%89%E6%9E%84%E9%80%A0%E5%99%A8%E7%9A%84%E6%98%8E%E7%A1%AE%E8%AF%AD%E6%B3%95%E5%86%99%E6%B3%95%EF%BC%8C%E4%BD%86%E6%9C%89%E4%B8%80%E4%BA%9B%E6%83%AF%E4%BE%8B(convention)%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ENumber%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ex:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ENumber%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Enew%3C/span%3E()%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20Number%20&amp;#123;%20Number%20&amp;#123;%20x:%20%3Cspan%20class=%22number%22%3E0%3C/span%3E.%20&amp;#125;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Efrom%3C/span%3E(x:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20Number%20&amp;#123;%20Number%20&amp;#123;%20x:%20x%20&amp;#125;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Evalue%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.x%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20Number::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eb%3C/span%3E%20=%20Number::%3Cspan%20class=%22title%20function_%20invoke__%22%3Efrom%3C/span%3E(%3Cspan%20class=%22number%22%3E2.3%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20a.%3Cspan%20class=%22title%20function_%20invoke__%22%3Evalue%3C/span%3E(),%20b.%3Cspan%20class=%22title%20function_%20invoke__%22%3Evalue%3C/span%3E());%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%3Ccode%3Enew%3C/code%3E%E5%92%8C%3Ccode%3Efrom%3C/code%3E%E6%96%B9%E6%B3%95%E6%98%AF%E6%9E%84%E9%80%A0%E5%99%A8%E3%80%82%E6%8C%89%E7%85%A7%E6%83%AF%E4%BE%8B%EF%BC%8C%E4%B8%8D%E5%B8%A6%E5%8F%82%E6%95%B0%E7%9A%84%E6%9E%84%E9%80%A0%E5%99%A8%E5%91%BD%E5%90%8D%E4%B8%BA%3Ccode%3Enew%3C/code%3E%EF%BC%8C%E5%B8%A6%E6%9C%89%E4%B8%80%E4%B8%AA%E5%8F%82%E6%95%B0%E7%9A%84%E6%9E%84%E9%80%A0%E5%99%A8%E5%91%BD%E5%90%8D%E4%B8%BA%3Ccode%3Efrom%3C/code%3E%E3%80%82%E7%84%B6%E8%80%8C%EF%BC%8C%E9%80%9A%E5%B8%B8%E6%9C%89%E5%BE%88%E5%A4%9A%E6%9E%84%E9%80%A0%E5%99%A8%E4%BB%85%E5%B8%A6%E4%B8%80%E4%B8%AA%E5%8F%82%E6%95%B0%E7%9A%84%EF%BC%9B%E8%BF%99%E4%BA%9B%E6%9E%84%E9%80%A0%E5%99%A8%E4%B8%AD%E4%BB%85%E6%9C%89%E4%B8%80%E4%B8%AA%E5%91%BD%E5%90%8D%E4%B8%BA%3Ccode%3Efrom%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E7%A7%8D%E6%83%AF%E4%BE%8B%E5%9C%A8%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%AD%E6%9C%89%E5%AE%9E%E4%BE%8B%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3EString%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eb%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3EString%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3Efrom%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;abcd&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;(&amp;#123;&amp;#125;)%20(&amp;#123;&amp;#125;);&amp;quot;%3C/span%3E,%20a,%20b);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ec%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E::&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E&amp;gt;::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ed%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E::&amp;lt;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E&amp;gt;::%3Cspan%20class=%22title%20function_%20invoke__%22%3Efrom%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;abcd&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;%20&amp;#123;:?&amp;#125;%20&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20c,%20d);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Ch2%20id=%22Composition-Instead-of-Inheritance%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Composition-Instead-of-Inheritance%22%3E%C2%B6%3C/a%3EComposition%20Instead%20of%20Inheritance%3C/h2%3E%3Cp%3E%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E4%B8%AD%E6%9C%89%E4%B8%89%E7%A7%8D%E7%BB%A7%E6%89%BF%EF%BC%9A%E6%95%B0%E6%8D%AE%E7%BB%A7%E6%89%BF%E3%80%81%E6%96%B9%E6%B3%95%E5%AE%9E%E7%8E%B0%E7%BB%A7%E6%89%BF%E3%80%81%E6%96%B9%E6%B3%95%E6%8E%A5%E5%8F%A3%E7%BB%A7%E6%89%BF%E3%80%82Rust%E4%B8%AD%E4%B8%8D%E6%94%AF%E6%8C%81%E6%95%B0%E6%8D%AE%E7%BB%A7%E6%89%BF%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E4%BC%9A%E5%B8%A6%E6%9D%A5%E5%BE%88%E5%A4%9A%E9%97%AE%E9%A2%98%EF%BC%8CRust%E4%B8%AD%E4%BD%BF%E7%94%A8%E7%BB%84%E5%90%88%E6%96%B9%E5%BC%8F%E6%9D%A5%E6%9B%BF%E4%BB%A3%E6%95%B0%E6%8D%AE%E7%BB%A7%E6%89%BF%E7%9A%84%E5%AE%9E%E7%8E%B0%E3%80%82%3C/p%3E%3Cp%3E%E5%81%87%E8%AE%BE%E6%88%91%E4%BB%AC%E6%9C%89%E4%B8%80%E4%B8%AA%E7%B1%BB%E5%9E%8B%EF%BC%8C%E5%AE%83%E8%A1%A8%E7%A4%BA%E5%B0%86%E5%AD%97%E7%AC%A6%E6%96%87%E6%9C%AC%E7%94%BB%E5%9C%A8%E5%B1%8F%E5%B9%95%E4%B8%8A%EF%BC%8C%E5%8F%A6%E5%A4%96%E8%A6%81%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%B1%BB%E5%9E%8B%E8%A1%A8%E7%A4%BA%E8%BF%99%E4%B8%AA%E6%96%87%E6%9C%AC%E7%9A%84%E6%A1%86%E3%80%82%E4%B8%BA%E4%BA%86%E7%AE%80%E5%8D%95%EF%BC%8C%E7%94%A8%E6%8E%A7%E5%88%B6%E5%8F%B0%E6%89%93%E5%8D%B0%EF%BC%8C%E6%9B%BF%E4%BB%A3%E7%94%BB%E6%96%87%E6%9C%AC%EF%BC%8C%E7%94%A8%E4%B8%AD%E6%8B%AC%E5%8F%B7%E4%BB%A3%E6%9B%BF%E8%BF%99%E4%B8%AA%E7%9F%A9%E5%BD%A2%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E19%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E20%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E21%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E22%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E23%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E24%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E25%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E26%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E27%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E28%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E29%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E30%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E31%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E32%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E33%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E34%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E35%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EText%3C/span%3E%20&amp;#123;%20characters:%20%3Cspan%20class=%22type%22%3EString%3C/span%3E%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EText%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Efrom%3C/span%3E(text:%20&amp;amp;%3Cspan%20class=%22type%22%3Estr%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20Text%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20Text%20&amp;#123;%20characters:%20text.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E()%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edraw%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.characters);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EBoxedText%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20text:%20Text,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20first:%20%3Cspan%20class=%22type%22%3Echar%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20last:%20%3Cspan%20class=%22type%22%3Echar%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EBoxedText%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ewith_text_and_borders%3C/span%3E(%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20text:%20&amp;amp;%3Cspan%20class=%22type%22%3Estr%3C/span%3E,%20first:%20%3Cspan%20class=%22type%22%3Echar%3C/span%3E,%20last:%20%3Cspan%20class=%22type%22%3Echar%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20BoxedText%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20BoxedText%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20text:%20Text::%3Cspan%20class=%22title%20function_%20invoke__%22%3Efrom%3C/span%3E(text),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20first:%20first,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20last:%20last,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edraw%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.first);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.text.%3Cspan%20class=%22title%20function_%20invoke__%22%3Edraw%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.last);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Egreeting%3C/span%3E%20=%20Text::%3Cspan%20class=%22title%20function_%20invoke__%22%3Efrom%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Hello&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Egreeting.%3Cspan%20class=%22title%20function_%20invoke__%22%3Edraw%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eboxed_greeting%3C/span%3E%20=%20%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EBoxedText::%3Cspan%20class=%22title%20function_%20invoke__%22%3Ewith_text_and_borders%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Hi&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;[&amp;#x27;%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;]&amp;#x27;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;,%20&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eboxed_greeting.%3Cspan%20class=%22title%20function_%20invoke__%22%3Edraw%3C/span%3E();%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%AC%AC%E4%BA%8C%E6%9D%A1%E8%AF%AD%E5%8F%A5%E5%AE%9A%E4%B9%89%E4%BA%86%E4%B8%A4%E4%B8%AA%E6%96%B9%E6%B3%95%EF%BC%9A%3Ccode%3Efrom%3C/code%3E%EF%BC%8C%E5%AE%83%E6%98%AF%E4%B8%80%E4%B8%AA%E6%9E%84%E9%80%A0%E5%99%A8%EF%BC%9B%3Ccode%3Edraw%3C/code%3E%EF%BC%8C%E6%89%93%E5%8D%B0%E8%BE%93%E5%87%BA%E5%AD%97%E7%AC%A6%E5%86%85%E5%AE%B9%E3%80%82%3C/p%3E%3Cp%3E%E7%8E%B0%E5%9C%A8%E6%83%B3%E5%88%A9%E7%94%A8%E5%B7%B2%E6%9C%89%E7%9A%84%E7%BB%93%E6%9E%84%E5%92%8C%E6%96%B9%E6%B3%95%EF%BC%8C%E6%9D%A5%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%96%B0%E7%9A%84%E7%BB%93%E6%9E%84%3Ccode%3EBoxedText%3C/code%3E%E3%80%82%E5%AE%83%E6%98%AF%E7%BB%A7%E6%89%BF%E7%9A%84%E4%B8%80%E7%A7%8D%E5%B8%B8%E8%A7%81%E6%96%B9%E6%B3%95%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8Rust%E4%B8%AD%EF%BC%8C%E5%A6%82%E5%85%B6%E4%BD%BF%E7%94%A8%E7%BB%A7%E6%89%BF%EF%BC%8C%E4%BD%A0%E5%8F%AF%E4%BB%A5%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%3Ccode%3EBoxedText%3C/code%3E%E7%BB%93%E6%9E%84%E4%BD%93%E6%9D%A5%E2%80%9C%E5%8C%85%E5%90%AB%E2%80%9D%3Ccode%3EText%3C/code%3E%E7%B1%BB%E5%9E%8B%E5%AF%B9%E8%B1%A1%E3%80%82%E7%84%B6%E5%90%8E%E5%88%9B%E5%BB%BA%E5%AF%B9%E5%BA%94%E7%9A%84%E6%96%B9%E6%B3%95%E5%B0%81%E8%A3%85%E8%BF%99%E4%B8%AA%E7%B1%BB%E5%9E%8B%3Ccode%3Ewith_text_and_borders%3C/code%3E%E3%80%82%E8%BF%99%E6%AE%B5%E4%BB%A3%E7%A0%81%E4%B8%AD%EF%BC%8C%E4%BB%A3%E7%A0%81%E5%A4%8D%E7%94%A8%E5%87%BA%E7%8E%B0%E5%9C%A8%E5%87%A0%E4%B8%AA%E5%9C%B0%E6%96%B9%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%3Ccode%3Estruct%20BoxedText%3C/code%3E%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%AD%97%E6%AE%B5%E6%98%AF%3Ccode%3EText%3C/code%3E%E7%B1%BB%E5%9E%8B%EF%BC%8C%E5%AE%83%E5%A4%8D%E7%94%A8%E4%BA%86%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%EF%BC%8C%3C/li%3E%3Cli%3E%3Ccode%3EBoxedText%3C/code%3E%E6%9E%84%E9%80%A0%E5%99%A8%E7%94%A8%E5%88%B0%E4%BA%86%3Ccode%3EText::from(text)%3C/code%3E%EF%BC%8C%E5%AE%83%E5%A4%8D%E7%94%A8%E4%BA%86%3Ccode%3EText%3C/code%3E%E7%9A%84%E6%9E%84%E9%80%A0%E5%99%A8%EF%BC%8C%3C/li%3E%3Cli%3E%3Ccode%3EBoxedText%3C/code%3E%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%93%3Ccode%3Edraw%3C/code%3E%E5%86%85%EF%BC%8C%E7%94%A8%E5%88%B0%E4%BA%86%3Ccode%3Eself.text.draw();%3C/code%3E%E3%80%82%E5%AE%83%E5%A4%8D%E7%94%A8%E4%BA%86%3Ccode%3EText%3C/code%3E%E7%9A%84%E6%96%B9%E6%B3%95%3Ccode%3Edraw%3C/code%3E%EF%BC%8C%3C/li%3E%3C/ul%3E%3Ch2%20id=%22Memory-Usage-of-Composition%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Memory-Usage-of-Composition%22%3E%C2%B6%3C/a%3EMemory%20Usage%20of%20Composition%3C/h2%3E%3Cp%3E%E7%BB%84%E5%90%88%E5%92%8C%E7%BB%A7%E6%89%BF%E7%9A%84%E5%86%85%E5%AD%98%E4%BD%BF%E7%94%A8%E6%B2%A1%E6%9C%89%E5%8C%BA%E5%88%AB%E3%80%82%E5%AE%83%E4%BB%AC%E9%83%BD%E9%9C%80%E8%A6%81%E5%86%85%E5%AD%98%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EBase1%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_x:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EBase2%3C/span%3E%20&amp;#123;&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EDerived1%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_b1:%20Base1,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_b2:%20Base2,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EDerived2%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_d1:%20Derived1,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_other:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Euse%3C/span%3E%20std::mem:size_of;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Esize_of::&amp;lt;Base1&amp;gt;(),%20size_of::&amp;lt;Base2&amp;gt;(),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Esize_of::&amp;lt;Derived1&amp;gt;(),%20size_of::&amp;lt;Derived2&amp;gt;());%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%89%93%E5%8D%B0%E8%BE%93%E5%87%BA%E4%B8%BA%EF%BC%9A%E2%80%9C8%200%208%2016%E2%80%9D%E3%80%82%3Ccode%3EBase1%3C/code%3E%E6%98%AF%E4%B8%80%E4%B8%AA%E4%BB%85%E5%8C%85%E5%90%AB8%E5%AD%97%E8%8A%82%E6%95%B0%E7%9A%84%E7%BB%93%E6%9E%84%E4%BD%93%EF%BC%8C%E6%89%80%E4%BB%A5%E5%AE%83%E5%8D%A08%E4%B8%AA%E5%AD%97%E8%8A%82%EF%BC%9B%3Ccode%3EBase2%3C/code%3E%E7%BB%93%E6%9E%84%E4%BD%93%E4%B8%8D%E5%8C%85%E5%90%AB%E4%BB%BB%E4%BD%95%E4%B8%9C%E8%A5%BF%EF%BC%8C%E5%8D%A00%E4%B8%AA%E5%AD%97%E8%8A%82%EF%BC%9B%3Ccode%3EDerived1%3C/code%3E%E6%98%AF%E4%B8%80%E4%B8%AA%E5%8C%85%E5%90%AB%E4%B8%A4%E4%B8%AA%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E7%BB%93%E6%9E%84%E4%BD%93%EF%BC%8C%E4%B8%80%E4%B8%AA%E5%8D%A08%EF%BC%8C%E4%B8%80%E4%B8%AA%E5%8D%A00%EF%BC%8C%E6%80%BB%E5%85%B1%E5%8D%A08%E4%B8%AA%E5%AD%97%E8%8A%82%EF%BC%9B%3Ccode%3EDerived2%3C/code%3E%E6%98%AF%E4%B8%80%E4%B8%AA%E5%8C%85%E5%90%AB8%E5%AD%97%E8%8A%82%E7%BB%93%E6%9E%84%E4%BD%93%EF%BC%8C%E4%BB%A5%E5%8F%8A%E4%B8%80%E4%B8%AA8%E5%AD%97%E8%8A%82%E5%AD%97%E6%AE%B5%EF%BC%8C%E6%80%BB%E5%85%B1%E5%8D%A016%E5%AD%97%E8%8A%82%E3%80%82%E6%88%91%E4%BB%AC%E7%9C%8B%E5%88%B0%E5%86%85%E5%AD%98%E4%BD%BF%E7%94%A8%E6%98%AF%E9%9D%9E%E5%B8%B8%E9%AB%98%E6%95%88%E7%9A%84%E3%80%82%3C/p%3E%3Ch2%20id=%22Static-Dispatch%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Static-Dispatch%22%3E%C2%B6%3C/a%3EStatic%20Dispatch%3C/h2%3E%3Cp%3ERust%E4%B8%8D%E6%98%AF%E5%8A%A8%E6%80%81%E8%AF%AD%E8%A8%80%EF%BC%8C%E6%89%80%E4%BB%A5%EF%BC%8C%E4%B8%8B%E9%9D%A2%E5%86%99%E6%B3%95%E6%98%AF%E4%B8%8D%E5%85%81%E8%AE%B8%E7%9A%84%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edraw_text%3C/span%3E(txt)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Etxt.%3Cspan%20class=%22title%20function_%20invoke__%22%3Edraw%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E9%87%8C%E5%B8%8C%E6%9C%9B%EF%BC%8C%E5%A6%82%E6%9E%9C%3Ccode%3Etxt%3C/code%3E%E7%9A%84%E7%B1%BB%E5%9E%8B%E6%98%AF%3Ccode%3EText%3C/code%3E%EF%BC%8C%E5%88%99%E8%B0%83%E7%94%A8%3Ccode%3EText%3C/code%3E%E5%AF%B9%E5%BA%94%E7%9A%84%3Ccode%3Edraw%3C/code%3E%E6%96%B9%E6%B3%95%EF%BC%9B%E5%A6%82%E6%9E%9C%3Ccode%3Etxt%3C/code%3E%E7%9A%84%E7%B1%BB%E5%9E%8B%E6%98%AF%3Ccode%3EBoxedText%3C/code%3E%EF%BC%8C%E5%88%99%E8%B0%83%E7%94%A8%3Ccode%3EBoxedText%3C/code%3E%E7%9A%84%E6%96%B9%E6%B3%95%3Ccode%3Edraw%3C/code%3E%E3%80%82%E5%9B%A0%E4%B8%BARust%E6%98%AF%E5%BC%BA%E9%9D%99%E6%80%81%E8%AF%AD%E8%A8%80%EF%BC%8C%E8%A6%81%E5%AE%9E%E7%8E%B0%E8%BF%99%E4%B8%AA%E6%96%B9%E6%A1%88%EF%BC%8C%E6%9C%89%E4%B8%A4%E7%A7%8D%E4%B8%8D%E7%AD%89%E4%BB%B7%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E19%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E20%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E21%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E22%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E23%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E24%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E25%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E26%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E27%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E28%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E29%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E30%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E31%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E32%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E33%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E34%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E35%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E36%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E37%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E38%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E39%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E40%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E41%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E42%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E43%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E44%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E45%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E46%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etrait%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EDraw%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edraw%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EText%3C/span%3E%20&amp;#123;%20characters:%20%3Cspan%20class=%22type%22%3EString%3C/span%3E%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EText%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Efrom%3C/span%3E(text:%20&amp;amp;%3Cspan%20class=%22type%22%3Estr%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20Text%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EText%20&amp;#123;%20characters:%20text.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E()%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EDraw%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EText%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edraw%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.characters);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EBoxedText%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Etext:%20Text,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Efirst:%20%3Cspan%20class=%22type%22%3Echar%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Elast:%20%3Cspan%20class=%22type%22%3Echar%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EBoxedText%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ewith_text_and_borders%3C/span%3E(text:%20&amp;amp;%3Cspan%20class=%22type%22%3Estr%3C/span%3E,%20first:%20%3Cspan%20class=%22type%22%3Echar%3C/span%3E,%20last:%20%3Cspan%20class=%22type%22%3Echar%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20BoxedText%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EBoxedText%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Etext:%20Text::%3Cspan%20class=%22title%20function_%20invoke__%22%3Efrom%3C/span%3E(text),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Efirst:%20first,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Elast:%20last,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EDraw%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EBoxedText%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edraw%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.first);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.text.%3Cspan%20class=%22title%20function_%20invoke__%22%3Edraw%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.last);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Egreeting%3C/span%3E%20=%20Text::%3Cspan%20class=%22title%20function_%20invoke__%22%3Efrom%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Hello&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eboxed_greeting%3C/span%3E%20=%20%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EBoxedText::%3Cspan%20class=%22title%20function_%20invoke__%22%3Ewith_text_and_borders%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Hi&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;[&amp;#x27;%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;]&amp;#x27;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20SOLUTION%201%20/%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edraw_text%3C/span%3E&amp;lt;T&amp;gt;(txt:%20T)%20%3Cspan%20class=%22keyword%22%3Ewhere%3C/span%3E%20T:%20Draw%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Etxt.%3Cspan%20class=%22title%20function_%20invoke__%22%3Edraw%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Edraw_text%3C/span%3E(greeting);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;,%20&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Edraw_text%3C/span%3E(boxed_greeting);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E9%87%8C%E5%AE%9A%E4%B9%89%E4%BA%86%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%EF%BC%8C%E5%B9%B6%E4%BD%BF%E7%94%A8%3Ccode%3Ewhere%3C/code%3E%E4%BB%8E%E5%8F%A5%E7%A1%AE%E5%AE%9A%E7%B1%BB%E5%9E%8B%E8%BE%B9%E7%95%8C%E3%80%82%E6%88%91%E4%BB%AC%E9%9C%80%E8%A6%81%E5%9C%A8%E8%BF%99%E9%87%8C%E5%BC%95%E7%94%B3%E8%A7%A3%E6%9E%90%E9%9D%99%E6%80%81%E6%B4%BE%E9%81%A3(static%20dispatch)%E8%BF%99%E4%B8%AA%E6%A6%82%E5%BF%B5%E3%80%82%3C/p%3E%3Cp%3E%E9%A6%96%E5%85%88%E5%A3%B0%E6%98%8E%E4%BA%86%3Ccode%3EDraw%3C/code%3E%EF%BC%8C%E4%BD%9C%E4%B8%BA%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%EF%BC%8C%E6%8B%A5%E6%9C%89drawn%E7%9A%84%E8%83%BD%E5%8A%9B%E3%80%82%3C/p%3E%3Cp%3E%E7%84%B6%E5%90%8E%3Ccode%3EText%3C/code%3E%E5%92%8C%3Ccode%3EBoxedText%3C/code%3E%E7%B1%BB%E5%9E%8B%E8%A2%AB%E5%A3%B0%E6%98%8E%EF%BC%8C%E6%9C%89%E5%AF%B9%E5%BA%94%E7%9A%84%E6%96%B9%E6%B3%95%EF%BC%8C%E6%9C%89%E4%B8%A4%E4%B8%AA%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%3Ccode%3EText::from%3C/code%3E%E5%92%8C%3Ccode%3EBoxedText::with_text_and_borders%3C/code%3E%EF%BC%9B%E5%AE%83%E4%BB%AC%E7%9A%84%3Ccode%3Edraw%3C/code%3E%E5%87%BD%E6%95%B0%E7%9A%84%E5%AE%9E%E7%8E%B0%E9%83%BD%E7%BB%A7%E6%89%BF%E6%9D%A5%E8%87%AA%3Ccode%3EDraw%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3ESOLUTION%201%E4%B8%AD%E7%9A%84%E6%96%B9%E6%B3%95%EF%BC%8C%3Ccode%3Edraw_text%3C/code%3E%E6%B3%9B%E5%9E%8B%E6%96%B9%E6%B3%95%E6%8E%A5%E6%94%B6%E7%B1%BB%E5%9E%8B%E5%8F%82%E6%95%B0%3Ccode%3ET%3C/code%3E%EF%BC%8C%3Ccode%3ET%3C/code%3E%E6%98%AF%E4%BB%BB%E4%BD%95%E5%AE%9E%E7%8E%B0%E4%BA%86%3Ccode%3EDraw%3C/code%3E%E7%9A%84%E7%B1%BB%E5%9E%8B%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E4%B8%8D%E4%B9%B1%E7%BC%96%E8%AF%91%E5%99%A8%E8%AE%A1%E6%95%B0%E5%99%A8%E5%9C%A8%E5%93%AA%E9%87%8C%E8%B0%83%E7%94%A8%3Ccode%3Edraw_text%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E5%AE%83%E4%BC%9A%E5%86%B3%E5%AE%9A%E5%8F%82%E6%95%B0%E7%9A%84%E7%B1%BB%E5%9E%8B%EF%BC%8C%E5%B9%B6%E6%A3%80%E6%B5%8B%E8%AF%A5%E7%B1%BB%E5%9E%8B%E6%98%AF%E5%90%A6%E5%AE%9E%E7%8E%B0%3Ccode%3EDraw%3C/code%3E%E3%80%82%E5%A6%82%E6%9E%9C%E6%B2%A1%E6%9C%89%E5%AF%B9%E5%BA%94%E7%B1%BB%E5%9E%8B%EF%BC%8C%E7%BC%96%E8%AF%91%E5%99%A8%E6%8A%A5%E9%94%99%EF%BC%8C%E8%8B%A5%E6%9C%89%E5%85%B7%E4%BD%93%E7%9A%84%E7%B1%BB%E5%9E%8B%EF%BC%8C%E4%BC%9A%E7%94%9F%E6%88%90%E5%85%B7%E4%BD%93%E7%89%88%E6%9C%AC%E7%9A%84%3Ccode%3Edraw_text%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%E4%BD%93%E5%86%85%E7%9A%84%3Ccode%3Edraw%3C/code%3E%E6%96%B9%E6%B3%95%E7%9A%84%E8%B0%83%E7%94%A8%EF%BC%8C%E4%BC%9A%E8%A2%AB%E6%9B%BF%E6%8D%A2%E4%B8%BA%E5%AF%B9%E5%BA%94%3Ccode%3ET%3C/code%3E%E7%9A%84%E5%AE%9E%E7%8E%B0%E7%9A%84%3Ccode%3Edraw%3C/code%3E%E7%9A%84%E6%96%B9%E6%B3%95%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E7%A7%8D%E6%8A%80%E6%9C%AF%E7%A7%B0%E4%B8%BA%E2%80%9C%E9%9D%99%E6%80%81%E6%B4%BE%E9%81%A3static%20dispatch%E2%80%9D%E3%80%82%E5%9C%A8%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%AD%EF%BC%8C%3Ccode%3Edispatch%3C/code%3E%E8%A1%A8%E7%A4%BA%E6%9C%89%E5%87%A0%E4%B8%AA%E5%90%8C%E5%90%8D%E5%87%BD%E6%95%B0%E6%97%B6%EF%BC%8C%E9%80%89%E6%8B%A9%E8%B0%83%E7%94%A8%E5%93%AA%E4%B8%AA%E5%87%BD%E6%95%B0%E3%80%82%E5%9C%A8%E8%BF%99%E6%AE%B5%E7%A8%8B%E5%BA%8F%E4%B8%AD%EF%BC%8C%E6%9C%89%E4%B8%A4%E4%B8%AA%E5%87%BD%E6%95%B0%E5%91%BD%E5%90%8D%E4%B8%BA%3Ccode%3Edraw%3C/code%3E%EF%BC%8C%E5%9B%A0%E6%AD%A4%E6%B4%BE%E9%81%A3%E4%BB%8E%E4%B8%A4%E8%80%85%E4%B8%AD%E9%80%89%E6%8B%A9%E4%B8%80%E4%B8%AA%E3%80%82%E5%9C%A8%E8%AF%A5%E7%A8%8B%E5%BA%8F%E4%B8%AD%EF%BC%8C%E9%80%89%E6%8B%A9%E7%94%B1%E7%BC%96%E8%AF%91%E5%99%A8%E5%A4%84%E7%90%86%EF%BC%8C%E5%9C%A8%E7%BC%96%E8%AF%91%E6%9C%9F%EF%BC%8C%E8%BF%99%E7%A7%8D%E6%B4%BE%E9%81%A3%E6%98%AF%E2%80%9C%E9%9D%99%E6%80%81%E7%9A%84static%E2%80%9D%E3%80%82%3C/p%3E%3Ch2%20id=%22Dynamic-Dispatch%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Dynamic-Dispatch%22%3E%C2%B6%3C/a%3EDynamic%20Dispatch%3C/h2%3E%3Cp%3E%E4%B8%8A%E9%9D%A2%E7%9A%84%E7%A8%8B%E5%BA%8F%E5%8F%AF%E4%BB%A5%E7%A8%8D%E4%BD%9C%E6%94%B9%E5%8F%98%EF%BC%8C%E6%94%B9%E5%8F%98%E6%9C%80%E5%90%8E%E5%87%A0%E8%A1%8C%E4%BB%A3%E7%A0%81%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20SOLUTION%201/bis%20/%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edraw_text%3C/span%3E&amp;lt;T&amp;gt;(txt:%20&amp;amp;T)%20%3Cspan%20class=%22keyword%22%3Ewhere%3C/span%3E%20T:%20Draw%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Etxt.%3Cspan%20class=%22title%20function_%20invoke__%22%3Edraw%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Edraw_text%3C/span%3E(&amp;amp;greeting);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;,%20&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Edraw_text%3C/span%3E(&amp;amp;boxed_greeeting);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E9%87%8C%E6%8A%8A%E6%8E%A5%E6%94%B6%E5%8F%82%E6%95%B0%EF%BC%8C%E6%94%B9%E4%B8%BA%E4%BA%86%E4%B8%80%E4%B8%AAreference%EF%BC%8C%E5%8D%B3%E5%9C%A8%E6%96%B9%E6%B3%95%E7%AD%BE%E5%90%8D%E7%9A%84%E5%8F%82%E6%95%B0%E5%B8%A6%E4%B8%8A%3Ccode%3E&amp;amp;%3C/code%3E%EF%BC%8C%E4%BB%A5%E5%8F%8A%E4%B8%A4%E5%A4%84%E8%B0%83%E7%94%A8%E5%B8%A6%E4%B8%8A%3Ccode%3E&amp;amp;%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E7%A7%8D%E6%96%B9%E6%A1%88%E4%BB%8D%E7%84%B6%E6%98%AF%E9%9D%99%E6%80%81%E6%B4%BE%E9%81%A3%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E9%9D%99%E6%80%81%E6%B4%BE%E9%81%A3%E5%B7%A5%E4%BD%9C%E5%9C%A8%E5%80%BC%E4%BC%A0%E9%80%92(pass-by-value)%E5%92%8C%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92(pass-by-reference)%E4%B8%8A%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8A%E9%9D%A2%E7%9A%84%E4%BB%A3%E7%A0%81%E5%8F%AF%E4%BB%A5%E6%94%B9%E5%8F%98%E4%B8%8B%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20SOLUTION%202%20/%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edraw_text%3C/span%3E(txt:%20&amp;amp;Draw)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Etxt.%3Cspan%20class=%22title%20function_%20invoke__%22%3Edraw%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Edraw_text%3C/span%3E(&amp;amp;greeting);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;,%20&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Edraw_text%3C/span%3E(&amp;amp;boxed_greeting);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%AF%A5%E7%A8%8B%E5%BA%8F%E4%BF%9D%E7%95%99%E5%8E%9F%E6%9D%A5%E7%9A%84%E8%A1%8C%E4%B8%BA%EF%BC%8C%E4%BD%86%E4%BD%BF%E7%94%A8%E4%BA%86%E5%8F%A6%E4%B8%80%E7%A7%8D%E6%8A%80%E6%9C%AF%E3%80%82%E4%BB%85%E6%94%B9%E5%8F%98%E4%BA%86%3Ccode%3Edraw_text%3C/code%3E%E7%9A%84%E7%AD%BE%E5%90%8D%EF%BC%8C%E5%88%A0%E9%99%A4%E4%BA%86%3Ccode%3ET%3C/code%3E%E7%B1%BB%E5%9E%8B%E5%8F%82%E6%95%B0%EF%BC%8C%E5%88%A0%E9%99%A4%E4%BA%86%3Ccode%3Ewhere%3C/code%3E%E4%BB%8E%E5%8F%A5%EF%BC%8C%E5%8F%82%E6%95%B0%E7%94%A8%3Ccode%3E&amp;amp;Draw%3C/code%3E%E6%9B%BF%E6%8D%A2%E4%BA%86%3Ccode%3E&amp;amp;T%3C/code%3E%E3%80%82%E7%8E%B0%E5%9C%A8%EF%BC%8C%E7%94%B1%E5%8E%9F%E6%9D%A5%E7%9A%84%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%EF%BC%8C%E6%9B%BF%E6%8D%A2%E4%B8%BA%E5%85%B7%E4%BD%93%E7%9A%84%E5%87%BD%E6%95%B0%EF%BC%8C%E5%AE%83%E7%9A%84%E5%8F%82%E6%95%B0%E6%98%AF%E5%AF%B9trait%E7%9A%84%E4%B8%80%E4%B8%AA%E5%BC%95%E7%94%A8%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8D%E5%90%8C%E7%9A%84%E6%98%AF%EF%BC%8C%E4%B8%80%E4%B8%AAtrait%E4%B8%8D%E6%98%AF%E4%B8%80%E4%B8%AA%E7%B1%BB%E5%9E%8B(type)%E3%80%82%E4%BD%A0%E4%B8%8D%E8%83%BD%E5%A3%B0%E6%98%8E%E4%B8%80%E4%B8%AA%E5%8F%98%E9%87%8F%E6%88%96%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E7%94%A8trait%E6%9D%A5%E8%A1%A8%E7%A4%BA%E5%AE%83%E7%9A%84%E7%B1%BB%E5%9E%8B%E3%80%82%E4%BD%86%E5%AF%B9trait%E7%9A%84reference%E6%98%AF%E4%B8%80%E4%B8%AA%E6%9C%89%E6%95%88%E7%9A%84%E7%B1%BB%E5%9E%8B%E3%80%82%E7%84%B6%E8%80%8C%EF%BC%8C%E5%AE%83%E4%B8%8D%E6%98%AF%E6%99%AE%E9%80%9A%E7%9A%84%E5%BC%95%E7%94%A8%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%9C%B0%E6%96%B9%EF%BC%8C%E5%A6%82%E6%9E%9C%E5%AE%83%E6%98%AF%E4%B8%80%E4%B8%AA%E6%99%AE%E9%80%9A%E5%BC%95%E7%94%A8%EF%BC%8C%E5%AE%83%E4%B8%8D%E8%83%BD%E5%B0%86%E5%BC%95%E7%94%A8%EF%BC%8C%E4%BC%A0%E9%80%92%3Ccode%3EText%3C/code%3E%E6%88%96%3Ccode%3EBoxedText%3C/code%3E%E4%B8%AD%E5%87%BD%E6%95%B0%E7%9A%84%E5%8F%82%E6%95%B0%EF%BC%9B%E4%BD%86%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E5%AE%83%E6%98%AF%E5%85%81%E8%AE%B8%E7%9A%84%EF%BC%8C%E8%80%83%E8%99%91%E5%A6%82%E4%B8%8B%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etrait%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ETr%3C/span%3E%20&amp;#123;&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ETr%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3Ebool%3C/span%3E%20&amp;#123;&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_a%3C/span%3E:%20&amp;amp;Tr%20=%20&amp;amp;%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E9%87%8C%3Ccode%3Ebool%3C/code%3E%E7%B1%BB%E5%9E%8B%E5%AE%9E%E7%8E%B0%E4%BA%86%3Ccode%3ETr%3C/code%3Etrait%EF%BC%8C%E6%89%80%E4%BB%A5%3Ccode%3E&amp;amp;true%3C/code%3E%E7%9A%84%E5%BC%95%E7%94%A8%E7%9A%84%E5%80%BC%E7%B1%BB%E5%9E%8B%E6%98%AF%3Ccode%3Ebool%3C/code%3E%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%88%9D%E5%A7%8B%E5%8C%96%E7%BB%99%E5%8F%98%E9%87%8F%3Ccode%3E_a%3C/code%3E%EF%BC%8C%3Ccode%3E_a%3C/code%3E%E6%98%AF%3Ccode%3ETr%3C/code%3E%E7%9A%84%E4%B8%80%E4%B8%AA%E5%BC%95%E7%94%A8%E3%80%82%3C/p%3E%3Cp%3E%E7%9B%B8%E5%8F%8D%EF%BC%8C%E4%B8%8B%E9%9D%A2%E5%86%99%E6%B3%95%E6%98%AF%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etrait%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ETr%3C/span%3E%20&amp;#123;&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_a%3C/span%3E:%20&amp;amp;Tr%20=%20&amp;amp;%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E9%87%8C%EF%BC%8C%3Ccode%3Ebool%3C/code%3E%20%E6%B2%A1%E6%9C%89%3Ccode%3ETr%3C/code%3E%E7%9A%84%E5%AE%9E%E7%8E%B0%EF%BC%8C%E5%9B%A0%E6%AD%A4%3Ccode%3E&amp;amp;true%3C/code%3E%E8%BF%99%E4%B8%AA%E5%AF%B9%3Ccode%3Ebool%3C/code%3E%E7%9A%84%E5%80%BC%E5%BC%95%E7%94%A8%EF%BC%8C%E4%B8%8D%E8%83%BD%E8%A2%AB%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B8%BA%3Ccode%3ETr%3C/code%3E%E7%9A%84%E5%BC%95%E7%94%A8%E3%80%82%3C/p%3E%3Cp%3E%E9%80%9A%E5%B8%B8%E5%9C%B0%EF%BC%8C%E4%BB%BB%E4%BD%95%E5%AF%B9%E7%B1%BB%E5%9E%8B%3Ccode%3ET%3C/code%3E%E7%9A%84%E5%BC%95%E7%94%A8%EF%BC%8C%E9%83%BD%E5%8F%AF%E4%BB%A5%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B8%BA%E4%B8%80%E4%B8%AA%E5%AE%9E%E7%8E%B0%3Ccode%3ET%3C/code%3E%E7%9A%84trait%E7%9A%84%E4%B8%80%E4%B8%AA%E5%BC%95%E7%94%A8%E3%80%82%E5%B0%86%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E7%BB%99%E5%87%BD%E6%95%B0%EF%BC%8C%E6%98%AF%E4%B8%80%E7%A7%8D%E5%88%9D%E5%A7%8B%E5%8C%96%E5%A4%84%E7%90%86%EF%BC%8C%E5%9B%A0%E6%AD%A4%E4%BB%BB%E4%BD%95%E5%AF%B9%E7%B1%BB%E5%9E%8B%3Ccode%3ET%3C/code%3E%E7%9A%84%E5%BC%95%E7%94%A8%EF%BC%8C%E5%8F%AF%E4%BB%A5%E4%BD%9C%E4%B8%BA%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E8%BF%9B%E8%A1%8C%E4%BC%A0%E9%80%92%EF%BC%8C%E8%BF%99%E4%B8%AA%E5%8F%82%E6%95%B0%E5%BC%95%E7%94%A8%E7%9A%84%3Ccode%3Etrait%3C/code%3E%E6%98%AF%3Ccode%3ET%3C/code%3E%E7%9A%84%E5%AE%9E%E7%8E%B0%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E7%AC%AC%E4%BA%8C%E5%A4%84%EF%BC%8C%E5%A6%82%E6%9E%9C%3Ccode%3E&amp;amp;Draw%3C/code%3E%E6%98%AF%E4%B8%80%E4%B8%AA%E6%99%AE%E9%80%9A%E6%8C%87%E9%92%88%EF%BC%8C%3Ccode%3Etxt%3C/code%3E%E6%98%AF%E6%8C%87%E9%92%88%E7%9A%84%E7%B1%BB%E5%9E%8B%EF%BC%8C%E8%A1%A8%E8%BE%BE%E5%BC%8F%3Ccode%3Etxt.draw()%3C/code%3E%E4%BC%9A%E8%B0%83%E7%94%A8%E7%9B%B8%E5%90%8C%E7%9A%84%E5%87%BD%E6%95%B0%EF%BC%8C%E5%8F%96%E5%86%B3%E4%BA%8E%E5%BC%95%E7%94%A8%E5%AF%B9%E8%B1%A1%3Ccode%3Etxt%3C/code%3E%E7%9A%84%E5%90%8D%E5%AD%97%E3%80%82%E5%A6%82%E5%85%B6%E8%AF%B4%E9%9C%80%E8%A6%81%E4%B8%80%E4%B8%AAdispatch%EF%BC%8C%E5%AE%9E%E9%99%85%E6%88%91%E4%BB%AC%E9%9C%80%E8%A6%81%E7%9A%84%E6%98%AF%EF%BC%8C%E5%BD%93%3Ccode%3Edraw_text%3C/code%3E%E6%8E%A5%E6%94%B6%E4%B8%80%E4%B8%AA%3Ccode%3EText%3C/code%3E%E6%97%B6%EF%BC%8C%3Ccode%3EText%3C/code%3E%E7%B1%BB%E5%9E%8B%E5%85%B3%E8%81%94%E7%9A%84%3Ccode%3Edraw%3C/code%3E%E6%96%B9%E6%B3%95%E8%A2%AB%E8%B0%83%E7%94%A8%EF%BC%9B%E5%BD%93%3Ccode%3Edraw_tet%3C/code%3E%E6%8E%A5%E6%94%B6%E4%B8%80%E4%B8%AA%3Ccode%3EBoxedText%3C/code%3E%E6%97%B6%EF%BC%8C%3Ccode%3EBoxedText%3C/code%3E%E7%B1%BB%E5%9E%8B%E5%85%B3%E8%81%94%E7%9A%84%3Ccode%3Edraw%3C/code%3E%E6%96%B9%E6%B3%95%E8%A2%AB%E8%B0%83%E7%94%A8%E3%80%82%3C/p%3E%3Cp%3E%E6%89%80%E4%BB%A5%EF%BC%8C%E8%BF%99%E9%87%8C%E7%9A%84%3Ccode%3E&amp;amp;Draw%3C/code%3E%E5%B9%B6%E4%B8%8D%E6%98%AF%E4%B8%80%E4%B8%AA%E6%99%AE%E9%80%9A%E7%9A%84%E6%8C%87%E9%92%88%EF%BC%8C%E8%80%8C%E4%B8%80%E4%B8%AA%E8%83%BD%E5%A4%9F%E6%A0%B9%E6%8D%AE%E5%BC%95%E7%94%A8%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%B1%BB%E5%9E%8B%EF%BC%8C%E9%80%89%E6%8B%A9%E8%B0%83%E7%94%A8%E6%96%B9%E6%B3%95%E7%9A%84%E6%8C%87%E9%92%88%E3%80%82%E8%BF%99%E6%98%AF%E4%B8%80%E7%A7%8D%E6%B4%BE%E9%81%A3(dispatch)%EF%BC%8C%E4%BD%86%E5%8F%91%E7%94%9F%E5%9C%A8%E8%BF%90%E8%A1%8C%E6%97%B6%EF%BC%8C%E5%9B%A0%E6%AD%A4%E5%8F%AB%E5%81%9A%E2%80%9C%E5%8A%A8%E6%80%81%E6%B4%BE%E9%81%A3(dynamic%20dispatch)%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%8A%A8%E6%80%81%E6%B4%BE%E9%81%A3%E5%9C%A8C++%E4%B8%AD%E7%9A%84%E9%80%9A%E8%BF%87%3Ccode%3Evirtual%3C/code%3E%E5%85%B3%E9%94%AE%E5%AD%97%E5%A4%84%E7%90%86%EF%BC%8C%E5%B0%BD%E7%AE%A1%E6%9C%BA%E5%88%B6%E7%95%A5%E6%9C%89%E4%B8%8D%E5%90%8C%E3%80%82%3C/p%3E%3Ch2%20id=%22Implementation-of-References-to-Traits%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Implementation-of-References-to-Traits%22%3E%C2%B6%3C/a%3EImplementation%20of%20References%20to%20Traits%3C/h2%3E%3Cp%3E%E5%9B%9E%E5%88%B0%E5%8E%9F%E6%9D%A5%E4%BB%A3%E7%A0%81%E5%85%B3%E4%BA%8E%E6%B4%BE%E9%81%A3%E7%9A%84%E9%97%AE%E9%A2%98%EF%BC%8C%E5%B0%86%E6%9C%80%E5%90%8E%E5%87%A0%E8%A1%8C%E6%9B%BF%E6%8D%A2%E5%A6%82%E4%B8%8B%E4%BB%A3%E7%A0%81%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Euse%3C/span%3E%20st::mem::size_of_val;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;,%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;,%20&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;greeting),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;&amp;amp;greeting),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;&amp;amp;&amp;amp;greeting),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;boxed_greeting),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;&amp;amp;boxed_greeting),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;&amp;amp;&amp;amp;boxed_greeting));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edraw_text%3C/span%3E(txt:%20&amp;amp;Draw)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(txt),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;txt),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;&amp;amp;txt));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Etxt.%3Cspan%20class=%22title%20function_%20invoke__%22%3Edraw%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Edraw_text%3C/span%3E(&amp;amp;greeting);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;,%20&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Edraw_text%3C/span%3E(&amp;amp;boxed_greeting);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%9C%A864%E4%BD%8D%E7%9B%AE%E6%A0%87%E6%9C%BA%E5%99%A8%E4%B8%8A%EF%BC%8C%E4%BC%9A%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C%3Ccode%3E24%208%208,%2032%208%208,%2024%2016%208%20Hello,%2032%2016%208%20[Hi]%3C/code%3E%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%3Ccode%3Esize_of_val%3C/code%3E%E5%AE%9A%E4%B9%89%E5%9C%A8%E6%A0%87%E5%87%86%E5%BA%93%E7%9A%84%E4%B8%80%E4%B8%AA%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%EF%BC%8C%E6%8E%A5%E6%94%B6%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%BC%95%E7%94%A8%EF%BC%8C%E8%BF%94%E5%9B%9E%E8%AF%A5%E5%BC%95%E7%94%A8%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%AD%97%E8%8A%82%E5%A4%A7%E5%B0%8F%E3%80%82%3C/p%3E%3Cp%3E%E9%A6%96%E5%85%88%EF%BC%8C%3Ccode%3Egreeting%3C/code%3E%E5%8F%98%E9%87%8F%E8%A2%AB%E5%A4%84%E7%90%86%E3%80%82%E5%AE%83%E7%9A%84%E7%B1%BB%E5%9E%8B%E6%98%AF%3Ccode%3EText%3C/code%3E%E7%BB%93%E6%9E%84%E4%BD%93%EF%BC%8C%E4%BB%85%E5%8C%85%E5%90%AB%E4%B8%80%E4%B8%AA%3Ccode%3EString%3C/code%3E%E5%AF%B9%E8%B1%A1%E3%80%82%E6%88%91%E4%BB%AC%E5%B7%B2%E7%BB%8F%E6%8E%A2%E8%AE%A8%E8%BF%87%3Ccode%3EString%3C/code%3E%E5%AF%B9%E8%B1%A1%E5%9C%A8%E6%A0%88%E4%B8%8A%E5%8D%A024%E4%B8%AA%E5%AD%97%E8%8A%82%EF%BC%8C%E9%99%84%E5%B8%A6%E5%9C%A8%E5%A0%86%E4%B8%80%E4%B8%AA%E7%BC%93%E5%86%B2%E5%8C%BA%E3%80%82%E8%BF%99%E4%B8%AA%E7%BC%93%E5%86%B2%E5%8C%BA%E4%B8%8D%E4%BC%9A%E5%9C%A8%3Ccode%3Esize_of_val%3C/code%3E%E5%87%BD%E6%95%B0%E7%9A%84%E8%AE%A1%E7%AE%97%E8%8C%83%E5%9B%B4%E5%86%85%E3%80%82%3C/p%3E%3Cp%3E%E6%8E%A5%E7%9D%80%E6%89%93%E5%8D%B0%3Ccode%3EText%3C/code%3E%E5%BC%95%E7%94%A8%E7%9A%84%E5%A4%A7%E5%B0%8F%EF%BC%8C%3Ccode%3EText%3C/code%3E%E7%9A%84%E5%BC%95%E7%94%A8%E6%98%AF%E6%99%AE%E9%80%9A%E5%BC%95%E7%94%A8%EF%BC%8C%E5%8D%A08%E4%B8%AA%E5%AD%97%E8%8A%82%E3%80%82%3C/p%3E%3Cp%3E%E7%B1%BB%E4%BC%BC%E5%9C%B0%EF%BC%8C%3Ccode%3Eboxed_greeting%3C/code%3E%E5%8F%98%E9%87%8F%E6%98%AF%E4%B8%AA%E7%BB%93%E6%9E%84%E4%BD%93%EF%BC%8C%E6%9C%89%E4%B8%A4%E4%B8%AA%3Ccode%3Echar%3C/code%3E%E5%AF%B9%E8%B1%A1%E3%80%82%E6%AF%8F%E4%B8%AA%E5%8D%A04%E4%B8%AA%E5%AD%97%E8%8A%82%EF%BC%8C%E4%B8%80%E5%85%B1%E6%9C%8924%20+%204%20+%204%20=%2032%E5%AD%97%E8%8A%82%E3%80%82%3C/p%3E%3Cp%3E%E5%AF%B9%E4%BA%8E%E8%A1%A8%E8%BE%BE%E5%BC%8F%3Ccode%3E&amp;amp;greeting%3C/code%3E%EF%BC%8C%E6%9C%89%E7%B1%BB%E5%9E%8B%3Ccode%3E&amp;amp;Text%3C/code%3E%EF%BC%8C%E5%AE%83%E4%BD%9C%E4%B8%BA%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E7%BB%99%3Ccode%3Edraw_text%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E8%AF%A5%E5%87%BD%E6%95%B0%E5%AE%9E%E4%BE%8B%E5%8C%96%3Ccode%3Etxt%3C/code%3E%E5%8F%82%E6%95%B0%EF%BC%8C%E5%8F%82%E6%95%B0%E7%B1%BB%E5%9E%8B%E6%98%AF%3Ccode%3E&amp;amp;Draw%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E7%94%B1%E4%BA%8E%3Ccode%3Etxt%3C/code%3E%E6%98%AF%E4%B8%80%E7%A7%8D%E5%BC%95%E7%94%A8%EF%BC%8C%E6%89%80%E4%BB%A5%E5%8F%AF%E4%BB%A5%E7%94%B1%E8%A1%A8%E8%BE%BE%E5%BC%8F%3Ccode%3Esize_of_val(txt)%3C/code%3E%E8%AE%A1%E7%AE%97%E3%80%82%E5%AE%83%E4%BC%9A%E8%BF%94%E5%9B%9E%E5%BC%95%E7%94%A8%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%A4%A7%E5%B0%8F%E3%80%82%E4%BD%86%E5%B0%B1%E6%98%AF%E5%93%AA%E4%B8%AA%E6%89%8D%E6%98%AF%3Ccode%3E&amp;amp;Draw%3C/code%3E%E7%9A%84%E5%BC%95%E7%94%A8%E5%AF%B9%E8%B1%A1%EF%BC%9F%E6%98%8E%E6%98%BE%EF%BC%8C%E4%B8%80%E5%AE%9A%E4%B8%8D%E6%98%AF%3Ccode%3EDraw%3C/code%3E%EF%BC%8C%E5%9B%A0%E4%B8%BA%3Ccode%3EDraw%3C/code%3E%E4%B8%8D%E6%98%AF%E7%B1%BB%E5%9E%8B%E3%80%82%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E5%9C%A8%E7%BC%96%E8%AF%91%E6%9C%9F%E4%B8%8D%E8%83%BD%E7%A1%AE%E5%AE%9A%E3%80%82%E5%AE%83%E9%9C%80%E8%A6%81%E8%BF%90%E8%A1%8C%E6%9C%9F%EF%BC%8C%E6%9C%89%E5%88%9D%E5%A7%8B%E5%8C%96%3Ccode%3Etxt%3C/code%3E%E5%8F%82%E6%95%B0%E7%9A%84%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%86%B3%E5%AE%9A%E3%80%82%E9%A6%96%E5%85%88%EF%BC%8C%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8E%A5%E6%94%B6%E7%9A%84%3Ccode%3Etxt%3C/code%3E%E5%8F%82%E6%95%B0%E7%9A%84%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B%E6%98%AF%3Ccode%3EText%3C/code%3E%EF%BC%8C%E5%8D%A024%E4%B8%AA%E5%AD%97%E8%8A%82%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E6%8E%A5%E6%94%B6%E7%9A%84%3Ccode%3Etxt%3C/code%3E%E5%8F%82%E6%95%B0%E7%9A%84%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B%E6%98%AF%3Ccode%3EBoxedText%3C/code%3E%E6%97%B6%EF%BC%8C%E5%AE%83%E5%8D%A032%E4%B8%AA%E5%AD%97%E8%8A%82%EF%BC%8C%E5%B0%86%E8%A2%AB%E6%89%93%E5%8D%B0%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%9E%E5%88%B0%3Ccode%3Egreeting%3C/code%3E%E7%9A%84%E8%B0%83%E7%94%A8%E5%A4%84%EF%BC%8C%E6%88%91%E4%BB%AC%E5%8F%91%E7%8E%B0%E8%A1%A8%E8%BE%BE%E5%BC%8F%3Ccode%3Esize_of_val(&amp;amp;txt)%3C/code%3E%E7%9A%84%E5%80%BC%E6%98%AF16%E3%80%82%E8%BF%99%E5%BE%88%E5%A5%87%E6%80%AA%E3%80%82%E8%BF%99%E4%B8%AA%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%98%AF%E6%B1%82%E7%B1%BB%E5%9E%8B%3Ccode%3E&amp;amp;Draw%3C/code%3E%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%A4%A7%E5%B0%8F%EF%BC%8C%E7%94%B1%E7%B1%BB%E5%9E%8B%3Ccode%3E&amp;amp;Text%3C/code%3E%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%88%9D%E5%A7%8B%E5%8C%96%E3%80%82%E6%89%80%E4%BB%A5%EF%BC%8C%E5%AE%9E%E9%99%85%E4%B8%8A%E7%94%A8%E4%BA%86%E4%B8%80%E4%B8%AA%E5%B8%B8%E8%A7%848%E5%AD%97%E8%8A%82%E5%BC%95%E7%94%A8%E6%9D%A5%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B8%80%E4%B8%AA16%E5%AD%97%E8%8A%82%E7%9A%84trait%E5%BC%95%E7%94%A8%EF%BC%9F%E4%B8%BA%E4%BB%80%E4%B9%88%E5%AF%B9trait%E7%9A%84%E5%BC%95%E7%94%A8%E8%BF%99%E4%B9%88%E5%A4%A7%EF%BC%9F%3C/p%3E%3Cp%3E%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E4%BB%BB%E4%BD%95%E5%AF%B9trait%E7%9A%84%E5%BC%95%E7%94%A8%E6%9C%89%E4%B8%A4%E4%B8%AA%E5%AD%97%E6%AE%B5%E3%80%82%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%AD%97%E6%AE%B5%EF%BC%8C%E6%98%AF%E5%88%9D%E5%A7%8B%E5%8C%96%E5%BC%95%E7%94%A8%E7%9A%84%E4%B8%80%E4%B8%AA%E6%8B%B7%E8%B4%9D%EF%BC%9B%E7%AC%AC%E4%BA%8C%E4%B8%AA%E5%AD%97%E6%AE%B5%EF%BC%8C%E6%98%AF%E4%B8%80%E4%B8%AA%E6%8C%87%E9%92%88%EF%BC%8C%E7%94%A8%E4%BA%8E%E9%80%89%E6%8B%A9%E5%90%88%E9%80%82%E2%80%9C%E7%89%88%E6%9C%AC%E2%80%9D%E7%9A%84%3Ccode%3Edraw%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E6%88%96%E8%80%85%E8%AF%B4%E5%85%B6%E5%AE%83%E5%87%BD%E6%95%B0%E7%9A%84%E5%8A%A8%E6%80%81%E6%B4%BE%E9%81%A3%E3%80%82%E5%AE%83%E7%9A%84%E5%90%8D%E5%AD%97%E6%98%AF%E2%80%9C%E8%99%9A%E6%8B%9F%E8%A1%A8%E6%8C%87%E9%92%88%EF%BC%8Cvirtual%20table%20pointer%E2%80%9D%E3%80%82%E8%AF%A5%E5%90%8D%E7%A7%B0%E6%9D%A5%E6%BA%90%E4%BA%8EC++%E3%80%82%3C/p%3E%3Cp%3E%E6%9C%80%E5%90%8E%EF%BC%8Ctrait%E7%9A%84%E5%BC%95%E7%94%A8%E7%9A%84%E5%BC%95%E7%94%A8%E8%A2%AB%E6%89%93%E5%8D%B0%EF%BC%8C%E5%AE%83%E6%98%AF%E4%B8%AA%E5%B8%B8%E8%A7%84%E5%BC%95%E7%94%A8%EF%BC%8C%E6%89%80%E4%BB%A5%E5%8D%A08%E4%B8%AA%E5%AD%97%E8%8A%82%E3%80%82%3C/p%3E%3Ch2%20id=%22Static-vs-Dynamic-Dispatch%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Static-vs-Dynamic-Dispatch%22%3E%C2%B6%3C/a%3EStatic%20vs.%20Dynamic%20Dispatch%3C/h2%3E%3Cp%3E%E6%88%91%E4%BB%AC%E5%8F%AF%E4%BB%A5%E7%94%A8%E9%9D%99%E6%80%81%E6%B4%BE%E9%81%A3%EF%BC%8C%E4%B9%9F%E5%8F%AF%E4%BB%A5%E7%94%A8%E5%8A%A8%E6%80%81%E6%B4%BE%E9%81%A3%EF%BC%8C%E5%93%AA%E4%B8%AA%E6%9B%B4%E9%80%82%E5%90%88%EF%BC%9F%3C/p%3E%3Cp%3E%E2%80%9C%E9%9D%99%E6%80%81static%E2%80%9D%E6%84%8F%E5%91%B3%E7%9D%80%E2%80%9C%E7%BC%96%E8%AF%91%E6%9C%9F%E2%80%9D%EF%BC%8C%E2%80%9C%E5%8A%A8%E6%80%81dynamic%E2%80%9D%E6%84%8F%E5%91%B3%E7%9D%80%E2%80%9C%E8%BF%90%E8%A1%8C%E6%9C%9F%E2%80%9D%EF%BC%8C%E9%9D%99%E6%80%81%E8%A6%81%E6%B1%82%E6%9B%B4%E5%A4%9A%E7%9A%84%E7%BC%96%E8%AF%91%E6%97%B6%E9%97%B4%EF%BC%8C%E4%BB%A5%E5%8F%8A%E7%94%9F%E6%88%90%E6%9B%B4%E5%A4%9A%E6%9B%B4%E5%BF%AB%E7%9A%84%E4%BB%A3%E7%A0%81%EF%BC%8C%E4%BD%86%E5%A6%82%E6%9E%9C%E7%BC%96%E8%AF%91%E6%9C%9F%E6%B2%A1%E6%9C%89%E8%B6%B3%E5%A4%9F%E7%9A%84%E5%8F%AF%E7%94%A8%E4%BF%A1%E6%81%AF%EF%BC%8C%E5%8A%A8%E6%80%81%E6%96%B9%E6%A1%88%E6%98%AF%E5%94%AF%E4%B8%80%E5%8F%AF%E8%83%BD%E7%9A%84%E9%80%89%E6%8B%A9%E3%80%82%3C/p%3E%3Cp%3E%E5%81%87%E8%AE%BE%E5%B0%86%E5%8E%9F%E6%9D%A5%E7%9A%84%E7%A4%BA%E4%BE%8B%E7%A8%8B%E5%BA%8F%E6%9B%B4%E6%94%B9%E4%B8%80%E4%B8%8B%E9%9C%80%E6%B1%82%EF%BC%8C%E8%A6%81%E6%B1%82%E5%A6%82%E6%9E%9C%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E2%80%9Cb%E2%80%9D%EF%BC%8C%E5%88%99%E8%BE%93%E5%87%BA%E5%B8%A6%E8%BE%B9%E6%A1%86%EF%BC%8C%E5%90%A6%E5%88%99%EF%BC%8C%E7%9B%B4%E6%8E%A5%E8%BE%93%E5%87%BA%E6%96%87%E6%9C%AC%E3%80%82%3C/p%3E%3Cp%3E%E4%BD%BF%E7%94%A8%E9%9D%99%E6%80%81%E6%B4%BE%E9%81%A3%EF%BC%8C%E7%A8%8B%E5%BA%8F%E6%9C%80%E5%90%8E%E9%83%A8%E5%88%86%E4%BC%9A%E5%8F%98%E4%B8%BA%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20SOLUTION%201/ter%20/%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edraw_text%3C/span%3E&amp;lt;T&amp;gt;(txt:%20T)%20%3Cspan%20class=%22keyword%22%3Ewhere%3C/span%3E%20T:%20Draw%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Etxt.%3Cspan%20class=%22title%20function_%20invoke__%22%3Edraw%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Einput%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3EString%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Estd::io::%3Cspan%20class=%22title%20function_%20invoke__%22%3Estdin%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Eread_line%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20input).%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20input.%3Cspan%20class=%22title%20function_%20invoke__%22%3Etrim%3C/span%3E()%20==%20%3Cspan%20class=%22string%22%3E&amp;quot;b&amp;quot;%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Edraw_text%3C/span%3E(boxed_greeting);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%20%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Edraw_text%3C/span%3E(greeting);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%BD%93%E4%BD%BF%E7%94%A8%E5%8A%A8%E6%80%81%E6%B4%BE%E9%81%A3%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20SOLUTION%202/bis%20/%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edraw_text%3C/span%3E(txt:%20&amp;amp;Draw)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Etxt.%3Cspan%20class=%22title%20function_%20invoke__%22%3Edraw%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Einput%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3EString%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Estd::io::%3Cspan%20class=%22title%20function_%20invoke__%22%3Estdin%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Eread_line%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20input).%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Edr%3C/span%3E:%20&amp;amp;Draw%20=%20%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20input.%3Cspan%20class=%22title%20function_%20invoke__%22%3Etrim%3C/span%3E()%20==%20%3Cspan%20class=%22string%22%3E&amp;quot;b&amp;quot;%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;amp;boxed_greeting%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%20%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;amp;greeting%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Edraw_text%3C/span%3E(dr);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E9%9D%99%E6%80%81%E6%B4%BE%E9%81%A3%E8%A6%81%E6%B1%82%E5%86%99%E5%87%A0%E4%B8%AA%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%EF%BC%8C%E5%8A%A8%E6%80%81%E6%B4%BE%E9%81%A3%E5%85%81%E8%AE%B8%E4%BD%A0%E5%B0%86%E9%80%89%E6%8B%A9%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%B4%BE%E9%81%A3%E7%BB%99%E5%8F%98%E9%87%8F%3Ccode%3Edr%3C/code%3E%EF%BC%8C%E7%84%B6%E5%90%8E%E4%BB%85%E9%9C%80%E8%A6%81%E4%BA%9B%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E6%8E%A5%E6%94%B6%E8%BF%99%E4%B8%AA%E5%8F%98%E9%87%8F%E3%80%82%3C/p%3E%3Cp%3E%E5%8F%A6%E5%A4%96%EF%BC%8C%E9%9D%99%E6%80%81%E6%B4%BE%E9%81%A3%E4%BD%BF%E7%94%A8%E4%BA%86%E6%B3%9B%E5%9E%8B%E6%96%B9%E6%B3%95%EF%BC%8C%E8%BF%99%E4%B8%AA%E6%8A%80%E6%9C%AF%E5%8F%AF%E4%BB%A5%E4%BC%9A%E5%AF%BC%E8%87%B4%E4%BB%A3%E7%A0%81%E8%86%A8%E8%83%80%EF%BC%8C%E5%8F%AF%E8%83%BD%E6%9C%80%E5%90%8E%E4%BC%9A%E5%8F%98%E5%BE%97%E8%B6%8A%E6%9D%A5%E8%B6%8A%E6%85%A2%E3%80%82%3C/p%3E" type="image"/>
    
    
    <category term="learning" scheme="https://galudisu.info/categories/learning/"/>
    
    
    <category term="rust" scheme="https://galudisu.info/tags/rust/"/>
    
  </entry>
  
  <entry>
    <title>rust基础入门[18] - Using Traits</title>
    <link href="https://galudisu.info/2023/01/18/rust/beginning/chapter18_Using%20Traits/"/>
    <id>https://galudisu.info/2023/01/18/rust/beginning/chapter18_Using%20Traits/</id>
    <published>2023-01-18T07:50:46.000Z</published>
    <updated>2025-04-27T11:59:08.282Z</updated>
    
    <content type="html"><![CDATA[<p>本章覆盖有：</p><ul><li><code>traits</code>如何避免在泛型函数调用中的不能理解的编译错误信息</li><li>泛型参数的边界如何被单子化(monolithic)，或如何分解为几个traits</li><li>如何创建函数体返回内的traits</li><li>如何简单地使用<code>self</code>关键字，通过&quot;点，dot notation&quot;操作来创建函数</li><li>如何迭代一个trait</li><li>如何定义类型别名</li><li>如何定义泛型迭代器</li><li>如何使用关联类型来简化泛型迭代器的使用</li><li>如何定义字节的迭代器</li></ul><span id="more"></span><h2 id="The-Need-for-Traits"><a class="header-anchor" href="#The-Need-for-Traits">¶</a>The Need for Traits</h2><p>假设我们要计算一个4次方根，该函数命名为“quartic_root”。以及调用标准库的<code>sqrt</code>函数，我们会写，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">quartic_root</span>(x: <span class="type">f64</span>) <span class="punctuation">-&gt;</span> <span class="type">f64</span> &#123; x.<span class="title function_ invoke__">sqrt</span>().<span class="title function_ invoke__">sqrt</span>() &#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">qr</span> = <span class="title function_ invoke__">quartic_root</span>(<span class="number">100f64</span>);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>, qr * qr * qr * qr, qr);</span><br></pre></td></tr></table></figure><p>结果会打印：“100.00000000000003 3.1622776601683795”。</p><p>但我们还需要计算32位数的4次方根，于是又，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">quartic_root_f64</span>(x: <span class="type">f64</span>) <span class="punctuation">-&gt;</span> <span class="type">f64</span> &#123; x.<span class="title function_ invoke__">sqrt</span>().<span class="title function_ invoke__">sqrt</span>() &#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">quartic_root_f32</span>(x: <span class="type">f32</span>) <span class="punctuation">-&gt;</span> <span class="type">f32</span> &#123; x.<span class="title function_ invoke__">sqrt</span>().<span class="title function_ invoke__">sqrt</span>() &#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>,</span><br><span class="line">    <span class="title function_ invoke__">quartic_root_f64</span>(<span class="number">100f64</span>),</span><br><span class="line">    <span class="title function_ invoke__">quartic_root_f32</span>(<span class="number">100f32</span>));</span><br></pre></td></tr></table></figure><p>根据前面我们所学知识，我们可以定义泛型函数来处理，于是，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">quartic_root</span>&lt;Number&gt;(x: Number) <span class="punctuation">-&gt;</span> Number &#123;</span><br><span class="line">x.<span class="title function_ invoke__">sqrt</span>().<span class="title function_ invoke__">sqrt</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>,</span><br><span class="line">    <span class="title function_ invoke__">quartic_root</span>(<span class="number">100f64</span>),</span><br><span class="line">    <span class="title function_ invoke__">quartic_root</span>(<span class="number">100f32</span>));</span><br></pre></td></tr></table></figure><p>但这段代码是不合法的，生成编译错误，“no method named <code>sqrt</code> found for type <code>Number</code> in the current scope”。它意思是说，泛型类型<code>Number</code>没有这个<code>sqrt</code>函数。</p><p>在这方面，Rust不同于C++。C++可以通过模板来关联这个泛型函数，</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Number&gt;</span><br><span class="line"><span class="function">Number <span class="title">quartic_root</span><span class="params">(Number x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">sqrt</span>(<span class="built_in">sqrt</span>(x));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">std::count &lt;&lt; <span class="built_in">quartic_root</span>((<span class="type">float</span>)<span class="number">100</span>) &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; <span class="built_in">quartic_root</span>((<span class="type">double</span>)<span class="number">100</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>即使C++中的<code>NUmber</code>泛型类型没有这个可用的<code>sqrt</code>函数，编译器也不知这个表达式是否允许。但当调用<code>quartic_root</code>时，函数被计数，编译期生成两个具体函数<code>quartic_root&lt;float&gt;</code>和<code>quartic_root&lt;double&gt;</code>。这叫“泛型函数实例化 generic function instantiation”，或“function monomorphization”。这种实例化会检测具体的类型。</p><p>C++这种方案带来的缺陷很明显，即当出现程序错误时，譬如，</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Number&gt;</span><br><span class="line"><span class="function">Number <span class="title">quartic_root</span><span class="params">(Number x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">sqrt</span>(<span class="built_in">sqrt</span>(x));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">std::count &lt;&lt; <span class="built_in">quartic_root</span>(<span class="string">&quot;Hello&quot;</span>);</span><br></pre></td></tr></table></figure><p>编译器会实例化这个<code>const char*</code>类型的具体函数，它会生成<code>sqrt(const char*)</code>的方法签名。但没有这个函数声明，所以会导致出现变异错误。</p><p>这个缺陷带来的问题是，这个泛型类型<code>Number</code>，它所提供的具体类型的函数<code>sqrt</code>可能是由某一位开发者编写的，以及另一种具体类型的<code>sqrt</code>又是另外一位开发者编写的。可能两位开发者的<code>sqrt</code>函数签名并不一样！！</p><p>另外类似于C++这种<code>quartic_root</code>的实现，代码阅读是晦涩难懂的，因为它大部分变量、函数、类型都属于库实现(实际上有很多库…)，而不是接口。要理解它，不仅需要知道它的API使用；还需要知道它的库的实现。</p><h2 id="Traits-to-the-Rescue"><a class="header-anchor" href="#Traits-to-the-Rescue">¶</a>Traits to the Rescue</h2><p>Rust中为了避免这种类似于C++的编译为题，提供了trait来澄清复杂错误消息的各种情况，因为它更贴近真实软件环境。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">trait</span> <span class="title class_">HasSquareRoot</span> &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">sq_root</span>(<span class="keyword">self</span>) <span class="punctuation">-&gt;</span> <span class="keyword">Self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">HasSquareRoot</span> <span class="keyword">for</span> <span class="title class_">f32</span> &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">sq_root</span>(<span class="keyword">self</span>) <span class="punctuation">-&gt;</span> <span class="keyword">Self</span> &#123; <span class="type">f32</span>::<span class="title function_ invoke__">sqrt</span>(<span class="keyword">self</span>) &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">HasSquareRoot</span> <span class="keyword">for</span> <span class="title class_">f64</span> &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">sq_root</span>(<span class="keyword">self</span>) <span class="punctuation">-&gt;</span> <span class="keyword">Self</span> &#123; <span class="type">f64</span>::<span class="title function_ invoke__">sqrt</span>(<span class="keyword">self</span>) &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">quartic_root</span>&lt;Number&gt;(x: Number) <span class="punctuation">-&gt;</span> Number</span><br><span class="line">    <span class="keyword">where</span> Number: HasSquareRoot &#123;</span><br><span class="line">    x.<span class="title function_ invoke__">sq_root</span>().<span class="title function_ invoke__">sq_root</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>, <span class="title function_ invoke__">quartic_root</span>(<span class="number">100f64</span>), <span class="title function_ invoke__">quartic_root</span>(<span class="number">100f32</span>));</span><br></pre></td></tr></table></figure><p>结果将打印：“3.1622776601683795 3.1622777”</p><p>第一个trait命名为“HasSquareRoot”，包含函数签名“sq_root”。一个Rust trait是一个函数签名的容器；它表示这个trait有能力使用某些函数。这里表示了<code>HasSquareRoot</code>trait可以在有“HasSquareRoot”的地方调用“sq_root”函数，或者更常规的说法是，任何满足“HasSquareRoot”trait的类型，都可以调用这个<code>sq_root</code>函数。</p><p>但究竟哪些类型满足“HasSquareRoot”？没有定义，因此接下来两个语句，使得<code>f32</code>类型和<code>f64</code>类型满足这个trait。换言之，这些<code>impl</code>语句，可以从给定的<code>f32</code>和<code>f64</code>类型调用这个<code>sq_root</code>。</p><p>这些<code>impl</code>反映了“HasSquareRoot”仅是一个程序接口，或API，它需要又具体的类型实现。所以当然地，<code>impl</code>语句的函数签名，需要跟原来的前一个方法签名一样。不同的是<code>impl</code>包含有函数实现。</p><p>Rust的trait类似于Java或C#接口，或没有方法体的抽象类。</p><p>现在有了具体的类型实现了。第四条语句定义了<code>quartic_root</code>泛型函数，参数化类型参数是<code>Number</code>。然而，这个声明有一个新的段：<code>where Number: HasSquareRoot</code>。这种从句叫做——“trait bound”，它是方法签名的一部分。它字面量的意思是，<code>Number</code>泛型类型必须实现<code>HasSquareRoot</code>特质。</p><p>代码调用函数是，这个<code>where</code>从句表示“当调用该函数，你必须确保你传递的参数化类型实现了<code>HashSquareRoot</code>trait”。例如这个的100f32和100f64，对应类型是f32和f64。这两种类型都有<code>hasSquareRoot</code>的实现，因此它们是合法参数。但如果替换为“quartic_root(“Hello”));”，这里没有<code>&amp;str</code>的“HasSquareRoot”的实现，因此违反了条约。以及会得到编译错误“the traitbound <code>&amp;str: main::HasSquareRoot</code> is not satisfied”。</p><p>又或者你替换为“quartic_root(81i32));”，也会得到编译错误，因为“HasSquareRoot”没有<code>i32</code>类型的实现。</p><p>注意的时，<code>x</code>表达式在函数体内，它的类型仅可能是<code>Number</code>，实际类型并不清楚，所以你不能将<code>x.sq_root()</code>，写为<code>x.abs().sq_root()</code>这种，编译错误<code>abs()</code>在<code>Number</code>范围内没有定义。</p><h2 id="Generic-Functions-with-No-Trait-Bounds"><a class="header-anchor" href="#Generic-Functions-with-No-Trait-Bounds">¶</a>Generic Functions with No Trait Bounds</h2><p>不带特质边界的泛型函数是很少见的，比如这段代码，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">a</span> = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">b</span> = <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;, &#123;&#125;; &quot;</span>, a, b);</span><br><span class="line">std::mem::<span class="title function_ invoke__">swap</span>(&amp;<span class="keyword">mut</span> a, &amp;<span class="keyword">mut</span> b);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;, &#123;&#125;;, a, b);</span></span><br></pre></td></tr></table></figure><p>泛型函数<code>swap</code>的方法签名是：<code>fn swap&lt;T&gt;(x: &amp;mut T, y: &amp;mut T)</code>。它不需要使用<code>where</code>从句进行trait bound。因为它直接交换了两个对象的地址。实际编码过程中，泛型函数，类型参数总是需要边界绑定的。Rust代码设计，总是强调类型安全这个概念，也是我们编写代码的原则。</p><h2 id="Scope-of-Traits"><a class="header-anchor" href="#Scope-of-Traits">¶</a>Scope of Traits</h2><p>前面用了一个<code>sq_root</code>来区分标准库的<code>sqrt</code>函数，不过我们也可以将其命名为<code>sqrt</code>，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">sqrt</span>() &#123;&#125;</span><br><span class="line"><span class="keyword">trait</span> <span class="title class_">HasSquareRoot</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">sqrt</span>(<span class="keyword">self</span>) <span class="punctuation">-&gt;</span> <span class="keyword">Self</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">HasSquareRoot</span> <span class="keyword">for</span> <span class="title class_">f32</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">sqrt</span>(<span class="keyword">self</span>) <span class="punctuation">-&gt;</span> <span class="keyword">Self</span> &#123; <span class="type">f32</span>::<span class="title function_ invoke__">sqrt</span>(<span class="keyword">self</span>) &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">HasSquareRoot</span> <span class="keyword">for</span> <span class="title class_">f64</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">sqrt</span>(<span class="keyword">self</span>) <span class="punctuation">-&gt;</span> <span class="keyword">Self</span> &#123; <span class="type">f64</span>::<span class="title function_ invoke__">sqrt</span>(<span class="keyword">self</span>) &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">quartic_root</span>&lt;Number&gt;(x: Number) <span class="punctuation">-&gt;</span> Number</span><br><span class="line"><span class="keyword">where</span> Number: HasSquareRoot &#123;</span><br><span class="line">x.<span class="title function_ invoke__">sqrt</span>().<span class="title function_ invoke__">sqrt</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">sqrt</span>();</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>,</span><br><span class="line"><span class="title function_ invoke__">quartic_root</span>(<span class="number">100f64</span>),</span><br><span class="line"><span class="title function_ invoke__">quartic_root</span>(<span class="number">100f32</span>));</span><br></pre></td></tr></table></figure><p>同一个作用范围内是不允许有同名方法的。不过上面代码是合法的；因为它们并不作用在同一个scope。<code>fn sqrt()</code>是个本地函数，在HasSquareRoot外；<code>fn sqrt(self)</code>作用在HasSquareRoot内；<code>f32::sqrt</code>和<code>f64::sqrt</code>是个标准库调用。</p><h2 id="Traits-with-Numltiple-Functions"><a class="header-anchor" href="#Traits-with-Numltiple-Functions">¶</a>Traits with Numltiple Functions</h2><p>前面的例子有个问题是，如果传入的是“-100f64”或“-100f32”，程序会打印“NaN，Not a Number”，我们想处理负数的情况，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">trait</span> <span class="title class_">HasSquareRoot</span> &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">sq_root</span>(<span class="keyword">self</span>) <span class="punctuation">-&gt;</span> <span class="keyword">Self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">HasSquareRoot</span> <span class="keyword">for</span> <span class="title class_">f32</span> &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">sq_root</span>(<span class="keyword">self</span>) <span class="punctuation">-&gt;</span> <span class="keyword">Self</span> &#123; <span class="type">f32</span>::<span class="title function_ invoke__">sqrt</span>(<span class="keyword">self</span>) &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">HasSquareRoot</span> <span class="keyword">for</span> <span class="title class_">f64</span> &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">sq_root</span>(<span class="keyword">self</span>) <span class="punctuation">-&gt;</span> <span class="keyword">Self</span> &#123; <span class="type">f64</span>::<span class="title function_ invoke__">sqrt</span>(<span class="keyword">self</span>) &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">trait</span> <span class="title class_">HasAbsoluteValue</span> &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">abs</span>(<span class="keyword">self</span>) <span class="punctuation">-&gt;</span> <span class="keyword">Self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">HasAbsoluteValue</span> <span class="keyword">for</span> <span class="title class_">f32</span> &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">abs</span>(<span class="keyword">self</span>) <span class="punctuation">-&gt;</span> <span class="keyword">Self</span> &#123; <span class="type">f32</span>::<span class="title function_ invoke__">abs</span>(<span class="keyword">self</span>) &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">HasAbsoluteValue</span> <span class="keyword">for</span> <span class="title class_">f64</span> &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">abs</span>(<span class="keyword">self</span>) <span class="punctuation">-&gt;</span> <span class="keyword">Self</span> &#123; <span class="type">f64</span>::<span class="title function_ invoke__">abs</span>(<span class="keyword">self</span>) &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">quartic_root</span>&lt;Number&gt;(x: Number) <span class="punctuation">-&gt;</span> Number</span><br><span class="line">    <span class="keyword">where</span> Number: HasSquareRoot + HasAbsoluteValue &#123;</span><br><span class="line">    x.<span class="title function_ invoke__">abs</span>().<span class="title function_ invoke__">sq_root</span>().<span class="title function_ invoke__">sq_root</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多种类型，可以组合不同trait，使用<code>+</code>。</p><h2 id="Methods"><a class="header-anchor" href="#Methods">¶</a>Methods</h2><p>目前我们接触到的函数的调用方式有两种，一种是<code>f(x, y)</code>，另一种是<code>x.f(y)</code>。例如之前例子的<code>String::new()</code>、<code>String::form(&quot;&quot;)</code>写法，和<code>&quot;abcd&quot;.to_string()</code>，<code>&quot;abcd&quot;.len()</code>。一种是点操作，一种是函数调用操作。</p><p>任何函数都可以使用者两种调用方式，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;,&quot;</span>, <span class="string">&quot;abcd&quot;</span>.<span class="title function_ invoke__">to_string</span>());</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;,&quot;</span>,[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>].<span class="title function_ invoke__">len</span>());</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">v1</span> = <span class="built_in">vec!</span>[<span class="number">0u8</span>; <span class="number">0</span>];</span><br><span class="line">v1.<span class="title function_ invoke__">push</span>(<span class="number">7u8</span>);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;; &quot;</span>, v1);</span><br><span class="line"></span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;,&quot;</span>, std::string::<span class="built_in">ToString</span>::<span class="title function_ invoke__">to_string</span>(<span class="string">&quot;abcd&quot;</span>));</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;,&quot;</span>, &lt;[<span class="type">i32</span>]&gt;::<span class="title function_ invoke__">len</span>(&amp;[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]));</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">v2</span> = <span class="built_in">vec!</span>[<span class="number">0u8</span>; <span class="number">0</span>];</span><br><span class="line"><span class="type">Vec</span>::<span class="title function_ invoke__">push</span>(&amp;<span class="keyword">mut</span> v2, <span class="number">7u8</span>);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, v2);</span><br></pre></td></tr></table></figure><p>虽然可以这样做，但有scoping问题。在标准库中，有很多同名的函数<code>to_string</code>、<code>len</code>、<code>push</code>…。使用点操作，自然会选择适当的函数。但是使用函数调用，函数的范围必须显式写明。例如，<code>to_string</code>的范围在<code>std::string::ToString</code>，<code>len</code>函数的范围在<code>&lt;[i32]&gt;</code>，<code>push</code>的作用范围在<code>Vec</code>。</p><p>如果不写清楚，譬如这段代码，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">double</span>(x: <span class="type">i32</span>) <span class="punctuation">-&gt;</span> <span class="type">i32</span> &#123;</span><br><span class="line">x * <span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, <span class="title function_ invoke__">double</span>(<span class="number">7i32</span>));</span><br></pre></td></tr></table></figure><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">double</span>(x: <span class="type">i32</span>) <span class="punctuation">-&gt;</span> <span class="type">i32</span> &#123;</span><br><span class="line">x * <span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, <span class="number">7i32</span>.<span class="title function_ invoke__">double</span>());</span><br></pre></td></tr></table></figure><p>这里的点操作调用，会发生编译错误，它会说当前范围内，<code>i32</code>类型没有double方法。区别于方法和函数，Rust中点操作的调用，区分为方法，它仅能在有trait实现的声明的方法中调用，所以，要允许点操作，可以改为，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">trait</span> <span class="title class_">CanBeDoubled</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">double</span>(<span class="keyword">self</span>) <span class="punctuation">-&gt;</span> <span class="keyword">Self</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">CanBeDoubled</span> <span class="keyword">for</span> <span class="title class_">i32</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">double</span>(<span class="keyword">self</span>) <span class="punctuation">-&gt;</span> <span class="keyword">Self</span> &#123;</span><br><span class="line"><span class="keyword">self</span> * <span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, <span class="number">7i32</span>.<span class="title function_ invoke__">double</span>());</span><br></pre></td></tr></table></figure><p>trait的名字是任意的。通常trait仅包含一个函数，trait的名字使用Pascal-case记法。对于类型来说，像<code>CanBeDoubled</code>，从命名上看出，它表示有一个<code>double</code>函数可以获取自身<code>self</code>类型的一个值，遵循这种命名规范便于阅读理解。</p><p>当编译这段表达式时，编译器会搜索支持<code>i32</code>的<code>double</code>操作，并找到对应的方法签名。</p><h2 id="The-“self”-and-“Slef”-Keywords"><a class="header-anchor" href="#The-“self”-and-“Slef”-Keywords">¶</a>The “self” and “Slef” Keywords</h2><p>前面一个小节，我们发现了两个关键字：“self”和“Self”。</p><p>在语句<code>trait CanBeDoubled &#123; fn double(self) -&gt; Self; &#125;</code>中，<code>self</code>表示<code>double</code>方法将作用的值，<code>Self</code>表示<code>self</code>的类型。</p><p>因此，<code>self</code>是一个方法的预设参数，<code>Self</code>表示这一个参数的类型。因此，<code>self</code>和<code>Self</code>仅能被用于一个<code>trait</code>或<code>impl</code>的块内。以及，如果有方法，<code>self</code>必须是方法的第一个参数。</p><p>在<code>impl CanBeDoubled for i32</code>块内，下面6行是等价的：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">double</span>(<span class="keyword">self</span>) <span class="punctuation">-&gt;</span> <span class="keyword">Self</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">double</span>(<span class="keyword">self</span>: <span class="keyword">Self</span>) <span class="punctuation">-&gt;</span> <span class="keyword">Self</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">double</span>(<span class="keyword">self</span>: <span class="type">i32</span>) <span class="punctuation">-&gt;</span> <span class="keyword">Self</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">double</span>(<span class="keyword">self</span>) <span class="punctuation">-&gt;</span> <span class="type">i32</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">double</span>(<span class="keyword">self</span>: <span class="keyword">Self</span>) <span class="punctuation">-&gt;</span> <span class="type">i32</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">double</span>(<span class="keyword">self</span>: <span class="type">i32</span>) <span class="punctuation">-&gt;</span> <span class="type">i32</span> &#123;</span><br></pre></td></tr></table></figure><p>第一行和第四行给定的<code>self</code>参数带有隐式类型；只不过，<code>self</code>的类型就是<code>Self</code>，所以也可以显式指定，又因为在<code>impl</code>块内，<code>Self</code>就是<code>i32</code>，所以也可以替换为<code>i32</code>。</p><p>不过最常使用的是第一种写法，它更接近泛型编程概念。</p><p>让我们看看另一种情况，我们希望有这样一个表达式<code>&quot;foobarbaz&quot;.letters_count('a')&quot;</code>统计字符串中有多少个字符，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">trait</span> <span class="title class_">LettersCount</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">letters_count</span>(&amp;<span class="keyword">self</span>, ch: <span class="type">char</span>) <span class="punctuation">-&gt;</span> <span class="type">usize</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">LettersCount</span> <span class="keyword">for</span> <span class="title class_">str</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">letters_count</span>(&amp;<span class="keyword">self</span>, ch: <span class="type">char</span>) <span class="punctuation">-&gt;</span> <span class="type">usize</span> &#123;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">count</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="variable">c</span> <span class="keyword">in</span> <span class="keyword">self</span>.<span class="title function_ invoke__">chars</span>() &#123;</span><br><span class="line"><span class="keyword">if</span> c == ch &#123;</span><br><span class="line">count += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">count</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, <span class="string">&quot;&quot;</span>.leters_count(<span class="string">&#x27;a&#x27;</span>));</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, <span class="string">&quot;ddd&quot;</span>.leters_count(<span class="string">&#x27;a&#x27;</span>));</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, <span class="string">&quot;ddd&quot;</span>.leters_count(<span class="string">&#x27;d&#x27;</span>));</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, <span class="string">&quot;foobarbaz&quot;</span>.leters_count(<span class="string">&#x27;a&#x27;</span>));</span><br></pre></td></tr></table></figure><p>因为我们想用点操作，首先声明一个trait，它的名字来源于函数名。这个函数需要两个参数：字符串切片用于搜索，字符用于查找。但我们不想将字符串切片的拷贝作为参数传递；我们仅想直接传递字符串切片引用，因此我们将参数声明为<code>&amp;self</code>，这里的<code>self</code>就是一个字符串切片，有任意长度；<code>&amp;self</code>是一个切片引用，有一对指针的大小(字符串切片有header和content的pointer)。</p><p>返回值类型是<code>usize</code>表示非负整数。</p><p><code>impl</code>实现了使用了命令式风格。浏览<code>chars()</code>迭代器的所有字符，出现要搜索的字符，则统计一次。</p><p>如果使用函数式风风格，可以更简短，如下，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">self</span>.<span class="title function_ invoke__">chars</span>().<span class="title function_ invoke__">filter</span>(|c| *c == ch).<span class="title function_ invoke__">count</span>()</span><br></pre></td></tr></table></figure><h2 id="Standard-Traits"><a class="header-anchor" href="#Standard-Traits">¶</a>Standard Traits</h2><p>在最开始的章节，我们用到了宏<code>print</code>、<code>println</code>和<code>format</code>。我们可以用<code>&#123;&#125;</code>占位符表示支持的类型，使用<code>&#123;:?&#125;</code>来进行调试。</p><p>但怎么知道某些类型支持<code>&#123;&#125;</code>占位符，其它类型却不支持？我自己写的类型如何实现支持这种占位符？</p><p>实际上，这些宏使用了<code>fmt</code>函数，有标准库的<code>std::fmt::Display</code>提供了trait。所有原生类型都实现了这个trait，所以你可以给自己的类型实现，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Complex</span> &#123;</span><br><span class="line">re: <span class="type">f64</span>,</span><br><span class="line">im: <span class="type">f64</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">std</span>::fmt::Display <span class="keyword">for</span> <span class="title class_">Compex</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">fmt</span>(&amp;<span class="keyword">self</span>, &amp;<span class="keyword">mut</span> std::fmt::Formatter) <span class="punctuation">-&gt;</span> std::fmt::<span class="type">Result</span> &#123;</span><br><span class="line"><span class="built_in">write!</span>(</span><br><span class="line">f,</span><br><span class="line"><span class="string">&quot;&#123;&#125; &#123;&#125; &#123;&#125;i&quot;</span>,</span><br><span class="line"><span class="keyword">self</span>.re,</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">self</span>.im &gt;= <span class="number">0</span>. &#123; <span class="string">&#x27;+&#x27;</span> &#125; <span class="keyword">else</span> &#123; <span class="string">&#x27;-&#x27;</span> &#125;,</span><br><span class="line"><span class="keyword">self</span>.im.<span class="title function_ invoke__">abs</span>()</span><br><span class="line">)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">c1</span> = Complex &#123; re: -<span class="number">2.3</span>, im: <span class="number">0</span>. &#125;;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">c2</span> = Complex &#123; re: -<span class="number">2.1</span>, im: -<span class="number">5.2</span> &#125;;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">c3</span> = Complex &#123; re: -<span class="number">2.2</span>, im: <span class="number">5.2</span> &#125;;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;, &#123;&#125;, &#123;&#125;&quot;</span>, c1, c2, c3);</span><br></pre></td></tr></table></figure><p>结果会打印：“-2.3 + 0i, -2.1 - 5.2i, -2.2 + 5.2i”。</p><p>对于原生类型的实现traits，标准库中有非常多函数提供。</p><h2 id="The-“Terator”-Trait"><a class="header-anchor" href="#The-“Terator”-Trait">¶</a>The “Terator” Trait</h2><p>一个非常有趣的标准库trait是“Iterator”。让我们看看它主要解决哪方面问题。</p><p>例如编写一个函数，给定参数<code>range</code>，返回第三个元素，长度不够，则返回None。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">get_third</span>(r: std::ops::Range&lt;<span class="type">u32</span>&gt;) <span class="punctuation">-&gt;</span> <span class="type">Option</span>&lt;<span class="type">u32</span>&gt; &#123;</span><br><span class="line"><span class="keyword">if</span> r.<span class="title function_ invoke__">len</span>() &gt;= <span class="number">3</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">Some</span>(r.start + <span class="number">2</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="literal">None</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125; &#123;:?&#125;&quot;</span>, <span class="title function_ invoke__">get_third</span>(<span class="number">10</span>..<span class="number">12</span>), <span class="title function_ invoke__">get_third</span>(<span class="number">20</span>..<span class="number">23</span>));</span><br></pre></td></tr></table></figure><p>将类型换成<code>slice</code>怎样，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">get_third</span>(s: &amp;[<span class="type">f64</span>]) <span class="punctuation">-&gt;</span> <span class="type">Option</span>&lt;<span class="type">f64</span>&gt; &#123;</span><br><span class="line"><span class="keyword">if</span> s.<span class="title function_ invoke__">len</span>() &gt;= <span class="number">3</span> &#123;</span><br><span class="line"><span class="title function_ invoke__">Some</span>(s[<span class="number">2</span>])</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="literal">None</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125; &#123;:?&#125;&quot;</span>, <span class="title function_ invoke__">get_third</span>(&amp;[<span class="number">1.0</span>, <span class="number">2.0</span>]), <span class="title function_ invoke__">get_thrid</span>(&amp;[<span class="number">1.1</span>, <span class="number">2.1</span>, <span class="number">3.1</span>]);</span><br></pre></td></tr></table></figure><p>这两个程序非常相似。但使用的是迭代器，应该将它们写成一个泛型函数，你可能会写成</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">get_third</span>&lt;Iter, Item&gt;(<span class="keyword">mut</span> iterator: Iter) <span class="punctuation">-&gt;</span> <span class="type">Option</span>&lt;Item&gt; &#123;</span><br><span class="line">iterator.<span class="title function_ invoke__">next</span>();</span><br><span class="line">iterator.<span class="title function_ invoke__">next</span>();</span><br><span class="line">iterator.<span class="title function_ invoke__">next</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125; &#123;:?&#125;&quot;</span>, <span class="title function_ invoke__">get_third</span>(<span class="number">0</span>..<span class="number">9</span>), <span class="title function_ invoke__">get_third</span>([<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>].<span class="title function_ invoke__">iter</span>()));</span><br></pre></td></tr></table></figure><p>你会得到几个编译错误。这种想法是好的，但有几个问题，</p><ul><li><code>iterator</code>变量没有边界，所以它没有<code>next</code>函数。当我们调用<code>get_third</code>函数式，我们看到参数确实是iterator，以为有<code>next</code>函数。然而，Rust需要知道泛型参数对象有哪些函数可以被调用，</li><li>再看<code>get_thrid</code>函数的调用，它的泛型参数<code>Item</code>不能被推断，因为没有表达式表明给这个泛型参数传递了值。</li></ul><p>对于第一种错误，表明“迭代器”的概念没有被Rust语言定义。这个概念由Rust标准库的一个标准trait——<code>Iterator</code>定义了。我们知道迭代器都有一个<code>next</code>函数，所以任何迭代器都必须要有这个函数。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">get_third</span>&lt;Iter, Item&gt;(<span class="keyword">mut</span> iterator: Iter) <span class="punctuation">-&gt;</span> <span class="type">Option</span>&lt;Iterm&gt; </span><br><span class="line"><span class="keyword">where</span> Iter: std::iter::<span class="built_in">Iterator</span> &#123;</span><br></pre></td></tr></table></figure><p>但仍然有第二个错误存在：怎么确定<code>Item</code>的具体类型。为了解决这个问题，需要首先介绍<code>type</code>关键字。</p><h2 id="The-“type”-Keyword"><a class="header-anchor" href="#The-“type”-Keyword">¶</a>The “type” Keyword</h2><p>Rust中的<code>type</code>对于C语言的<code>typedef</code>关键字，它相当于一个类型的别名，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">Number</span> = <span class="type">f32</span>;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">f1</span>(x: Number) <span class="punctuation">-&gt;</span> Number &#123; x &#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">f2</span>(x: Number) <span class="punctuation">-&gt;</span> NUmber &#123; x &#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">a</span>: Number = <span class="number">2.3</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">b</span>: Number = <span class="number">3.4</span>;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>, <span class="title function_ invoke__">f1</span>(a), <span class="title function_ invoke__">f2</span>(b));</span><br></pre></td></tr></table></figure><p>使用<code>type</code>结构有两点好处：</p><ul><li>简洁代码，它使用了一个有意义的名字来表示原生类型了</li><li>方便性，不用频繁切换类型，只需要修改type的类型即可</li></ul><p>但<code>type</code>实际上有另一个重要用途，</p><h2 id="Generic-Traits"><a class="header-anchor" href="#Generic-Traits">¶</a>Generic Traits</h2><p>前面的章节我们知道有泛型函数和泛型结构体。trait也可以由一个或多个类型参数化表示，即要求它的函数需要泛型参数的情况。这个概念和Java的接口类似，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">trait</span> <span class="title class_">Searchable</span>&lt;Key&gt; &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">contains</span>(&amp;<span class="keyword">self</span>, key: Key) <span class="punctuation">-&gt;</span> <span class="type">bool</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">is_present</span>&lt;Collection&gt;(coll: &amp;Collection, id: <span class="type">u32</span>) <span class="punctuation">-&gt;</span> <span class="type">bool</span></span><br><span class="line"><span class="keyword">where</span> Collection: Searchable&lt;<span class="type">u32</span>&gt; &#123;</span><br><span class="line">coll.<span class="title function_ invoke__">contains</span>(id)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是该代码的完整实现，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">trait</span> <span class="title class_">Searchable</span>&lt;Key&gt; &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">contains</span>(&amp;<span class="keyword">self</span>, key: Key) <span class="punctuation">-&gt;</span> <span class="type">bool</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">RecordWithId</span> &#123;</span><br><span class="line">    id: <span class="type">u32</span>,</span><br><span class="line">    _descr: <span class="type">String</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">NameSetWithId</span> &#123;</span><br><span class="line">    data: <span class="type">Vec</span>&lt;RecordWithId&gt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">Searchable</span>&lt;<span class="type">u32</span>&gt; <span class="keyword">for</span> <span class="title class_">NameSetWithId</span> &#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">contains</span>(&amp;<span class="keyword">self</span>, key: <span class="type">u32</span>) <span class="punctuation">-&gt;</span> <span class="type">bool</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> <span class="variable">record</span> <span class="keyword">in</span> <span class="keyword">self</span>.data.<span class="title function_ invoke__">iter</span>() &#123;</span><br><span class="line">            <span class="keyword">if</span> record.id == key &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">is_present</span>&lt;Collection&gt;(coll: &amp;Collection, id: <span class="type">u32</span>) <span class="punctuation">-&gt;</span> <span class="type">bool</span></span><br><span class="line"><span class="keyword">where</span> Collection: Searchable&lt;<span class="type">u32</span>&gt; &#123;</span><br><span class="line">    coll.<span class="title function_ invoke__">contains</span>(id)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="variable">names</span> = NameSetWithId &#123;</span><br><span class="line">data: <span class="built_in">vec!</span>[</span><br><span class="line">RecordWithId &#123;</span><br><span class="line">id: <span class="number">34</span>,</span><br><span class="line">_descr: <span class="string">&quot;John&quot;</span>.<span class="title function_ invoke__">to_string</span>(),</span><br><span class="line">&#125;,</span><br><span class="line">RecordWithId &#123;</span><br><span class="line">id: <span class="number">49</span>,</span><br><span class="line">_descr: <span class="string">&quot;Jane&quot;</span>.<span class="title function_ invoke__">to_string</span>(),</span><br><span class="line">&#125;,</span><br><span class="line">],</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;, &#123;&#125;&quot;</span>, <span class="title function_ invoke__">is_present</span>(&amp;names, <span class="number">48</span>), <span class="title function_ invoke__">is_present</span>(&amp;names, <span class="number">49</span>));</span><br></pre></td></tr></table></figure><p>声明了<code>Searchable</code>泛型trait后，也声明了两个结构体：“RecordWithId”，表示由唯一数字标识的数据元素；“NameSetWithId”，表示一个类型为<code>RecordWithId</code>的集合。</p><p>然后，trait实现了这个集合类型。有两个方式实现：保留泛型参数，编写类似于<code>impl&lt;T&gt; Searchable&lt;T&gt; for NameSetWithId &#123;</code>；这里是另一种实现方法，因为<code>contains</code>不仅需要指定<code>NameSetWithId</code>，还需要知道<code>Key</code>的具体类型。</p><p>定义了<code>is_present</code>函数，要是有这个函数，需要定义对应的结构体。</p><p>这个解决方案虽然生效了，但有一些缺陷。</p><p>这里，<code>Searchable</code>需要指定<code>Key</code>的类型是<code>u32</code>，另外还要指定参数化类型的值，但在<code>where</code>从句中又重复指定了一次，</p><p>考虑更复杂的情况，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">trait</span> <span class="title class_">Searchable</span>&lt;Key, Count&gt; &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">contains</span>(&amp;<span class="keyword">self</span>, key: Key) <span class="punctuation">-&gt;</span> <span class="type">bool</span>;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">count</span>(&amp;<span class="keyword">self</span>, key: Key) <span class="punctuation">-&gt;</span> Count;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">RecordWithId</span> &#123;</span><br><span class="line">id: <span class="type">u32</span>,</span><br><span class="line">_descr: <span class="type">String</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">NameSetWithId</span> &#123;</span><br><span class="line">data: <span class="type">Vec</span>&lt;RecordWithId&gt;,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">Searchable</span>&lt;<span class="type">u32</span>, <span class="type">usize</span>&gt; <span class="keyword">for</span> <span class="title class_">NameSetWithId</span> &#123;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">contains</span>(&amp;<span class="keyword">self</span>, key: <span class="type">u32</span>) <span class="punctuation">-&gt;</span> <span class="type">bool</span> &#123;</span><br><span class="line"><span class="keyword">for</span> <span class="variable">record</span> <span class="keyword">in</span> <span class="keyword">self</span>.data.<span class="title function_ invoke__">iter</span>() &#123;</span><br><span class="line"><span class="keyword">if</span> record.id == key &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">count</span>(&amp;<span class="keyword">self</span>, key: <span class="type">u32</span>) <span class="punctuation">-&gt;</span> <span class="type">usize</span> &#123;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">c</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="variable">record</span> <span class="keyword">in</span> <span class="keyword">self</span>.data.<span class="title function_ invoke__">iter</span>() &#123;</span><br><span class="line"><span class="keyword">if</span> record.id == key &#123;</span><br><span class="line">c += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">c</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">is_present</span>&lt;Collection&gt;(coll: &amp;Collection, id: <span class="type">u32</span>) <span class="punctuation">-&gt;</span> <span class="type">bool</span></span><br><span class="line"><span class="keyword">where</span> Collection: Searchable&lt;<span class="type">u32</span>, <span class="type">usize</span>&gt;, &#123;</span><br><span class="line">coll.<span class="title function_ invoke__">contains</span>(id)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">names</span> = NameSetWithId &#123;</span><br><span class="line">data: <span class="built_in">vec!</span>[</span><br><span class="line">RecordWithId &#123;</span><br><span class="line">id: <span class="number">34</span>,</span><br><span class="line">_desrc: <span class="string">&quot;John&quot;</span>.<span class="title function_ invoke__">to_string</span>(),</span><br><span class="line">&#125;,</span><br><span class="line">RecordWithId &#123;</span><br><span class="line">id: <span class="number">49</span>,</span><br><span class="line">_desrc: <span class="string">&quot;Jane&quot;</span>.<span class="title function_ invoke__">to_string</span>(),</span><br><span class="line">],</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">print!</span>(</span><br><span class="line"><span class="string">&quot;&#123;&#125;, &#123;&#125;; &#123;&#125; &#123;&#125;&quot;</span>,</span><br><span class="line">names.<span class="title function_ invoke__">count</span>(<span class="number">48</span>),</span><br><span class="line">names.<span class="title function_ invoke__">count</span>(<span class="number">49</span>),</span><br><span class="line"><span class="title function_ invoke__">is_present</span>(&amp;names, <span class="number">48</span>),</span><br><span class="line"><span class="title function_ invoke__">is_present</span>(&amp;names, <span class="number">49</span>),</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>这里不明显地<code>is_present</code>的泛型函数签名，必须指定新的类型。但这个函数并没有使用这个类型，这个类型参数在这里没有很大意义。</p><h2 id="Using-Associated-Types-to-Simplify-Generic-Traits-Use"><a class="header-anchor" href="#Using-Associated-Types-to-Simplify-Generic-Traits-Use">¶</a>Using Associated Types to Simplify Generic Traits Use</h2><p>前面以及描述了这个无实际意义的泛型参数签名的问题。一个最好的解决方案如下，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">trait</span> <span class="title class_">Searchable</span> &#123; <span class="comment">//1</span></span><br><span class="line">    <span class="keyword">type</span> <span class="title class_">Key</span>; <span class="comment">//2</span></span><br><span class="line">    <span class="keyword">type</span> <span class="title class_">Count</span>; <span class="comment">//3</span></span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">contains</span>(&amp;<span class="keyword">self</span>, key: <span class="keyword">Self</span>::Key) <span class="punctuation">-&gt;</span> <span class="type">bool</span>;  <span class="comment">//4</span></span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">count</span>(&amp;<span class="keyword">self</span>, key: <span class="keyword">Self</span>::Key) <span class="punctuation">-&gt;</span> <span class="keyword">Self</span>::Count; <span class="comment">//5</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">RecordWithId</span> &#123;</span><br><span class="line">    id: <span class="type">u32</span>,</span><br><span class="line">    _desrc: <span class="type">String</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">NameSetWithId</span> &#123;</span><br><span class="line">    data: <span class="type">Vec</span>&lt;RecordWithId&gt;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">Searchable</span> <span class="keyword">for</span> <span class="title class_">NameSetWithId</span> &#123; <span class="comment">//6</span></span><br><span class="line">    <span class="keyword">type</span> <span class="title class_">Key</span> = <span class="type">u32</span>; <span class="comment">//7</span></span><br><span class="line">    <span class="keyword">type</span> <span class="title class_">Count</span> = <span class="type">usize</span>; <span class="comment">//8</span></span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">contains</span>(&amp;<span class="keyword">self</span>, key: <span class="keyword">Self</span>::Key) <span class="punctuation">-&gt;</span> <span class="type">bool</span> &#123;    <span class="comment">//9</span></span><br><span class="line">        <span class="keyword">for</span> <span class="variable">record</span> <span class="keyword">in</span> <span class="keyword">self</span>.data.<span class="title function_ invoke__">iter</span>() &#123;</span><br><span class="line">            <span class="keyword">if</span> record.id == key &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">count</span>(&amp;<span class="keyword">self</span>, key: <span class="keyword">Self</span>::Key) <span class="punctuation">-&gt;</span> <span class="type">usize</span> &#123;  <span class="comment">//10</span></span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">c</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> <span class="variable">record</span> <span class="keyword">in</span> <span class="keyword">self</span>.data.<span class="title function_ invoke__">iter</span>() &#123;</span><br><span class="line">            <span class="keyword">if</span> record.id == key &#123;</span><br><span class="line">                c += <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        c</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">is_present</span>&lt;Collection&gt;(</span><br><span class="line">    coll: &amp;Collection, </span><br><span class="line">    id: &lt;Collection <span class="keyword">as</span> Searchable&gt;::Key,    <span class="comment">// 11</span></span><br><span class="line">) <span class="punctuation">-&gt;</span> <span class="type">bool</span></span><br><span class="line"><span class="keyword">where</span> Collection: Searchable,   <span class="comment">//12</span></span><br><span class="line">&#123;</span><br><span class="line">    coll.<span class="title function_ invoke__">contains</span>(id)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">names</span> = NameSetWithId &#123;</span><br><span class="line">data: <span class="built_in">vec!</span>[</span><br><span class="line">RecordWithId &#123;</span><br><span class="line">id: <span class="number">34</span>,</span><br><span class="line">_desrc: <span class="string">&quot;John&quot;</span>.<span class="title function_ invoke__">to_string</span>(),</span><br><span class="line">&#125;,</span><br><span class="line">RecordWithId &#123;</span><br><span class="line">id: <span class="number">49</span>,</span><br><span class="line">_desrc: <span class="string">&quot;Jane&quot;</span>.<span class="title function_ invoke__">to_string</span>(),</span><br><span class="line">&#125;,</span><br><span class="line">],</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;, &#123;&#125;; &#123;&#125; &#123;&#125;&quot;</span>,</span><br><span class="line">   names.<span class="title function_ invoke__">count</span>(<span class="number">48</span>),</span><br><span class="line">   names.<span class="title function_ invoke__">count</span>(<span class="number">49</span>),</span><br><span class="line">   <span class="title function_ invoke__">is_present</span>(&amp;names, <span class="number">48</span>),</span><br><span class="line">   <span class="title function_ invoke__">is_present</span>(&amp;names, <span class="number">49</span>));</span><br></pre></td></tr></table></figure><p>首先是，“Searchable”特质不再使用泛型，而是将泛型定义在自身内部，</p><blockquote><p>这点写法和Scala的trait真的非常非常像…</p></blockquote><p>因此，每次使用“Key”和“Count”类型参数时，都需要带前缀“Self::”。</p><p>这些改变的好处体现在<code>is_present</code>方法签名上。首先如其用具体的类型，这里用一个关联类型<code>Key</code>指定，这个不需要在指定<code>Searchable</code>，因为它没有泛型。</p><p>这里将类型的定义绑定在一个<code>trait</code>上，这种实现机制，对于大型软件开发更有优势。</p><h2 id="the-“Iterator”-Standard-Trait-Declaration"><a class="header-anchor" href="#the-“Iterator”-Standard-Trait-Declaration">¶</a>the “Iterator” Standard Trait Declaration</h2><p>关于“<code>Iterator</code>”这个标准trait，我们说过它仅包含一个item：<code>next</code>函数签名。这样说不对的。应该说是一个泛型的item。</p><p>因为它由<code>type</code>元素签名，你可以认为它在标准库中的定义是这样的，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">trait</span> <span class="title class_">Iterator</span> &#123;</span><br><span class="line"><span class="keyword">type</span> <span class="title class_">Item</span>;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">next</span>(&amp;<span class="keyword">mut</span> <span class="keyword">self</span>) <span class="punctuation">-&gt;</span> <span class="type">Option</span>&lt;<span class="keyword">Self</span>::Item&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这种定义强制要求具体的迭代实现要为<code>Item</code>类型定义，以及实现<code>next</code>的方法体，</p><p>下面是一种可能的实现range的方式，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">trait</span> <span class="title class_">MyIterator</span> &#123;</span><br><span class="line"><span class="keyword">type</span> <span class="title class_">Item</span>;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">next</span>(&amp;<span class="keyword">mut</span> <span class="keyword">self</span>) <span class="punctuation">-&gt;</span> <span class="type">Option</span>&lt;<span class="keyword">Self</span>::Item&gt;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">MyRangeIterator</span>&lt;T&gt; &#123;</span><br><span class="line">current: T,</span><br><span class="line">limit: T,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">MyIterator</span> <span class="keyword">for</span> <span class="title class_">MyRangeIterator</span>&lt;<span class="type">u32</span>&gt; &#123;</span><br><span class="line"><span class="keyword">type</span> <span class="title class_">Item</span> = <span class="type">u32</span>;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">next</span>(&amp;<span class="keyword">mut</span> <span class="keyword">self</span>) <span class="punctuation">-&gt;</span> <span class="type">Option</span>&lt;<span class="keyword">Self</span>::Item&gt; &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">self</span>.current == <span class="keyword">self</span>.limit &#123;</span><br><span class="line"><span class="literal">None</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">self</span>.current += <span class="number">1</span>;</span><br><span class="line"><span class="title function_ invoke__">Some</span>(<span class="keyword">self</span>.current - <span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">range_it</span> = MyRangeIterator &#123;</span><br><span class="line">current: <span class="number">10</span>,</span><br><span class="line">limit: <span class="number">13</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;, &quot;</span>, range_it.<span class="title function_ invoke__">next</span>());</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;, &quot;</span>, range_it.<span class="title function_ invoke__">next</span>());</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;, &quot;</span>, range_it.<span class="title function_ invoke__">next</span>());</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;, &quot;</span>, range_it.<span class="title function_ invoke__">next</span>());</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;, &quot;</span>, range_it.<span class="title function_ invoke__">next</span>());</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;, &quot;</span>, range_it.<span class="title function_ invoke__">next</span>());</span><br></pre></td></tr></table></figure><p>这里使用了<code>MyRangeIterator&lt;u32&gt;</code>，指定了它的具体类型，但实际上，我们不需要定义<code>MyIterator</code>特质，因为我们可以直接使用标准库的<code>Iterator</code>。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">MyRangeIterator</span>&lt;T&gt; &#123;</span><br><span class="line">current: T,</span><br><span class="line">limit: T,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">Iterator</span> <span class="keyword">for</span> <span class="title class_">MyRangeIterator</span>&lt;<span class="type">u32</span>&gt; &#123;</span><br><span class="line"><span class="keyword">type</span> <span class="title class_">Item</span> = <span class="type">u32</span>;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">next</span>(&amp;<span class="keyword">mut</span> <span class="keyword">self</span>) <span class="punctuation">-&gt;</span> <span class="type">Option</span>&lt;<span class="keyword">Self</span>::Item&gt; &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">self</span>.current == <span class="keyword">self</span>.limit &#123;</span><br><span class="line"><span class="literal">None</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">self</span>.current += <span class="number">1</span>;</span><br><span class="line"><span class="title function_ invoke__">Some</span>(<span class="keyword">self</span>.current - <span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;; &quot;</span>, </span><br><span class="line">MyRangeIterator &#123;</span><br><span class="line">current: <span class="number">10</span>,</span><br><span class="line">limit: <span class="number">13</span>,</span><br><span class="line">&#125;.collect::&lt;<span class="type">Vec</span>&lt;_&gt;&gt;()</span><br><span class="line">);</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> (MyRangeIterator &#123;</span><br><span class="line">current: <span class="number">20</span>,</span><br><span class="line">limit: <span class="number">24</span>,</span><br><span class="line">&#125;) &#123;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为“MyRangeIterator”对象有实现“Iterator”特质的类型，所以它可以使用<code>collect</code>迭代器消费者。</p><h2 id="Using-Generic-Iterators"><a class="header-anchor" href="#Using-Generic-Iterators">¶</a>Using Generic Iterators</h2><p>现在，回到原先那个<code>Item</code>无用的问题。我们想要实现泛型函数<code>get_third</code>，它接收任何迭代器，返回迭代器第三个元素，问题可以由下面代码解决，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">get_third</span>&lt;Iter&gt;(<span class="keyword">mut</span> iterator: Iter) <span class="punctuation">-&gt;</span> <span class="type">Option</span>&lt;Iter::Item&gt;</span><br><span class="line"><span class="keyword">where</span></span><br><span class="line">Iter: std::iter::<span class="built_in">Iterator</span>,</span><br><span class="line">&#123;</span><br><span class="line">iterator.<span class="title function_ invoke__">next</span>();</span><br><span class="line">iterator.<span class="title function_ invoke__">next</span>();</span><br><span class="line">iterator.<span class="title function_ invoke__">next</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(</span><br><span class="line"><span class="string">&quot;&#123;:?&#125; &#123;:?&#125; &#123;:?&#125; &#123;:?&#125;&quot;</span>,</span><br><span class="line"><span class="title function_ invoke__">get_third</span>(<span class="number">10</span>..<span class="number">12</span>),</span><br><span class="line"><span class="title function_ invoke__">get_third</span>(<span class="number">20</span>..<span class="number">29</span>),</span><br><span class="line"><span class="title function_ invoke__">get_third</span>([<span class="number">31</span>, <span class="number">32</span>].<span class="title function_ invoke__">iter</span>()),</span><br><span class="line"><span class="title function_ invoke__">get_third</span>([<span class="number">41</span>, <span class="number">42</span>, <span class="number">43</span>, <span class="number">44</span>].<span class="title function_ invoke__">iter</span>())</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>这里直接用<code>where</code>来绑定的<code>Item</code>的范围，这样一来，就可以访问<code>Item</code>关联的类型了，包括它的方法<code>next</code>。以及它的返回类型就是<code>Option&lt;Iter::Item&gt;</code>。</p><p>这段代码，对于迭代参数类型的函数编写提供了参考。实际上，标准库中已经定义了类型的迭代器消费者<code>nth</code>。所以下面写法是等价的，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print!</span>(</span><br><span class="line"><span class="string">&quot;&#123;:?&#125; &#123;:?&#125; &#123;:?&#125; &#123;:?&#125;&quot;</span>,</span><br><span class="line">(<span class="number">10</span>..<span class="number">12</span>).<span class="title function_ invoke__">nth</span>(<span class="number">2</span>),</span><br><span class="line">(<span class="number">20</span>..<span class="number">29</span>).<span class="title function_ invoke__">nth</span>(<span class="number">2</span>),</span><br><span class="line">([<span class="number">31</span>, <span class="number">32</span>].<span class="title function_ invoke__">iter</span>()).<span class="title function_ invoke__">nth</span>(<span class="number">2</span>),</span><br><span class="line">([<span class="number">41</span>, <span class="number">42</span>, <span class="number">43</span>, <span class="number">44</span>].<span class="title function_ invoke__">iter</span>()).<span class="title function_ invoke__">nth</span>(<span class="number">2</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;本章覆盖有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;traits&lt;/code&gt;如何避免在泛型函数调用中的不能理解的编译错误信息&lt;/li&gt;
&lt;li&gt;泛型参数的边界如何被单子化(monolithic)，或如何分解为几个traits&lt;/li&gt;
&lt;li&gt;如何创建函数体返回内的traits&lt;/li&gt;
&lt;li&gt;如何简单地使用&lt;code&gt;self&lt;/code&gt;关键字，通过&amp;quot;点，dot notation&amp;quot;操作来创建函数&lt;/li&gt;
&lt;li&gt;如何迭代一个trait&lt;/li&gt;
&lt;li&gt;如何定义类型别名&lt;/li&gt;
&lt;li&gt;如何定义泛型迭代器&lt;/li&gt;
&lt;li&gt;如何使用关联类型来简化泛型迭代器的使用&lt;/li&gt;
&lt;li&gt;如何定义字节的迭代器&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    <content src="https://galudisu.info/%3Cp%3E%E6%9C%AC%E7%AB%A0%E8%A6%86%E7%9B%96%E6%9C%89%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%3Ccode%3Etraits%3C/code%3E%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E5%9C%A8%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E4%B8%AD%E7%9A%84%E4%B8%8D%E8%83%BD%E7%90%86%E8%A7%A3%E7%9A%84%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF%3C/li%3E%3Cli%3E%E6%B3%9B%E5%9E%8B%E5%8F%82%E6%95%B0%E7%9A%84%E8%BE%B9%E7%95%8C%E5%A6%82%E4%BD%95%E8%A2%AB%E5%8D%95%E5%AD%90%E5%8C%96(monolithic)%EF%BC%8C%E6%88%96%E5%A6%82%E4%BD%95%E5%88%86%E8%A7%A3%E4%B8%BA%E5%87%A0%E4%B8%AAtraits%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E5%87%BD%E6%95%B0%E4%BD%93%E8%BF%94%E5%9B%9E%E5%86%85%E7%9A%84traits%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E7%AE%80%E5%8D%95%E5%9C%B0%E4%BD%BF%E7%94%A8%3Ccode%3Eself%3C/code%3E%E5%85%B3%E9%94%AE%E5%AD%97%EF%BC%8C%E9%80%9A%E8%BF%87&amp;quot;%E7%82%B9%EF%BC%8Cdot%20notation&amp;quot;%E6%93%8D%E4%BD%9C%E6%9D%A5%E5%88%9B%E5%BB%BA%E5%87%BD%E6%95%B0%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E8%BF%AD%E4%BB%A3%E4%B8%80%E4%B8%AAtrait%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E5%AE%9A%E4%B9%89%E7%B1%BB%E5%9E%8B%E5%88%AB%E5%90%8D%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E5%AE%9A%E4%B9%89%E6%B3%9B%E5%9E%8B%E8%BF%AD%E4%BB%A3%E5%99%A8%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%85%B3%E8%81%94%E7%B1%BB%E5%9E%8B%E6%9D%A5%E7%AE%80%E5%8C%96%E6%B3%9B%E5%9E%8B%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%9A%84%E4%BD%BF%E7%94%A8%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E5%AE%9A%E4%B9%89%E5%AD%97%E8%8A%82%E7%9A%84%E8%BF%AD%E4%BB%A3%E5%99%A8%3C/li%3E%3C/ul%3E%3Cspan%20id=%22more%22%3E%3C/span%3E%3Ch2%20id=%22The-Need-for-Traits%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#The-Need-for-Traits%22%3E%C2%B6%3C/a%3EThe%20Need%20for%20Traits%3C/h2%3E%3Cp%3E%E5%81%87%E8%AE%BE%E6%88%91%E4%BB%AC%E8%A6%81%E8%AE%A1%E7%AE%97%E4%B8%80%E4%B8%AA4%E6%AC%A1%E6%96%B9%E6%A0%B9%EF%BC%8C%E8%AF%A5%E5%87%BD%E6%95%B0%E5%91%BD%E5%90%8D%E4%B8%BA%E2%80%9Cquartic_root%E2%80%9D%E3%80%82%E4%BB%A5%E5%8F%8A%E8%B0%83%E7%94%A8%E6%A0%87%E5%87%86%E5%BA%93%E7%9A%84%3Ccode%3Esqrt%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E6%88%91%E4%BB%AC%E4%BC%9A%E5%86%99%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Equartic_root%3C/span%3E(x:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E%20&amp;#123;%20x.%3Cspan%20class=%22title%20function_%20invoke__%22%3Esqrt%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Esqrt%3C/span%3E()%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eqr%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Equartic_root%3C/span%3E(%3Cspan%20class=%22number%22%3E100f64%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20qr%20*%20qr%20*%20qr%20*%20qr,%20qr);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E4%BC%9A%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C100.00000000000003%203.1622776601683795%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E4%BD%86%E6%88%91%E4%BB%AC%E8%BF%98%E9%9C%80%E8%A6%81%E8%AE%A1%E7%AE%9732%E4%BD%8D%E6%95%B0%E7%9A%844%E6%AC%A1%E6%96%B9%E6%A0%B9%EF%BC%8C%E4%BA%8E%E6%98%AF%E5%8F%88%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Equartic_root_f64%3C/span%3E(x:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E%20&amp;#123;%20x.%3Cspan%20class=%22title%20function_%20invoke__%22%3Esqrt%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Esqrt%3C/span%3E()%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Equartic_root_f32%3C/span%3E(x:%20%3Cspan%20class=%22type%22%3Ef32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ef32%3C/span%3E%20&amp;#123;%20x.%3Cspan%20class=%22title%20function_%20invoke__%22%3Esqrt%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Esqrt%3C/span%3E()%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Equartic_root_f64%3C/span%3E(%3Cspan%20class=%22number%22%3E100f64%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Equartic_root_f32%3C/span%3E(%3Cspan%20class=%22number%22%3E100f32%3C/span%3E));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%A0%B9%E6%8D%AE%E5%89%8D%E9%9D%A2%E6%88%91%E4%BB%AC%E6%89%80%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%8C%E6%88%91%E4%BB%AC%E5%8F%AF%E4%BB%A5%E5%AE%9A%E4%B9%89%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%E6%9D%A5%E5%A4%84%E7%90%86%EF%BC%8C%E4%BA%8E%E6%98%AF%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Equartic_root%3C/span%3E&amp;lt;Number&amp;gt;(x:%20Number)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20Number%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ex.%3Cspan%20class=%22title%20function_%20invoke__%22%3Esqrt%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Esqrt%3C/span%3E()%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Equartic_root%3C/span%3E(%3Cspan%20class=%22number%22%3E100f64%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Equartic_root%3C/span%3E(%3Cspan%20class=%22number%22%3E100f32%3C/span%3E));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%BD%86%E8%BF%99%E6%AE%B5%E4%BB%A3%E7%A0%81%E6%98%AF%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%8C%E7%94%9F%E6%88%90%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%EF%BC%8C%E2%80%9Cno%20method%20named%20%3Ccode%3Esqrt%3C/code%3E%20found%20for%20type%20%3Ccode%3ENumber%3C/code%3E%20in%20the%20current%20scope%E2%80%9D%E3%80%82%E5%AE%83%E6%84%8F%E6%80%9D%E6%98%AF%E8%AF%B4%EF%BC%8C%E6%B3%9B%E5%9E%8B%E7%B1%BB%E5%9E%8B%3Ccode%3ENumber%3C/code%3E%E6%B2%A1%E6%9C%89%E8%BF%99%E4%B8%AA%3Ccode%3Esqrt%3C/code%3E%E5%87%BD%E6%95%B0%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E8%BF%99%E6%96%B9%E9%9D%A2%EF%BC%8CRust%E4%B8%8D%E5%90%8C%E4%BA%8EC++%E3%80%82C++%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87%E6%A8%A1%E6%9D%BF%E6%9D%A5%E5%85%B3%E8%81%94%E8%BF%99%E4%B8%AA%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20cpp%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22meta%22%3E#%3Cspan%20class=%22keyword%22%3Einclude%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;lt;iostream&amp;gt;%3C/span%3E%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22meta%22%3E#%3Cspan%20class=%22keyword%22%3Einclude%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;lt;cmath&amp;gt;%3C/span%3E%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etemplate%3C/span%3E%20&amp;lt;%3Cspan%20class=%22keyword%22%3Etypename%3C/span%3E%20Number&amp;gt;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22function%22%3ENumber%20%3Cspan%20class=%22title%22%3Equartic_root%3C/span%3E%3Cspan%20class=%22params%22%3E(Number%20x)%3C/span%3E%20%3C/span%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ereturn%3C/span%3E%20%3Cspan%20class=%22built_in%22%3Esqrt%3C/span%3E(%3Cspan%20class=%22built_in%22%3Esqrt%3C/span%3E(x));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22function%22%3E%3Cspan%20class=%22type%22%3Eint%3C/span%3E%20%3Cspan%20class=%22title%22%3Emain%3C/span%3E%3Cspan%20class=%22params%22%3E()%3C/span%3E%20%3C/span%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Estd::count%20&amp;lt;&amp;lt;%20%3Cspan%20class=%22built_in%22%3Equartic_root%3C/span%3E((%3Cspan%20class=%22type%22%3Efloat%3C/span%3E)%3Cspan%20class=%22number%22%3E100%3C/span%3E)%20&amp;lt;&amp;lt;%20%3Cspan%20class=%22string%22%3E&amp;quot;%20&amp;quot;%3C/span%3E%20&amp;lt;&amp;lt;%20%3Cspan%20class=%22built_in%22%3Equartic_root%3C/span%3E((%3Cspan%20class=%22type%22%3Edouble%3C/span%3E)%3Cspan%20class=%22number%22%3E100%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%8D%B3%E4%BD%BFC++%E4%B8%AD%E7%9A%84%3Ccode%3ENUmber%3C/code%3E%E6%B3%9B%E5%9E%8B%E7%B1%BB%E5%9E%8B%E6%B2%A1%E6%9C%89%E8%BF%99%E4%B8%AA%E5%8F%AF%E7%94%A8%E7%9A%84%3Ccode%3Esqrt%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E7%BC%96%E8%AF%91%E5%99%A8%E4%B9%9F%E4%B8%8D%E7%9F%A5%E8%BF%99%E4%B8%AA%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%98%AF%E5%90%A6%E5%85%81%E8%AE%B8%E3%80%82%E4%BD%86%E5%BD%93%E8%B0%83%E7%94%A8%3Ccode%3Equartic_root%3C/code%3E%E6%97%B6%EF%BC%8C%E5%87%BD%E6%95%B0%E8%A2%AB%E8%AE%A1%E6%95%B0%EF%BC%8C%E7%BC%96%E8%AF%91%E6%9C%9F%E7%94%9F%E6%88%90%E4%B8%A4%E4%B8%AA%E5%85%B7%E4%BD%93%E5%87%BD%E6%95%B0%3Ccode%3Equartic_root&amp;lt;float&amp;gt;%3C/code%3E%E5%92%8C%3Ccode%3Equartic_root&amp;lt;double&amp;gt;%3C/code%3E%E3%80%82%E8%BF%99%E5%8F%AB%E2%80%9C%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%E5%AE%9E%E4%BE%8B%E5%8C%96%20generic%20function%20instantiation%E2%80%9D%EF%BC%8C%E6%88%96%E2%80%9Cfunction%20monomorphization%E2%80%9D%E3%80%82%E8%BF%99%E7%A7%8D%E5%AE%9E%E4%BE%8B%E5%8C%96%E4%BC%9A%E6%A3%80%E6%B5%8B%E5%85%B7%E4%BD%93%E7%9A%84%E7%B1%BB%E5%9E%8B%E3%80%82%3C/p%3E%3Cp%3EC++%E8%BF%99%E7%A7%8D%E6%96%B9%E6%A1%88%E5%B8%A6%E6%9D%A5%E7%9A%84%E7%BC%BA%E9%99%B7%E5%BE%88%E6%98%8E%E6%98%BE%EF%BC%8C%E5%8D%B3%E5%BD%93%E5%87%BA%E7%8E%B0%E7%A8%8B%E5%BA%8F%E9%94%99%E8%AF%AF%E6%97%B6%EF%BC%8C%E8%AD%AC%E5%A6%82%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20cpp%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22meta%22%3E#%3Cspan%20class=%22keyword%22%3Einclude%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;lt;iostream&amp;gt;%3C/span%3E%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22meta%22%3E#%3Cspan%20class=%22keyword%22%3Einclude%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;lt;cmath&amp;gt;%3C/span%3E%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etemplate%3C/span%3E%20&amp;lt;%3Cspan%20class=%22keyword%22%3Etypename%3C/span%3E%20Number&amp;gt;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22function%22%3ENumber%20%3Cspan%20class=%22title%22%3Equartic_root%3C/span%3E%3Cspan%20class=%22params%22%3E(Number%20x)%3C/span%3E%20%3C/span%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ereturn%3C/span%3E%20%3Cspan%20class=%22built_in%22%3Esqrt%3C/span%3E(%3Cspan%20class=%22built_in%22%3Esqrt%3C/span%3E(x));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22function%22%3E%3Cspan%20class=%22type%22%3Eint%3C/span%3E%20%3Cspan%20class=%22title%22%3Emain%3C/span%3E%3Cspan%20class=%22params%22%3E()%3C/span%3E%20%3C/span%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Estd::count%20&amp;lt;&amp;lt;%20%3Cspan%20class=%22built_in%22%3Equartic_root%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Hello&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BC%96%E8%AF%91%E5%99%A8%E4%BC%9A%E5%AE%9E%E4%BE%8B%E5%8C%96%E8%BF%99%E4%B8%AA%3Ccode%3Econst%20char*%3C/code%3E%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%85%B7%E4%BD%93%E5%87%BD%E6%95%B0%EF%BC%8C%E5%AE%83%E4%BC%9A%E7%94%9F%E6%88%90%3Ccode%3Esqrt(const%20char*)%3C/code%3E%E7%9A%84%E6%96%B9%E6%B3%95%E7%AD%BE%E5%90%8D%E3%80%82%E4%BD%86%E6%B2%A1%E6%9C%89%E8%BF%99%E4%B8%AA%E5%87%BD%E6%95%B0%E5%A3%B0%E6%98%8E%EF%BC%8C%E6%89%80%E4%BB%A5%E4%BC%9A%E5%AF%BC%E8%87%B4%E5%87%BA%E7%8E%B0%E5%8F%98%E5%BC%82%E9%94%99%E8%AF%AF%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E4%B8%AA%E7%BC%BA%E9%99%B7%E5%B8%A6%E6%9D%A5%E7%9A%84%E9%97%AE%E9%A2%98%E6%98%AF%EF%BC%8C%E8%BF%99%E4%B8%AA%E6%B3%9B%E5%9E%8B%E7%B1%BB%E5%9E%8B%3Ccode%3ENumber%3C/code%3E%EF%BC%8C%E5%AE%83%E6%89%80%E6%8F%90%E4%BE%9B%E7%9A%84%E5%85%B7%E4%BD%93%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%87%BD%E6%95%B0%3Ccode%3Esqrt%3C/code%3E%E5%8F%AF%E8%83%BD%E6%98%AF%E7%94%B1%E6%9F%90%E4%B8%80%E4%BD%8D%E5%BC%80%E5%8F%91%E8%80%85%E7%BC%96%E5%86%99%E7%9A%84%EF%BC%8C%E4%BB%A5%E5%8F%8A%E5%8F%A6%E4%B8%80%E7%A7%8D%E5%85%B7%E4%BD%93%E7%B1%BB%E5%9E%8B%E7%9A%84%3Ccode%3Esqrt%3C/code%3E%E5%8F%88%E6%98%AF%E5%8F%A6%E5%A4%96%E4%B8%80%E4%BD%8D%E5%BC%80%E5%8F%91%E8%80%85%E7%BC%96%E5%86%99%E7%9A%84%E3%80%82%E5%8F%AF%E8%83%BD%E4%B8%A4%E4%BD%8D%E5%BC%80%E5%8F%91%E8%80%85%E7%9A%84%3Ccode%3Esqrt%3C/code%3E%E5%87%BD%E6%95%B0%E7%AD%BE%E5%90%8D%E5%B9%B6%E4%B8%8D%E4%B8%80%E6%A0%B7%EF%BC%81%EF%BC%81%3C/p%3E%3Cp%3E%E5%8F%A6%E5%A4%96%E7%B1%BB%E4%BC%BC%E4%BA%8EC++%E8%BF%99%E7%A7%8D%3Ccode%3Equartic_root%3C/code%3E%E7%9A%84%E5%AE%9E%E7%8E%B0%EF%BC%8C%E4%BB%A3%E7%A0%81%E9%98%85%E8%AF%BB%E6%98%AF%E6%99%A6%E6%B6%A9%E9%9A%BE%E6%87%82%E7%9A%84%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E5%A4%A7%E9%83%A8%E5%88%86%E5%8F%98%E9%87%8F%E3%80%81%E5%87%BD%E6%95%B0%E3%80%81%E7%B1%BB%E5%9E%8B%E9%83%BD%E5%B1%9E%E4%BA%8E%E5%BA%93%E5%AE%9E%E7%8E%B0(%E5%AE%9E%E9%99%85%E4%B8%8A%E6%9C%89%E5%BE%88%E5%A4%9A%E5%BA%93%E2%80%A6)%EF%BC%8C%E8%80%8C%E4%B8%8D%E6%98%AF%E6%8E%A5%E5%8F%A3%E3%80%82%E8%A6%81%E7%90%86%E8%A7%A3%E5%AE%83%EF%BC%8C%E4%B8%8D%E4%BB%85%E9%9C%80%E8%A6%81%E7%9F%A5%E9%81%93%E5%AE%83%E7%9A%84API%E4%BD%BF%E7%94%A8%EF%BC%9B%E8%BF%98%E9%9C%80%E8%A6%81%E7%9F%A5%E9%81%93%E5%AE%83%E7%9A%84%E5%BA%93%E7%9A%84%E5%AE%9E%E7%8E%B0%E3%80%82%3C/p%3E%3Ch2%20id=%22Traits-to-the-Rescue%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Traits-to-the-Rescue%22%3E%C2%B6%3C/a%3ETraits%20to%20the%20Rescue%3C/h2%3E%3Cp%3ERust%E4%B8%AD%E4%B8%BA%E4%BA%86%E9%81%BF%E5%85%8D%E8%BF%99%E7%A7%8D%E7%B1%BB%E4%BC%BC%E4%BA%8EC++%E7%9A%84%E7%BC%96%E8%AF%91%E4%B8%BA%E9%A2%98%EF%BC%8C%E6%8F%90%E4%BE%9B%E4%BA%86trait%E6%9D%A5%E6%BE%84%E6%B8%85%E5%A4%8D%E6%9D%82%E9%94%99%E8%AF%AF%E6%B6%88%E6%81%AF%E7%9A%84%E5%90%84%E7%A7%8D%E6%83%85%E5%86%B5%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E6%9B%B4%E8%B4%B4%E8%BF%91%E7%9C%9F%E5%AE%9E%E8%BD%AF%E4%BB%B6%E7%8E%AF%E5%A2%83%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etrait%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EHasSquareRoot%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Esq_root%3C/span%3E(%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EHasSquareRoot%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3Ef32%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Esq_root%3C/span%3E(%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22type%22%3Ef32%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3Esqrt%3C/span%3E(%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EHasSquareRoot%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3Ef64%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Esq_root%3C/span%3E(%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3Esqrt%3C/span%3E(%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Equartic_root%3C/span%3E&amp;lt;Number&amp;gt;(x:%20Number)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20Number%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Ewhere%3C/span%3E%20Number:%20HasSquareRoot%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20x.%3Cspan%20class=%22title%20function_%20invoke__%22%3Esq_root%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Esq_root%3C/span%3E()%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Equartic_root%3C/span%3E(%3Cspan%20class=%22number%22%3E100f64%3C/span%3E),%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Equartic_root%3C/span%3E(%3Cspan%20class=%22number%22%3E100f32%3C/span%3E));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C3.1622776601683795%203.1622777%E2%80%9D%3C/p%3E%3Cp%3E%E7%AC%AC%E4%B8%80%E4%B8%AAtrait%E5%91%BD%E5%90%8D%E4%B8%BA%E2%80%9CHasSquareRoot%E2%80%9D%EF%BC%8C%E5%8C%85%E5%90%AB%E5%87%BD%E6%95%B0%E7%AD%BE%E5%90%8D%E2%80%9Csq_root%E2%80%9D%E3%80%82%E4%B8%80%E4%B8%AARust%20trait%E6%98%AF%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E7%AD%BE%E5%90%8D%E7%9A%84%E5%AE%B9%E5%99%A8%EF%BC%9B%E5%AE%83%E8%A1%A8%E7%A4%BA%E8%BF%99%E4%B8%AAtrait%E6%9C%89%E8%83%BD%E5%8A%9B%E4%BD%BF%E7%94%A8%E6%9F%90%E4%BA%9B%E5%87%BD%E6%95%B0%E3%80%82%E8%BF%99%E9%87%8C%E8%A1%A8%E7%A4%BA%E4%BA%86%3Ccode%3EHasSquareRoot%3C/code%3Etrait%E5%8F%AF%E4%BB%A5%E5%9C%A8%E6%9C%89%E2%80%9CHasSquareRoot%E2%80%9D%E7%9A%84%E5%9C%B0%E6%96%B9%E8%B0%83%E7%94%A8%E2%80%9Csq_root%E2%80%9D%E5%87%BD%E6%95%B0%EF%BC%8C%E6%88%96%E8%80%85%E6%9B%B4%E5%B8%B8%E8%A7%84%E7%9A%84%E8%AF%B4%E6%B3%95%E6%98%AF%EF%BC%8C%E4%BB%BB%E4%BD%95%E6%BB%A1%E8%B6%B3%E2%80%9CHasSquareRoot%E2%80%9Dtrait%E7%9A%84%E7%B1%BB%E5%9E%8B%EF%BC%8C%E9%83%BD%E5%8F%AF%E4%BB%A5%E8%B0%83%E7%94%A8%E8%BF%99%E4%B8%AA%3Ccode%3Esq_root%3C/code%3E%E5%87%BD%E6%95%B0%E3%80%82%3C/p%3E%3Cp%3E%E4%BD%86%E7%A9%B6%E7%AB%9F%E5%93%AA%E4%BA%9B%E7%B1%BB%E5%9E%8B%E6%BB%A1%E8%B6%B3%E2%80%9CHasSquareRoot%E2%80%9D%EF%BC%9F%E6%B2%A1%E6%9C%89%E5%AE%9A%E4%B9%89%EF%BC%8C%E5%9B%A0%E6%AD%A4%E6%8E%A5%E4%B8%8B%E6%9D%A5%E4%B8%A4%E4%B8%AA%E8%AF%AD%E5%8F%A5%EF%BC%8C%E4%BD%BF%E5%BE%97%3Ccode%3Ef32%3C/code%3E%E7%B1%BB%E5%9E%8B%E5%92%8C%3Ccode%3Ef64%3C/code%3E%E7%B1%BB%E5%9E%8B%E6%BB%A1%E8%B6%B3%E8%BF%99%E4%B8%AAtrait%E3%80%82%E6%8D%A2%E8%A8%80%E4%B9%8B%EF%BC%8C%E8%BF%99%E4%BA%9B%3Ccode%3Eimpl%3C/code%3E%E8%AF%AD%E5%8F%A5%EF%BC%8C%E5%8F%AF%E4%BB%A5%E4%BB%8E%E7%BB%99%E5%AE%9A%E7%9A%84%3Ccode%3Ef32%3C/code%3E%E5%92%8C%3Ccode%3Ef64%3C/code%3E%E7%B1%BB%E5%9E%8B%E8%B0%83%E7%94%A8%E8%BF%99%E4%B8%AA%3Ccode%3Esq_root%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E4%BA%9B%3Ccode%3Eimpl%3C/code%3E%E5%8F%8D%E6%98%A0%E4%BA%86%E2%80%9CHasSquareRoot%E2%80%9D%E4%BB%85%E6%98%AF%E4%B8%80%E4%B8%AA%E7%A8%8B%E5%BA%8F%E6%8E%A5%E5%8F%A3%EF%BC%8C%E6%88%96API%EF%BC%8C%E5%AE%83%E9%9C%80%E8%A6%81%E5%8F%88%E5%85%B7%E4%BD%93%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%AE%9E%E7%8E%B0%E3%80%82%E6%89%80%E4%BB%A5%E5%BD%93%E7%84%B6%E5%9C%B0%EF%BC%8C%3Ccode%3Eimpl%3C/code%3E%E8%AF%AD%E5%8F%A5%E7%9A%84%E5%87%BD%E6%95%B0%E7%AD%BE%E5%90%8D%EF%BC%8C%E9%9C%80%E8%A6%81%E8%B7%9F%E5%8E%9F%E6%9D%A5%E7%9A%84%E5%89%8D%E4%B8%80%E4%B8%AA%E6%96%B9%E6%B3%95%E7%AD%BE%E5%90%8D%E4%B8%80%E6%A0%B7%E3%80%82%E4%B8%8D%E5%90%8C%E7%9A%84%E6%98%AF%3Ccode%3Eimpl%3C/code%3E%E5%8C%85%E5%90%AB%E6%9C%89%E5%87%BD%E6%95%B0%E5%AE%9E%E7%8E%B0%E3%80%82%3C/p%3E%3Cp%3ERust%E7%9A%84trait%E7%B1%BB%E4%BC%BC%E4%BA%8EJava%E6%88%96C#%E6%8E%A5%E5%8F%A3%EF%BC%8C%E6%88%96%E6%B2%A1%E6%9C%89%E6%96%B9%E6%B3%95%E4%BD%93%E7%9A%84%E6%8A%BD%E8%B1%A1%E7%B1%BB%E3%80%82%3C/p%3E%3Cp%3E%E7%8E%B0%E5%9C%A8%E6%9C%89%E4%BA%86%E5%85%B7%E4%BD%93%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%AE%9E%E7%8E%B0%E4%BA%86%E3%80%82%E7%AC%AC%E5%9B%9B%E6%9D%A1%E8%AF%AD%E5%8F%A5%E5%AE%9A%E4%B9%89%E4%BA%86%3Ccode%3Equartic_root%3C/code%3E%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%EF%BC%8C%E5%8F%82%E6%95%B0%E5%8C%96%E7%B1%BB%E5%9E%8B%E5%8F%82%E6%95%B0%E6%98%AF%3Ccode%3ENumber%3C/code%3E%E3%80%82%E7%84%B6%E8%80%8C%EF%BC%8C%E8%BF%99%E4%B8%AA%E5%A3%B0%E6%98%8E%E6%9C%89%E4%B8%80%E4%B8%AA%E6%96%B0%E7%9A%84%E6%AE%B5%EF%BC%9A%3Ccode%3Ewhere%20Number:%20HasSquareRoot%3C/code%3E%E3%80%82%E8%BF%99%E7%A7%8D%E4%BB%8E%E5%8F%A5%E5%8F%AB%E5%81%9A%E2%80%94%E2%80%94%E2%80%9Ctrait%20bound%E2%80%9D%EF%BC%8C%E5%AE%83%E6%98%AF%E6%96%B9%E6%B3%95%E7%AD%BE%E5%90%8D%E7%9A%84%E4%B8%80%E9%83%A8%E5%88%86%E3%80%82%E5%AE%83%E5%AD%97%E9%9D%A2%E9%87%8F%E7%9A%84%E6%84%8F%E6%80%9D%E6%98%AF%EF%BC%8C%3Ccode%3ENumber%3C/code%3E%E6%B3%9B%E5%9E%8B%E7%B1%BB%E5%9E%8B%E5%BF%85%E9%A1%BB%E5%AE%9E%E7%8E%B0%3Ccode%3EHasSquareRoot%3C/code%3E%E7%89%B9%E8%B4%A8%E3%80%82%3C/p%3E%3Cp%3E%E4%BB%A3%E7%A0%81%E8%B0%83%E7%94%A8%E5%87%BD%E6%95%B0%E6%98%AF%EF%BC%8C%E8%BF%99%E4%B8%AA%3Ccode%3Ewhere%3C/code%3E%E4%BB%8E%E5%8F%A5%E8%A1%A8%E7%A4%BA%E2%80%9C%E5%BD%93%E8%B0%83%E7%94%A8%E8%AF%A5%E5%87%BD%E6%95%B0%EF%BC%8C%E4%BD%A0%E5%BF%85%E9%A1%BB%E7%A1%AE%E4%BF%9D%E4%BD%A0%E4%BC%A0%E9%80%92%E7%9A%84%E5%8F%82%E6%95%B0%E5%8C%96%E7%B1%BB%E5%9E%8B%E5%AE%9E%E7%8E%B0%E4%BA%86%3Ccode%3EHashSquareRoot%3C/code%3Etrait%E2%80%9D%E3%80%82%E4%BE%8B%E5%A6%82%E8%BF%99%E4%B8%AA%E7%9A%84100f32%E5%92%8C100f64%EF%BC%8C%E5%AF%B9%E5%BA%94%E7%B1%BB%E5%9E%8B%E6%98%AFf32%E5%92%8Cf64%E3%80%82%E8%BF%99%E4%B8%A4%E7%A7%8D%E7%B1%BB%E5%9E%8B%E9%83%BD%E6%9C%89%3Ccode%3EhasSquareRoot%3C/code%3E%E7%9A%84%E5%AE%9E%E7%8E%B0%EF%BC%8C%E5%9B%A0%E6%AD%A4%E5%AE%83%E4%BB%AC%E6%98%AF%E5%90%88%E6%B3%95%E5%8F%82%E6%95%B0%E3%80%82%E4%BD%86%E5%A6%82%E6%9E%9C%E6%9B%BF%E6%8D%A2%E4%B8%BA%E2%80%9Cquartic_root(%E2%80%9CHello%E2%80%9D));%E2%80%9D%EF%BC%8C%E8%BF%99%E9%87%8C%E6%B2%A1%E6%9C%89%3Ccode%3E&amp;amp;str%3C/code%3E%E7%9A%84%E2%80%9CHasSquareRoot%E2%80%9D%E7%9A%84%E5%AE%9E%E7%8E%B0%EF%BC%8C%E5%9B%A0%E6%AD%A4%E8%BF%9D%E5%8F%8D%E4%BA%86%E6%9D%A1%E7%BA%A6%E3%80%82%E4%BB%A5%E5%8F%8A%E4%BC%9A%E5%BE%97%E5%88%B0%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%E2%80%9Cthe%20traitbound%20%3Ccode%3E&amp;amp;str:%20main::HasSquareRoot%3C/code%3E%20is%20not%20satisfied%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%8F%88%E6%88%96%E8%80%85%E4%BD%A0%E6%9B%BF%E6%8D%A2%E4%B8%BA%E2%80%9Cquartic_root(81i32));%E2%80%9D%EF%BC%8C%E4%B9%9F%E4%BC%9A%E5%BE%97%E5%88%B0%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%EF%BC%8C%E5%9B%A0%E4%B8%BA%E2%80%9CHasSquareRoot%E2%80%9D%E6%B2%A1%E6%9C%89%3Ccode%3Ei32%3C/code%3E%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%AE%9E%E7%8E%B0%E3%80%82%3C/p%3E%3Cp%3E%E6%B3%A8%E6%84%8F%E7%9A%84%E6%97%B6%EF%BC%8C%3Ccode%3Ex%3C/code%3E%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%9C%A8%E5%87%BD%E6%95%B0%E4%BD%93%E5%86%85%EF%BC%8C%E5%AE%83%E7%9A%84%E7%B1%BB%E5%9E%8B%E4%BB%85%E5%8F%AF%E8%83%BD%E6%98%AF%3Ccode%3ENumber%3C/code%3E%EF%BC%8C%E5%AE%9E%E9%99%85%E7%B1%BB%E5%9E%8B%E5%B9%B6%E4%B8%8D%E6%B8%85%E6%A5%9A%EF%BC%8C%E6%89%80%E4%BB%A5%E4%BD%A0%E4%B8%8D%E8%83%BD%E5%B0%86%3Ccode%3Ex.sq_root()%3C/code%3E%EF%BC%8C%E5%86%99%E4%B8%BA%3Ccode%3Ex.abs().sq_root()%3C/code%3E%E8%BF%99%E7%A7%8D%EF%BC%8C%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%3Ccode%3Eabs()%3C/code%3E%E5%9C%A8%3Ccode%3ENumber%3C/code%3E%E8%8C%83%E5%9B%B4%E5%86%85%E6%B2%A1%E6%9C%89%E5%AE%9A%E4%B9%89%E3%80%82%3C/p%3E%3Ch2%20id=%22Generic-Functions-with-No-Trait-Bounds%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Generic-Functions-with-No-Trait-Bounds%22%3E%C2%B6%3C/a%3EGeneric%20Functions%20with%20No%20Trait%20Bounds%3C/h2%3E%3Cp%3E%E4%B8%8D%E5%B8%A6%E7%89%B9%E8%B4%A8%E8%BE%B9%E7%95%8C%E7%9A%84%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%E6%98%AF%E5%BE%88%E5%B0%91%E8%A7%81%E7%9A%84%EF%BC%8C%E6%AF%94%E5%A6%82%E8%BF%99%E6%AE%B5%E4%BB%A3%E7%A0%81%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;#x27;A&amp;#x27;%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Eb%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;#x27;B&amp;#x27;%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;,%20&amp;#123;&amp;#125;;%20&amp;quot;%3C/span%3E,%20a,%20b);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Estd::mem::%3Cspan%20class=%22title%20function_%20invoke__%22%3Eswap%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20a,%20&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20b);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;,%20&amp;#123;&amp;#125;;,%20a,%20b);%3C/span%3E%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%3Ccode%3Eswap%3C/code%3E%E7%9A%84%E6%96%B9%E6%B3%95%E7%AD%BE%E5%90%8D%E6%98%AF%EF%BC%9A%3Ccode%3Efn%20swap&amp;lt;T&amp;gt;(x:%20&amp;amp;mut%20T,%20y:%20&amp;amp;mut%20T)%3C/code%3E%E3%80%82%E5%AE%83%E4%B8%8D%E9%9C%80%E8%A6%81%E4%BD%BF%E7%94%A8%3Ccode%3Ewhere%3C/code%3E%E4%BB%8E%E5%8F%A5%E8%BF%9B%E8%A1%8Ctrait%20bound%E3%80%82%E5%9B%A0%E4%B8%BA%E5%AE%83%E7%9B%B4%E6%8E%A5%E4%BA%A4%E6%8D%A2%E4%BA%86%E4%B8%A4%E4%B8%AA%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%9C%B0%E5%9D%80%E3%80%82%E5%AE%9E%E9%99%85%E7%BC%96%E7%A0%81%E8%BF%87%E7%A8%8B%E4%B8%AD%EF%BC%8C%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%EF%BC%8C%E7%B1%BB%E5%9E%8B%E5%8F%82%E6%95%B0%E6%80%BB%E6%98%AF%E9%9C%80%E8%A6%81%E8%BE%B9%E7%95%8C%E7%BB%91%E5%AE%9A%E7%9A%84%E3%80%82Rust%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%EF%BC%8C%E6%80%BB%E6%98%AF%E5%BC%BA%E8%B0%83%E7%B1%BB%E5%9E%8B%E5%AE%89%E5%85%A8%E8%BF%99%E4%B8%AA%E6%A6%82%E5%BF%B5%EF%BC%8C%E4%B9%9F%E6%98%AF%E6%88%91%E4%BB%AC%E7%BC%96%E5%86%99%E4%BB%A3%E7%A0%81%E7%9A%84%E5%8E%9F%E5%88%99%E3%80%82%3C/p%3E%3Ch2%20id=%22Scope-of-Traits%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Scope-of-Traits%22%3E%C2%B6%3C/a%3EScope%20of%20Traits%3C/h2%3E%3Cp%3E%E5%89%8D%E9%9D%A2%E7%94%A8%E4%BA%86%E4%B8%80%E4%B8%AA%3Ccode%3Esq_root%3C/code%3E%E6%9D%A5%E5%8C%BA%E5%88%86%E6%A0%87%E5%87%86%E5%BA%93%E7%9A%84%3Ccode%3Esqrt%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E4%B8%8D%E8%BF%87%E6%88%91%E4%BB%AC%E4%B9%9F%E5%8F%AF%E4%BB%A5%E5%B0%86%E5%85%B6%E5%91%BD%E5%90%8D%E4%B8%BA%3Ccode%3Esqrt%3C/code%3E%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Esqrt%3C/span%3E()%20&amp;#123;&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etrait%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EHasSquareRoot%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Esqrt%3C/span%3E(%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EHasSquareRoot%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3Ef32%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Esqrt%3C/span%3E(%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22type%22%3Ef32%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3Esqrt%3C/span%3E(%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EHasSquareRoot%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3Ef64%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Esqrt%3C/span%3E(%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3Esqrt%3C/span%3E(%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Equartic_root%3C/span%3E&amp;lt;Number&amp;gt;(x:%20Number)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20Number%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ewhere%3C/span%3E%20Number:%20HasSquareRoot%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ex.%3Cspan%20class=%22title%20function_%20invoke__%22%3Esqrt%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Esqrt%3C/span%3E()%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Esqrt%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Equartic_root%3C/span%3E(%3Cspan%20class=%22number%22%3E100f64%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Equartic_root%3C/span%3E(%3Cspan%20class=%22number%22%3E100f32%3C/span%3E));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%90%8C%E4%B8%80%E4%B8%AA%E4%BD%9C%E7%94%A8%E8%8C%83%E5%9B%B4%E5%86%85%E6%98%AF%E4%B8%8D%E5%85%81%E8%AE%B8%E6%9C%89%E5%90%8C%E5%90%8D%E6%96%B9%E6%B3%95%E7%9A%84%E3%80%82%E4%B8%8D%E8%BF%87%E4%B8%8A%E9%9D%A2%E4%BB%A3%E7%A0%81%E6%98%AF%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%9B%E5%9B%A0%E4%B8%BA%E5%AE%83%E4%BB%AC%E5%B9%B6%E4%B8%8D%E4%BD%9C%E7%94%A8%E5%9C%A8%E5%90%8C%E4%B8%80%E4%B8%AAscope%E3%80%82%3Ccode%3Efn%20sqrt()%3C/code%3E%E6%98%AF%E4%B8%AA%E6%9C%AC%E5%9C%B0%E5%87%BD%E6%95%B0%EF%BC%8C%E5%9C%A8HasSquareRoot%E5%A4%96%EF%BC%9B%3Ccode%3Efn%20sqrt(self)%3C/code%3E%E4%BD%9C%E7%94%A8%E5%9C%A8HasSquareRoot%E5%86%85%EF%BC%9B%3Ccode%3Ef32::sqrt%3C/code%3E%E5%92%8C%3Ccode%3Ef64::sqrt%3C/code%3E%E6%98%AF%E4%B8%AA%E6%A0%87%E5%87%86%E5%BA%93%E8%B0%83%E7%94%A8%E3%80%82%3C/p%3E%3Ch2%20id=%22Traits-with-Numltiple-Functions%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Traits-with-Numltiple-Functions%22%3E%C2%B6%3C/a%3ETraits%20with%20Numltiple%20Functions%3C/h2%3E%3Cp%3E%E5%89%8D%E9%9D%A2%E7%9A%84%E4%BE%8B%E5%AD%90%E6%9C%89%E4%B8%AA%E9%97%AE%E9%A2%98%E6%98%AF%EF%BC%8C%E5%A6%82%E6%9E%9C%E4%BC%A0%E5%85%A5%E7%9A%84%E6%98%AF%E2%80%9C-100f64%E2%80%9D%E6%88%96%E2%80%9C-100f32%E2%80%9D%EF%BC%8C%E7%A8%8B%E5%BA%8F%E4%BC%9A%E6%89%93%E5%8D%B0%E2%80%9CNaN%EF%BC%8CNot%20a%20Number%E2%80%9D%EF%BC%8C%E6%88%91%E4%BB%AC%E6%83%B3%E5%A4%84%E7%90%86%E8%B4%9F%E6%95%B0%E7%9A%84%E6%83%85%E5%86%B5%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E19%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E20%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E21%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E22%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E23%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E24%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E25%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E26%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E27%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E28%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etrait%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EHasSquareRoot%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Esq_root%3C/span%3E(%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EHasSquareRoot%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3Ef32%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Esq_root%3C/span%3E(%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22type%22%3Ef32%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3Esqrt%3C/span%3E(%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EHasSquareRoot%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3Ef64%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Esq_root%3C/span%3E(%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3Esqrt%3C/span%3E(%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etrait%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EHasAbsoluteValue%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eabs%3C/span%3E(%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EHasAbsoluteValue%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3Ef32%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eabs%3C/span%3E(%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22type%22%3Ef32%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3Eabs%3C/span%3E(%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EHasAbsoluteValue%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3Ef64%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eabs%3C/span%3E(%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3Eabs%3C/span%3E(%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Equartic_root%3C/span%3E&amp;lt;Number&amp;gt;(x:%20Number)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20Number%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Ewhere%3C/span%3E%20Number:%20HasSquareRoot%20+%20HasAbsoluteValue%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20x.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eabs%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Esq_root%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Esq_root%3C/span%3E()%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%A4%9A%E7%A7%8D%E7%B1%BB%E5%9E%8B%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%BB%84%E5%90%88%E4%B8%8D%E5%90%8Ctrait%EF%BC%8C%E4%BD%BF%E7%94%A8%3Ccode%3E+%3C/code%3E%E3%80%82%3C/p%3E%3Ch2%20id=%22Methods%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Methods%22%3E%C2%B6%3C/a%3EMethods%3C/h2%3E%3Cp%3E%E7%9B%AE%E5%89%8D%E6%88%91%E4%BB%AC%E6%8E%A5%E8%A7%A6%E5%88%B0%E7%9A%84%E5%87%BD%E6%95%B0%E7%9A%84%E8%B0%83%E7%94%A8%E6%96%B9%E5%BC%8F%E6%9C%89%E4%B8%A4%E7%A7%8D%EF%BC%8C%E4%B8%80%E7%A7%8D%E6%98%AF%3Ccode%3Ef(x,%20y)%3C/code%3E%EF%BC%8C%E5%8F%A6%E4%B8%80%E7%A7%8D%E6%98%AF%3Ccode%3Ex.f(y)%3C/code%3E%E3%80%82%E4%BE%8B%E5%A6%82%E4%B9%8B%E5%89%8D%E4%BE%8B%E5%AD%90%E7%9A%84%3Ccode%3EString::new()%3C/code%3E%E3%80%81%3Ccode%3EString::form(&amp;quot;&amp;quot;)%3C/code%3E%E5%86%99%E6%B3%95%EF%BC%8C%E5%92%8C%3Ccode%3E&amp;quot;abcd&amp;quot;.to_string()%3C/code%3E%EF%BC%8C%3Ccode%3E&amp;quot;abcd&amp;quot;.len()%3C/code%3E%E3%80%82%E4%B8%80%E7%A7%8D%E6%98%AF%E7%82%B9%E6%93%8D%E4%BD%9C%EF%BC%8C%E4%B8%80%E7%A7%8D%E6%98%AF%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E6%93%8D%E4%BD%9C%E3%80%82%3C/p%3E%3Cp%3E%E4%BB%BB%E4%BD%95%E5%87%BD%E6%95%B0%E9%83%BD%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%E8%80%85%E4%B8%A4%E7%A7%8D%E8%B0%83%E7%94%A8%E6%96%B9%E5%BC%8F%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;,&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;quot;abcd&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;,&amp;quot;%3C/span%3E,[%3Cspan%20class=%22number%22%3E1%3C/span%3E,%3Cspan%20class=%22number%22%3E2%3C/span%3E,%3Cspan%20class=%22number%22%3E3%3C/span%3E].%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ev1%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22number%22%3E0u8%3C/span%3E;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev1.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(%3Cspan%20class=%22number%22%3E7u8%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;;%20&amp;quot;%3C/span%3E,%20v1);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;,&amp;quot;%3C/span%3E,%20std::string::%3Cspan%20class=%22built_in%22%3EToString%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;abcd&amp;quot;%3C/span%3E));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;,&amp;quot;%3C/span%3E,%20&amp;lt;[%3Cspan%20class=%22type%22%3Ei32%3C/span%3E]&amp;gt;::%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E(&amp;amp;[%3Cspan%20class=%22number%22%3E1%3C/span%3E,%20%3Cspan%20class=%22number%22%3E2%3C/span%3E,%20%3Cspan%20class=%22number%22%3E3%3C/span%3E]));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ev2%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22number%22%3E0u8%3C/span%3E;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22type%22%3EVec%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20v2,%20%3Cspan%20class=%22number%22%3E7u8%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20v2);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%99%BD%E7%84%B6%E5%8F%AF%E4%BB%A5%E8%BF%99%E6%A0%B7%E5%81%9A%EF%BC%8C%E4%BD%86%E6%9C%89scoping%E9%97%AE%E9%A2%98%E3%80%82%E5%9C%A8%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%AD%EF%BC%8C%E6%9C%89%E5%BE%88%E5%A4%9A%E5%90%8C%E5%90%8D%E7%9A%84%E5%87%BD%E6%95%B0%3Ccode%3Eto_string%3C/code%3E%E3%80%81%3Ccode%3Elen%3C/code%3E%E3%80%81%3Ccode%3Epush%3C/code%3E%E2%80%A6%E3%80%82%E4%BD%BF%E7%94%A8%E7%82%B9%E6%93%8D%E4%BD%9C%EF%BC%8C%E8%87%AA%E7%84%B6%E4%BC%9A%E9%80%89%E6%8B%A9%E9%80%82%E5%BD%93%E7%9A%84%E5%87%BD%E6%95%B0%E3%80%82%E4%BD%86%E6%98%AF%E4%BD%BF%E7%94%A8%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%EF%BC%8C%E5%87%BD%E6%95%B0%E7%9A%84%E8%8C%83%E5%9B%B4%E5%BF%85%E9%A1%BB%E6%98%BE%E5%BC%8F%E5%86%99%E6%98%8E%E3%80%82%E4%BE%8B%E5%A6%82%EF%BC%8C%3Ccode%3Eto_string%3C/code%3E%E7%9A%84%E8%8C%83%E5%9B%B4%E5%9C%A8%3Ccode%3Estd::string::ToString%3C/code%3E%EF%BC%8C%3Ccode%3Elen%3C/code%3E%E5%87%BD%E6%95%B0%E7%9A%84%E8%8C%83%E5%9B%B4%E5%9C%A8%3Ccode%3E&amp;lt;[i32]&amp;gt;%3C/code%3E%EF%BC%8C%3Ccode%3Epush%3C/code%3E%E7%9A%84%E4%BD%9C%E7%94%A8%E8%8C%83%E5%9B%B4%E5%9C%A8%3Ccode%3EVec%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E5%A6%82%E6%9E%9C%E4%B8%8D%E5%86%99%E6%B8%85%E6%A5%9A%EF%BC%8C%E8%AD%AC%E5%A6%82%E8%BF%99%E6%AE%B5%E4%BB%A3%E7%A0%81%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edouble%3C/span%3E(x:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ex%20*%20%3Cspan%20class=%22number%22%3E2%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Edouble%3C/span%3E(%3Cspan%20class=%22number%22%3E7i32%3C/span%3E));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edouble%3C/span%3E(x:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ex%20*%20%3Cspan%20class=%22number%22%3E2%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22number%22%3E7i32%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Edouble%3C/span%3E());%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E9%87%8C%E7%9A%84%E7%82%B9%E6%93%8D%E4%BD%9C%E8%B0%83%E7%94%A8%EF%BC%8C%E4%BC%9A%E5%8F%91%E7%94%9F%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%EF%BC%8C%E5%AE%83%E4%BC%9A%E8%AF%B4%E5%BD%93%E5%89%8D%E8%8C%83%E5%9B%B4%E5%86%85%EF%BC%8C%3Ccode%3Ei32%3C/code%3E%E7%B1%BB%E5%9E%8B%E6%B2%A1%E6%9C%89double%E6%96%B9%E6%B3%95%E3%80%82%E5%8C%BA%E5%88%AB%E4%BA%8E%E6%96%B9%E6%B3%95%E5%92%8C%E5%87%BD%E6%95%B0%EF%BC%8CRust%E4%B8%AD%E7%82%B9%E6%93%8D%E4%BD%9C%E7%9A%84%E8%B0%83%E7%94%A8%EF%BC%8C%E5%8C%BA%E5%88%86%E4%B8%BA%E6%96%B9%E6%B3%95%EF%BC%8C%E5%AE%83%E4%BB%85%E8%83%BD%E5%9C%A8%E6%9C%89trait%E5%AE%9E%E7%8E%B0%E7%9A%84%E5%A3%B0%E6%98%8E%E7%9A%84%E6%96%B9%E6%B3%95%E4%B8%AD%E8%B0%83%E7%94%A8%EF%BC%8C%E6%89%80%E4%BB%A5%EF%BC%8C%E8%A6%81%E5%85%81%E8%AE%B8%E7%82%B9%E6%93%8D%E4%BD%9C%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%94%B9%E4%B8%BA%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etrait%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ECanBeDoubled%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edouble%3C/span%3E(%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ECanBeDoubled%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3Ei32%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edouble%3C/span%3E(%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E%20*%20%3Cspan%20class=%22number%22%3E2%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22number%22%3E7i32%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Edouble%3C/span%3E());%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3Etrait%E7%9A%84%E5%90%8D%E5%AD%97%E6%98%AF%E4%BB%BB%E6%84%8F%E7%9A%84%E3%80%82%E9%80%9A%E5%B8%B8trait%E4%BB%85%E5%8C%85%E5%90%AB%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%EF%BC%8Ctrait%E7%9A%84%E5%90%8D%E5%AD%97%E4%BD%BF%E7%94%A8Pascal-case%E8%AE%B0%E6%B3%95%E3%80%82%E5%AF%B9%E4%BA%8E%E7%B1%BB%E5%9E%8B%E6%9D%A5%E8%AF%B4%EF%BC%8C%E5%83%8F%3Ccode%3ECanBeDoubled%3C/code%3E%EF%BC%8C%E4%BB%8E%E5%91%BD%E5%90%8D%E4%B8%8A%E7%9C%8B%E5%87%BA%EF%BC%8C%E5%AE%83%E8%A1%A8%E7%A4%BA%E6%9C%89%E4%B8%80%E4%B8%AA%3Ccode%3Edouble%3C/code%3E%E5%87%BD%E6%95%B0%E5%8F%AF%E4%BB%A5%E8%8E%B7%E5%8F%96%E8%87%AA%E8%BA%AB%3Ccode%3Eself%3C/code%3E%E7%B1%BB%E5%9E%8B%E7%9A%84%E4%B8%80%E4%B8%AA%E5%80%BC%EF%BC%8C%E9%81%B5%E5%BE%AA%E8%BF%99%E7%A7%8D%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83%E4%BE%BF%E4%BA%8E%E9%98%85%E8%AF%BB%E7%90%86%E8%A7%A3%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E7%BC%96%E8%AF%91%E8%BF%99%E6%AE%B5%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%97%B6%EF%BC%8C%E7%BC%96%E8%AF%91%E5%99%A8%E4%BC%9A%E6%90%9C%E7%B4%A2%E6%94%AF%E6%8C%81%3Ccode%3Ei32%3C/code%3E%E7%9A%84%3Ccode%3Edouble%3C/code%3E%E6%93%8D%E4%BD%9C%EF%BC%8C%E5%B9%B6%E6%89%BE%E5%88%B0%E5%AF%B9%E5%BA%94%E7%9A%84%E6%96%B9%E6%B3%95%E7%AD%BE%E5%90%8D%E3%80%82%3C/p%3E%3Ch2%20id=%22The-%E2%80%9Cself%E2%80%9D-and-%E2%80%9CSlef%E2%80%9D-Keywords%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#The-%E2%80%9Cself%E2%80%9D-and-%E2%80%9CSlef%E2%80%9D-Keywords%22%3E%C2%B6%3C/a%3EThe%20%E2%80%9Cself%E2%80%9D%20and%20%E2%80%9CSlef%E2%80%9D%20Keywords%3C/h2%3E%3Cp%3E%E5%89%8D%E9%9D%A2%E4%B8%80%E4%B8%AA%E5%B0%8F%E8%8A%82%EF%BC%8C%E6%88%91%E4%BB%AC%E5%8F%91%E7%8E%B0%E4%BA%86%E4%B8%A4%E4%B8%AA%E5%85%B3%E9%94%AE%E5%AD%97%EF%BC%9A%E2%80%9Cself%E2%80%9D%E5%92%8C%E2%80%9CSelf%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E8%AF%AD%E5%8F%A5%3Ccode%3Etrait%20CanBeDoubled%20&amp;#123;%20fn%20double(self)%20-&amp;gt;%20Self;%20&amp;#125;%3C/code%3E%E4%B8%AD%EF%BC%8C%3Ccode%3Eself%3C/code%3E%E8%A1%A8%E7%A4%BA%3Ccode%3Edouble%3C/code%3E%E6%96%B9%E6%B3%95%E5%B0%86%E4%BD%9C%E7%94%A8%E7%9A%84%E5%80%BC%EF%BC%8C%3Ccode%3ESelf%3C/code%3E%E8%A1%A8%E7%A4%BA%3Ccode%3Eself%3C/code%3E%E7%9A%84%E7%B1%BB%E5%9E%8B%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%3Ccode%3Eself%3C/code%3E%E6%98%AF%E4%B8%80%E4%B8%AA%E6%96%B9%E6%B3%95%E7%9A%84%E9%A2%84%E8%AE%BE%E5%8F%82%E6%95%B0%EF%BC%8C%3Ccode%3ESelf%3C/code%3E%E8%A1%A8%E7%A4%BA%E8%BF%99%E4%B8%80%E4%B8%AA%E5%8F%82%E6%95%B0%E7%9A%84%E7%B1%BB%E5%9E%8B%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%3Ccode%3Eself%3C/code%3E%E5%92%8C%3Ccode%3ESelf%3C/code%3E%E4%BB%85%E8%83%BD%E8%A2%AB%E7%94%A8%E4%BA%8E%E4%B8%80%E4%B8%AA%3Ccode%3Etrait%3C/code%3E%E6%88%96%3Ccode%3Eimpl%3C/code%3E%E7%9A%84%E5%9D%97%E5%86%85%E3%80%82%E4%BB%A5%E5%8F%8A%EF%BC%8C%E5%A6%82%E6%9E%9C%E6%9C%89%E6%96%B9%E6%B3%95%EF%BC%8C%3Ccode%3Eself%3C/code%3E%E5%BF%85%E9%A1%BB%E6%98%AF%E6%96%B9%E6%B3%95%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8F%82%E6%95%B0%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%3Ccode%3Eimpl%20CanBeDoubled%20for%20i32%3C/code%3E%E5%9D%97%E5%86%85%EF%BC%8C%E4%B8%8B%E9%9D%A26%E8%A1%8C%E6%98%AF%E7%AD%89%E4%BB%B7%E7%9A%84%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edouble%3C/span%3E(%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edouble%3C/span%3E(%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E:%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edouble%3C/span%3E(%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edouble%3C/span%3E(%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edouble%3C/span%3E(%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E:%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edouble%3C/span%3E(%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%AC%AC%E4%B8%80%E8%A1%8C%E5%92%8C%E7%AC%AC%E5%9B%9B%E8%A1%8C%E7%BB%99%E5%AE%9A%E7%9A%84%3Ccode%3Eself%3C/code%3E%E5%8F%82%E6%95%B0%E5%B8%A6%E6%9C%89%E9%9A%90%E5%BC%8F%E7%B1%BB%E5%9E%8B%EF%BC%9B%E5%8F%AA%E4%B8%8D%E8%BF%87%EF%BC%8C%3Ccode%3Eself%3C/code%3E%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%B0%B1%E6%98%AF%3Ccode%3ESelf%3C/code%3E%EF%BC%8C%E6%89%80%E4%BB%A5%E4%B9%9F%E5%8F%AF%E4%BB%A5%E6%98%BE%E5%BC%8F%E6%8C%87%E5%AE%9A%EF%BC%8C%E5%8F%88%E5%9B%A0%E4%B8%BA%E5%9C%A8%3Ccode%3Eimpl%3C/code%3E%E5%9D%97%E5%86%85%EF%BC%8C%3Ccode%3ESelf%3C/code%3E%E5%B0%B1%E6%98%AF%3Ccode%3Ei32%3C/code%3E%EF%BC%8C%E6%89%80%E4%BB%A5%E4%B9%9F%E5%8F%AF%E4%BB%A5%E6%9B%BF%E6%8D%A2%E4%B8%BA%3Ccode%3Ei32%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8D%E8%BF%87%E6%9C%80%E5%B8%B8%E4%BD%BF%E7%94%A8%E7%9A%84%E6%98%AF%E7%AC%AC%E4%B8%80%E7%A7%8D%E5%86%99%E6%B3%95%EF%BC%8C%E5%AE%83%E6%9B%B4%E6%8E%A5%E8%BF%91%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E6%A6%82%E5%BF%B5%E3%80%82%3C/p%3E%3Cp%3E%E8%AE%A9%E6%88%91%E4%BB%AC%E7%9C%8B%E7%9C%8B%E5%8F%A6%E4%B8%80%E7%A7%8D%E6%83%85%E5%86%B5%EF%BC%8C%E6%88%91%E4%BB%AC%E5%B8%8C%E6%9C%9B%E6%9C%89%E8%BF%99%E6%A0%B7%E4%B8%80%E4%B8%AA%E8%A1%A8%E8%BE%BE%E5%BC%8F%3Ccode%3E&amp;quot;foobarbaz&amp;quot;.letters_count(&#39;a&#39;)&amp;quot;%3C/code%3E%E7%BB%9F%E8%AE%A1%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E6%9C%89%E5%A4%9A%E5%B0%91%E4%B8%AA%E5%AD%97%E7%AC%A6%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etrait%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ELettersCount%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eletters_count%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E,%20ch:%20%3Cspan%20class=%22type%22%3Echar%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Eusize%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ELettersCount%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3Estr%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eletters_count%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E,%20ch:%20%3Cspan%20class=%22type%22%3Echar%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Eusize%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ecount%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E0%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ec%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Echars%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20c%20==%20ch%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ecount%20+=%20%3Cspan%20class=%22number%22%3E1%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ecount%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;quot;&amp;quot;%3C/span%3E.leters_count(%3Cspan%20class=%22string%22%3E&amp;#x27;a&amp;#x27;%3C/span%3E));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;quot;ddd&amp;quot;%3C/span%3E.leters_count(%3Cspan%20class=%22string%22%3E&amp;#x27;a&amp;#x27;%3C/span%3E));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;quot;ddd&amp;quot;%3C/span%3E.leters_count(%3Cspan%20class=%22string%22%3E&amp;#x27;d&amp;#x27;%3C/span%3E));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;quot;foobarbaz&amp;quot;%3C/span%3E.leters_count(%3Cspan%20class=%22string%22%3E&amp;#x27;a&amp;#x27;%3C/span%3E));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%9B%A0%E4%B8%BA%E6%88%91%E4%BB%AC%E6%83%B3%E7%94%A8%E7%82%B9%E6%93%8D%E4%BD%9C%EF%BC%8C%E9%A6%96%E5%85%88%E5%A3%B0%E6%98%8E%E4%B8%80%E4%B8%AAtrait%EF%BC%8C%E5%AE%83%E7%9A%84%E5%90%8D%E5%AD%97%E6%9D%A5%E6%BA%90%E4%BA%8E%E5%87%BD%E6%95%B0%E5%90%8D%E3%80%82%E8%BF%99%E4%B8%AA%E5%87%BD%E6%95%B0%E9%9C%80%E8%A6%81%E4%B8%A4%E4%B8%AA%E5%8F%82%E6%95%B0%EF%BC%9A%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%88%87%E7%89%87%E7%94%A8%E4%BA%8E%E6%90%9C%E7%B4%A2%EF%BC%8C%E5%AD%97%E7%AC%A6%E7%94%A8%E4%BA%8E%E6%9F%A5%E6%89%BE%E3%80%82%E4%BD%86%E6%88%91%E4%BB%AC%E4%B8%8D%E6%83%B3%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%88%87%E7%89%87%E7%9A%84%E6%8B%B7%E8%B4%9D%E4%BD%9C%E4%B8%BA%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%EF%BC%9B%E6%88%91%E4%BB%AC%E4%BB%85%E6%83%B3%E7%9B%B4%E6%8E%A5%E4%BC%A0%E9%80%92%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%88%87%E7%89%87%E5%BC%95%E7%94%A8%EF%BC%8C%E5%9B%A0%E6%AD%A4%E6%88%91%E4%BB%AC%E5%B0%86%E5%8F%82%E6%95%B0%E5%A3%B0%E6%98%8E%E4%B8%BA%3Ccode%3E&amp;amp;self%3C/code%3E%EF%BC%8C%E8%BF%99%E9%87%8C%E7%9A%84%3Ccode%3Eself%3C/code%3E%E5%B0%B1%E6%98%AF%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%88%87%E7%89%87%EF%BC%8C%E6%9C%89%E4%BB%BB%E6%84%8F%E9%95%BF%E5%BA%A6%EF%BC%9B%3Ccode%3E&amp;amp;self%3C/code%3E%E6%98%AF%E4%B8%80%E4%B8%AA%E5%88%87%E7%89%87%E5%BC%95%E7%94%A8%EF%BC%8C%E6%9C%89%E4%B8%80%E5%AF%B9%E6%8C%87%E9%92%88%E7%9A%84%E5%A4%A7%E5%B0%8F(%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%88%87%E7%89%87%E6%9C%89header%E5%92%8Ccontent%E7%9A%84pointer)%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%94%E5%9B%9E%E5%80%BC%E7%B1%BB%E5%9E%8B%E6%98%AF%3Ccode%3Eusize%3C/code%3E%E8%A1%A8%E7%A4%BA%E9%9D%9E%E8%B4%9F%E6%95%B4%E6%95%B0%E3%80%82%3C/p%3E%3Cp%3E%3Ccode%3Eimpl%3C/code%3E%E5%AE%9E%E7%8E%B0%E4%BA%86%E4%BD%BF%E7%94%A8%E4%BA%86%E5%91%BD%E4%BB%A4%E5%BC%8F%E9%A3%8E%E6%A0%BC%E3%80%82%E6%B5%8F%E8%A7%88%3Ccode%3Echars()%3C/code%3E%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%9A%84%E6%89%80%E6%9C%89%E5%AD%97%E7%AC%A6%EF%BC%8C%E5%87%BA%E7%8E%B0%E8%A6%81%E6%90%9C%E7%B4%A2%E7%9A%84%E5%AD%97%E7%AC%A6%EF%BC%8C%E5%88%99%E7%BB%9F%E8%AE%A1%E4%B8%80%E6%AC%A1%E3%80%82%3C/p%3E%3Cp%3E%E5%A6%82%E6%9E%9C%E4%BD%BF%E7%94%A8%E5%87%BD%E6%95%B0%E5%BC%8F%E9%A3%8E%E9%A3%8E%E6%A0%BC%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%9B%B4%E7%AE%80%E7%9F%AD%EF%BC%8C%E5%A6%82%E4%B8%8B%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Echars%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Efilter%3C/span%3E(|c|%20*c%20==%20ch).%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecount%3C/span%3E()%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Ch2%20id=%22Standard-Traits%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Standard-Traits%22%3E%C2%B6%3C/a%3EStandard%20Traits%3C/h2%3E%3Cp%3E%E5%9C%A8%E6%9C%80%E5%BC%80%E5%A7%8B%E7%9A%84%E7%AB%A0%E8%8A%82%EF%BC%8C%E6%88%91%E4%BB%AC%E7%94%A8%E5%88%B0%E4%BA%86%E5%AE%8F%3Ccode%3Eprint%3C/code%3E%E3%80%81%3Ccode%3Eprintln%3C/code%3E%E5%92%8C%3Ccode%3Eformat%3C/code%3E%E3%80%82%E6%88%91%E4%BB%AC%E5%8F%AF%E4%BB%A5%E7%94%A8%3Ccode%3E&amp;#123;&amp;#125;%3C/code%3E%E5%8D%A0%E4%BD%8D%E7%AC%A6%E8%A1%A8%E7%A4%BA%E6%94%AF%E6%8C%81%E7%9A%84%E7%B1%BB%E5%9E%8B%EF%BC%8C%E4%BD%BF%E7%94%A8%3Ccode%3E&amp;#123;:?&amp;#125;%3C/code%3E%E6%9D%A5%E8%BF%9B%E8%A1%8C%E8%B0%83%E8%AF%95%E3%80%82%3C/p%3E%3Cp%3E%E4%BD%86%E6%80%8E%E4%B9%88%E7%9F%A5%E9%81%93%E6%9F%90%E4%BA%9B%E7%B1%BB%E5%9E%8B%E6%94%AF%E6%8C%81%3Ccode%3E&amp;#123;&amp;#125;%3C/code%3E%E5%8D%A0%E4%BD%8D%E7%AC%A6%EF%BC%8C%E5%85%B6%E5%AE%83%E7%B1%BB%E5%9E%8B%E5%8D%B4%E4%B8%8D%E6%94%AF%E6%8C%81%EF%BC%9F%E6%88%91%E8%87%AA%E5%B7%B1%E5%86%99%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E6%94%AF%E6%8C%81%E8%BF%99%E7%A7%8D%E5%8D%A0%E4%BD%8D%E7%AC%A6%EF%BC%9F%3C/p%3E%3Cp%3E%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E8%BF%99%E4%BA%9B%E5%AE%8F%E4%BD%BF%E7%94%A8%E4%BA%86%3Ccode%3Efmt%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E6%9C%89%E6%A0%87%E5%87%86%E5%BA%93%E7%9A%84%3Ccode%3Estd::fmt::Display%3C/code%3E%E6%8F%90%E4%BE%9B%E4%BA%86trait%E3%80%82%E6%89%80%E6%9C%89%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%9E%8B%E9%83%BD%E5%AE%9E%E7%8E%B0%E4%BA%86%E8%BF%99%E4%B8%AAtrait%EF%BC%8C%E6%89%80%E4%BB%A5%E4%BD%A0%E5%8F%AF%E4%BB%A5%E7%BB%99%E8%87%AA%E5%B7%B1%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%AE%9E%E7%8E%B0%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E19%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EComplex%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ere:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eim:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3Estd%3C/span%3E::fmt::Display%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ECompex%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Efmt%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E,%20&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20std::fmt::Formatter)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20std::fmt::%3Cspan%20class=%22type%22%3EResult%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Ewrite!%3C/span%3E(%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ef,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;i&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.re,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.im%20&amp;gt;=%20%3Cspan%20class=%22number%22%3E0%3C/span%3E.%20&amp;#123;%20%3Cspan%20class=%22string%22%3E&amp;#x27;+&amp;#x27;%3C/span%3E%20&amp;#125;%20%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22string%22%3E&amp;#x27;-&amp;#x27;%3C/span%3E%20&amp;#125;,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.im.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eabs%3C/span%3E()%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ec1%3C/span%3E%20=%20Complex%20&amp;#123;%20re:%20-%3Cspan%20class=%22number%22%3E2.3%3C/span%3E,%20im:%20%3Cspan%20class=%22number%22%3E0%3C/span%3E.%20&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ec2%3C/span%3E%20=%20Complex%20&amp;#123;%20re:%20-%3Cspan%20class=%22number%22%3E2.1%3C/span%3E,%20im:%20-%3Cspan%20class=%22number%22%3E5.2%3C/span%3E%20&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ec3%3C/span%3E%20=%20Complex%20&amp;#123;%20re:%20-%3Cspan%20class=%22number%22%3E2.2%3C/span%3E,%20im:%20%3Cspan%20class=%22number%22%3E5.2%3C/span%3E%20&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;,%20&amp;#123;&amp;#125;,%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20c1,%20c2,%20c3);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E4%BC%9A%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C-2.3%20+%200i,%20-2.1%20-%205.2i,%20-2.2%20+%205.2i%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%AF%B9%E4%BA%8E%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%AE%9E%E7%8E%B0traits%EF%BC%8C%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%AD%E6%9C%89%E9%9D%9E%E5%B8%B8%E5%A4%9A%E5%87%BD%E6%95%B0%E6%8F%90%E4%BE%9B%E3%80%82%3C/p%3E%3Ch2%20id=%22The-%E2%80%9CTerator%E2%80%9D-Trait%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#The-%E2%80%9CTerator%E2%80%9D-Trait%22%3E%C2%B6%3C/a%3EThe%20%E2%80%9CTerator%E2%80%9D%20Trait%3C/h2%3E%3Cp%3E%E4%B8%80%E4%B8%AA%E9%9D%9E%E5%B8%B8%E6%9C%89%E8%B6%A3%E7%9A%84%E6%A0%87%E5%87%86%E5%BA%93trait%E6%98%AF%E2%80%9CIterator%E2%80%9D%E3%80%82%E8%AE%A9%E6%88%91%E4%BB%AC%E7%9C%8B%E7%9C%8B%E5%AE%83%E4%B8%BB%E8%A6%81%E8%A7%A3%E5%86%B3%E5%93%AA%E6%96%B9%E9%9D%A2%E9%97%AE%E9%A2%98%E3%80%82%3C/p%3E%3Cp%3E%E4%BE%8B%E5%A6%82%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%EF%BC%8C%E7%BB%99%E5%AE%9A%E5%8F%82%E6%95%B0%3Ccode%3Erange%3C/code%3E%EF%BC%8C%E8%BF%94%E5%9B%9E%E7%AC%AC%E4%B8%89%E4%B8%AA%E5%85%83%E7%B4%A0%EF%BC%8C%E9%95%BF%E5%BA%A6%E4%B8%8D%E5%A4%9F%EF%BC%8C%E5%88%99%E8%BF%94%E5%9B%9ENone%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eget_third%3C/span%3E(r:%20std::ops::Range&amp;lt;%3Cspan%20class=%22type%22%3Eu32%3C/span%3E&amp;gt;)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3EOption%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Eu32%3C/span%3E&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20r.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E()%20&amp;gt;=%20%3Cspan%20class=%22number%22%3E3%3C/span%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3ESome%3C/span%3E(r.start%20+%20%3Cspan%20class=%22number%22%3E2%3C/span%3E)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%20%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22literal%22%3ENone%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;%20&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eget_third%3C/span%3E(%3Cspan%20class=%22number%22%3E10%3C/span%3E..%3Cspan%20class=%22number%22%3E12%3C/span%3E),%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eget_third%3C/span%3E(%3Cspan%20class=%22number%22%3E20%3C/span%3E..%3Cspan%20class=%22number%22%3E23%3C/span%3E));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%B0%86%E7%B1%BB%E5%9E%8B%E6%8D%A2%E6%88%90%3Ccode%3Eslice%3C/code%3E%E6%80%8E%E6%A0%B7%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eget_third%3C/span%3E(s:%20&amp;amp;[%3Cspan%20class=%22type%22%3Ef64%3C/span%3E])%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3EOption%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Ef64%3C/span%3E&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20s.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E()%20&amp;gt;=%20%3Cspan%20class=%22number%22%3E3%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3ESome%3C/span%3E(s[%3Cspan%20class=%22number%22%3E2%3C/span%3E])%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%20%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22literal%22%3ENone%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;%20&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eget_third%3C/span%3E(&amp;amp;[%3Cspan%20class=%22number%22%3E1.0%3C/span%3E,%20%3Cspan%20class=%22number%22%3E2.0%3C/span%3E]),%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eget_thrid%3C/span%3E(&amp;amp;[%3Cspan%20class=%22number%22%3E1.1%3C/span%3E,%20%3Cspan%20class=%22number%22%3E2.1%3C/span%3E,%20%3Cspan%20class=%22number%22%3E3.1%3C/span%3E]);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E4%B8%A4%E4%B8%AA%E7%A8%8B%E5%BA%8F%E9%9D%9E%E5%B8%B8%E7%9B%B8%E4%BC%BC%E3%80%82%E4%BD%86%E4%BD%BF%E7%94%A8%E7%9A%84%E6%98%AF%E8%BF%AD%E4%BB%A3%E5%99%A8%EF%BC%8C%E5%BA%94%E8%AF%A5%E5%B0%86%E5%AE%83%E4%BB%AC%E5%86%99%E6%88%90%E4%B8%80%E4%B8%AA%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%EF%BC%8C%E4%BD%A0%E5%8F%AF%E8%83%BD%E4%BC%9A%E5%86%99%E6%88%90%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eget_third%3C/span%3E&amp;lt;Iter,%20Item&amp;gt;(%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20iterator:%20Iter)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3EOption%3C/span%3E&amp;lt;Item&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eiterator.%3Cspan%20class=%22title%20function_%20invoke__%22%3Enext%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eiterator.%3Cspan%20class=%22title%20function_%20invoke__%22%3Enext%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eiterator.%3Cspan%20class=%22title%20function_%20invoke__%22%3Enext%3C/span%3E()%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;%20&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eget_third%3C/span%3E(%3Cspan%20class=%22number%22%3E0%3C/span%3E..%3Cspan%20class=%22number%22%3E9%3C/span%3E),%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eget_third%3C/span%3E([%3Cspan%20class=%22number%22%3E11%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E,%20%3Cspan%20class=%22number%22%3E33%3C/span%3E,%20%3Cspan%20class=%22number%22%3E44%3C/span%3E].%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E()));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%BD%A0%E4%BC%9A%E5%BE%97%E5%88%B0%E5%87%A0%E4%B8%AA%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%E3%80%82%E8%BF%99%E7%A7%8D%E6%83%B3%E6%B3%95%E6%98%AF%E5%A5%BD%E7%9A%84%EF%BC%8C%E4%BD%86%E6%9C%89%E5%87%A0%E4%B8%AA%E9%97%AE%E9%A2%98%EF%BC%8C%3C/p%3E%3Cul%3E%3Cli%3E%3Ccode%3Eiterator%3C/code%3E%E5%8F%98%E9%87%8F%E6%B2%A1%E6%9C%89%E8%BE%B9%E7%95%8C%EF%BC%8C%E6%89%80%E4%BB%A5%E5%AE%83%E6%B2%A1%E6%9C%89%3Ccode%3Enext%3C/code%3E%E5%87%BD%E6%95%B0%E3%80%82%E5%BD%93%E6%88%91%E4%BB%AC%E8%B0%83%E7%94%A8%3Ccode%3Eget_third%3C/code%3E%E5%87%BD%E6%95%B0%E5%BC%8F%EF%BC%8C%E6%88%91%E4%BB%AC%E7%9C%8B%E5%88%B0%E5%8F%82%E6%95%B0%E7%A1%AE%E5%AE%9E%E6%98%AFiterator%EF%BC%8C%E4%BB%A5%E4%B8%BA%E6%9C%89%3Ccode%3Enext%3C/code%3E%E5%87%BD%E6%95%B0%E3%80%82%E7%84%B6%E8%80%8C%EF%BC%8CRust%E9%9C%80%E8%A6%81%E7%9F%A5%E9%81%93%E6%B3%9B%E5%9E%8B%E5%8F%82%E6%95%B0%E5%AF%B9%E8%B1%A1%E6%9C%89%E5%93%AA%E4%BA%9B%E5%87%BD%E6%95%B0%E5%8F%AF%E4%BB%A5%E8%A2%AB%E8%B0%83%E7%94%A8%EF%BC%8C%3C/li%3E%3Cli%3E%E5%86%8D%E7%9C%8B%3Ccode%3Eget_thrid%3C/code%3E%E5%87%BD%E6%95%B0%E7%9A%84%E8%B0%83%E7%94%A8%EF%BC%8C%E5%AE%83%E7%9A%84%E6%B3%9B%E5%9E%8B%E5%8F%82%E6%95%B0%3Ccode%3EItem%3C/code%3E%E4%B8%8D%E8%83%BD%E8%A2%AB%E6%8E%A8%E6%96%AD%EF%BC%8C%E5%9B%A0%E4%B8%BA%E6%B2%A1%E6%9C%89%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%A1%A8%E6%98%8E%E7%BB%99%E8%BF%99%E4%B8%AA%E6%B3%9B%E5%9E%8B%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E4%BA%86%E5%80%BC%E3%80%82%3C/li%3E%3C/ul%3E%3Cp%3E%E5%AF%B9%E4%BA%8E%E7%AC%AC%E4%B8%80%E7%A7%8D%E9%94%99%E8%AF%AF%EF%BC%8C%E8%A1%A8%E6%98%8E%E2%80%9C%E8%BF%AD%E4%BB%A3%E5%99%A8%E2%80%9D%E7%9A%84%E6%A6%82%E5%BF%B5%E6%B2%A1%E6%9C%89%E8%A2%ABRust%E8%AF%AD%E8%A8%80%E5%AE%9A%E4%B9%89%E3%80%82%E8%BF%99%E4%B8%AA%E6%A6%82%E5%BF%B5%E7%94%B1Rust%E6%A0%87%E5%87%86%E5%BA%93%E7%9A%84%E4%B8%80%E4%B8%AA%E6%A0%87%E5%87%86trait%E2%80%94%E2%80%94%3Ccode%3EIterator%3C/code%3E%E5%AE%9A%E4%B9%89%E4%BA%86%E3%80%82%E6%88%91%E4%BB%AC%E7%9F%A5%E9%81%93%E8%BF%AD%E4%BB%A3%E5%99%A8%E9%83%BD%E6%9C%89%E4%B8%80%E4%B8%AA%3Ccode%3Enext%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E6%89%80%E4%BB%A5%E4%BB%BB%E4%BD%95%E8%BF%AD%E4%BB%A3%E5%99%A8%E9%83%BD%E5%BF%85%E9%A1%BB%E8%A6%81%E6%9C%89%E8%BF%99%E4%B8%AA%E5%87%BD%E6%95%B0%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eget_third%3C/span%3E&amp;lt;Iter,%20Item&amp;gt;(%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20iterator:%20Iter)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3EOption%3C/span%3E&amp;lt;Iterm&amp;gt;%20%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ewhere%3C/span%3E%20Iter:%20std::iter::%3Cspan%20class=%22built_in%22%3EIterator%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%BD%86%E4%BB%8D%E7%84%B6%E6%9C%89%E7%AC%AC%E4%BA%8C%E4%B8%AA%E9%94%99%E8%AF%AF%E5%AD%98%E5%9C%A8%EF%BC%9A%E6%80%8E%E4%B9%88%E7%A1%AE%E5%AE%9A%3Ccode%3EItem%3C/code%3E%E7%9A%84%E5%85%B7%E4%BD%93%E7%B1%BB%E5%9E%8B%E3%80%82%E4%B8%BA%E4%BA%86%E8%A7%A3%E5%86%B3%E8%BF%99%E4%B8%AA%E9%97%AE%E9%A2%98%EF%BC%8C%E9%9C%80%E8%A6%81%E9%A6%96%E5%85%88%E4%BB%8B%E7%BB%8D%3Ccode%3Etype%3C/code%3E%E5%85%B3%E9%94%AE%E5%AD%97%E3%80%82%3C/p%3E%3Ch2%20id=%22The-%E2%80%9Ctype%E2%80%9D-Keyword%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#The-%E2%80%9Ctype%E2%80%9D-Keyword%22%3E%C2%B6%3C/a%3EThe%20%E2%80%9Ctype%E2%80%9D%20Keyword%3C/h2%3E%3Cp%3ERust%E4%B8%AD%E7%9A%84%3Ccode%3Etype%3C/code%3E%E5%AF%B9%E4%BA%8EC%E8%AF%AD%E8%A8%80%E7%9A%84%3Ccode%3Etypedef%3C/code%3E%E5%85%B3%E9%94%AE%E5%AD%97%EF%BC%8C%E5%AE%83%E7%9B%B8%E5%BD%93%E4%BA%8E%E4%B8%80%E4%B8%AA%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%88%AB%E5%90%8D%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etype%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ENumber%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3Ef32%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef1%3C/span%3E(x:%20Number)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20Number%20&amp;#123;%20x%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef2%3C/span%3E(x:%20Number)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20NUmber%20&amp;#123;%20x%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea%3C/span%3E:%20Number%20=%20%3Cspan%20class=%22number%22%3E2.3%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eb%3C/span%3E:%20Number%20=%20%3Cspan%20class=%22number%22%3E3.4%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef1%3C/span%3E(a),%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef2%3C/span%3E(b));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%BD%BF%E7%94%A8%3Ccode%3Etype%3C/code%3E%E7%BB%93%E6%9E%84%E6%9C%89%E4%B8%A4%E7%82%B9%E5%A5%BD%E5%A4%84%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E7%AE%80%E6%B4%81%E4%BB%A3%E7%A0%81%EF%BC%8C%E5%AE%83%E4%BD%BF%E7%94%A8%E4%BA%86%E4%B8%80%E4%B8%AA%E6%9C%89%E6%84%8F%E4%B9%89%E7%9A%84%E5%90%8D%E5%AD%97%E6%9D%A5%E8%A1%A8%E7%A4%BA%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%9E%8B%E4%BA%86%3C/li%3E%3Cli%3E%E6%96%B9%E4%BE%BF%E6%80%A7%EF%BC%8C%E4%B8%8D%E7%94%A8%E9%A2%91%E7%B9%81%E5%88%87%E6%8D%A2%E7%B1%BB%E5%9E%8B%EF%BC%8C%E5%8F%AA%E9%9C%80%E8%A6%81%E4%BF%AE%E6%94%B9type%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%8D%B3%E5%8F%AF%3C/li%3E%3C/ul%3E%3Cp%3E%E4%BD%86%3Ccode%3Etype%3C/code%3E%E5%AE%9E%E9%99%85%E4%B8%8A%E6%9C%89%E5%8F%A6%E4%B8%80%E4%B8%AA%E9%87%8D%E8%A6%81%E7%94%A8%E9%80%94%EF%BC%8C%3C/p%3E%3Ch2%20id=%22Generic-Traits%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Generic-Traits%22%3E%C2%B6%3C/a%3EGeneric%20Traits%3C/h2%3E%3Cp%3E%E5%89%8D%E9%9D%A2%E7%9A%84%E7%AB%A0%E8%8A%82%E6%88%91%E4%BB%AC%E7%9F%A5%E9%81%93%E6%9C%89%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%E5%92%8C%E6%B3%9B%E5%9E%8B%E7%BB%93%E6%9E%84%E4%BD%93%E3%80%82trait%E4%B9%9F%E5%8F%AF%E4%BB%A5%E7%94%B1%E4%B8%80%E4%B8%AA%E6%88%96%E5%A4%9A%E4%B8%AA%E7%B1%BB%E5%9E%8B%E5%8F%82%E6%95%B0%E5%8C%96%E8%A1%A8%E7%A4%BA%EF%BC%8C%E5%8D%B3%E8%A6%81%E6%B1%82%E5%AE%83%E7%9A%84%E5%87%BD%E6%95%B0%E9%9C%80%E8%A6%81%E6%B3%9B%E5%9E%8B%E5%8F%82%E6%95%B0%E7%9A%84%E6%83%85%E5%86%B5%E3%80%82%E8%BF%99%E4%B8%AA%E6%A6%82%E5%BF%B5%E5%92%8CJava%E7%9A%84%E6%8E%A5%E5%8F%A3%E7%B1%BB%E4%BC%BC%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etrait%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ESearchable%3C/span%3E&amp;lt;Key&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Econtains%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E,%20key:%20Key)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eis_present%3C/span%3E&amp;lt;Collection&amp;gt;(coll:%20&amp;amp;Collection,%20id:%20%3Cspan%20class=%22type%22%3Eu32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ewhere%3C/span%3E%20Collection:%20Searchable&amp;lt;%3Cspan%20class=%22type%22%3Eu32%3C/span%3E&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ecoll.%3Cspan%20class=%22title%20function_%20invoke__%22%3Econtains%3C/span%3E(id)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E6%98%AF%E8%AF%A5%E4%BB%A3%E7%A0%81%E7%9A%84%E5%AE%8C%E6%95%B4%E5%AE%9E%E7%8E%B0%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E19%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E20%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E21%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E22%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E23%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E24%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E25%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E26%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E27%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E28%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E29%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E30%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E31%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E32%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E33%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E34%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E35%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E36%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E37%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E38%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etrait%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ESearchable%3C/span%3E&amp;lt;Key&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Econtains%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E,%20key:%20Key)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ERecordWithId%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20id:%20%3Cspan%20class=%22type%22%3Eu32%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20_descr:%20%3Cspan%20class=%22type%22%3EString%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ENameSetWithId%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20data:%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;RecordWithId&amp;gt;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ESearchable%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Eu32%3C/span%3E&amp;gt;%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ENameSetWithId%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Econtains%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E,%20key:%20%3Cspan%20class=%22type%22%3Eu32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Erecord%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.data.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20record.id%20==%20key%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22keyword%22%3Ereturn%3C/span%3E%20%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22literal%22%3Efalse%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eis_present%3C/span%3E&amp;lt;Collection&amp;gt;(coll:%20&amp;amp;Collection,%20id:%20%3Cspan%20class=%22type%22%3Eu32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ewhere%3C/span%3E%20Collection:%20Searchable&amp;lt;%3Cspan%20class=%22type%22%3Eu32%3C/span%3E&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20coll.%3Cspan%20class=%22title%20function_%20invoke__%22%3Econtains%3C/span%3E(id)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Enames%3C/span%3E%20=%20NameSetWithId%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Edata:%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ERecordWithId%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eid:%20%3Cspan%20class=%22number%22%3E34%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_descr:%20%3Cspan%20class=%22string%22%3E&amp;quot;John&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E(),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ERecordWithId%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eid:%20%3Cspan%20class=%22number%22%3E49%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_descr:%20%3Cspan%20class=%22string%22%3E&amp;quot;Jane&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E(),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E],%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;,%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eis_present%3C/span%3E(&amp;amp;names,%20%3Cspan%20class=%22number%22%3E48%3C/span%3E),%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eis_present%3C/span%3E(&amp;amp;names,%20%3Cspan%20class=%22number%22%3E49%3C/span%3E));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%A3%B0%E6%98%8E%E4%BA%86%3Ccode%3ESearchable%3C/code%3E%E6%B3%9B%E5%9E%8Btrait%E5%90%8E%EF%BC%8C%E4%B9%9F%E5%A3%B0%E6%98%8E%E4%BA%86%E4%B8%A4%E4%B8%AA%E7%BB%93%E6%9E%84%E4%BD%93%EF%BC%9A%E2%80%9CRecordWithId%E2%80%9D%EF%BC%8C%E8%A1%A8%E7%A4%BA%E7%94%B1%E5%94%AF%E4%B8%80%E6%95%B0%E5%AD%97%E6%A0%87%E8%AF%86%E7%9A%84%E6%95%B0%E6%8D%AE%E5%85%83%E7%B4%A0%EF%BC%9B%E2%80%9CNameSetWithId%E2%80%9D%EF%BC%8C%E8%A1%A8%E7%A4%BA%E4%B8%80%E4%B8%AA%E7%B1%BB%E5%9E%8B%E4%B8%BA%3Ccode%3ERecordWithId%3C/code%3E%E7%9A%84%E9%9B%86%E5%90%88%E3%80%82%3C/p%3E%3Cp%3E%E7%84%B6%E5%90%8E%EF%BC%8Ctrait%E5%AE%9E%E7%8E%B0%E4%BA%86%E8%BF%99%E4%B8%AA%E9%9B%86%E5%90%88%E7%B1%BB%E5%9E%8B%E3%80%82%E6%9C%89%E4%B8%A4%E4%B8%AA%E6%96%B9%E5%BC%8F%E5%AE%9E%E7%8E%B0%EF%BC%9A%E4%BF%9D%E7%95%99%E6%B3%9B%E5%9E%8B%E5%8F%82%E6%95%B0%EF%BC%8C%E7%BC%96%E5%86%99%E7%B1%BB%E4%BC%BC%E4%BA%8E%3Ccode%3Eimpl&amp;lt;T&amp;gt;%20Searchable&amp;lt;T&amp;gt;%20for%20NameSetWithId%20&amp;#123;%3C/code%3E%EF%BC%9B%E8%BF%99%E9%87%8C%E6%98%AF%E5%8F%A6%E4%B8%80%E7%A7%8D%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95%EF%BC%8C%E5%9B%A0%E4%B8%BA%3Ccode%3Econtains%3C/code%3E%E4%B8%8D%E4%BB%85%E9%9C%80%E8%A6%81%E6%8C%87%E5%AE%9A%3Ccode%3ENameSetWithId%3C/code%3E%EF%BC%8C%E8%BF%98%E9%9C%80%E8%A6%81%E7%9F%A5%E9%81%93%3Ccode%3EKey%3C/code%3E%E7%9A%84%E5%85%B7%E4%BD%93%E7%B1%BB%E5%9E%8B%E3%80%82%3C/p%3E%3Cp%3E%E5%AE%9A%E4%B9%89%E4%BA%86%3Ccode%3Eis_present%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E8%A6%81%E6%98%AF%E6%9C%89%E8%BF%99%E4%B8%AA%E5%87%BD%E6%95%B0%EF%BC%8C%E9%9C%80%E8%A6%81%E5%AE%9A%E4%B9%89%E5%AF%B9%E5%BA%94%E7%9A%84%E7%BB%93%E6%9E%84%E4%BD%93%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E4%B8%AA%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E8%99%BD%E7%84%B6%E7%94%9F%E6%95%88%E4%BA%86%EF%BC%8C%E4%BD%86%E6%9C%89%E4%B8%80%E4%BA%9B%E7%BC%BA%E9%99%B7%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E9%87%8C%EF%BC%8C%3Ccode%3ESearchable%3C/code%3E%E9%9C%80%E8%A6%81%E6%8C%87%E5%AE%9A%3Ccode%3EKey%3C/code%3E%E7%9A%84%E7%B1%BB%E5%9E%8B%E6%98%AF%3Ccode%3Eu32%3C/code%3E%EF%BC%8C%E5%8F%A6%E5%A4%96%E8%BF%98%E8%A6%81%E6%8C%87%E5%AE%9A%E5%8F%82%E6%95%B0%E5%8C%96%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%80%BC%EF%BC%8C%E4%BD%86%E5%9C%A8%3Ccode%3Ewhere%3C/code%3E%E4%BB%8E%E5%8F%A5%E4%B8%AD%E5%8F%88%E9%87%8D%E5%A4%8D%E6%8C%87%E5%AE%9A%E4%BA%86%E4%B8%80%E6%AC%A1%EF%BC%8C%3C/p%3E%3Cp%3E%E8%80%83%E8%99%91%E6%9B%B4%E5%A4%8D%E6%9D%82%E7%9A%84%E6%83%85%E5%86%B5%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E19%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E20%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E21%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E22%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E23%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E24%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E25%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E26%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E27%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E28%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E29%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E30%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E31%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E32%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E33%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E34%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E35%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E36%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E37%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E38%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E39%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E40%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E41%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E42%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E43%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E44%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E45%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E46%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E47%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E48%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E49%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E50%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E51%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E52%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etrait%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ESearchable%3C/span%3E&amp;lt;Key,%20Count&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Econtains%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E,%20key:%20Key)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ecount%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E,%20key:%20Key)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20Count;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ERecordWithId%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eid:%20%3Cspan%20class=%22type%22%3Eu32%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_descr:%20%3Cspan%20class=%22type%22%3EString%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ENameSetWithId%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Edata:%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;RecordWithId&amp;gt;,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ESearchable%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Eu32%3C/span%3E,%20%3Cspan%20class=%22type%22%3Eusize%3C/span%3E&amp;gt;%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ENameSetWithId%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Econtains%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E,%20key:%20%3Cspan%20class=%22type%22%3Eu32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Erecord%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.data.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20record.id%20==%20key%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ereturn%3C/span%3E%20%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22literal%22%3Efalse%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ecount%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E,%20key:%20%3Cspan%20class=%22type%22%3Eu32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Eusize%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ec%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E0%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Erecord%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.data.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20record.id%20==%20key%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ec%20+=%20%3Cspan%20class=%22number%22%3E1%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ec%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eis_present%3C/span%3E&amp;lt;Collection&amp;gt;(coll:%20&amp;amp;Collection,%20id:%20%3Cspan%20class=%22type%22%3Eu32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ewhere%3C/span%3E%20Collection:%20Searchable&amp;lt;%3Cspan%20class=%22type%22%3Eu32%3C/span%3E,%20%3Cspan%20class=%22type%22%3Eusize%3C/span%3E&amp;gt;,%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ecoll.%3Cspan%20class=%22title%20function_%20invoke__%22%3Econtains%3C/span%3E(id)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Enames%3C/span%3E%20=%20NameSetWithId%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Edata:%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ERecordWithId%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eid:%20%3Cspan%20class=%22number%22%3E34%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_desrc:%20%3Cspan%20class=%22string%22%3E&amp;quot;John&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E(),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ERecordWithId%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eid:%20%3Cspan%20class=%22number%22%3E49%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_desrc:%20%3Cspan%20class=%22string%22%3E&amp;quot;Jane&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E(),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E],%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;,%20&amp;#123;&amp;#125;;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Enames.%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecount%3C/span%3E(%3Cspan%20class=%22number%22%3E48%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Enames.%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecount%3C/span%3E(%3Cspan%20class=%22number%22%3E49%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Eis_present%3C/span%3E(&amp;amp;names,%20%3Cspan%20class=%22number%22%3E48%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Eis_present%3C/span%3E(&amp;amp;names,%20%3Cspan%20class=%22number%22%3E49%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E9%87%8C%E4%B8%8D%E6%98%8E%E6%98%BE%E5%9C%B0%3Ccode%3Eis_present%3C/code%3E%E7%9A%84%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%E7%AD%BE%E5%90%8D%EF%BC%8C%E5%BF%85%E9%A1%BB%E6%8C%87%E5%AE%9A%E6%96%B0%E7%9A%84%E7%B1%BB%E5%9E%8B%E3%80%82%E4%BD%86%E8%BF%99%E4%B8%AA%E5%87%BD%E6%95%B0%E5%B9%B6%E6%B2%A1%E6%9C%89%E4%BD%BF%E7%94%A8%E8%BF%99%E4%B8%AA%E7%B1%BB%E5%9E%8B%EF%BC%8C%E8%BF%99%E4%B8%AA%E7%B1%BB%E5%9E%8B%E5%8F%82%E6%95%B0%E5%9C%A8%E8%BF%99%E9%87%8C%E6%B2%A1%E6%9C%89%E5%BE%88%E5%A4%A7%E6%84%8F%E4%B9%89%E3%80%82%3C/p%3E%3Ch2%20id=%22Using-Associated-Types-to-Simplify-Generic-Traits-Use%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Using-Associated-Types-to-Simplify-Generic-Traits-Use%22%3E%C2%B6%3C/a%3EUsing%20Associated%20Types%20to%20Simplify%20Generic%20Traits%20Use%3C/h2%3E%3Cp%3E%E5%89%8D%E9%9D%A2%E4%BB%A5%E5%8F%8A%E6%8F%8F%E8%BF%B0%E4%BA%86%E8%BF%99%E4%B8%AA%E6%97%A0%E5%AE%9E%E9%99%85%E6%84%8F%E4%B9%89%E7%9A%84%E6%B3%9B%E5%9E%8B%E5%8F%82%E6%95%B0%E7%AD%BE%E5%90%8D%E7%9A%84%E9%97%AE%E9%A2%98%E3%80%82%E4%B8%80%E4%B8%AA%E6%9C%80%E5%A5%BD%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E5%A6%82%E4%B8%8B%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E19%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E20%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E21%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E22%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E23%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E24%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E25%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E26%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E27%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E28%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E29%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E30%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E31%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E32%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E33%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E34%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E35%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E36%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E37%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E38%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E39%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E40%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E41%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E42%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E43%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E44%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E45%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E46%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E47%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E48%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E49%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E50%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E51%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E52%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E53%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E54%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E55%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E56%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E57%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E58%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E59%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E60%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etrait%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ESearchable%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22comment%22%3E/1%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Etype%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EKey%3C/span%3E;%20%3Cspan%20class=%22comment%22%3E/2%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Etype%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ECount%3C/span%3E;%20%3Cspan%20class=%22comment%22%3E/3%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Econtains%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E,%20key:%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E::Key)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E;%20%20%3Cspan%20class=%22comment%22%3E/4%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ecount%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E,%20key:%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E::Key)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E::Count;%20%3Cspan%20class=%22comment%22%3E/5%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ERecordWithId%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20id:%20%3Cspan%20class=%22type%22%3Eu32%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20_desrc:%20%3Cspan%20class=%22type%22%3EString%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ENameSetWithId%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20data:%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;RecordWithId&amp;gt;,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ESearchable%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ENameSetWithId%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22comment%22%3E/6%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Etype%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EKey%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3Eu32%3C/span%3E;%20%3Cspan%20class=%22comment%22%3E/7%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Etype%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ECount%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3Eusize%3C/span%3E;%20%3Cspan%20class=%22comment%22%3E/8%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Econtains%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E,%20key:%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E::Key)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E%20&amp;#123;%20%20%20%20%3Cspan%20class=%22comment%22%3E/9%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Erecord%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.data.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20record.id%20==%20key%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22keyword%22%3Ereturn%3C/span%3E%20%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22literal%22%3Efalse%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ecount%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E,%20key:%20%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E::Key)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Eusize%3C/span%3E%20&amp;#123;%20%20%3Cspan%20class=%22comment%22%3E/10%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ec%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E0%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Erecord%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.data.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20record.id%20==%20key%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20c%20+=%20%3Cspan%20class=%22number%22%3E1%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20c%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eis_present%3C/span%3E&amp;lt;Collection&amp;gt;(%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20coll:%20&amp;amp;Collection,%20%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20id:%20&amp;lt;Collection%20%3Cspan%20class=%22keyword%22%3Eas%3C/span%3E%20Searchable&amp;gt;::Key,%20%20%20%20%3Cspan%20class=%22comment%22%3E/%2011%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ewhere%3C/span%3E%20Collection:%20Searchable,%20%20%20%3Cspan%20class=%22comment%22%3E/12%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20coll.%3Cspan%20class=%22title%20function_%20invoke__%22%3Econtains%3C/span%3E(id)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Enames%3C/span%3E%20=%20NameSetWithId%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Edata:%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ERecordWithId%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eid:%20%3Cspan%20class=%22number%22%3E34%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_desrc:%20%3Cspan%20class=%22string%22%3E&amp;quot;John&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E(),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ERecordWithId%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eid:%20%3Cspan%20class=%22number%22%3E49%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_desrc:%20%3Cspan%20class=%22string%22%3E&amp;quot;Jane&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E(),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E],%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;,%20&amp;#123;&amp;#125;;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20names.%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecount%3C/span%3E(%3Cspan%20class=%22number%22%3E48%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20names.%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecount%3C/span%3E(%3Cspan%20class=%22number%22%3E49%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eis_present%3C/span%3E(&amp;amp;names,%20%3Cspan%20class=%22number%22%3E48%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eis_present%3C/span%3E(&amp;amp;names,%20%3Cspan%20class=%22number%22%3E49%3C/span%3E));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E9%A6%96%E5%85%88%E6%98%AF%EF%BC%8C%E2%80%9CSearchable%E2%80%9D%E7%89%B9%E8%B4%A8%E4%B8%8D%E5%86%8D%E4%BD%BF%E7%94%A8%E6%B3%9B%E5%9E%8B%EF%BC%8C%E8%80%8C%E6%98%AF%E5%B0%86%E6%B3%9B%E5%9E%8B%E5%AE%9A%E4%B9%89%E5%9C%A8%E8%87%AA%E8%BA%AB%E5%86%85%E9%83%A8%EF%BC%8C%3C/p%3E%3Cblockquote%3E%3Cp%3E%E8%BF%99%E7%82%B9%E5%86%99%E6%B3%95%E5%92%8CScala%E7%9A%84trait%E7%9C%9F%E7%9A%84%E9%9D%9E%E5%B8%B8%E9%9D%9E%E5%B8%B8%E5%83%8F%E2%80%A6%3C/p%3E%3C/blockquote%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E6%AF%8F%E6%AC%A1%E4%BD%BF%E7%94%A8%E2%80%9CKey%E2%80%9D%E5%92%8C%E2%80%9CCount%E2%80%9D%E7%B1%BB%E5%9E%8B%E5%8F%82%E6%95%B0%E6%97%B6%EF%BC%8C%E9%83%BD%E9%9C%80%E8%A6%81%E5%B8%A6%E5%89%8D%E7%BC%80%E2%80%9CSelf::%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E4%BA%9B%E6%94%B9%E5%8F%98%E7%9A%84%E5%A5%BD%E5%A4%84%E4%BD%93%E7%8E%B0%E5%9C%A8%3Ccode%3Eis_present%3C/code%3E%E6%96%B9%E6%B3%95%E7%AD%BE%E5%90%8D%E4%B8%8A%E3%80%82%E9%A6%96%E5%85%88%E5%A6%82%E5%85%B6%E7%94%A8%E5%85%B7%E4%BD%93%E7%9A%84%E7%B1%BB%E5%9E%8B%EF%BC%8C%E8%BF%99%E9%87%8C%E7%94%A8%E4%B8%80%E4%B8%AA%E5%85%B3%E8%81%94%E7%B1%BB%E5%9E%8B%3Ccode%3EKey%3C/code%3E%E6%8C%87%E5%AE%9A%EF%BC%8C%E8%BF%99%E4%B8%AA%E4%B8%8D%E9%9C%80%E8%A6%81%E5%9C%A8%E6%8C%87%E5%AE%9A%3Ccode%3ESearchable%3C/code%3E%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E6%B2%A1%E6%9C%89%E6%B3%9B%E5%9E%8B%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E9%87%8C%E5%B0%86%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%AE%9A%E4%B9%89%E7%BB%91%E5%AE%9A%E5%9C%A8%E4%B8%80%E4%B8%AA%3Ccode%3Etrait%3C/code%3E%E4%B8%8A%EF%BC%8C%E8%BF%99%E7%A7%8D%E5%AE%9E%E7%8E%B0%E6%9C%BA%E5%88%B6%EF%BC%8C%E5%AF%B9%E4%BA%8E%E5%A4%A7%E5%9E%8B%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E6%9B%B4%E6%9C%89%E4%BC%98%E5%8A%BF%E3%80%82%3C/p%3E%3Ch2%20id=%22the-%E2%80%9CIterator%E2%80%9D-Standard-Trait-Declaration%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#the-%E2%80%9CIterator%E2%80%9D-Standard-Trait-Declaration%22%3E%C2%B6%3C/a%3Ethe%20%E2%80%9CIterator%E2%80%9D%20Standard%20Trait%20Declaration%3C/h2%3E%3Cp%3E%E5%85%B3%E4%BA%8E%E2%80%9C%3Ccode%3EIterator%3C/code%3E%E2%80%9D%E8%BF%99%E4%B8%AA%E6%A0%87%E5%87%86trait%EF%BC%8C%E6%88%91%E4%BB%AC%E8%AF%B4%E8%BF%87%E5%AE%83%E4%BB%85%E5%8C%85%E5%90%AB%E4%B8%80%E4%B8%AAitem%EF%BC%9A%3Ccode%3Enext%3C/code%3E%E5%87%BD%E6%95%B0%E7%AD%BE%E5%90%8D%E3%80%82%E8%BF%99%E6%A0%B7%E8%AF%B4%E4%B8%8D%E5%AF%B9%E7%9A%84%E3%80%82%E5%BA%94%E8%AF%A5%E8%AF%B4%E6%98%AF%E4%B8%80%E4%B8%AA%E6%B3%9B%E5%9E%8B%E7%9A%84item%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E4%B8%BA%E5%AE%83%E7%94%B1%3Ccode%3Etype%3C/code%3E%E5%85%83%E7%B4%A0%E7%AD%BE%E5%90%8D%EF%BC%8C%E4%BD%A0%E5%8F%AF%E4%BB%A5%E8%AE%A4%E4%B8%BA%E5%AE%83%E5%9C%A8%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%AD%E7%9A%84%E5%AE%9A%E4%B9%89%E6%98%AF%E8%BF%99%E6%A0%B7%E7%9A%84%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etrait%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EIterator%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etype%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EItem%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Enext%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3EOption%3C/span%3E&amp;lt;%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E::Item&amp;gt;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E7%A7%8D%E5%AE%9A%E4%B9%89%E5%BC%BA%E5%88%B6%E8%A6%81%E6%B1%82%E5%85%B7%E4%BD%93%E7%9A%84%E8%BF%AD%E4%BB%A3%E5%AE%9E%E7%8E%B0%E8%A6%81%E4%B8%BA%3Ccode%3EItem%3C/code%3E%E7%B1%BB%E5%9E%8B%E5%AE%9A%E4%B9%89%EF%BC%8C%E4%BB%A5%E5%8F%8A%E5%AE%9E%E7%8E%B0%3Ccode%3Enext%3C/code%3E%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%93%EF%BC%8C%3C/p%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E6%98%AF%E4%B8%80%E7%A7%8D%E5%8F%AF%E8%83%BD%E7%9A%84%E5%AE%9E%E7%8E%B0range%E7%9A%84%E6%96%B9%E5%BC%8F%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E19%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E20%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E21%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E22%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E23%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E24%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E25%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E26%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E27%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E28%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E29%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etrait%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EMyIterator%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etype%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EItem%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Enext%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3EOption%3C/span%3E&amp;lt;%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E::Item&amp;gt;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EMyRangeIterator%3C/span%3E&amp;lt;T&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ecurrent:%20T,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Elimit:%20T,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EMyIterator%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EMyRangeIterator%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Eu32%3C/span%3E&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etype%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EItem%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3Eu32%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Enext%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3EOption%3C/span%3E&amp;lt;%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E::Item&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.current%20==%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.limit%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22literal%22%3ENone%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%20%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.current%20+=%20%3Cspan%20class=%22number%22%3E1%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3ESome%3C/span%3E(%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.current%20-%20%3Cspan%20class=%22number%22%3E1%3C/span%3E)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Erange_it%3C/span%3E%20=%20MyRangeIterator%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ecurrent:%20%3Cspan%20class=%22number%22%3E10%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Elimit:%20%3Cspan%20class=%22number%22%3E13%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;,%20&amp;quot;%3C/span%3E,%20range_it.%3Cspan%20class=%22title%20function_%20invoke__%22%3Enext%3C/span%3E());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;,%20&amp;quot;%3C/span%3E,%20range_it.%3Cspan%20class=%22title%20function_%20invoke__%22%3Enext%3C/span%3E());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;,%20&amp;quot;%3C/span%3E,%20range_it.%3Cspan%20class=%22title%20function_%20invoke__%22%3Enext%3C/span%3E());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;,%20&amp;quot;%3C/span%3E,%20range_it.%3Cspan%20class=%22title%20function_%20invoke__%22%3Enext%3C/span%3E());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;,%20&amp;quot;%3C/span%3E,%20range_it.%3Cspan%20class=%22title%20function_%20invoke__%22%3Enext%3C/span%3E());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;,%20&amp;quot;%3C/span%3E,%20range_it.%3Cspan%20class=%22title%20function_%20invoke__%22%3Enext%3C/span%3E());%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E9%87%8C%E4%BD%BF%E7%94%A8%E4%BA%86%3Ccode%3EMyRangeIterator&amp;lt;u32&amp;gt;%3C/code%3E%EF%BC%8C%E6%8C%87%E5%AE%9A%E4%BA%86%E5%AE%83%E7%9A%84%E5%85%B7%E4%BD%93%E7%B1%BB%E5%9E%8B%EF%BC%8C%E4%BD%86%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E6%88%91%E4%BB%AC%E4%B8%8D%E9%9C%80%E8%A6%81%E5%AE%9A%E4%B9%89%3Ccode%3EMyIterator%3C/code%3E%E7%89%B9%E8%B4%A8%EF%BC%8C%E5%9B%A0%E4%B8%BA%E6%88%91%E4%BB%AC%E5%8F%AF%E4%BB%A5%E7%9B%B4%E6%8E%A5%E4%BD%BF%E7%94%A8%E6%A0%87%E5%87%86%E5%BA%93%E7%9A%84%3Ccode%3EIterator%3C/code%3E%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E19%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E20%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E21%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E22%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E23%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E24%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E25%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E26%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E27%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EMyRangeIterator%3C/span%3E&amp;lt;T&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ecurrent:%20T,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Elimit:%20T,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eimpl%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EIterator%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EMyRangeIterator%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Eu32%3C/span%3E&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Etype%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EItem%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3Eu32%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Enext%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3EOption%3C/span%3E&amp;lt;%3Cspan%20class=%22keyword%22%3ESelf%3C/span%3E::Item&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.current%20==%20%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.limit%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22literal%22%3ENone%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%20%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.current%20+=%20%3Cspan%20class=%22number%22%3E1%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3ESome%3C/span%3E(%3Cspan%20class=%22keyword%22%3Eself%3C/span%3E.current%20-%20%3Cspan%20class=%22number%22%3E1%3C/span%3E)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;;%20&amp;quot;%3C/span%3E,%20%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EMyRangeIterator%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ecurrent:%20%3Cspan%20class=%22number%22%3E10%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Elimit:%20%3Cspan%20class=%22number%22%3E13%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;.collect::&amp;lt;%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;_&amp;gt;&amp;gt;()%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20(MyRangeIterator%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ecurrent:%20%3Cspan%20class=%22number%22%3E20%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Elimit:%20%3Cspan%20class=%22number%22%3E24%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20i);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%9B%A0%E4%B8%BA%E2%80%9CMyRangeIterator%E2%80%9D%E5%AF%B9%E8%B1%A1%E6%9C%89%E5%AE%9E%E7%8E%B0%E2%80%9CIterator%E2%80%9D%E7%89%B9%E8%B4%A8%E7%9A%84%E7%B1%BB%E5%9E%8B%EF%BC%8C%E6%89%80%E4%BB%A5%E5%AE%83%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%3Ccode%3Ecollect%3C/code%3E%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%B6%88%E8%B4%B9%E8%80%85%E3%80%82%3C/p%3E%3Ch2%20id=%22Using-Generic-Iterators%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Using-Generic-Iterators%22%3E%C2%B6%3C/a%3EUsing%20Generic%20Iterators%3C/h2%3E%3Cp%3E%E7%8E%B0%E5%9C%A8%EF%BC%8C%E5%9B%9E%E5%88%B0%E5%8E%9F%E5%85%88%E9%82%A3%E4%B8%AA%3Ccode%3EItem%3C/code%3E%E6%97%A0%E7%94%A8%E7%9A%84%E9%97%AE%E9%A2%98%E3%80%82%E6%88%91%E4%BB%AC%E6%83%B3%E8%A6%81%E5%AE%9E%E7%8E%B0%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%3Ccode%3Eget_third%3C/code%3E%EF%BC%8C%E5%AE%83%E6%8E%A5%E6%94%B6%E4%BB%BB%E4%BD%95%E8%BF%AD%E4%BB%A3%E5%99%A8%EF%BC%8C%E8%BF%94%E5%9B%9E%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%AC%AC%E4%B8%89%E4%B8%AA%E5%85%83%E7%B4%A0%EF%BC%8C%E9%97%AE%E9%A2%98%E5%8F%AF%E4%BB%A5%E7%94%B1%E4%B8%8B%E9%9D%A2%E4%BB%A3%E7%A0%81%E8%A7%A3%E5%86%B3%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eget_third%3C/span%3E&amp;lt;Iter&amp;gt;(%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20iterator:%20Iter)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3EOption%3C/span%3E&amp;lt;Iter::Item&amp;gt;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ewhere%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EIter:%20std::iter::%3Cspan%20class=%22built_in%22%3EIterator%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eiterator.%3Cspan%20class=%22title%20function_%20invoke__%22%3Enext%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eiterator.%3Cspan%20class=%22title%20function_%20invoke__%22%3Enext%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eiterator.%3Cspan%20class=%22title%20function_%20invoke__%22%3Enext%3C/span%3E()%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;%20&amp;#123;:?&amp;#125;%20&amp;#123;:?&amp;#125;%20&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Eget_third%3C/span%3E(%3Cspan%20class=%22number%22%3E10%3C/span%3E..%3Cspan%20class=%22number%22%3E12%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Eget_third%3C/span%3E(%3Cspan%20class=%22number%22%3E20%3C/span%3E..%3Cspan%20class=%22number%22%3E29%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Eget_third%3C/span%3E([%3Cspan%20class=%22number%22%3E31%3C/span%3E,%20%3Cspan%20class=%22number%22%3E32%3C/span%3E].%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E()),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Eget_third%3C/span%3E([%3Cspan%20class=%22number%22%3E41%3C/span%3E,%20%3Cspan%20class=%22number%22%3E42%3C/span%3E,%20%3Cspan%20class=%22number%22%3E43%3C/span%3E,%20%3Cspan%20class=%22number%22%3E44%3C/span%3E].%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E())%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E9%87%8C%E7%9B%B4%E6%8E%A5%E7%94%A8%3Ccode%3Ewhere%3C/code%3E%E6%9D%A5%E7%BB%91%E5%AE%9A%E7%9A%84%3Ccode%3EItem%3C/code%3E%E7%9A%84%E8%8C%83%E5%9B%B4%EF%BC%8C%E8%BF%99%E6%A0%B7%E4%B8%80%E6%9D%A5%EF%BC%8C%E5%B0%B1%E5%8F%AF%E4%BB%A5%E8%AE%BF%E9%97%AE%3Ccode%3EItem%3C/code%3E%E5%85%B3%E8%81%94%E7%9A%84%E7%B1%BB%E5%9E%8B%E4%BA%86%EF%BC%8C%E5%8C%85%E6%8B%AC%E5%AE%83%E7%9A%84%E6%96%B9%E6%B3%95%3Ccode%3Enext%3C/code%3E%E3%80%82%E4%BB%A5%E5%8F%8A%E5%AE%83%E7%9A%84%E8%BF%94%E5%9B%9E%E7%B1%BB%E5%9E%8B%E5%B0%B1%E6%98%AF%3Ccode%3EOption&amp;lt;Iter::Item&amp;gt;%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E6%AE%B5%E4%BB%A3%E7%A0%81%EF%BC%8C%E5%AF%B9%E4%BA%8E%E8%BF%AD%E4%BB%A3%E5%8F%82%E6%95%B0%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%87%BD%E6%95%B0%E7%BC%96%E5%86%99%E6%8F%90%E4%BE%9B%E4%BA%86%E5%8F%82%E8%80%83%E3%80%82%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%AD%E5%B7%B2%E7%BB%8F%E5%AE%9A%E4%B9%89%E4%BA%86%E7%B1%BB%E5%9E%8B%E7%9A%84%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%B6%88%E8%B4%B9%E8%80%85%3Ccode%3Enth%3C/code%3E%E3%80%82%E6%89%80%E4%BB%A5%E4%B8%8B%E9%9D%A2%E5%86%99%E6%B3%95%E6%98%AF%E7%AD%89%E4%BB%B7%E7%9A%84%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;%20&amp;#123;:?&amp;#125;%20&amp;#123;:?&amp;#125;%20&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E(%3Cspan%20class=%22number%22%3E10%3C/span%3E..%3Cspan%20class=%22number%22%3E12%3C/span%3E).%3Cspan%20class=%22title%20function_%20invoke__%22%3Enth%3C/span%3E(%3Cspan%20class=%22number%22%3E2%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E(%3Cspan%20class=%22number%22%3E20%3C/span%3E..%3Cspan%20class=%22number%22%3E29%3C/span%3E).%3Cspan%20class=%22title%20function_%20invoke__%22%3Enth%3C/span%3E(%3Cspan%20class=%22number%22%3E2%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E([%3Cspan%20class=%22number%22%3E31%3C/span%3E,%20%3Cspan%20class=%22number%22%3E32%3C/span%3E].%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E()).%3Cspan%20class=%22title%20function_%20invoke__%22%3Enth%3C/span%3E(%3Cspan%20class=%22number%22%3E2%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E([%3Cspan%20class=%22number%22%3E41%3C/span%3E,%20%3Cspan%20class=%22number%22%3E42%3C/span%3E,%20%3Cspan%20class=%22number%22%3E43%3C/span%3E,%20%3Cspan%20class=%22number%22%3E44%3C/span%3E].%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E()).%3Cspan%20class=%22title%20function_%20invoke__%22%3Enth%3C/span%3E(%3Cspan%20class=%22number%22%3E2%3C/span%3E)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E" type="image"/>
    
    
    <category term="learning" scheme="https://galudisu.info/categories/learning/"/>
    
    
    <category term="rust" scheme="https://galudisu.info/tags/rust/"/>
    
  </entry>
  
  <entry>
    <title>rust基础入门[17] - IO and Error Handling</title>
    <link href="https://galudisu.info/2023/01/17/rust/beginning/chapter17_IO%20and%20Error%20Handling/"/>
    <id>https://galudisu.info/2023/01/17/rust/beginning/chapter17_IO%20and%20Error%20Handling/</id>
    <published>2023-01-17T07:50:46.000Z</published>
    <updated>2025-04-27T11:59:08.282Z</updated>
    
    <content type="html"><![CDATA[<p>本章覆盖有：</p><ul><li>如何通过命令行参数启动程序</li><li>如何给操作系统返回一个状态码</li><li>如何获取和设置进程环境变量</li><li>如何处理运行时错误</li><li>如何在控制台读取键盘输入信息并打印输出</li><li>原生类型如何转换为字符串</li><li>如何读写二进制文件</li><li>如何按行读取文本文件</li></ul><span id="more"></span><h2 id="Command-Line-Arguments"><a class="header-anchor" href="#Command-Line-Arguments">¶</a>Command-Line Arguments</h2><p>通过命令行输入的最基本形式是，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">command_line</span>: std::env::Args = std::env::<span class="title function_ invoke__">args</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="variable">argument</span> <span class="keyword">in</span> command_line &#123;</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;[&#123;&#125;]&quot;</span>, argument);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该程序被编译用来创建一个文件，它通过命令行“./main first second”，它将输出：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[./main]</span><br><span class="line">[first]</span><br><span class="line">[second]</span><br></pre></td></tr></table></figure><p>标准库中定义的<code>args</code>返回命令行参数的迭代。这种迭代器的类型是<code>Args</code>，它产生<code>String</code>值。第一个产生的值是程序名，它用路径访问。其它则是程序参数。</p><p>任何空白块会被移除，所以如果你想保留，可以用引号，<code>./main &quot; first argument&quot; &quot;second argument &quot;</code>，它将打印：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[./main]</span><br><span class="line">[ first argument]</span><br><span class="line">[second argument ]</span><br></pre></td></tr></table></figure><p>该程序可以简化为，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="variable">a</span> <span class="keyword">in</span> std::env::<span class="title function_ invoke__">args</span>() &#123;</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;[&#123;&#125;]&quot;</span>, a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Process-Return-Code"><a class="header-anchor" href="#Process-Return-Code">¶</a>Process Return Code</h2><p>退出程序的最基本形式是返回码，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">std::process::<span class="title function_ invoke__">exit</span>(<span class="number">107</span>);</span><br></pre></td></tr></table></figure><p>当调用<code>exit</code>函数是程序立即退出，并返回启动进程数字107。</p><p>在类Unix系统中，可以通过<code>echo $?</code>得到上一次输入内容，要在Windows，则输入<code>echo %errorlevel%</code>。</p><h2 id="Environment-Variables"><a class="header-anchor" href="#Environment-Variables">¶</a>Environment Variables</h2><p>另外一种最常见的输入/输出的形式是环境变量，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="variable">var</span> <span class="keyword">in</span> std::env::<span class="title function_ invoke__">vars</span>() &#123;</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;[&#123;&#125;]=[&#123;&#125;]&quot;</span>, var.<span class="number">0</span>, var.<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该程序将给逐行打印输出每个变量。然后，要读或写这些特殊环境变量，可以，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;[&#123;:?&#125;]&quot;</span>, std::env::<span class="title function_ invoke__">var</span>(<span class="string">&quot;abcd&quot;</span>));</span><br><span class="line">std::env::<span class="title function_ invoke__">set_var</span>(<span class="string">&quot;abcd&quot;</span>, <span class="string">&quot;This is the value&quot;</span>);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot; [&#123;:?&#125;]&quot;</span>, std::env::<span class="title function_ invoke__">var</span>(<span class="string">&quot;abcd&quot;</span>));</span><br></pre></td></tr></table></figure><p>该程序可能输出：<code>[Err(NotPresent)] [Ok(&quot;This is the value&quot;)]</code>。首先是，环境变量<code>abcd</code>不存在，因此调用<code>var</code>函数时，返回<code>Result</code>类型的一个<code>Err</code>值，这种错误的特定类型是枚举<code>NotPresent</code>。</p><p>因为在当前程序中又给这个环境变量设置了值，即使用了<code>set_var</code>函数。所以，下一次获取时，得到内部变量<code>Ok</code>类型的值。</p><p>一段类似的程序如下，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>,</span><br><span class="line"><span class="keyword">if</span> std::env::<span class="title function_ invoke__">var</span>(<span class="string">&quot;abcd&quot;</span>).<span class="title function_ invoke__">is_ok</span>() &#123;</span><br><span class="line"><span class="string">&quot;Already defined&quot;</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="string">&quot;Undefined&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">);</span><br><span class="line">std::env::<span class="title function_ invoke__">set_var</span>(<span class="string">&quot;abcd&quot;</span>, <span class="string">&quot;This is the value&quot;</span>);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;, &#123;&#125;.&quot;</span>, <span class="keyword">match</span> std::env::<span class="title function_ invoke__">var</span>(<span class="string">&quot;abcd&quot;</span>) &#123;</span><br><span class="line"><span class="title function_ invoke__">Ok</span>(value) =&gt; value,</span><br><span class="line"><span class="title function_ invoke__">Err</span>(err) =&gt; <span class="built_in">format!</span>(<span class="string">&quot;Still undefined: &#123;&#125;&quot;</span>, err),</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>结果将打印：<code>Undefined, This is the value.</code>。</p><h2 id="Reading-from-the-Console"><a class="header-anchor" href="#Reading-from-the-Console">¶</a>Reading from the Console</h2><p>对于面向命令行的编程，最典型地方式是从控制台输入，读取其输入信息。这种输入可能被另一段进程重定向为读取一个文件的方式。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">line</span> = <span class="type">String</span>::<span class="title function_ invoke__">new</span>();</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, std::io::<span class="title function_ invoke__">stdin</span>().<span class="title function_ invoke__">read_line</span>(&amp;<span class="keyword">mut</span> line));</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;[&#123;&#125;]&quot;</span>, line);</span><br></pre></td></tr></table></figure><p>当该段程序启动时，它将等待你从键盘的输入，直到回车。例如，键入“Hello”，然后按回车，将会打印，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Ok(6)</span><br><span class="line">[Hello</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><code>stdin</code>函数为对当前进程的标准输入流返回一个句柄(handle)。这个句柄上，可以调用<code>read_line</code>函数。它等待标准输入流的行尾(end-of-line)或卷尾(end-of-file)字符的输入，并读取当前输入缓冲区提供的所有字符。这种读取可能失败，因为同时可能会有其它进程在读取。</p><p>如果读取成功，读取到的字符丢到一个字符串对象，指派给<code>line</code>变量，作为参数的形式，接收这个可变对象的引用，<code>read_line</code>函数返回一个<code>Ok</code>结果对象，该对象的数据是按字节的数字读取的。注意这个数字是6，所以“Hello&quot;是5个字节，但还包含一个行尾(end-of-line)控制字符。实际上，当<code>line</code>变量被输出后，中括号另起一样输出，因为行尾(end-of-line)字符在最后一行被打印出来了。</p><p>如果<code>read_line</code>函数不能从标准输入流读取字符串，它返回一个<code>Err</code>结果对象，以及不会更改变量<code>line</code>的值。</p><p>让我们看看标准输入流读取几行时发生了什么，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">text</span> = <span class="built_in">format!</span>(<span class="string">&quot;First: &quot;</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">inp</span> = std::io::<span class="title function_ invoke__">stdin</span>();</span><br><span class="line">inp.<span class="title function_ invoke__">read_line</span>(&amp;<span class="keyword">mut</span> text).<span class="title function_ invoke__">unwrap</span>();</span><br><span class="line">text.<span class="title function_ invoke__">push_str</span>(<span class="string">&quot;Second: &quot;</span>);</span><br><span class="line">inp.<span class="title function_ invoke__">read_line</span>(&amp;<span class="keyword">mut</span> text).<span class="title function_ invoke__">unwrap</span>();</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;&#125;: &#123;&#125; bytes&quot;</span>, text, text.<span class="title function_ invoke__">len</span>());</span><br></pre></td></tr></table></figure><p>运行该程序，键入“eè€”，回车，键入“Hello”，回车，将打印，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">First: eè€</span><br><span class="line">Second: Hello</span><br><span class="line">: 28 bytes</span><br></pre></td></tr></table></figure><p>首先，注意到字符串输入了三行，因为它包含两个行尾字符串。另外，它包含7字节的ASCII字符串“First: ”，以及8字节的ASCII字符串“Second: ”。“Hello”也是一个ASCII字符串，包含5个字节。另外“eè€”字符串包含6个字节，所以我们一共有7+6+1+8+5+1=28字节。</p><p>然后，让我们看看<code>text</code>变量的文本如何构建起来的。注意<code>read_line</code>函数将键入行追加到参数指定的对象上，而不是重写它。<code>text</code>变量由“First: ”初始化。然后，在第三行，首次键入的行被追加到文本中。然后，在第四行，字符串字面量“Second：”追加到变量。最后，在第五行，第二次键入的行再次被追加的内容中。</p><p>其三，注意到当函数<code>read_line</code>从缓冲区读取时，它会清空缓冲区，这样再次读取缓冲区时不会重复读取缓冲区的内容。</p><p>其四，注意每次调用<code>read_line</code>后，后面都会调用<code>unwrap</code>，但它的返回值可以忽略。</p><p>所以这个调用可以省略，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">text</span> = <span class="built_in">format!</span>(<span class="string">&quot;First: &quot;</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">inp</span> = std::io::<span class="title function_ invoke__">stdin</span>();</span><br><span class="line">inp.<span class="title function_ invoke__">read_line</span>(&amp;<span class="keyword">mut</span> text);</span><br><span class="line">text.<span class="title function_ invoke__">push_str</span>(<span class="string">&quot;Second: &quot;</span>);</span><br><span class="line">inp.<span class="title function_ invoke__">read_line</span>(&amp;<span class="keyword">mut</span> text).<span class="title function_ invoke__">unwrap</span>();</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;&#125;: &#123;&#125; bytes&quot;</span>, text, text.<span class="title function_ invoke__">len</span>());</span><br></pre></td></tr></table></figure><p>然而，当这段程序被编译，编译输出，对于两处调用的<code>read_line</code>，会警告：<code>&quot;unused </code>std::result::Result<code> which must be used&quot;.</code>。它意味着<code>read_line</code>返回个<code>Result</code>的值，以及这个值被忽略或不被使用。Rust中认为忽略<code>Result</code>类型的值是危险的，因为这种类型可能表示一个运行时错误，所以程序逻辑不会统计这种错误。这在生产环境是危险的，但它也不适用于调试代码，因为它隐藏了你需要寻找的错误。</p><p>因此，在调试代码时，最好总是在最后加上<code>.unwrap()</code>从句。</p><p>在生产环境代码，问题并不是那么简单。</p><h2 id="Proper-Runtime-Error-Handling"><a class="header-anchor" href="#Proper-Runtime-Error-Handling">¶</a>Proper Runtime Error Handling</h2><p>在真实软件世界，大部分函数调用返回一个<code>Result</code>类型值。这类函数称为“不可靠，fallible”函数，即正常返回<code>Ok</code>，异常情况返回<code>Err</code>。</p><p>在C++、Java以及其他面向对象语言中，标准错误的处理技术基于“异常”这一概念，并有<code>throw</code>、<code>try</code>、<code>catch</code>这些关键字。在Rust中没有这些东西；所有错误处理基于<code>Result</code>类型，以及<code>match</code>语句匹配。</p><p>假设，典型地，你写一个函数<code>f</code>，要实现它的功能，会调用几个不可靠函数，<code>f1</code>、<code>f2</code>、<code>f3</code>和<code>f4</code>。这些函数可能会返回错误，或者成功结果。希望如果某个函数失败，应该立即将错误信息返回给<code>f</code>函数，若是成功，则传递给下一个函数继续执行。</p><p>一个可能的写法是，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">f1</span>(x: <span class="type">i32</span>) <span class="punctuation">-&gt;</span> <span class="type">Result</span>&lt;<span class="type">i32</span>, <span class="type">String</span>&gt; &#123;</span><br><span class="line"><span class="keyword">if</span> x == <span class="number">1</span> &#123;</span><br><span class="line"><span class="title function_ invoke__">Err</span>(<span class="built_in">format!</span>(<span class="string">&quot;Err. 1&quot;</span>))</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="title function_ invoke__">Ok</span>(x)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">f2</span>(x: <span class="type">i32</span>) <span class="punctuation">-&gt;</span> <span class="type">Result</span>&lt;<span class="type">i32</span>, <span class="type">String</span>&gt; &#123;</span><br><span class="line"><span class="keyword">if</span> x == <span class="number">2</span> &#123;</span><br><span class="line"><span class="title function_ invoke__">Err</span>(<span class="built_in">format!</span>(<span class="string">&quot;Err. 2&quot;</span>))</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="title function_ invoke__">Ok</span>(x)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">f3</span>(x: <span class="type">i32</span>) <span class="punctuation">-&gt;</span> <span class="type">Result</span>&lt;<span class="type">i32</span>, <span class="type">String</span>&gt; &#123;</span><br><span class="line"><span class="keyword">if</span> x == <span class="number">3</span> &#123;</span><br><span class="line"><span class="title function_ invoke__">Err</span>(<span class="built_in">format!</span>(<span class="string">&quot;Err. 3&quot;</span>))</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="title function_ invoke__">Ok</span>(x)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">f4</span>(x: <span class="type">i32</span>) <span class="punctuation">-&gt;</span> <span class="type">Result</span>&lt;<span class="type">i32</span>, <span class="type">String</span>&gt; &#123;</span><br><span class="line"><span class="keyword">if</span> x == <span class="number">4</span> &#123;</span><br><span class="line"><span class="title function_ invoke__">Err</span>(<span class="built_in">format!</span>(<span class="string">&quot;Err. 4&quot;</span>))</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="title function_ invoke__">Ok</span>(x)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>(x: <span class="type">i32</span>) <span class="punctuation">-&gt;</span> <span class="type">Result</span>&lt;<span class="type">i32</span>, <span class="type">String</span>&gt; &#123;</span><br><span class="line"><span class="keyword">match</span> <span class="title function_ invoke__">f1</span>(x) &#123;</span><br><span class="line"><span class="title function_ invoke__">Ok</span>(result) =&gt; &#123;</span><br><span class="line"><span class="keyword">match</span> <span class="title function_ invoke__">f2</span>(result) &#123;</span><br><span class="line"><span class="title function_ invoke__">Ok</span>(result) =&gt; &#123;</span><br><span class="line"><span class="keyword">match</span> <span class="title function_ invoke__">f3</span>(result) &#123;</span><br><span class="line"><span class="title function_ invoke__">Ok</span>(result) =&gt; <span class="title function_ invoke__">f4</span>(result),</span><br><span class="line"><span class="title function_ invoke__">Err</span>(err_msg) =&gt; <span class="title function_ invoke__">Err</span>(err_msg),</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">Err</span>(err_msg) =&gt; <span class="title function_ invoke__">Err</span>(err_msg),</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">Err</span>(err_msg) =&gt; <span class="title function_ invoke__">Err</span>(err_msg),</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">match</span> <span class="title function_ invoke__">f</span>(<span class="number">2</span>) &#123;</span><br><span class="line"><span class="title function_ invoke__">Ok</span>(y) =&gt; <span class="built_in">println!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, y),</span><br><span class="line"><span class="title function_ invoke__">Err</span>(e) =&gt; <span class="built_in">println!</span>(<span class="string">&quot;Error: &#123;&#125;&quot;</span>, e),</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">match</span> <span class="title function_ invoke__">f</span>(<span class="number">4</span>) &#123;</span><br><span class="line"><span class="title function_ invoke__">Ok</span>(y) =&gt; <span class="built_in">println!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, y),</span><br><span class="line"><span class="title function_ invoke__">Err</span>(e) =&gt; <span class="built_in">println!</span>(<span class="string">&quot;Error: &#123;&#125;&quot;</span>, e),</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">match</span> <span class="title function_ invoke__">f</span>(<span class="number">5</span>) &#123;</span><br><span class="line"><span class="title function_ invoke__">Ok</span>(y) =&gt; <span class="built_in">println!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, y),</span><br><span class="line"><span class="title function_ invoke__">Err</span>(e) =&gt; <span class="built_in">println!</span>(<span class="string">&quot;Error: &#123;&#125;&quot;</span>, e),</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果将打印：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Error: Err. 2</span><br><span class="line">Error: Err. 4</span><br><span class="line">5</span><br></pre></td></tr></table></figure><p>这种写法肯定不方便，可以替换为行内写法，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>(x: <span class="type">i32</span>) <span class="punctuation">-&gt;</span> <span class="type">Result</span>&lt;<span class="type">i32</span>, <span class="type">String</span>&gt; &#123;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">result1</span> = <span class="title function_ invoke__">f1</span>(x);</span><br><span class="line"><span class="keyword">if</span> result1.<span class="title function_ invoke__">is_err</span>() &#123; <span class="keyword">return</span> result1; &#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">result2</span> = <span class="title function_ invoke__">f2</span>(result1.<span class="title function_ invoke__">unwrap</span>());</span><br><span class="line"><span class="keyword">if</span> result2.<span class="title function_ invoke__">is_err</span>() &#123; <span class="keyword">return</span> result2; &#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">result3</span> = <span class="title function_ invoke__">f3</span>(result2.<span class="title function_ invoke__">unwrap</span>());</span><br><span class="line"><span class="keyword">if</span> result3.<span class="title function_ invoke__">is_err</span>() &#123; <span class="keyword">return</span> result3; &#125;</span><br><span class="line"><span class="title function_ invoke__">f4</span>(result3.<span class="title function_ invoke__">unwrap</span>())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这种写法是将结果写入临时变量中，结果值通过<code>is_err</code>函数检测。失败则返回，成功则<code>unwrap</code>出真实结果。</p><p>下面是另一种等价<code>f</code>的实现，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>(x: <span class="type">i32</span>) <span class="punctuation">-&gt;</span> <span class="type">Result</span>&lt;<span class="type">i32</span>, <span class="type">String</span>&gt; &#123;</span><br><span class="line"><span class="title function_ invoke__">f4</span>(<span class="title function_ invoke__">f3</span>(<span class="title function_ invoke__">f2</span>(<span class="title function_ invoke__">f1</span>(x)?)?)?)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的问号是一个特定的宏(macro)，诸如“<code>e?</code>”的表达式，如果“<code>e</code>”是泛型类型“<code>Result&lt;T,E&gt;</code>”，宏展开为表达式“<code>match e &#123; Some(v) =&gt; v, _ =&gt; return e &#125;</code>”；相反，如果“<code>e</code>”是泛型类型“<code>Option&lt;T&gt;</code>”，宏展开为表达式“<code>match e &#123; Ok(v) =&gt; v, _ =&gt; return e &#125;</code>”。换言之，这种宏语法将“<code>Some</code>”或“<code>Ok</code>”的参数，进行转换，或返回包含的函数的一个值。</p><p>它仅能作用于类型为“<code>Result&lt;T,E&gt;</code>”或“<code>Option&lt;T&gt;</code>”的表达式中，所以也仅能作用于有恰当返回值类型的函数内部。如果闭合函数返回值类型是“<code>Result&lt;T1,E&gt;</code>”，问号宏仅能作用于类型“<code>Result&lt;T2,E&gt;</code>”的表达式，其中“<code>T2</code>”可以和“<code>T1</code>”不同，但“<code>E</code>”必须相同；以及，如果闭合函数返回值类型是“<code>Option&lt;T1&gt;</code>”，问号宏仅能作用于类型“<code>Option&lt;T2&gt;</code>”的表达式。</p><p>因此，要构建一个稳健的错误处理模式。每个函数包含对一个不可靠(fallible)函数的调用，应该是一个fallible函数或使用“<code>match</code>”语句处理“<code>Result</code>”结果值。在最先的一种示例代码中，每个不可靠函数的调用，都应该用问号宏来传递错误条件。“<code>main</code>”函数不可能是falliable的，所以在调用链中，应该用“<code>match</code>”语句处理“<code>Result</code>”的值。</p><h2 id="Writing-to-the-Console"><a class="header-anchor" href="#Writing-to-the-Console">¶</a>Writing to the Console</h2><p>我们一直用“<code>print</code>”或“<code>println</code>”宏来打印消息。然而，你也可以直接用库函数将信息输出到控制台。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::io::Write;</span><br><span class="line"><span class="comment">//ILLEGAL: std::io::stdout().write(&quot;Hi&quot;).unwrap();</span></span><br><span class="line"><span class="comment">//ILLEGAL: std::io::stdout().write(String::from(&quot;Hi&quot;)).unwrap();</span></span><br><span class="line">std::io::<span class="title function_ invoke__">stdout</span>().<span class="title function_ invoke__">write</span>(<span class="string">&quot;Hello &quot;</span>.<span class="title function_ invoke__">as_bytes</span>()).<span class="title function_ invoke__">unwrap</span>();</span><br><span class="line">std::io::<span class="title function_ invoke__">stdout</span>().<span class="title function_ invoke__">write</span>(<span class="type">String</span>::<span class="title function_ invoke__">from</span>(<span class="string">&quot;world&quot;</span>).<span class="title function_ invoke__">as_bytes</span>()).<span class="title function_ invoke__">unwrap</span>();</span><br></pre></td></tr></table></figure><p>结果将打印：“<code>Hello world</code>”。</p><p>“<code>stdout</code>”标准库函数返回一个句柄处理当前进程的标准输出流，“<code>write</code>”可以实现。</p><p>“<code>write</code>”函数不能直接打印静态字符串，也不能打印动态字符串，当然数字、常见组合对象也不能。</p><p>“<code>write</code>”函数接收一个“<code>&amp;[u8]</code>”类型，它是字节切片的一个引用。这些字节会打印为控制台的UTF-8字符串。所以如果打印的对象不是UTF-8格式的切片字节，首先你需要转换。</p><p>为了将静态字符串和动态字符串转换为一个字节切片的引用，你可以使用“<code>as_bytes</code>”函数。该函数返回字符串第一个字节的地址，以及字符串对象的字节数。由于这个字节数早已经包含在字符串对象的头部，所以这个函数极其高效。</p><p>最后，注意到“<code>write</code>”函数返回一个“<code>Result</code>”类型值，表示它是一个不可靠函数(fallible function)。如果你确定它不可能是fail，最好调用“<code>unwrap</code>”函数获取其返回值。</p><h2 id="Converting-a-Value-to-a-String"><a class="header-anchor" href="#Converting-a-Value-to-a-String">¶</a>Converting a Value to a String</h2><p>如果你希望将其它值类型打印为文本，可以使用“<code>to_string</code>”函数，它被定义在所有原生类型。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">int_str</span>: <span class="type">String</span> = <span class="number">45</span>.<span class="title function_ invoke__">to_string</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="variable">float_str</span>: <span class="type">String</span> = <span class="number">4.5</span>.<span class="title function_ invoke__">to_string</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="variable">bool_str</span>: <span class="type">String</span> = <span class="literal">true</span>.<span class="title function_ invoke__">to_string</span>();</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125; &#123;&#125;&quot;</span>, int_str, float_str, bool_str);</span><br></pre></td></tr></table></figure><p>将会打印：“<code>45 4.5 true</code>”。</p><p><code>to_string</code>函数指派一个字符串对象，头部会放在栈，内容放在堆。因此，它不是高效的。</p><h2 id="File-Input-Output"><a class="header-anchor" href="#File-Input-Output">¶</a>File Input/Output</h2><p>Rust提供了对于二进制文件或文本的读写，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::io::Write;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">file</span> = std::fs::File::<span class="title function_ invoke__">create</span>(<span class="string">&quot;data.txt&quot;</span>).<span class="title function_ invoke__">unwrap</span>();</span><br><span class="line">file.<span class="title function_ invoke__">write_all</span>(<span class="string">&quot;eè€&quot;</span>.<span class="title function_ invoke__">as_bytes</span>()).<span class="title function_ invoke__">unwrap</span>();</span><br></pre></td></tr></table></figure><p>第二行调用了<code>create</code>函数，在当前文件目录下，创建一个“data.txt”的文件。该函数是falliable的，如果创建文件成功，它返回刚创建文件的句柄。</p><p>最后一行调用了<code>write_all</code>函数，对新创建的文件写入某些字节，注意“eè€”有6个字节，包含行尾结束符。</p><p>若要读取刚刚创建的文件“<code>data.txt</code>”，可以，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::io::Read;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">file</span> = std::fs::File::<span class="title function_ invoke__">open</span>(<span class="string">&quot;data.txt&quot;</span>).<span class="title function_ invoke__">unwrap</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">contents</span> = <span class="type">String</span>::<span class="title function_ invoke__">new</span>();</span><br><span class="line">file.<span class="title function_ invoke__">read_to_string</span>(&amp;<span class="keyword">mut</span> contents).<span class="title function_ invoke__">unwrap</span>();</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, contents);</span><br></pre></td></tr></table></figure><p>打印输出：“eè€”。</p><p>第二行调用了<code>open</code>函数，打开当前目录下的&quot;data.txt&quot;文件。如果文件不存在或不可访问则fail。如果成功，则指派给一个<code>file</code>变量处理该函数。</p><p>第4行调用<code>read_to_string</code>函数，将文件内容读取到一个变量，由一个可变对象引用传递。</p><p>最后一行将文本内容打印输出。</p><p>对于文件拷贝，但是如果文件太大，是不可能将所有东西都塞到一个字符串。它要求读写分段处理。但分段处理并不高效。</p><p>下面是一个拷贝文件的高效实现，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::io::Read;</span><br><span class="line"><span class="keyword">use</span> std::io::Write;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">command_line</span>: std::env::Args = std::env::<span class="title function_ invoke__">args</span>();</span><br><span class="line">command_line.<span class="title function_ invoke__">next</span>().<span class="title function_ invoke__">unwrap</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="variable">source</span> = command_line.<span class="title function_ invoke__">next</span>().<span class="title function_ invoke__">unwrap</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="variable">destination</span> = command_line.<span class="title function_ invoke__">next</span>().<span class="title function_ invoke__">unwrap</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">file_in</span> = std::fs::File::<span class="title function_ invoke__">open</span>(source).<span class="title function_ invoke__">unwrap</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">file_out</span> = std::fs::File::<span class="title function_ invoke__">create</span>(destination).<span class="title function_ invoke__">unwrap</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">buffer</span> = [<span class="number">0u8</span>; <span class="number">4096</span>];</span><br><span class="line"><span class="keyword">loop</span> &#123;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">nbytes</span> = file_in.<span class="title function_ invoke__">read</span>(&amp;<span class="keyword">mut</span> buffer).<span class="title function_ invoke__">unwrap</span>();</span><br><span class="line">file_out.<span class="title function_ invoke__">write</span>(&amp;buffer[..nbytes]).<span class="title function_ invoke__">unwrap</span>();</span><br><span class="line"><span class="keyword">if</span> nbytes &lt; buffer.<span class="title function_ invoke__">len</span>() &#123; <span class="keyword">break</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该段程序启动时必须传入两个命令行参数。第一个参数是源文件，第二个参数是目标文件。</p><p>从第3到第6行，将第一个命令行参数指派给<code>source</code>变量，第二个命令行参数指派给<code>destination</code>变量。</p><p>后面两行，将源文件打开，指派给变量<code>file_in</code>，创建文件指派给变量<code>file_out</code>。</p><p>然后将一个4096字节缓存指派到栈。</p><p>最后，用一个循环，重复地将一个4096byte的chunk，从源文件，写入到目标文件。缓冲区由多少字节，就自动读取多少字节。如果剩余文件片段不够长，读取少于4096的字节，或者0个字节。</p><p>读取的字节被塞到了<code>nbytes</code>变量。</p><p>对于超过4096字节的大文件，首次迭代读取4096个字节，然后继续迭代读取。对于小于4096字节的文件，迭代一次就可以了。</p><p>任何情况下，读取的字节数量，就是写入缓冲的字节数。因此，缓冲区切片由开始位置到读取字节数长度。</p><p>如果读取的字节数小于缓冲区长度，循环结束，因为已经达到输入文件的末尾。</p><p>注意，这里不用显式关闭文件。只要文件处理结束，文件自动关闭，以及存储和释放所有内部临时缓冲区。</p><h2 id="Processing-Text-Files"><a class="header-anchor" href="#Processing-Text-Files">¶</a>Processing Text Files</h2><p>对于文本文件的处理，例如我们想知道有多少行，有多少空白，我们可以，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">command_line</span> = std::env::<span class="title function_ invoke__">args</span>();</span><br><span class="line">command_line.<span class="title function_ invoke__">next</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="variable">pathname</span> = command_line.<span class="title function_ invoke__">next</span>().<span class="title function_ invoke__">unwrap</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="variable">counts</span> = <span class="title function_ invoke__">count_lines</span>(&amp;pathname).<span class="title function_ invoke__">unwrap</span>();</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;file: &#123;&#125;&quot;</span>, pathname);</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;n. of lines: &#123;&#125;&quot;</span>, counts.<span class="number">0</span>);</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;n. of empty lines: &#123;&#125;&quot;</span>, counts.<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">count_lines</span>(pathname: &amp;<span class="type">str</span>) <span class="punctuation">-&gt;</span> <span class="type">Result</span>&lt;(<span class="type">u32</span>, <span class="type">u32</span>), std::io::Error&gt; &#123;</span><br><span class="line">    <span class="keyword">use</span> std::io::BufRead;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> <span class="variable">f</span> = std::fs::File::<span class="title function_ invoke__">open</span>(pathname)?;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">f</span> = std::io::BufReader::<span class="title function_ invoke__">new</span>(f);</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">n_lines</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">n_empty_lines</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> <span class="variable">line</span> <span class="keyword">in</span> f.<span class="title function_ invoke__">lines</span>() &#123;</span><br><span class="line">        n_lines += <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> line?.<span class="title function_ invoke__">trim</span>().<span class="title function_ invoke__">len</span>() == <span class="number">0</span> &#123;</span><br><span class="line">            n_empty_lines += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">Ok</span>((n_lines, n_empty_lines))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里用到了<code>BufReader</code>。它会将输入放入缓冲区。创建一个“<code>BufReader</code>”对象后，不需要显式使用<code>File</code>对象，新创建的对象被指派给另一个变量<code>f</code>，它会覆盖原来的变量。</p><p>当两个计数器<code>n_lines</code>和<code>n_empty_lines</code>被声明以及初始化后。</p><p>进入循环体对文件内容进行统计。<code>BufReader</code>类型提供了<code>line</code>函数，它是一个迭代生产者，返回所在行的一个迭代器。注意Rust的迭代器是lazy的；所以，每次迭代，循环体将下一行塞到<code>line</code>变量。</p><p>以及文件读取是包含副作用的，所以<code>line</code>的值是一个<code>Result&lt;String, std::io::Error&gt;</code>类型值。因此，带上问号宏<code>?</code>获取它的真是字符串值，或者是返回的一个I/O错误。</p><p>循环体内，<code>n_lines</code>统计行数，<code>n_empty_lines</code>将空白和0长度行进行统计，它调用了<code>trim</code>函数。</p><p>最后一个语句返回成功值：<code>Ok</code>。它包含两个计数器。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本章覆盖有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如何通过命令行参数启动程序&lt;/li&gt;
&lt;li&gt;如何给操作系统返回一个状态码&lt;/li&gt;
&lt;li&gt;如何获取和设置进程环境变量&lt;/li&gt;
&lt;li&gt;如何处理运行时错误&lt;/li&gt;
&lt;li&gt;如何在控制台读取键盘输入信息并打印输出&lt;/li&gt;
&lt;li&gt;原生类型如何转换为字符串&lt;/li&gt;
&lt;li&gt;如何读写二进制文件&lt;/li&gt;
&lt;li&gt;如何按行读取文本文件&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    <content src="https://galudisu.info/%3Cp%3E%E6%9C%AC%E7%AB%A0%E8%A6%86%E7%9B%96%E6%9C%89%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0%E5%90%AF%E5%8A%A8%E7%A8%8B%E5%BA%8F%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E7%BB%99%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%E7%8A%B6%E6%80%81%E7%A0%81%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E5%92%8C%E8%AE%BE%E7%BD%AE%E8%BF%9B%E7%A8%8B%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86%E8%BF%90%E8%A1%8C%E6%97%B6%E9%94%99%E8%AF%AF%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E5%9C%A8%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%AF%BB%E5%8F%96%E9%94%AE%E7%9B%98%E8%BE%93%E5%85%A5%E4%BF%A1%E6%81%AF%E5%B9%B6%E6%89%93%E5%8D%B0%E8%BE%93%E5%87%BA%3C/li%3E%3Cli%3E%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%9E%8B%E5%A6%82%E4%BD%95%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E8%AF%BB%E5%86%99%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E6%8C%89%E8%A1%8C%E8%AF%BB%E5%8F%96%E6%96%87%E6%9C%AC%E6%96%87%E4%BB%B6%3C/li%3E%3C/ul%3E%3Cspan%20id=%22more%22%3E%3C/span%3E%3Ch2%20id=%22Command-Line-Arguments%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Command-Line-Arguments%22%3E%C2%B6%3C/a%3ECommand-Line%20Arguments%3C/h2%3E%3Cp%3E%E9%80%9A%E8%BF%87%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%BE%93%E5%85%A5%E7%9A%84%E6%9C%80%E5%9F%BA%E6%9C%AC%E5%BD%A2%E5%BC%8F%E6%98%AF%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ecommand_line%3C/span%3E:%20std::env::Args%20=%20std::env::%3Cspan%20class=%22title%20function_%20invoke__%22%3Eargs%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eargument%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20command_line%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;[&amp;#123;&amp;#125;]&amp;quot;%3C/span%3E,%20argument);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%AF%A5%E7%A8%8B%E5%BA%8F%E8%A2%AB%E7%BC%96%E8%AF%91%E7%94%A8%E6%9D%A5%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6%EF%BC%8C%E5%AE%83%E9%80%9A%E8%BF%87%E5%91%BD%E4%BB%A4%E8%A1%8C%E2%80%9C./main%20first%20second%E2%80%9D%EF%BC%8C%E5%AE%83%E5%B0%86%E8%BE%93%E5%87%BA%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E[./main]%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E[first]%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E[second]%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%AD%E5%AE%9A%E4%B9%89%E7%9A%84%3Ccode%3Eargs%3C/code%3E%E8%BF%94%E5%9B%9E%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0%E7%9A%84%E8%BF%AD%E4%BB%A3%E3%80%82%E8%BF%99%E7%A7%8D%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%9A%84%E7%B1%BB%E5%9E%8B%E6%98%AF%3Ccode%3EArgs%3C/code%3E%EF%BC%8C%E5%AE%83%E4%BA%A7%E7%94%9F%3Ccode%3EString%3C/code%3E%E5%80%BC%E3%80%82%E7%AC%AC%E4%B8%80%E4%B8%AA%E4%BA%A7%E7%94%9F%E7%9A%84%E5%80%BC%E6%98%AF%E7%A8%8B%E5%BA%8F%E5%90%8D%EF%BC%8C%E5%AE%83%E7%94%A8%E8%B7%AF%E5%BE%84%E8%AE%BF%E9%97%AE%E3%80%82%E5%85%B6%E5%AE%83%E5%88%99%E6%98%AF%E7%A8%8B%E5%BA%8F%E5%8F%82%E6%95%B0%E3%80%82%3C/p%3E%3Cp%3E%E4%BB%BB%E4%BD%95%E7%A9%BA%E7%99%BD%E5%9D%97%E4%BC%9A%E8%A2%AB%E7%A7%BB%E9%99%A4%EF%BC%8C%E6%89%80%E4%BB%A5%E5%A6%82%E6%9E%9C%E4%BD%A0%E6%83%B3%E4%BF%9D%E7%95%99%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%94%A8%E5%BC%95%E5%8F%B7%EF%BC%8C%3Ccode%3E./main%20&amp;quot;%20first%20argument&amp;quot;%20&amp;quot;second%20argument%20&amp;quot;%3C/code%3E%EF%BC%8C%E5%AE%83%E5%B0%86%E6%89%93%E5%8D%B0%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E[./main]%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E[%20first%20argument]%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E[second%20argument%20]%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%AF%A5%E7%A8%8B%E5%BA%8F%E5%8F%AF%E4%BB%A5%E7%AE%80%E5%8C%96%E4%B8%BA%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20std::env::%3Cspan%20class=%22title%20function_%20invoke__%22%3Eargs%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;[&amp;#123;&amp;#125;]&amp;quot;%3C/span%3E,%20a);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Ch2%20id=%22Process-Return-Code%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Process-Return-Code%22%3E%C2%B6%3C/a%3EProcess%20Return%20Code%3C/h2%3E%3Cp%3E%E9%80%80%E5%87%BA%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%9C%80%E5%9F%BA%E6%9C%AC%E5%BD%A2%E5%BC%8F%E6%98%AF%E8%BF%94%E5%9B%9E%E7%A0%81%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3Estd::process::%3Cspan%20class=%22title%20function_%20invoke__%22%3Eexit%3C/span%3E(%3Cspan%20class=%22number%22%3E107%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%BD%93%E8%B0%83%E7%94%A8%3Ccode%3Eexit%3C/code%3E%E5%87%BD%E6%95%B0%E6%98%AF%E7%A8%8B%E5%BA%8F%E7%AB%8B%E5%8D%B3%E9%80%80%E5%87%BA%EF%BC%8C%E5%B9%B6%E8%BF%94%E5%9B%9E%E5%90%AF%E5%8A%A8%E8%BF%9B%E7%A8%8B%E6%95%B0%E5%AD%97107%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E7%B1%BBUnix%E7%B3%BB%E7%BB%9F%E4%B8%AD%EF%BC%8C%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87%3Ccode%3Eecho%20$?%3C/code%3E%E5%BE%97%E5%88%B0%E4%B8%8A%E4%B8%80%E6%AC%A1%E8%BE%93%E5%85%A5%E5%86%85%E5%AE%B9%EF%BC%8C%E8%A6%81%E5%9C%A8Windows%EF%BC%8C%E5%88%99%E8%BE%93%E5%85%A5%3Ccode%3Eecho%20%errorlevel%%3C/code%3E%E3%80%82%3C/p%3E%3Ch2%20id=%22Environment-Variables%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Environment-Variables%22%3E%C2%B6%3C/a%3EEnvironment%20Variables%3C/h2%3E%3Cp%3E%E5%8F%A6%E5%A4%96%E4%B8%80%E7%A7%8D%E6%9C%80%E5%B8%B8%E8%A7%81%E7%9A%84%E8%BE%93%E5%85%A5/%E8%BE%93%E5%87%BA%E7%9A%84%E5%BD%A2%E5%BC%8F%E6%98%AF%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Evar%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20std::env::%3Cspan%20class=%22title%20function_%20invoke__%22%3Evars%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;[&amp;#123;&amp;#125;]=[&amp;#123;&amp;#125;]&amp;quot;%3C/span%3E,%20var.%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20var.%3Cspan%20class=%22number%22%3E1%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%AF%A5%E7%A8%8B%E5%BA%8F%E5%B0%86%E7%BB%99%E9%80%90%E8%A1%8C%E6%89%93%E5%8D%B0%E8%BE%93%E5%87%BA%E6%AF%8F%E4%B8%AA%E5%8F%98%E9%87%8F%E3%80%82%E7%84%B6%E5%90%8E%EF%BC%8C%E8%A6%81%E8%AF%BB%E6%88%96%E5%86%99%E8%BF%99%E4%BA%9B%E7%89%B9%E6%AE%8A%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%EF%BC%8C%E5%8F%AF%E4%BB%A5%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;[&amp;#123;:?&amp;#125;]&amp;quot;%3C/span%3E,%20std::env::%3Cspan%20class=%22title%20function_%20invoke__%22%3Evar%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;abcd&amp;quot;%3C/span%3E));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Estd::env::%3Cspan%20class=%22title%20function_%20invoke__%22%3Eset_var%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;abcd&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;quot;This%20is%20the%20value&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;%20[&amp;#123;:?&amp;#125;]&amp;quot;%3C/span%3E,%20std::env::%3Cspan%20class=%22title%20function_%20invoke__%22%3Evar%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;abcd&amp;quot;%3C/span%3E));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%AF%A5%E7%A8%8B%E5%BA%8F%E5%8F%AF%E8%83%BD%E8%BE%93%E5%87%BA%EF%BC%9A%3Ccode%3E[Err(NotPresent)]%20[Ok(&amp;quot;This%20is%20the%20value&amp;quot;)]%3C/code%3E%E3%80%82%E9%A6%96%E5%85%88%E6%98%AF%EF%BC%8C%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%3Ccode%3Eabcd%3C/code%3E%E4%B8%8D%E5%AD%98%E5%9C%A8%EF%BC%8C%E5%9B%A0%E6%AD%A4%E8%B0%83%E7%94%A8%3Ccode%3Evar%3C/code%3E%E5%87%BD%E6%95%B0%E6%97%B6%EF%BC%8C%E8%BF%94%E5%9B%9E%3Ccode%3EResult%3C/code%3E%E7%B1%BB%E5%9E%8B%E7%9A%84%E4%B8%80%E4%B8%AA%3Ccode%3EErr%3C/code%3E%E5%80%BC%EF%BC%8C%E8%BF%99%E7%A7%8D%E9%94%99%E8%AF%AF%E7%9A%84%E7%89%B9%E5%AE%9A%E7%B1%BB%E5%9E%8B%E6%98%AF%E6%9E%9A%E4%B8%BE%3Ccode%3ENotPresent%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E4%B8%BA%E5%9C%A8%E5%BD%93%E5%89%8D%E7%A8%8B%E5%BA%8F%E4%B8%AD%E5%8F%88%E7%BB%99%E8%BF%99%E4%B8%AA%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E8%AE%BE%E7%BD%AE%E4%BA%86%E5%80%BC%EF%BC%8C%E5%8D%B3%E4%BD%BF%E7%94%A8%E4%BA%86%3Ccode%3Eset_var%3C/code%3E%E5%87%BD%E6%95%B0%E3%80%82%E6%89%80%E4%BB%A5%EF%BC%8C%E4%B8%8B%E4%B8%80%E6%AC%A1%E8%8E%B7%E5%8F%96%E6%97%B6%EF%BC%8C%E5%BE%97%E5%88%B0%E5%86%85%E9%83%A8%E5%8F%98%E9%87%8F%3Ccode%3EOk%3C/code%3E%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%80%BC%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%80%E6%AE%B5%E7%B1%BB%E4%BC%BC%E7%9A%84%E7%A8%8B%E5%BA%8F%E5%A6%82%E4%B8%8B%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20std::env::%3Cspan%20class=%22title%20function_%20invoke__%22%3Evar%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;abcd&amp;quot;%3C/span%3E).%3Cspan%20class=%22title%20function_%20invoke__%22%3Eis_ok%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22string%22%3E&amp;quot;Already%20defined&amp;quot;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%20%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22string%22%3E&amp;quot;Undefined&amp;quot;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Estd::env::%3Cspan%20class=%22title%20function_%20invoke__%22%3Eset_var%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;abcd&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;quot;This%20is%20the%20value&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;,%20&amp;#123;&amp;#125;.&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22keyword%22%3Ematch%3C/span%3E%20std::env::%3Cspan%20class=%22title%20function_%20invoke__%22%3Evar%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;abcd&amp;quot;%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3EOk%3C/span%3E(value)%20=&amp;gt;%20value,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3EErr%3C/span%3E(err)%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eformat!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Still%20undefined:%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20err),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;)%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E6%89%93%E5%8D%B0%EF%BC%9A%3Ccode%3EUndefined,%20This%20is%20the%20value.%3C/code%3E%E3%80%82%3C/p%3E%3Ch2%20id=%22Reading-from-the-Console%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Reading-from-the-Console%22%3E%C2%B6%3C/a%3EReading%20from%20the%20Console%3C/h2%3E%3Cp%3E%E5%AF%B9%E4%BA%8E%E9%9D%A2%E5%90%91%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%9A%84%E7%BC%96%E7%A8%8B%EF%BC%8C%E6%9C%80%E5%85%B8%E5%9E%8B%E5%9C%B0%E6%96%B9%E5%BC%8F%E6%98%AF%E4%BB%8E%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%BE%93%E5%85%A5%EF%BC%8C%E8%AF%BB%E5%8F%96%E5%85%B6%E8%BE%93%E5%85%A5%E4%BF%A1%E6%81%AF%E3%80%82%E8%BF%99%E7%A7%8D%E8%BE%93%E5%85%A5%E5%8F%AF%E8%83%BD%E8%A2%AB%E5%8F%A6%E4%B8%80%E6%AE%B5%E8%BF%9B%E7%A8%8B%E9%87%8D%E5%AE%9A%E5%90%91%E4%B8%BA%E8%AF%BB%E5%8F%96%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6%E7%9A%84%E6%96%B9%E5%BC%8F%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Eline%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3EString%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20std::io::%3Cspan%20class=%22title%20function_%20invoke__%22%3Estdin%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Eread_line%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20line));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;[&amp;#123;&amp;#125;]&amp;quot;%3C/span%3E,%20line);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%BD%93%E8%AF%A5%E6%AE%B5%E7%A8%8B%E5%BA%8F%E5%90%AF%E5%8A%A8%E6%97%B6%EF%BC%8C%E5%AE%83%E5%B0%86%E7%AD%89%E5%BE%85%E4%BD%A0%E4%BB%8E%E9%94%AE%E7%9B%98%E7%9A%84%E8%BE%93%E5%85%A5%EF%BC%8C%E7%9B%B4%E5%88%B0%E5%9B%9E%E8%BD%A6%E3%80%82%E4%BE%8B%E5%A6%82%EF%BC%8C%E9%94%AE%E5%85%A5%E2%80%9CHello%E2%80%9D%EF%BC%8C%E7%84%B6%E5%90%8E%E6%8C%89%E5%9B%9E%E8%BD%A6%EF%BC%8C%E5%B0%86%E4%BC%9A%E6%89%93%E5%8D%B0%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20plaintext%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3EOk(6)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E[Hello%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E]%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%3Ccode%3Estdin%3C/code%3E%E5%87%BD%E6%95%B0%E4%B8%BA%E5%AF%B9%E5%BD%93%E5%89%8D%E8%BF%9B%E7%A8%8B%E7%9A%84%E6%A0%87%E5%87%86%E8%BE%93%E5%85%A5%E6%B5%81%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%E5%8F%A5%E6%9F%84(handle)%E3%80%82%E8%BF%99%E4%B8%AA%E5%8F%A5%E6%9F%84%E4%B8%8A%EF%BC%8C%E5%8F%AF%E4%BB%A5%E8%B0%83%E7%94%A8%3Ccode%3Eread_line%3C/code%3E%E5%87%BD%E6%95%B0%E3%80%82%E5%AE%83%E7%AD%89%E5%BE%85%E6%A0%87%E5%87%86%E8%BE%93%E5%85%A5%E6%B5%81%E7%9A%84%E8%A1%8C%E5%B0%BE(end-of-line)%E6%88%96%E5%8D%B7%E5%B0%BE(end-of-file)%E5%AD%97%E7%AC%A6%E7%9A%84%E8%BE%93%E5%85%A5%EF%BC%8C%E5%B9%B6%E8%AF%BB%E5%8F%96%E5%BD%93%E5%89%8D%E8%BE%93%E5%85%A5%E7%BC%93%E5%86%B2%E5%8C%BA%E6%8F%90%E4%BE%9B%E7%9A%84%E6%89%80%E6%9C%89%E5%AD%97%E7%AC%A6%E3%80%82%E8%BF%99%E7%A7%8D%E8%AF%BB%E5%8F%96%E5%8F%AF%E8%83%BD%E5%A4%B1%E8%B4%A5%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%90%8C%E6%97%B6%E5%8F%AF%E8%83%BD%E4%BC%9A%E6%9C%89%E5%85%B6%E5%AE%83%E8%BF%9B%E7%A8%8B%E5%9C%A8%E8%AF%BB%E5%8F%96%E3%80%82%3C/p%3E%3Cp%3E%E5%A6%82%E6%9E%9C%E8%AF%BB%E5%8F%96%E6%88%90%E5%8A%9F%EF%BC%8C%E8%AF%BB%E5%8F%96%E5%88%B0%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%A2%E5%88%B0%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AF%B9%E8%B1%A1%EF%BC%8C%E6%8C%87%E6%B4%BE%E7%BB%99%3Ccode%3Eline%3C/code%3E%E5%8F%98%E9%87%8F%EF%BC%8C%E4%BD%9C%E4%B8%BA%E5%8F%82%E6%95%B0%E7%9A%84%E5%BD%A2%E5%BC%8F%EF%BC%8C%E6%8E%A5%E6%94%B6%E8%BF%99%E4%B8%AA%E5%8F%AF%E5%8F%98%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%BC%95%E7%94%A8%EF%BC%8C%3Ccode%3Eread_line%3C/code%3E%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%3Ccode%3EOk%3C/code%3E%E7%BB%93%E6%9E%9C%E5%AF%B9%E8%B1%A1%EF%BC%8C%E8%AF%A5%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%95%B0%E6%8D%AE%E6%98%AF%E6%8C%89%E5%AD%97%E8%8A%82%E7%9A%84%E6%95%B0%E5%AD%97%E8%AF%BB%E5%8F%96%E7%9A%84%E3%80%82%E6%B3%A8%E6%84%8F%E8%BF%99%E4%B8%AA%E6%95%B0%E5%AD%97%E6%98%AF6%EF%BC%8C%E6%89%80%E4%BB%A5%E2%80%9CHello&amp;quot;%E6%98%AF5%E4%B8%AA%E5%AD%97%E8%8A%82%EF%BC%8C%E4%BD%86%E8%BF%98%E5%8C%85%E5%90%AB%E4%B8%80%E4%B8%AA%E8%A1%8C%E5%B0%BE(end-of-line)%E6%8E%A7%E5%88%B6%E5%AD%97%E7%AC%A6%E3%80%82%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E5%BD%93%3Ccode%3Eline%3C/code%3E%E5%8F%98%E9%87%8F%E8%A2%AB%E8%BE%93%E5%87%BA%E5%90%8E%EF%BC%8C%E4%B8%AD%E6%8B%AC%E5%8F%B7%E5%8F%A6%E8%B5%B7%E4%B8%80%E6%A0%B7%E8%BE%93%E5%87%BA%EF%BC%8C%E5%9B%A0%E4%B8%BA%E8%A1%8C%E5%B0%BE(end-of-line)%E5%AD%97%E7%AC%A6%E5%9C%A8%E6%9C%80%E5%90%8E%E4%B8%80%E8%A1%8C%E8%A2%AB%E6%89%93%E5%8D%B0%E5%87%BA%E6%9D%A5%E4%BA%86%E3%80%82%3C/p%3E%3Cp%3E%E5%A6%82%E6%9E%9C%3Ccode%3Eread_line%3C/code%3E%E5%87%BD%E6%95%B0%E4%B8%8D%E8%83%BD%E4%BB%8E%E6%A0%87%E5%87%86%E8%BE%93%E5%85%A5%E6%B5%81%E8%AF%BB%E5%8F%96%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%8C%E5%AE%83%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%3Ccode%3EErr%3C/code%3E%E7%BB%93%E6%9E%9C%E5%AF%B9%E8%B1%A1%EF%BC%8C%E4%BB%A5%E5%8F%8A%E4%B8%8D%E4%BC%9A%E6%9B%B4%E6%94%B9%E5%8F%98%E9%87%8F%3Ccode%3Eline%3C/code%3E%E7%9A%84%E5%80%BC%E3%80%82%3C/p%3E%3Cp%3E%E8%AE%A9%E6%88%91%E4%BB%AC%E7%9C%8B%E7%9C%8B%E6%A0%87%E5%87%86%E8%BE%93%E5%85%A5%E6%B5%81%E8%AF%BB%E5%8F%96%E5%87%A0%E8%A1%8C%E6%97%B6%E5%8F%91%E7%94%9F%E4%BA%86%E4%BB%80%E4%B9%88%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Etext%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Eformat!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;First:%20&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Einp%3C/span%3E%20=%20std::io::%3Cspan%20class=%22title%20function_%20invoke__%22%3Estdin%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Einp.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eread_line%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20text).%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Etext.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush_str%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Second:%20&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Einp.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eread_line%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20text).%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;:%20&amp;#123;&amp;#125;%20bytes&amp;quot;%3C/span%3E,%20text,%20text.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E());%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%90%E8%A1%8C%E8%AF%A5%E7%A8%8B%E5%BA%8F%EF%BC%8C%E9%94%AE%E5%85%A5%E2%80%9Ce%C3%A8%E2%82%AC%E2%80%9D%EF%BC%8C%E5%9B%9E%E8%BD%A6%EF%BC%8C%E9%94%AE%E5%85%A5%E2%80%9CHello%E2%80%9D%EF%BC%8C%E5%9B%9E%E8%BD%A6%EF%BC%8C%E5%B0%86%E6%89%93%E5%8D%B0%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20plaintext%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3EFirst:%20e%C3%A8%E2%82%AC%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ESecond:%20Hello%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E:%2028%20bytes%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E9%A6%96%E5%85%88%EF%BC%8C%E6%B3%A8%E6%84%8F%E5%88%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BE%93%E5%85%A5%E4%BA%86%E4%B8%89%E8%A1%8C%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E5%8C%85%E5%90%AB%E4%B8%A4%E4%B8%AA%E8%A1%8C%E5%B0%BE%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%82%E5%8F%A6%E5%A4%96%EF%BC%8C%E5%AE%83%E5%8C%85%E5%90%AB7%E5%AD%97%E8%8A%82%E7%9A%84ASCII%E5%AD%97%E7%AC%A6%E4%B8%B2%E2%80%9CFirst:%20%E2%80%9D%EF%BC%8C%E4%BB%A5%E5%8F%8A8%E5%AD%97%E8%8A%82%E7%9A%84ASCII%E5%AD%97%E7%AC%A6%E4%B8%B2%E2%80%9CSecond:%20%E2%80%9D%E3%80%82%E2%80%9CHello%E2%80%9D%E4%B9%9F%E6%98%AF%E4%B8%80%E4%B8%AAASCII%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%8C%E5%8C%85%E5%90%AB5%E4%B8%AA%E5%AD%97%E8%8A%82%E3%80%82%E5%8F%A6%E5%A4%96%E2%80%9Ce%C3%A8%E2%82%AC%E2%80%9D%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%85%E5%90%AB6%E4%B8%AA%E5%AD%97%E8%8A%82%EF%BC%8C%E6%89%80%E4%BB%A5%E6%88%91%E4%BB%AC%E4%B8%80%E5%85%B1%E6%9C%897+6+1+8+5+1=28%E5%AD%97%E8%8A%82%E3%80%82%3C/p%3E%3Cp%3E%E7%84%B6%E5%90%8E%EF%BC%8C%E8%AE%A9%E6%88%91%E4%BB%AC%E7%9C%8B%E7%9C%8B%3Ccode%3Etext%3C/code%3E%E5%8F%98%E9%87%8F%E7%9A%84%E6%96%87%E6%9C%AC%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E8%B5%B7%E6%9D%A5%E7%9A%84%E3%80%82%E6%B3%A8%E6%84%8F%3Ccode%3Eread_line%3C/code%3E%E5%87%BD%E6%95%B0%E5%B0%86%E9%94%AE%E5%85%A5%E8%A1%8C%E8%BF%BD%E5%8A%A0%E5%88%B0%E5%8F%82%E6%95%B0%E6%8C%87%E5%AE%9A%E7%9A%84%E5%AF%B9%E8%B1%A1%E4%B8%8A%EF%BC%8C%E8%80%8C%E4%B8%8D%E6%98%AF%E9%87%8D%E5%86%99%E5%AE%83%E3%80%82%3Ccode%3Etext%3C/code%3E%E5%8F%98%E9%87%8F%E7%94%B1%E2%80%9CFirst:%20%E2%80%9D%E5%88%9D%E5%A7%8B%E5%8C%96%E3%80%82%E7%84%B6%E5%90%8E%EF%BC%8C%E5%9C%A8%E7%AC%AC%E4%B8%89%E8%A1%8C%EF%BC%8C%E9%A6%96%E6%AC%A1%E9%94%AE%E5%85%A5%E7%9A%84%E8%A1%8C%E8%A2%AB%E8%BF%BD%E5%8A%A0%E5%88%B0%E6%96%87%E6%9C%AC%E4%B8%AD%E3%80%82%E7%84%B6%E5%90%8E%EF%BC%8C%E5%9C%A8%E7%AC%AC%E5%9B%9B%E8%A1%8C%EF%BC%8C%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AD%97%E9%9D%A2%E9%87%8F%E2%80%9CSecond%EF%BC%9A%E2%80%9D%E8%BF%BD%E5%8A%A0%E5%88%B0%E5%8F%98%E9%87%8F%E3%80%82%E6%9C%80%E5%90%8E%EF%BC%8C%E5%9C%A8%E7%AC%AC%E4%BA%94%E8%A1%8C%EF%BC%8C%E7%AC%AC%E4%BA%8C%E6%AC%A1%E9%94%AE%E5%85%A5%E7%9A%84%E8%A1%8C%E5%86%8D%E6%AC%A1%E8%A2%AB%E8%BF%BD%E5%8A%A0%E7%9A%84%E5%86%85%E5%AE%B9%E4%B8%AD%E3%80%82%3C/p%3E%3Cp%3E%E5%85%B6%E4%B8%89%EF%BC%8C%E6%B3%A8%E6%84%8F%E5%88%B0%E5%BD%93%E5%87%BD%E6%95%B0%3Ccode%3Eread_line%3C/code%3E%E4%BB%8E%E7%BC%93%E5%86%B2%E5%8C%BA%E8%AF%BB%E5%8F%96%E6%97%B6%EF%BC%8C%E5%AE%83%E4%BC%9A%E6%B8%85%E7%A9%BA%E7%BC%93%E5%86%B2%E5%8C%BA%EF%BC%8C%E8%BF%99%E6%A0%B7%E5%86%8D%E6%AC%A1%E8%AF%BB%E5%8F%96%E7%BC%93%E5%86%B2%E5%8C%BA%E6%97%B6%E4%B8%8D%E4%BC%9A%E9%87%8D%E5%A4%8D%E8%AF%BB%E5%8F%96%E7%BC%93%E5%86%B2%E5%8C%BA%E7%9A%84%E5%86%85%E5%AE%B9%E3%80%82%3C/p%3E%3Cp%3E%E5%85%B6%E5%9B%9B%EF%BC%8C%E6%B3%A8%E6%84%8F%E6%AF%8F%E6%AC%A1%E8%B0%83%E7%94%A8%3Ccode%3Eread_line%3C/code%3E%E5%90%8E%EF%BC%8C%E5%90%8E%E9%9D%A2%E9%83%BD%E4%BC%9A%E8%B0%83%E7%94%A8%3Ccode%3Eunwrap%3C/code%3E%EF%BC%8C%E4%BD%86%E5%AE%83%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC%E5%8F%AF%E4%BB%A5%E5%BF%BD%E7%95%A5%E3%80%82%3C/p%3E%3Cp%3E%E6%89%80%E4%BB%A5%E8%BF%99%E4%B8%AA%E8%B0%83%E7%94%A8%E5%8F%AF%E4%BB%A5%E7%9C%81%E7%95%A5%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Etext%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Eformat!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;First:%20&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Einp%3C/span%3E%20=%20std::io::%3Cspan%20class=%22title%20function_%20invoke__%22%3Estdin%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Einp.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eread_line%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20text);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Etext.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush_str%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Second:%20&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Einp.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eread_line%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20text).%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;:%20&amp;#123;&amp;#125;%20bytes&amp;quot;%3C/span%3E,%20text,%20text.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E());%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%84%B6%E8%80%8C%EF%BC%8C%E5%BD%93%E8%BF%99%E6%AE%B5%E7%A8%8B%E5%BA%8F%E8%A2%AB%E7%BC%96%E8%AF%91%EF%BC%8C%E7%BC%96%E8%AF%91%E8%BE%93%E5%87%BA%EF%BC%8C%E5%AF%B9%E4%BA%8E%E4%B8%A4%E5%A4%84%E8%B0%83%E7%94%A8%E7%9A%84%3Ccode%3Eread_line%3C/code%3E%EF%BC%8C%E4%BC%9A%E8%AD%A6%E5%91%8A%EF%BC%9A%3Ccode%3E&amp;quot;unused%20%3C/code%3Estd::result::Result%3Ccode%3E%20which%20must%20be%20used&amp;quot;.%3C/code%3E%E3%80%82%E5%AE%83%E6%84%8F%E5%91%B3%E7%9D%80%3Ccode%3Eread_line%3C/code%3E%E8%BF%94%E5%9B%9E%E4%B8%AA%3Ccode%3EResult%3C/code%3E%E7%9A%84%E5%80%BC%EF%BC%8C%E4%BB%A5%E5%8F%8A%E8%BF%99%E4%B8%AA%E5%80%BC%E8%A2%AB%E5%BF%BD%E7%95%A5%E6%88%96%E4%B8%8D%E8%A2%AB%E4%BD%BF%E7%94%A8%E3%80%82Rust%E4%B8%AD%E8%AE%A4%E4%B8%BA%E5%BF%BD%E7%95%A5%3Ccode%3EResult%3C/code%3E%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%80%BC%E6%98%AF%E5%8D%B1%E9%99%A9%E7%9A%84%EF%BC%8C%E5%9B%A0%E4%B8%BA%E8%BF%99%E7%A7%8D%E7%B1%BB%E5%9E%8B%E5%8F%AF%E8%83%BD%E8%A1%A8%E7%A4%BA%E4%B8%80%E4%B8%AA%E8%BF%90%E8%A1%8C%E6%97%B6%E9%94%99%E8%AF%AF%EF%BC%8C%E6%89%80%E4%BB%A5%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8D%E4%BC%9A%E7%BB%9F%E8%AE%A1%E8%BF%99%E7%A7%8D%E9%94%99%E8%AF%AF%E3%80%82%E8%BF%99%E5%9C%A8%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E6%98%AF%E5%8D%B1%E9%99%A9%E7%9A%84%EF%BC%8C%E4%BD%86%E5%AE%83%E4%B9%9F%E4%B8%8D%E9%80%82%E7%94%A8%E4%BA%8E%E8%B0%83%E8%AF%95%E4%BB%A3%E7%A0%81%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E9%9A%90%E8%97%8F%E4%BA%86%E4%BD%A0%E9%9C%80%E8%A6%81%E5%AF%BB%E6%89%BE%E7%9A%84%E9%94%99%E8%AF%AF%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%9C%A8%E8%B0%83%E8%AF%95%E4%BB%A3%E7%A0%81%E6%97%B6%EF%BC%8C%E6%9C%80%E5%A5%BD%E6%80%BB%E6%98%AF%E5%9C%A8%E6%9C%80%E5%90%8E%E5%8A%A0%E4%B8%8A%3Ccode%3E.unwrap()%3C/code%3E%E4%BB%8E%E5%8F%A5%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E4%BB%A3%E7%A0%81%EF%BC%8C%E9%97%AE%E9%A2%98%E5%B9%B6%E4%B8%8D%E6%98%AF%E9%82%A3%E4%B9%88%E7%AE%80%E5%8D%95%E3%80%82%3C/p%3E%3Ch2%20id=%22Proper-Runtime-Error-Handling%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Proper-Runtime-Error-Handling%22%3E%C2%B6%3C/a%3EProper%20Runtime%20Error%20Handling%3C/h2%3E%3Cp%3E%E5%9C%A8%E7%9C%9F%E5%AE%9E%E8%BD%AF%E4%BB%B6%E4%B8%96%E7%95%8C%EF%BC%8C%E5%A4%A7%E9%83%A8%E5%88%86%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%3Ccode%3EResult%3C/code%3E%E7%B1%BB%E5%9E%8B%E5%80%BC%E3%80%82%E8%BF%99%E7%B1%BB%E5%87%BD%E6%95%B0%E7%A7%B0%E4%B8%BA%E2%80%9C%E4%B8%8D%E5%8F%AF%E9%9D%A0%EF%BC%8Cfallible%E2%80%9D%E5%87%BD%E6%95%B0%EF%BC%8C%E5%8D%B3%E6%AD%A3%E5%B8%B8%E8%BF%94%E5%9B%9E%3Ccode%3EOk%3C/code%3E%EF%BC%8C%E5%BC%82%E5%B8%B8%E6%83%85%E5%86%B5%E8%BF%94%E5%9B%9E%3Ccode%3EErr%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8C++%E3%80%81Java%E4%BB%A5%E5%8F%8A%E5%85%B6%E4%BB%96%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AF%AD%E8%A8%80%E4%B8%AD%EF%BC%8C%E6%A0%87%E5%87%86%E9%94%99%E8%AF%AF%E7%9A%84%E5%A4%84%E7%90%86%E6%8A%80%E6%9C%AF%E5%9F%BA%E4%BA%8E%E2%80%9C%E5%BC%82%E5%B8%B8%E2%80%9D%E8%BF%99%E4%B8%80%E6%A6%82%E5%BF%B5%EF%BC%8C%E5%B9%B6%E6%9C%89%3Ccode%3Ethrow%3C/code%3E%E3%80%81%3Ccode%3Etry%3C/code%3E%E3%80%81%3Ccode%3Ecatch%3C/code%3E%E8%BF%99%E4%BA%9B%E5%85%B3%E9%94%AE%E5%AD%97%E3%80%82%E5%9C%A8Rust%E4%B8%AD%E6%B2%A1%E6%9C%89%E8%BF%99%E4%BA%9B%E4%B8%9C%E8%A5%BF%EF%BC%9B%E6%89%80%E6%9C%89%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%E5%9F%BA%E4%BA%8E%3Ccode%3EResult%3C/code%3E%E7%B1%BB%E5%9E%8B%EF%BC%8C%E4%BB%A5%E5%8F%8A%3Ccode%3Ematch%3C/code%3E%E8%AF%AD%E5%8F%A5%E5%8C%B9%E9%85%8D%E3%80%82%3C/p%3E%3Cp%3E%E5%81%87%E8%AE%BE%EF%BC%8C%E5%85%B8%E5%9E%8B%E5%9C%B0%EF%BC%8C%E4%BD%A0%E5%86%99%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%3Ccode%3Ef%3C/code%3E%EF%BC%8C%E8%A6%81%E5%AE%9E%E7%8E%B0%E5%AE%83%E7%9A%84%E5%8A%9F%E8%83%BD%EF%BC%8C%E4%BC%9A%E8%B0%83%E7%94%A8%E5%87%A0%E4%B8%AA%E4%B8%8D%E5%8F%AF%E9%9D%A0%E5%87%BD%E6%95%B0%EF%BC%8C%3Ccode%3Ef1%3C/code%3E%E3%80%81%3Ccode%3Ef2%3C/code%3E%E3%80%81%3Ccode%3Ef3%3C/code%3E%E5%92%8C%3Ccode%3Ef4%3C/code%3E%E3%80%82%E8%BF%99%E4%BA%9B%E5%87%BD%E6%95%B0%E5%8F%AF%E8%83%BD%E4%BC%9A%E8%BF%94%E5%9B%9E%E9%94%99%E8%AF%AF%EF%BC%8C%E6%88%96%E8%80%85%E6%88%90%E5%8A%9F%E7%BB%93%E6%9E%9C%E3%80%82%E5%B8%8C%E6%9C%9B%E5%A6%82%E6%9E%9C%E6%9F%90%E4%B8%AA%E5%87%BD%E6%95%B0%E5%A4%B1%E8%B4%A5%EF%BC%8C%E5%BA%94%E8%AF%A5%E7%AB%8B%E5%8D%B3%E5%B0%86%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF%E8%BF%94%E5%9B%9E%E7%BB%99%3Ccode%3Ef%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E8%8B%A5%E6%98%AF%E6%88%90%E5%8A%9F%EF%BC%8C%E5%88%99%E4%BC%A0%E9%80%92%E7%BB%99%E4%B8%8B%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E7%BB%A7%E7%BB%AD%E6%89%A7%E8%A1%8C%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%80%E4%B8%AA%E5%8F%AF%E8%83%BD%E7%9A%84%E5%86%99%E6%B3%95%E6%98%AF%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E19%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E20%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E21%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E22%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E23%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E24%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E25%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E26%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E27%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E28%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E29%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E30%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E31%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E32%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E33%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E34%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E35%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E36%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E37%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E38%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E39%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E40%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E41%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E42%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E43%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E44%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E45%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E46%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E47%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E48%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E49%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E50%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E51%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E52%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E53%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E54%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E55%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E56%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef1%3C/span%3E(x:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3EResult%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%20%3Cspan%20class=%22type%22%3EString%3C/span%3E&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20x%20==%20%3Cspan%20class=%22number%22%3E1%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3EErr%3C/span%3E(%3Cspan%20class=%22built_in%22%3Eformat!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Err.%201&amp;quot;%3C/span%3E))%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%20%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3EOk%3C/span%3E(x)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef2%3C/span%3E(x:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3EResult%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%20%3Cspan%20class=%22type%22%3EString%3C/span%3E&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20x%20==%20%3Cspan%20class=%22number%22%3E2%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3EErr%3C/span%3E(%3Cspan%20class=%22built_in%22%3Eformat!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Err.%202&amp;quot;%3C/span%3E))%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%20%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3EOk%3C/span%3E(x)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef3%3C/span%3E(x:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3EResult%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%20%3Cspan%20class=%22type%22%3EString%3C/span%3E&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20x%20==%20%3Cspan%20class=%22number%22%3E3%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3EErr%3C/span%3E(%3Cspan%20class=%22built_in%22%3Eformat!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Err.%203&amp;quot;%3C/span%3E))%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%20%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3EOk%3C/span%3E(x)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef4%3C/span%3E(x:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3EResult%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%20%3Cspan%20class=%22type%22%3EString%3C/span%3E&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20x%20==%20%3Cspan%20class=%22number%22%3E4%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3EErr%3C/span%3E(%3Cspan%20class=%22built_in%22%3Eformat!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Err.%204&amp;quot;%3C/span%3E))%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%20%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3EOk%3C/span%3E(x)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E(x:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3EResult%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%20%3Cspan%20class=%22type%22%3EString%3C/span%3E&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ematch%3C/span%3E%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef1%3C/span%3E(x)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3EOk%3C/span%3E(result)%20=&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ematch%3C/span%3E%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef2%3C/span%3E(result)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3EOk%3C/span%3E(result)%20=&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ematch%3C/span%3E%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef3%3C/span%3E(result)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3EOk%3C/span%3E(result)%20=&amp;gt;%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef4%3C/span%3E(result),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3EErr%3C/span%3E(err_msg)%20=&amp;gt;%20%3Cspan%20class=%22title%20function_%20invoke__%22%3EErr%3C/span%3E(err_msg),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3EErr%3C/span%3E(err_msg)%20=&amp;gt;%20%3Cspan%20class=%22title%20function_%20invoke__%22%3EErr%3C/span%3E(err_msg),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3EErr%3C/span%3E(err_msg)%20=&amp;gt;%20%3Cspan%20class=%22title%20function_%20invoke__%22%3EErr%3C/span%3E(err_msg),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ematch%3C/span%3E%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(%3Cspan%20class=%22number%22%3E2%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3EOk%3C/span%3E(y)%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20y),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3EErr%3C/span%3E(e)%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Error:%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20e),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ematch%3C/span%3E%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(%3Cspan%20class=%22number%22%3E4%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3EOk%3C/span%3E(y)%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20y),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3EErr%3C/span%3E(e)%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Error:%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20e),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ematch%3C/span%3E%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(%3Cspan%20class=%22number%22%3E5%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3EOk%3C/span%3E(y)%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20y),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3EErr%3C/span%3E(e)%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Error:%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20e),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E6%89%93%E5%8D%B0%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20plaintext%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3EError:%20Err.%202%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EError:%20Err.%204%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E7%A7%8D%E5%86%99%E6%B3%95%E8%82%AF%E5%AE%9A%E4%B8%8D%E6%96%B9%E4%BE%BF%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%9B%BF%E6%8D%A2%E4%B8%BA%E8%A1%8C%E5%86%85%E5%86%99%E6%B3%95%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E(x:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3EResult%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%20%3Cspan%20class=%22type%22%3EString%3C/span%3E&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eresult1%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef1%3C/span%3E(x);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20result1.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eis_err%3C/span%3E()%20&amp;#123;%20%3Cspan%20class=%22keyword%22%3Ereturn%3C/span%3E%20result1;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eresult2%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef2%3C/span%3E(result1.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20result2.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eis_err%3C/span%3E()%20&amp;#123;%20%3Cspan%20class=%22keyword%22%3Ereturn%3C/span%3E%20result2;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eresult3%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef3%3C/span%3E(result2.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20result3.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eis_err%3C/span%3E()%20&amp;#123;%20%3Cspan%20class=%22keyword%22%3Ereturn%3C/span%3E%20result3;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef4%3C/span%3E(result3.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E())%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E7%A7%8D%E5%86%99%E6%B3%95%E6%98%AF%E5%B0%86%E7%BB%93%E6%9E%9C%E5%86%99%E5%85%A5%E4%B8%B4%E6%97%B6%E5%8F%98%E9%87%8F%E4%B8%AD%EF%BC%8C%E7%BB%93%E6%9E%9C%E5%80%BC%E9%80%9A%E8%BF%87%3Ccode%3Eis_err%3C/code%3E%E5%87%BD%E6%95%B0%E6%A3%80%E6%B5%8B%E3%80%82%E5%A4%B1%E8%B4%A5%E5%88%99%E8%BF%94%E5%9B%9E%EF%BC%8C%E6%88%90%E5%8A%9F%E5%88%99%3Ccode%3Eunwrap%3C/code%3E%E5%87%BA%E7%9C%9F%E5%AE%9E%E7%BB%93%E6%9E%9C%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E6%98%AF%E5%8F%A6%E4%B8%80%E7%A7%8D%E7%AD%89%E4%BB%B7%3Ccode%3Ef%3C/code%3E%E7%9A%84%E5%AE%9E%E7%8E%B0%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E(x:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3EResult%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%20%3Cspan%20class=%22type%22%3EString%3C/span%3E&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef4%3C/span%3E(%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef3%3C/span%3E(%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef2%3C/span%3E(%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef1%3C/span%3E(x)?)?)?)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E9%87%8C%E7%9A%84%E9%97%AE%E5%8F%B7%E6%98%AF%E4%B8%80%E4%B8%AA%E7%89%B9%E5%AE%9A%E7%9A%84%E5%AE%8F(macro)%EF%BC%8C%E8%AF%B8%E5%A6%82%E2%80%9C%3Ccode%3Ee?%3C/code%3E%E2%80%9D%E7%9A%84%E8%A1%A8%E8%BE%BE%E5%BC%8F%EF%BC%8C%E5%A6%82%E6%9E%9C%E2%80%9C%3Ccode%3Ee%3C/code%3E%E2%80%9D%E6%98%AF%E6%B3%9B%E5%9E%8B%E7%B1%BB%E5%9E%8B%E2%80%9C%3Ccode%3EResult&amp;lt;T,E&amp;gt;%3C/code%3E%E2%80%9D%EF%BC%8C%E5%AE%8F%E5%B1%95%E5%BC%80%E4%B8%BA%E8%A1%A8%E8%BE%BE%E5%BC%8F%E2%80%9C%3Ccode%3Ematch%20e%20&amp;#123;%20Some(v)%20=&amp;gt;%20v,%20_%20=&amp;gt;%20return%20e%20&amp;#125;%3C/code%3E%E2%80%9D%EF%BC%9B%E7%9B%B8%E5%8F%8D%EF%BC%8C%E5%A6%82%E6%9E%9C%E2%80%9C%3Ccode%3Ee%3C/code%3E%E2%80%9D%E6%98%AF%E6%B3%9B%E5%9E%8B%E7%B1%BB%E5%9E%8B%E2%80%9C%3Ccode%3EOption&amp;lt;T&amp;gt;%3C/code%3E%E2%80%9D%EF%BC%8C%E5%AE%8F%E5%B1%95%E5%BC%80%E4%B8%BA%E8%A1%A8%E8%BE%BE%E5%BC%8F%E2%80%9C%3Ccode%3Ematch%20e%20&amp;#123;%20Ok(v)%20=&amp;gt;%20v,%20_%20=&amp;gt;%20return%20e%20&amp;#125;%3C/code%3E%E2%80%9D%E3%80%82%E6%8D%A2%E8%A8%80%E4%B9%8B%EF%BC%8C%E8%BF%99%E7%A7%8D%E5%AE%8F%E8%AF%AD%E6%B3%95%E5%B0%86%E2%80%9C%3Ccode%3ESome%3C/code%3E%E2%80%9D%E6%88%96%E2%80%9C%3Ccode%3EOk%3C/code%3E%E2%80%9D%E7%9A%84%E5%8F%82%E6%95%B0%EF%BC%8C%E8%BF%9B%E8%A1%8C%E8%BD%AC%E6%8D%A2%EF%BC%8C%E6%88%96%E8%BF%94%E5%9B%9E%E5%8C%85%E5%90%AB%E7%9A%84%E5%87%BD%E6%95%B0%E7%9A%84%E4%B8%80%E4%B8%AA%E5%80%BC%E3%80%82%3C/p%3E%3Cp%3E%E5%AE%83%E4%BB%85%E8%83%BD%E4%BD%9C%E7%94%A8%E4%BA%8E%E7%B1%BB%E5%9E%8B%E4%B8%BA%E2%80%9C%3Ccode%3EResult&amp;lt;T,E&amp;gt;%3C/code%3E%E2%80%9D%E6%88%96%E2%80%9C%3Ccode%3EOption&amp;lt;T&amp;gt;%3C/code%3E%E2%80%9D%E7%9A%84%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%B8%AD%EF%BC%8C%E6%89%80%E4%BB%A5%E4%B9%9F%E4%BB%85%E8%83%BD%E4%BD%9C%E7%94%A8%E4%BA%8E%E6%9C%89%E6%81%B0%E5%BD%93%E8%BF%94%E5%9B%9E%E5%80%BC%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%87%BD%E6%95%B0%E5%86%85%E9%83%A8%E3%80%82%E5%A6%82%E6%9E%9C%E9%97%AD%E5%90%88%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E5%80%BC%E7%B1%BB%E5%9E%8B%E6%98%AF%E2%80%9C%3Ccode%3EResult&amp;lt;T1,E&amp;gt;%3C/code%3E%E2%80%9D%EF%BC%8C%E9%97%AE%E5%8F%B7%E5%AE%8F%E4%BB%85%E8%83%BD%E4%BD%9C%E7%94%A8%E4%BA%8E%E7%B1%BB%E5%9E%8B%E2%80%9C%3Ccode%3EResult&amp;lt;T2,E&amp;gt;%3C/code%3E%E2%80%9D%E7%9A%84%E8%A1%A8%E8%BE%BE%E5%BC%8F%EF%BC%8C%E5%85%B6%E4%B8%AD%E2%80%9C%3Ccode%3ET2%3C/code%3E%E2%80%9D%E5%8F%AF%E4%BB%A5%E5%92%8C%E2%80%9C%3Ccode%3ET1%3C/code%3E%E2%80%9D%E4%B8%8D%E5%90%8C%EF%BC%8C%E4%BD%86%E2%80%9C%3Ccode%3EE%3C/code%3E%E2%80%9D%E5%BF%85%E9%A1%BB%E7%9B%B8%E5%90%8C%EF%BC%9B%E4%BB%A5%E5%8F%8A%EF%BC%8C%E5%A6%82%E6%9E%9C%E9%97%AD%E5%90%88%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E5%80%BC%E7%B1%BB%E5%9E%8B%E6%98%AF%E2%80%9C%3Ccode%3EOption&amp;lt;T1&amp;gt;%3C/code%3E%E2%80%9D%EF%BC%8C%E9%97%AE%E5%8F%B7%E5%AE%8F%E4%BB%85%E8%83%BD%E4%BD%9C%E7%94%A8%E4%BA%8E%E7%B1%BB%E5%9E%8B%E2%80%9C%3Ccode%3EOption&amp;lt;T2&amp;gt;%3C/code%3E%E2%80%9D%E7%9A%84%E8%A1%A8%E8%BE%BE%E5%BC%8F%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E8%A6%81%E6%9E%84%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%A8%B3%E5%81%A5%E7%9A%84%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%E6%A8%A1%E5%BC%8F%E3%80%82%E6%AF%8F%E4%B8%AA%E5%87%BD%E6%95%B0%E5%8C%85%E5%90%AB%E5%AF%B9%E4%B8%80%E4%B8%AA%E4%B8%8D%E5%8F%AF%E9%9D%A0(fallible)%E5%87%BD%E6%95%B0%E7%9A%84%E8%B0%83%E7%94%A8%EF%BC%8C%E5%BA%94%E8%AF%A5%E6%98%AF%E4%B8%80%E4%B8%AAfallible%E5%87%BD%E6%95%B0%E6%88%96%E4%BD%BF%E7%94%A8%E2%80%9C%3Ccode%3Ematch%3C/code%3E%E2%80%9D%E8%AF%AD%E5%8F%A5%E5%A4%84%E7%90%86%E2%80%9C%3Ccode%3EResult%3C/code%3E%E2%80%9D%E7%BB%93%E6%9E%9C%E5%80%BC%E3%80%82%E5%9C%A8%E6%9C%80%E5%85%88%E7%9A%84%E4%B8%80%E7%A7%8D%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%81%E4%B8%AD%EF%BC%8C%E6%AF%8F%E4%B8%AA%E4%B8%8D%E5%8F%AF%E9%9D%A0%E5%87%BD%E6%95%B0%E7%9A%84%E8%B0%83%E7%94%A8%EF%BC%8C%E9%83%BD%E5%BA%94%E8%AF%A5%E7%94%A8%E9%97%AE%E5%8F%B7%E5%AE%8F%E6%9D%A5%E4%BC%A0%E9%80%92%E9%94%99%E8%AF%AF%E6%9D%A1%E4%BB%B6%E3%80%82%E2%80%9C%3Ccode%3Emain%3C/code%3E%E2%80%9D%E5%87%BD%E6%95%B0%E4%B8%8D%E5%8F%AF%E8%83%BD%E6%98%AFfalliable%E7%9A%84%EF%BC%8C%E6%89%80%E4%BB%A5%E5%9C%A8%E8%B0%83%E7%94%A8%E9%93%BE%E4%B8%AD%EF%BC%8C%E5%BA%94%E8%AF%A5%E7%94%A8%E2%80%9C%3Ccode%3Ematch%3C/code%3E%E2%80%9D%E8%AF%AD%E5%8F%A5%E5%A4%84%E7%90%86%E2%80%9C%3Ccode%3EResult%3C/code%3E%E2%80%9D%E7%9A%84%E5%80%BC%E3%80%82%3C/p%3E%3Ch2%20id=%22Writing-to-the-Console%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Writing-to-the-Console%22%3E%C2%B6%3C/a%3EWriting%20to%20the%20Console%3C/h2%3E%3Cp%3E%E6%88%91%E4%BB%AC%E4%B8%80%E7%9B%B4%E7%94%A8%E2%80%9C%3Ccode%3Eprint%3C/code%3E%E2%80%9D%E6%88%96%E2%80%9C%3Ccode%3Eprintln%3C/code%3E%E2%80%9D%E5%AE%8F%E6%9D%A5%E6%89%93%E5%8D%B0%E6%B6%88%E6%81%AF%E3%80%82%E7%84%B6%E8%80%8C%EF%BC%8C%E4%BD%A0%E4%B9%9F%E5%8F%AF%E4%BB%A5%E7%9B%B4%E6%8E%A5%E7%94%A8%E5%BA%93%E5%87%BD%E6%95%B0%E5%B0%86%E4%BF%A1%E6%81%AF%E8%BE%93%E5%87%BA%E5%88%B0%E6%8E%A7%E5%88%B6%E5%8F%B0%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Euse%3C/span%3E%20std::io::Write;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/ILLEGAL:%20std::io::stdout().write(&amp;quot;Hi&amp;quot;).unwrap();%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/ILLEGAL:%20std::io::stdout().write(String::from(&amp;quot;Hi&amp;quot;)).unwrap();%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Estd::io::%3Cspan%20class=%22title%20function_%20invoke__%22%3Estdout%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Ewrite%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Hello%20&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eas_bytes%3C/span%3E()).%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Estd::io::%3Cspan%20class=%22title%20function_%20invoke__%22%3Estdout%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Ewrite%3C/span%3E(%3Cspan%20class=%22type%22%3EString%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3Efrom%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;world&amp;quot;%3C/span%3E).%3Cspan%20class=%22title%20function_%20invoke__%22%3Eas_bytes%3C/span%3E()).%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E();%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C%3Ccode%3EHello%20world%3C/code%3E%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E2%80%9C%3Ccode%3Estdout%3C/code%3E%E2%80%9D%E6%A0%87%E5%87%86%E5%BA%93%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%E5%8F%A5%E6%9F%84%E5%A4%84%E7%90%86%E5%BD%93%E5%89%8D%E8%BF%9B%E7%A8%8B%E7%9A%84%E6%A0%87%E5%87%86%E8%BE%93%E5%87%BA%E6%B5%81%EF%BC%8C%E2%80%9C%3Ccode%3Ewrite%3C/code%3E%E2%80%9D%E5%8F%AF%E4%BB%A5%E5%AE%9E%E7%8E%B0%E3%80%82%3C/p%3E%3Cp%3E%E2%80%9C%3Ccode%3Ewrite%3C/code%3E%E2%80%9D%E5%87%BD%E6%95%B0%E4%B8%8D%E8%83%BD%E7%9B%B4%E6%8E%A5%E6%89%93%E5%8D%B0%E9%9D%99%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%8C%E4%B9%9F%E4%B8%8D%E8%83%BD%E6%89%93%E5%8D%B0%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%8C%E5%BD%93%E7%84%B6%E6%95%B0%E5%AD%97%E3%80%81%E5%B8%B8%E8%A7%81%E7%BB%84%E5%90%88%E5%AF%B9%E8%B1%A1%E4%B9%9F%E4%B8%8D%E8%83%BD%E3%80%82%3C/p%3E%3Cp%3E%E2%80%9C%3Ccode%3Ewrite%3C/code%3E%E2%80%9D%E5%87%BD%E6%95%B0%E6%8E%A5%E6%94%B6%E4%B8%80%E4%B8%AA%E2%80%9C%3Ccode%3E&amp;amp;[u8]%3C/code%3E%E2%80%9D%E7%B1%BB%E5%9E%8B%EF%BC%8C%E5%AE%83%E6%98%AF%E5%AD%97%E8%8A%82%E5%88%87%E7%89%87%E7%9A%84%E4%B8%80%E4%B8%AA%E5%BC%95%E7%94%A8%E3%80%82%E8%BF%99%E4%BA%9B%E5%AD%97%E8%8A%82%E4%BC%9A%E6%89%93%E5%8D%B0%E4%B8%BA%E6%8E%A7%E5%88%B6%E5%8F%B0%E7%9A%84UTF-8%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%82%E6%89%80%E4%BB%A5%E5%A6%82%E6%9E%9C%E6%89%93%E5%8D%B0%E7%9A%84%E5%AF%B9%E8%B1%A1%E4%B8%8D%E6%98%AFUTF-8%E6%A0%BC%E5%BC%8F%E7%9A%84%E5%88%87%E7%89%87%E5%AD%97%E8%8A%82%EF%BC%8C%E9%A6%96%E5%85%88%E4%BD%A0%E9%9C%80%E8%A6%81%E8%BD%AC%E6%8D%A2%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%BA%E4%BA%86%E5%B0%86%E9%9D%99%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E4%B8%BA%E4%B8%80%E4%B8%AA%E5%AD%97%E8%8A%82%E5%88%87%E7%89%87%E7%9A%84%E5%BC%95%E7%94%A8%EF%BC%8C%E4%BD%A0%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%E2%80%9C%3Ccode%3Eas_bytes%3C/code%3E%E2%80%9D%E5%87%BD%E6%95%B0%E3%80%82%E8%AF%A5%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%AD%97%E8%8A%82%E7%9A%84%E5%9C%B0%E5%9D%80%EF%BC%8C%E4%BB%A5%E5%8F%8A%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%AD%97%E8%8A%82%E6%95%B0%E3%80%82%E7%94%B1%E4%BA%8E%E8%BF%99%E4%B8%AA%E5%AD%97%E8%8A%82%E6%95%B0%E6%97%A9%E5%B7%B2%E7%BB%8F%E5%8C%85%E5%90%AB%E5%9C%A8%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%A4%B4%E9%83%A8%EF%BC%8C%E6%89%80%E4%BB%A5%E8%BF%99%E4%B8%AA%E5%87%BD%E6%95%B0%E6%9E%81%E5%85%B6%E9%AB%98%E6%95%88%E3%80%82%3C/p%3E%3Cp%3E%E6%9C%80%E5%90%8E%EF%BC%8C%E6%B3%A8%E6%84%8F%E5%88%B0%E2%80%9C%3Ccode%3Ewrite%3C/code%3E%E2%80%9D%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%E2%80%9C%3Ccode%3EResult%3C/code%3E%E2%80%9D%E7%B1%BB%E5%9E%8B%E5%80%BC%EF%BC%8C%E8%A1%A8%E7%A4%BA%E5%AE%83%E6%98%AF%E4%B8%80%E4%B8%AA%E4%B8%8D%E5%8F%AF%E9%9D%A0%E5%87%BD%E6%95%B0(fallible%20function)%E3%80%82%E5%A6%82%E6%9E%9C%E4%BD%A0%E7%A1%AE%E5%AE%9A%E5%AE%83%E4%B8%8D%E5%8F%AF%E8%83%BD%E6%98%AFfail%EF%BC%8C%E6%9C%80%E5%A5%BD%E8%B0%83%E7%94%A8%E2%80%9C%3Ccode%3Eunwrap%3C/code%3E%E2%80%9D%E5%87%BD%E6%95%B0%E8%8E%B7%E5%8F%96%E5%85%B6%E8%BF%94%E5%9B%9E%E5%80%BC%E3%80%82%3C/p%3E%3Ch2%20id=%22Converting-a-Value-to-a-String%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Converting-a-Value-to-a-String%22%3E%C2%B6%3C/a%3EConverting%20a%20Value%20to%20a%20String%3C/h2%3E%3Cp%3E%E5%A6%82%E6%9E%9C%E4%BD%A0%E5%B8%8C%E6%9C%9B%E5%B0%86%E5%85%B6%E5%AE%83%E5%80%BC%E7%B1%BB%E5%9E%8B%E6%89%93%E5%8D%B0%E4%B8%BA%E6%96%87%E6%9C%AC%EF%BC%8C%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%E2%80%9C%3Ccode%3Eto_string%3C/code%3E%E2%80%9D%E5%87%BD%E6%95%B0%EF%BC%8C%E5%AE%83%E8%A2%AB%E5%AE%9A%E4%B9%89%E5%9C%A8%E6%89%80%E6%9C%89%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%9E%8B%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eint_str%3C/span%3E:%20%3Cspan%20class=%22type%22%3EString%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E45%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Efloat_str%3C/span%3E:%20%3Cspan%20class=%22type%22%3EString%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E4.5%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ebool_str%3C/span%3E:%20%3Cspan%20class=%22type%22%3EString%3C/span%3E%20=%20%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20int_str,%20float_str,%20bool_str);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%B0%86%E4%BC%9A%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C%3Ccode%3E45%204.5%20true%3C/code%3E%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%3Ccode%3Eto_string%3C/code%3E%E5%87%BD%E6%95%B0%E6%8C%87%E6%B4%BE%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%A4%B4%E9%83%A8%E4%BC%9A%E6%94%BE%E5%9C%A8%E6%A0%88%EF%BC%8C%E5%86%85%E5%AE%B9%E6%94%BE%E5%9C%A8%E5%A0%86%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%AE%83%E4%B8%8D%E6%98%AF%E9%AB%98%E6%95%88%E7%9A%84%E3%80%82%3C/p%3E%3Ch2%20id=%22File-Input-Output%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#File-Input-Output%22%3E%C2%B6%3C/a%3EFile%20Input/Output%3C/h2%3E%3Cp%3ERust%E6%8F%90%E4%BE%9B%E4%BA%86%E5%AF%B9%E4%BA%8E%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6%E6%88%96%E6%96%87%E6%9C%AC%E7%9A%84%E8%AF%BB%E5%86%99%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Euse%3C/span%3E%20std::io::Write;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Efile%3C/span%3E%20=%20std::fs::File::%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecreate%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;data.txt&amp;quot;%3C/span%3E).%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Efile.%3Cspan%20class=%22title%20function_%20invoke__%22%3Ewrite_all%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;e%C3%A8%E2%82%AC&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eas_bytes%3C/span%3E()).%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E();%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%AC%AC%E4%BA%8C%E8%A1%8C%E8%B0%83%E7%94%A8%E4%BA%86%3Ccode%3Ecreate%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E5%9C%A8%E5%BD%93%E5%89%8D%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E4%B8%8B%EF%BC%8C%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E2%80%9Cdata.txt%E2%80%9D%E7%9A%84%E6%96%87%E4%BB%B6%E3%80%82%E8%AF%A5%E5%87%BD%E6%95%B0%E6%98%AFfalliable%E7%9A%84%EF%BC%8C%E5%A6%82%E6%9E%9C%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6%E6%88%90%E5%8A%9F%EF%BC%8C%E5%AE%83%E8%BF%94%E5%9B%9E%E5%88%9A%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6%E7%9A%84%E5%8F%A5%E6%9F%84%E3%80%82%3C/p%3E%3Cp%3E%E6%9C%80%E5%90%8E%E4%B8%80%E8%A1%8C%E8%B0%83%E7%94%A8%E4%BA%86%3Ccode%3Ewrite_all%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E5%AF%B9%E6%96%B0%E5%88%9B%E5%BB%BA%E7%9A%84%E6%96%87%E4%BB%B6%E5%86%99%E5%85%A5%E6%9F%90%E4%BA%9B%E5%AD%97%E8%8A%82%EF%BC%8C%E6%B3%A8%E6%84%8F%E2%80%9Ce%C3%A8%E2%82%AC%E2%80%9D%E6%9C%896%E4%B8%AA%E5%AD%97%E8%8A%82%EF%BC%8C%E5%8C%85%E5%90%AB%E8%A1%8C%E5%B0%BE%E7%BB%93%E6%9D%9F%E7%AC%A6%E3%80%82%3C/p%3E%3Cp%3E%E8%8B%A5%E8%A6%81%E8%AF%BB%E5%8F%96%E5%88%9A%E5%88%9A%E5%88%9B%E5%BB%BA%E7%9A%84%E6%96%87%E4%BB%B6%E2%80%9C%3Ccode%3Edata.txt%3C/code%3E%E2%80%9D%EF%BC%8C%E5%8F%AF%E4%BB%A5%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Euse%3C/span%3E%20std::io::Read;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Efile%3C/span%3E%20=%20std::fs::File::%3Cspan%20class=%22title%20function_%20invoke__%22%3Eopen%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;data.txt&amp;quot;%3C/span%3E).%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Econtents%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3EString%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Efile.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eread_to_string%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20contents).%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20contents);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%89%93%E5%8D%B0%E8%BE%93%E5%87%BA%EF%BC%9A%E2%80%9Ce%C3%A8%E2%82%AC%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%BA%8C%E8%A1%8C%E8%B0%83%E7%94%A8%E4%BA%86%3Ccode%3Eopen%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E6%89%93%E5%BC%80%E5%BD%93%E5%89%8D%E7%9B%AE%E5%BD%95%E4%B8%8B%E7%9A%84&amp;quot;data.txt&amp;quot;%E6%96%87%E4%BB%B6%E3%80%82%E5%A6%82%E6%9E%9C%E6%96%87%E4%BB%B6%E4%B8%8D%E5%AD%98%E5%9C%A8%E6%88%96%E4%B8%8D%E5%8F%AF%E8%AE%BF%E9%97%AE%E5%88%99fail%E3%80%82%E5%A6%82%E6%9E%9C%E6%88%90%E5%8A%9F%EF%BC%8C%E5%88%99%E6%8C%87%E6%B4%BE%E7%BB%99%E4%B8%80%E4%B8%AA%3Ccode%3Efile%3C/code%3E%E5%8F%98%E9%87%8F%E5%A4%84%E7%90%86%E8%AF%A5%E5%87%BD%E6%95%B0%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC4%E8%A1%8C%E8%B0%83%E7%94%A8%3Ccode%3Eread_to_string%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E5%B0%86%E6%96%87%E4%BB%B6%E5%86%85%E5%AE%B9%E8%AF%BB%E5%8F%96%E5%88%B0%E4%B8%80%E4%B8%AA%E5%8F%98%E9%87%8F%EF%BC%8C%E7%94%B1%E4%B8%80%E4%B8%AA%E5%8F%AF%E5%8F%98%E5%AF%B9%E8%B1%A1%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92%E3%80%82%3C/p%3E%3Cp%3E%E6%9C%80%E5%90%8E%E4%B8%80%E8%A1%8C%E5%B0%86%E6%96%87%E6%9C%AC%E5%86%85%E5%AE%B9%E6%89%93%E5%8D%B0%E8%BE%93%E5%87%BA%E3%80%82%3C/p%3E%3Cp%3E%E5%AF%B9%E4%BA%8E%E6%96%87%E4%BB%B6%E6%8B%B7%E8%B4%9D%EF%BC%8C%E4%BD%86%E6%98%AF%E5%A6%82%E6%9E%9C%E6%96%87%E4%BB%B6%E5%A4%AA%E5%A4%A7%EF%BC%8C%E6%98%AF%E4%B8%8D%E5%8F%AF%E8%83%BD%E5%B0%86%E6%89%80%E6%9C%89%E4%B8%9C%E8%A5%BF%E9%83%BD%E5%A1%9E%E5%88%B0%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%82%E5%AE%83%E8%A6%81%E6%B1%82%E8%AF%BB%E5%86%99%E5%88%86%E6%AE%B5%E5%A4%84%E7%90%86%E3%80%82%E4%BD%86%E5%88%86%E6%AE%B5%E5%A4%84%E7%90%86%E5%B9%B6%E4%B8%8D%E9%AB%98%E6%95%88%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E6%98%AF%E4%B8%80%E4%B8%AA%E6%8B%B7%E8%B4%9D%E6%96%87%E4%BB%B6%E7%9A%84%E9%AB%98%E6%95%88%E5%AE%9E%E7%8E%B0%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Euse%3C/span%3E%20std::io::Read;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Euse%3C/span%3E%20std::io::Write;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ecommand_line%3C/span%3E:%20std::env::Args%20=%20std::env::%3Cspan%20class=%22title%20function_%20invoke__%22%3Eargs%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ecommand_line.%3Cspan%20class=%22title%20function_%20invoke__%22%3Enext%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Esource%3C/span%3E%20=%20command_line.%3Cspan%20class=%22title%20function_%20invoke__%22%3Enext%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Edestination%3C/span%3E%20=%20command_line.%3Cspan%20class=%22title%20function_%20invoke__%22%3Enext%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Efile_in%3C/span%3E%20=%20std::fs::File::%3Cspan%20class=%22title%20function_%20invoke__%22%3Eopen%3C/span%3E(source).%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Efile_out%3C/span%3E%20=%20std::fs::File::%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecreate%3C/span%3E(destination).%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ebuffer%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E0u8%3C/span%3E;%20%3Cspan%20class=%22number%22%3E4096%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eloop%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Enbytes%3C/span%3E%20=%20file_in.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eread%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20buffer).%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Efile_out.%3Cspan%20class=%22title%20function_%20invoke__%22%3Ewrite%3C/span%3E(&amp;amp;buffer[..nbytes]).%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20nbytes%20&amp;lt;%20buffer.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E()%20&amp;#123;%20%3Cspan%20class=%22keyword%22%3Ebreak%3C/span%3E;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%AF%A5%E6%AE%B5%E7%A8%8B%E5%BA%8F%E5%90%AF%E5%8A%A8%E6%97%B6%E5%BF%85%E9%A1%BB%E4%BC%A0%E5%85%A5%E4%B8%A4%E4%B8%AA%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0%E3%80%82%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8F%82%E6%95%B0%E6%98%AF%E6%BA%90%E6%96%87%E4%BB%B6%EF%BC%8C%E7%AC%AC%E4%BA%8C%E4%B8%AA%E5%8F%82%E6%95%B0%E6%98%AF%E7%9B%AE%E6%A0%87%E6%96%87%E4%BB%B6%E3%80%82%3C/p%3E%3Cp%3E%E4%BB%8E%E7%AC%AC3%E5%88%B0%E7%AC%AC6%E8%A1%8C%EF%BC%8C%E5%B0%86%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0%E6%8C%87%E6%B4%BE%E7%BB%99%3Ccode%3Esource%3C/code%3E%E5%8F%98%E9%87%8F%EF%BC%8C%E7%AC%AC%E4%BA%8C%E4%B8%AA%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0%E6%8C%87%E6%B4%BE%E7%BB%99%3Ccode%3Edestination%3C/code%3E%E5%8F%98%E9%87%8F%E3%80%82%3C/p%3E%3Cp%3E%E5%90%8E%E9%9D%A2%E4%B8%A4%E8%A1%8C%EF%BC%8C%E5%B0%86%E6%BA%90%E6%96%87%E4%BB%B6%E6%89%93%E5%BC%80%EF%BC%8C%E6%8C%87%E6%B4%BE%E7%BB%99%E5%8F%98%E9%87%8F%3Ccode%3Efile_in%3C/code%3E%EF%BC%8C%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6%E6%8C%87%E6%B4%BE%E7%BB%99%E5%8F%98%E9%87%8F%3Ccode%3Efile_out%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E7%84%B6%E5%90%8E%E5%B0%86%E4%B8%80%E4%B8%AA4096%E5%AD%97%E8%8A%82%E7%BC%93%E5%AD%98%E6%8C%87%E6%B4%BE%E5%88%B0%E6%A0%88%E3%80%82%3C/p%3E%3Cp%3E%E6%9C%80%E5%90%8E%EF%BC%8C%E7%94%A8%E4%B8%80%E4%B8%AA%E5%BE%AA%E7%8E%AF%EF%BC%8C%E9%87%8D%E5%A4%8D%E5%9C%B0%E5%B0%86%E4%B8%80%E4%B8%AA4096byte%E7%9A%84chunk%EF%BC%8C%E4%BB%8E%E6%BA%90%E6%96%87%E4%BB%B6%EF%BC%8C%E5%86%99%E5%85%A5%E5%88%B0%E7%9B%AE%E6%A0%87%E6%96%87%E4%BB%B6%E3%80%82%E7%BC%93%E5%86%B2%E5%8C%BA%E7%94%B1%E5%A4%9A%E5%B0%91%E5%AD%97%E8%8A%82%EF%BC%8C%E5%B0%B1%E8%87%AA%E5%8A%A8%E8%AF%BB%E5%8F%96%E5%A4%9A%E5%B0%91%E5%AD%97%E8%8A%82%E3%80%82%E5%A6%82%E6%9E%9C%E5%89%A9%E4%BD%99%E6%96%87%E4%BB%B6%E7%89%87%E6%AE%B5%E4%B8%8D%E5%A4%9F%E9%95%BF%EF%BC%8C%E8%AF%BB%E5%8F%96%E5%B0%91%E4%BA%8E4096%E7%9A%84%E5%AD%97%E8%8A%82%EF%BC%8C%E6%88%96%E8%80%850%E4%B8%AA%E5%AD%97%E8%8A%82%E3%80%82%3C/p%3E%3Cp%3E%E8%AF%BB%E5%8F%96%E7%9A%84%E5%AD%97%E8%8A%82%E8%A2%AB%E5%A1%9E%E5%88%B0%E4%BA%86%3Ccode%3Enbytes%3C/code%3E%E5%8F%98%E9%87%8F%E3%80%82%3C/p%3E%3Cp%3E%E5%AF%B9%E4%BA%8E%E8%B6%85%E8%BF%874096%E5%AD%97%E8%8A%82%E7%9A%84%E5%A4%A7%E6%96%87%E4%BB%B6%EF%BC%8C%E9%A6%96%E6%AC%A1%E8%BF%AD%E4%BB%A3%E8%AF%BB%E5%8F%964096%E4%B8%AA%E5%AD%97%E8%8A%82%EF%BC%8C%E7%84%B6%E5%90%8E%E7%BB%A7%E7%BB%AD%E8%BF%AD%E4%BB%A3%E8%AF%BB%E5%8F%96%E3%80%82%E5%AF%B9%E4%BA%8E%E5%B0%8F%E4%BA%8E4096%E5%AD%97%E8%8A%82%E7%9A%84%E6%96%87%E4%BB%B6%EF%BC%8C%E8%BF%AD%E4%BB%A3%E4%B8%80%E6%AC%A1%E5%B0%B1%E5%8F%AF%E4%BB%A5%E4%BA%86%E3%80%82%3C/p%3E%3Cp%3E%E4%BB%BB%E4%BD%95%E6%83%85%E5%86%B5%E4%B8%8B%EF%BC%8C%E8%AF%BB%E5%8F%96%E7%9A%84%E5%AD%97%E8%8A%82%E6%95%B0%E9%87%8F%EF%BC%8C%E5%B0%B1%E6%98%AF%E5%86%99%E5%85%A5%E7%BC%93%E5%86%B2%E7%9A%84%E5%AD%97%E8%8A%82%E6%95%B0%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E7%BC%93%E5%86%B2%E5%8C%BA%E5%88%87%E7%89%87%E7%94%B1%E5%BC%80%E5%A7%8B%E4%BD%8D%E7%BD%AE%E5%88%B0%E8%AF%BB%E5%8F%96%E5%AD%97%E8%8A%82%E6%95%B0%E9%95%BF%E5%BA%A6%E3%80%82%3C/p%3E%3Cp%3E%E5%A6%82%E6%9E%9C%E8%AF%BB%E5%8F%96%E7%9A%84%E5%AD%97%E8%8A%82%E6%95%B0%E5%B0%8F%E4%BA%8E%E7%BC%93%E5%86%B2%E5%8C%BA%E9%95%BF%E5%BA%A6%EF%BC%8C%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9D%9F%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%B7%B2%E7%BB%8F%E8%BE%BE%E5%88%B0%E8%BE%93%E5%85%A5%E6%96%87%E4%BB%B6%E7%9A%84%E6%9C%AB%E5%B0%BE%E3%80%82%3C/p%3E%3Cp%3E%E6%B3%A8%E6%84%8F%EF%BC%8C%E8%BF%99%E9%87%8C%E4%B8%8D%E7%94%A8%E6%98%BE%E5%BC%8F%E5%85%B3%E9%97%AD%E6%96%87%E4%BB%B6%E3%80%82%E5%8F%AA%E8%A6%81%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E7%BB%93%E6%9D%9F%EF%BC%8C%E6%96%87%E4%BB%B6%E8%87%AA%E5%8A%A8%E5%85%B3%E9%97%AD%EF%BC%8C%E4%BB%A5%E5%8F%8A%E5%AD%98%E5%82%A8%E5%92%8C%E9%87%8A%E6%94%BE%E6%89%80%E6%9C%89%E5%86%85%E9%83%A8%E4%B8%B4%E6%97%B6%E7%BC%93%E5%86%B2%E5%8C%BA%E3%80%82%3C/p%3E%3Ch2%20id=%22Processing-Text-Files%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Processing-Text-Files%22%3E%C2%B6%3C/a%3EProcessing%20Text%20Files%3C/h2%3E%3Cp%3E%E5%AF%B9%E4%BA%8E%E6%96%87%E6%9C%AC%E6%96%87%E4%BB%B6%E7%9A%84%E5%A4%84%E7%90%86%EF%BC%8C%E4%BE%8B%E5%A6%82%E6%88%91%E4%BB%AC%E6%83%B3%E7%9F%A5%E9%81%93%E6%9C%89%E5%A4%9A%E5%B0%91%E8%A1%8C%EF%BC%8C%E6%9C%89%E5%A4%9A%E5%B0%91%E7%A9%BA%E7%99%BD%EF%BC%8C%E6%88%91%E4%BB%AC%E5%8F%AF%E4%BB%A5%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E19%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E20%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E21%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E22%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E23%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ecommand_line%3C/span%3E%20=%20std::env::%3Cspan%20class=%22title%20function_%20invoke__%22%3Eargs%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ecommand_line.%3Cspan%20class=%22title%20function_%20invoke__%22%3Enext%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Epathname%3C/span%3E%20=%20command_line.%3Cspan%20class=%22title%20function_%20invoke__%22%3Enext%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ecounts%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecount_lines%3C/span%3E(&amp;amp;pathname).%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;file:%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20pathname);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;n.%20of%20lines:%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20counts.%3Cspan%20class=%22number%22%3E0%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;n.%20of%20empty%20lines:%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20counts.%3Cspan%20class=%22number%22%3E1%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ecount_lines%3C/span%3E(pathname:%20&amp;amp;%3Cspan%20class=%22type%22%3Estr%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3EResult%3C/span%3E&amp;lt;(%3Cspan%20class=%22type%22%3Eu32%3C/span%3E,%20%3Cspan%20class=%22type%22%3Eu32%3C/span%3E),%20std::io::Error&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Euse%3C/span%3E%20std::io::BufRead;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ef%3C/span%3E%20=%20std::fs::File::%3Cspan%20class=%22title%20function_%20invoke__%22%3Eopen%3C/span%3E(pathname)?;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ef%3C/span%3E%20=%20std::io::BufReader::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E(f);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3En_lines%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E0%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3En_empty_lines%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E0%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eline%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20f.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elines%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20n_lines%20+=%20%3Cspan%20class=%22number%22%3E1%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20line?.%3Cspan%20class=%22title%20function_%20invoke__%22%3Etrim%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E()%20==%20%3Cspan%20class=%22number%22%3E0%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20n_empty_lines%20+=%20%3Cspan%20class=%22number%22%3E1%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22title%20function_%20invoke__%22%3EOk%3C/span%3E((n_lines,%20n_empty_lines))%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E9%87%8C%E7%94%A8%E5%88%B0%E4%BA%86%3Ccode%3EBufReader%3C/code%3E%E3%80%82%E5%AE%83%E4%BC%9A%E5%B0%86%E8%BE%93%E5%85%A5%E6%94%BE%E5%85%A5%E7%BC%93%E5%86%B2%E5%8C%BA%E3%80%82%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E2%80%9C%3Ccode%3EBufReader%3C/code%3E%E2%80%9D%E5%AF%B9%E8%B1%A1%E5%90%8E%EF%BC%8C%E4%B8%8D%E9%9C%80%E8%A6%81%E6%98%BE%E5%BC%8F%E4%BD%BF%E7%94%A8%3Ccode%3EFile%3C/code%3E%E5%AF%B9%E8%B1%A1%EF%BC%8C%E6%96%B0%E5%88%9B%E5%BB%BA%E7%9A%84%E5%AF%B9%E8%B1%A1%E8%A2%AB%E6%8C%87%E6%B4%BE%E7%BB%99%E5%8F%A6%E4%B8%80%E4%B8%AA%E5%8F%98%E9%87%8F%3Ccode%3Ef%3C/code%3E%EF%BC%8C%E5%AE%83%E4%BC%9A%E8%A6%86%E7%9B%96%E5%8E%9F%E6%9D%A5%E7%9A%84%E5%8F%98%E9%87%8F%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E4%B8%A4%E4%B8%AA%E8%AE%A1%E6%95%B0%E5%99%A8%3Ccode%3En_lines%3C/code%3E%E5%92%8C%3Ccode%3En_empty_lines%3C/code%3E%E8%A2%AB%E5%A3%B0%E6%98%8E%E4%BB%A5%E5%8F%8A%E5%88%9D%E5%A7%8B%E5%8C%96%E5%90%8E%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%9B%E5%85%A5%E5%BE%AA%E7%8E%AF%E4%BD%93%E5%AF%B9%E6%96%87%E4%BB%B6%E5%86%85%E5%AE%B9%E8%BF%9B%E8%A1%8C%E7%BB%9F%E8%AE%A1%E3%80%82%3Ccode%3EBufReader%3C/code%3E%E7%B1%BB%E5%9E%8B%E6%8F%90%E4%BE%9B%E4%BA%86%3Ccode%3Eline%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E5%AE%83%E6%98%AF%E4%B8%80%E4%B8%AA%E8%BF%AD%E4%BB%A3%E7%94%9F%E4%BA%A7%E8%80%85%EF%BC%8C%E8%BF%94%E5%9B%9E%E6%89%80%E5%9C%A8%E8%A1%8C%E7%9A%84%E4%B8%80%E4%B8%AA%E8%BF%AD%E4%BB%A3%E5%99%A8%E3%80%82%E6%B3%A8%E6%84%8FRust%E7%9A%84%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%98%AFlazy%E7%9A%84%EF%BC%9B%E6%89%80%E4%BB%A5%EF%BC%8C%E6%AF%8F%E6%AC%A1%E8%BF%AD%E4%BB%A3%EF%BC%8C%E5%BE%AA%E7%8E%AF%E4%BD%93%E5%B0%86%E4%B8%8B%E4%B8%80%E8%A1%8C%E5%A1%9E%E5%88%B0%3Ccode%3Eline%3C/code%3E%E5%8F%98%E9%87%8F%E3%80%82%3C/p%3E%3Cp%3E%E4%BB%A5%E5%8F%8A%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%98%AF%E5%8C%85%E5%90%AB%E5%89%AF%E4%BD%9C%E7%94%A8%E7%9A%84%EF%BC%8C%E6%89%80%E4%BB%A5%3Ccode%3Eline%3C/code%3E%E7%9A%84%E5%80%BC%E6%98%AF%E4%B8%80%E4%B8%AA%3Ccode%3EResult&amp;lt;String,%20std::io::Error&amp;gt;%3C/code%3E%E7%B1%BB%E5%9E%8B%E5%80%BC%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%B8%A6%E4%B8%8A%E9%97%AE%E5%8F%B7%E5%AE%8F%3Ccode%3E?%3C/code%3E%E8%8E%B7%E5%8F%96%E5%AE%83%E7%9A%84%E7%9C%9F%E6%98%AF%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%80%BC%EF%BC%8C%E6%88%96%E8%80%85%E6%98%AF%E8%BF%94%E5%9B%9E%E7%9A%84%E4%B8%80%E4%B8%AAI/O%E9%94%99%E8%AF%AF%E3%80%82%3C/p%3E%3Cp%3E%E5%BE%AA%E7%8E%AF%E4%BD%93%E5%86%85%EF%BC%8C%3Ccode%3En_lines%3C/code%3E%E7%BB%9F%E8%AE%A1%E8%A1%8C%E6%95%B0%EF%BC%8C%3Ccode%3En_empty_lines%3C/code%3E%E5%B0%86%E7%A9%BA%E7%99%BD%E5%92%8C0%E9%95%BF%E5%BA%A6%E8%A1%8C%E8%BF%9B%E8%A1%8C%E7%BB%9F%E8%AE%A1%EF%BC%8C%E5%AE%83%E8%B0%83%E7%94%A8%E4%BA%86%3Ccode%3Etrim%3C/code%3E%E5%87%BD%E6%95%B0%E3%80%82%3C/p%3E%3Cp%3E%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E8%AF%AD%E5%8F%A5%E8%BF%94%E5%9B%9E%E6%88%90%E5%8A%9F%E5%80%BC%EF%BC%9A%3Ccode%3EOk%3C/code%3E%E3%80%82%E5%AE%83%E5%8C%85%E5%90%AB%E4%B8%A4%E4%B8%AA%E8%AE%A1%E6%95%B0%E5%99%A8%E3%80%82%3C/p%3E" type="image"/>
    
    
    <category term="learning" scheme="https://galudisu.info/categories/learning/"/>
    
    
    <category term="rust" scheme="https://galudisu.info/tags/rust/"/>
    
  </entry>
  
  <entry>
    <title>rust基础入门[16] - Using Iterators</title>
    <link href="https://galudisu.info/2023/01/16/rust/beginning/chapter16_Using%20Iterators/"/>
    <id>https://galudisu.info/2023/01/16/rust/beginning/chapter16_Using%20Iterators/</id>
    <published>2023-01-16T07:50:46.000Z</published>
    <updated>2025-04-27T11:59:08.282Z</updated>
    
    <content type="html"><![CDATA[<p>本章覆盖有：</p><ul><li>字符串如何存储字符，为什么不能直接访问</li><li>如何用iterators读取字符串字符或字符串字节</li><li>如何使用可变iterators修改slices，arrays，vectors</li><li>如何使用适配器：<code>filter</code>，<code>map</code>和<code>enumerate</code></li><li>如何使用消费者：<code>any</code>，<code>all</code>，<code>count</code>，<code>sum</code>，<code>min</code>，<code>max</code>和<code>collect</code></li><li>惰性处理的概念</li></ul><span id="more"></span><h2 id="String-Characters"><a class="header-anchor" href="#String-Characters">¶</a>String Characters</h2><p>前面介绍了Rust有静态字符串和动态字符串，它们的编码都是UTF-8。这种编码使用1到6个字节序列表示每个Unicode字符，因此一个字符串不是简单的字符数组，而是表示字符序列的字节的数组。</p><p>既然是一个字符串，那么表达式<code>s[0]</code>表示的是什么？它是第一个字符(character)，还是第一个字节(byte)？</p><p>都不是，Rust中不允许这种字符串表达式。要获取第一个字节，必须将字符串转换为一个字节切片(a slice of bytes)。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">s</span> = <span class="string">&quot;abc012è€&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">0</span>..s.<span class="title function_ invoke__">len</span>() &#123;</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;&#125;: &#123;&#125;&quot;</span>, i, s.<span class="title function_ invoke__">as_bytes</span>()[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果将打印：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">0: 97</span><br><span class="line">1: 98</span><br><span class="line">2: 99</span><br><span class="line">3: 48</span><br><span class="line">4: 49</span><br><span class="line">5: 50</span><br><span class="line">6: 195</span><br><span class="line">7: 168</span><br><span class="line">8: 226</span><br><span class="line">9: 130</span><br><span class="line">10: 172</span><br></pre></td></tr></table></figure><p>再次重温，这里的变量<code>s</code>的类型是<code>&amp;str</code>的，表示静态字符串。它是Rust中的一种特殊引用，由<code>指针: 长度</code>键值对组成，指向字符串缓冲区。</p><p>函数<code>as_bytes</code>将字符串转换为一个不可变的<code>u8</code>切片。这种转换在运行期0消耗，因为字符缓冲区里面的东西不是别的，就是字节序列(sequence of bytes)的。</p><p>UTF-8可以表述任何ASCII字符，上述代码中字符<code>a</code>，<code>b</code>，<code>c</code>，<code>0</code>，<code>1</code>，<code>2</code>，打印的值就是ASCII码。</p><p>字符<code>è</code>由一对字节表示，包含值195和168。字符<code>€</code>由三个字节表示，包含值226，130和172。</p><h2 id="Scanning-a-String"><a class="header-anchor" href="#Scanning-a-String">¶</a>Scanning a String</h2><p>要对字符串进行处理，需要对其进行扫描。</p><p>类似于字符串“€èe”，我们想要打印第三个字符。首先，我们需要扫描第一个字符的三个字节，因为字符“€”由三个字节序列表示；接着扫描第二个字符“è”，它由两字节序列表示；接着扫描第三个字节，字符“e”仅由一个字节序列表示。</p><p>在计算机科学里，有“迭代”(有时叫“游标”)的概念，它解压处理一个序列的当前位置，并在当前位置向前递进。这种操作可以用于字符串的扫描。因此，我们需要一个 <strong>字符串迭代器(string iterator)</strong>。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">print_nth_char</span>(s: &amp;<span class="type">str</span>, <span class="keyword">mut</span> n: <span class="type">u32</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">iter</span>: std::<span class="type">str</span>::Chars = s.<span class="title function_ invoke__">chars</span>();</span><br><span class="line">    <span class="keyword">loop</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> <span class="variable">item</span>: <span class="type">Option</span>&lt;<span class="type">char</span>&gt; = iter.<span class="title function_ invoke__">next</span>();</span><br><span class="line">        <span class="keyword">match</span> item &#123;</span><br><span class="line">            <span class="title function_ invoke__">Some</span>(c) =&gt; <span class="keyword">if</span> n == <span class="number">1</span> &#123; <span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, c); &#125;,</span><br><span class="line">            <span class="literal">None</span> =&gt; &#123; <span class="keyword">break</span>; &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">        n -= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">print_nth_char</span>(<span class="string">&quot;€èe&quot;</span>, <span class="number">3</span>);</span><br></pre></td></tr></table></figure><p>该函数的作用是，给定一个字符串<code>s</code>，数字<code>n</code>，如果有对应位置，则打印<code>s</code>中位置<code>n</code>的字符，否则不作任何处理。</p><p>Rust标准库中提供了字符串迭代类型“Chars”。给定一个字符串“s”，通过<code>s.chars()</code>获得字符串迭代器。</p><p>任何迭代器有<code>next</code>函数，该函数范围基础序列当前位置的下一个条目，并向前推进。然而，大部分序列有终点。所以，迭代器返回的下一个值，需要存在有这个位置。考虑到这个原因，Rust迭代器的<code>next</code>返回的是一个<code>Option&lt;T&gt;</code>类型，没有则是<code>None</code>。</p><p>使用<code>match</code>语句，用<code>Some</code>触发处理下一个字符，<code>None</code>来退出无尽的循环。</p><p>给定一个字符串，打印它的字符编码：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">print_codes</span>(s: &amp;<span class="type">str</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">iter</span> = s.<span class="title function_ invoke__">chars</span>();</span><br><span class="line"><span class="keyword">loop</span> &#123;</span><br><span class="line"><span class="keyword">match</span> iter.<span class="title function_ invoke__">next</span>() &#123;</span><br><span class="line"><span class="title function_ invoke__">Some</span>(c) =&gt; &#123; <span class="built_in">println!</span>(<span class="string">&quot;&#123;&#125;: &#123;&#125;&quot;</span>, c, c <span class="keyword">as</span> <span class="type">u32</span>); &#125;,</span><br><span class="line"><span class="literal">None</span> =&gt; &#123; <span class="keyword">break</span>; &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">print_codes</span>(<span class="string">&quot;€èe&quot;</span>);</span><br></pre></td></tr></table></figure><p>结果输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">€: 8364</span><br><span class="line">è: 232</span><br><span class="line">e: 101</span><br></pre></td></tr></table></figure><h2 id="Using-Iterators-in-for-Loops"><a class="header-anchor" href="#Using-Iterators-in-for-Loops">¶</a>Using Iterators in <code>for</code> Loops</h2><p>上面的写法有点累赘，因此，应该在语句上进行彻底的简化：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">print_codes</span>(s: &amp;<span class="type">str</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> <span class="variable">c</span> <span class="keyword">in</span> s.<span class="title function_ invoke__">chars</span>() &#123;</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;&#125;: &#123;&#125;&quot;</span>, c, c <span class="keyword">as</span> <span class="type">u32</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">print_codes</span>(<span class="string">&quot;€èe&quot;</span>);</span><br></pre></td></tr></table></figure><p><code>for</code>循环后面跟着的<code>in</code>关键后的表达式可以是一个迭代器。</p><p>那么迭代器究竟是什么？它不是一个类型，而是一个类型规范。迭代器可以认为是包含<code>next</code>方法，返回<code>Option&lt;T&gt;</code>值的任何表达式。</p><p>之前，我们在for循环中用过<code>range</code>。这样，所有有上限值得range都是迭代器了，因为它们有<code>next</code>函数。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// std::ops::Range&lt;u32&gt; 是一个迭代器</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">_v1</span> = (<span class="number">0u32</span>..<span class="number">10</span>).<span class="title function_ invoke__">next</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// std::ops::RangeFrom&lt;u32&gt; 是一个迭代器</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">_v2</span> = (<span class="number">5u32</span>..).<span class="title function_ invoke__">next</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不合法的：std::ops::RangeTo&lt;u32&gt; 不是一个迭代器</span></span><br><span class="line"><span class="comment">// let _v3 = (..8u32).next();</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 不合法的：std::ops::RangeFull 不是一个迭代器</span></span><br><span class="line"><span class="comment">// let _v4 = (..).next();</span></span><br></pre></td></tr></table></figure><p>除了字符之外，也可以对字符串的对应的字节进行迭代：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="variable">byte</span> <span class="keyword">in</span> <span class="string">&quot;€èe&quot;</span>.<span class="title function_ invoke__">bytes</span>() &#123;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, byte);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果打印为：“<code>226 130 172 195 168 101</code>”。前面三个数表示的是<code>€</code>字符；紧接着的两个表示的是<code>è</code>字符；最后一个数表示的是<code>e</code>对应ASCII码。</p><p>该段程序可以拆分为：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">string</span>: &amp;<span class="type">str</span> = <span class="string">&quot;€èe&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">string_it</span>: std::<span class="type">str</span>::Bytes = string.<span class="title function_ invoke__">bytes</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="variable">byte</span> <span class="keyword">in</span> string_it &#123;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, byte);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中，前一个<code>chars</code>函数的返回值类型是<code>std::str::Chars</code>，这个的<code>bytes</code>函数，返回的值类型是<code>std::str::Bytes</code>。</p><p><code>Chars</code>和<code>Bytes</code>都是字符串的迭代类型，以及<code>Chars</code>的<code>next</code>函数返回的是字符串的下一个字符，而对于<code>Bytes</code>的<code>next</code>函数返回的是字符串的下一个字节。</p><p>这类函数和<code>as_bytes</code>函数不同，它们返回的是字符串对应其字节上的引用切片。</p><p>典型地，对于slice、array或vector也一样。字符串、slice、arrays、vectors都不是迭代器。但，就如字符串包含一个迭代器<code>chars</code>函数一样，slice、array、vector同样包含一个迭代函数<code>iter</code>。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="variable">item_ref</span> <span class="keyword">in</span> (&amp;[<span class="number">11u8</span>, <span class="number">22</span>, <span class="number">33</span>]).<span class="title function_ invoke__">iter</span>() &#123;</span><br><span class="line"><span class="comment">// *item_ref += 1;</span></span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, *item_ref);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> <span class="variable">item_ref</span> <span class="keyword">in</span> [<span class="number">44</span>, <span class="number">55</span>, <span class="number">66</span>].<span class="title function_ invoke__">iter</span>() &#123;</span><br><span class="line"><span class="comment">// *item_ref += 1;</span></span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, *item_ref);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> <span class="variable">item_ref</span> <span class="keyword">in</span> <span class="built_in">vec!</span>[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>].<span class="title function_ invoke__">iter</span>() &#123;</span><br><span class="line"><span class="comment">// *item_ref = if *item_ref == &#x27;b&#x27; &#123; &#x27;B&#x27; &#125; else &#123; &#x27;-&#x27; &#125;;</span></span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, *item_ref);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果将打印出：“11 22 33 44 55 66 a b c”。</p><p>该程序可以改为，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">slice</span>: &amp;[<span class="type">u8</span>] = &amp;[<span class="number">11u8</span>, <span class="number">22</span>, <span class="number">33</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="variable">slice_it</span>: std::slice::Iter&lt;<span class="type">u8</span>&gt; = slice.<span class="title function_ invoke__">iter</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="variable">item_ref</span> <span class="keyword">in</span> slice_it &#123;</span><br><span class="line"><span class="comment">// *item_ref += 1;</span></span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, *item_ref);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">arr</span>: [<span class="type">i32</span>; <span class="number">3</span>] = [<span class="number">44</span>, <span class="number">55</span>, <span class="number">66</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="variable">arr_it</span>: std::slice::Iter&lt;<span class="type">i32</span>&gt; = arr.<span class="title function_ invoke__">iter</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="variable">item_ref</span> <span class="keyword">in</span> arr_it &#123;</span><br><span class="line"><span class="comment">// *item_ref += 1;</span></span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, *item_ref);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">vec</span>: <span class="type">Vec</span>&lt;<span class="type">char</span>&gt; = <span class="built_in">vec!</span>[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="variable">vec_it</span>: std::slice::Iter&lt;<span class="type">char</span>&gt; = vec.<span class="title function_ invoke__">iter</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="variable">item_ref</span> <span class="keyword">in</span> vec_it &#123;</span><br><span class="line"><span class="comment">// *item_ref = if *item_ref == &#x27;b&#x27; &#123; &#x27;B&#x27; &#125; else &#123; &#x27;-&#x27; &#125;;</span></span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, *item_ref);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>iter</code>函数，作用于类型<code>T</code>的切片的每个元素，或作用于类型<code>T</code>的数组的每个元素，或作用于类型<code>T</code>的向量的每个元素。返回值类型为<code>std::slice::Iter&lt;T&gt;</code>。正如其名，它的返回值类型是一个迭代器类型，因此它可以用于<code>for</code>循环中。</p><p>当在类型为<code>T</code>的范围上迭代时，loop变量的类型是<code>T</code>；当在字符迭代器上迭代时，loop内变量的类型是<code>char</code>；相反，当在类型为<code>T</code>的序列上迭代时，它的循环变量是<code>&amp;T</code>类型，即它的引用。</p><p>因此，要访问一个序列的上迭代的变量，需要使用反引用符号(<code>*</code>)。</p><p>上面代码有三处注释掉的语句，因为是不合法的。事实上，循环体内的变量是不可变的。这种不可变性，是基于<code>slice</code>、<code>arr</code>和<code>vec</code>的不可变声明的变量定义。</p><p>前面看到，<code>byte</code>类型的字符串迭代器的创建是使用了<code>bytes</code>函数，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="variable">byte</span> <span class="keyword">in</span> <span class="string">&quot;€èe&quot;</span>.<span class="title function_ invoke__">bytes</span>() &#123;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, byte);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有另外一种对字符串的字节迭代的方法，首先是创建字符串字节的切片引用，即使用<code>as_bytes</code>函数，然后再对其切片引用迭代，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="variable">byte</span> <span class="keyword">in</span> <span class="string">&quot;€èe&quot;</span>.<span class="title function_ invoke__">as_bytes</span>().<span class="title function_ invoke__">iter</span>() &#123;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, byte);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Iterations-Without-Mutation"><a class="header-anchor" href="#Iterations-Without-Mutation">¶</a>Iterations Without Mutation</h2><p>迭代器的典型用法通常仅用来读取序列。</p><p>当要对字符串上的字符进行迭代时，尝试改变它是荒诞的，因为这些字符是由确切存在的不同字节数表示。假设，字符<code>è</code>由两个字节表示，那么<code>e</code>必须由一个字节表示。这在Rust标准库，没法通过字符迭代器改变一个字符的做法(比如<code>e</code>)，来改变另一个字符(比如<code>è</code>)。</p><p>当对字符串的字节进行迭代时，要对其进行变更是不安全的，因为新创建的字节可能不是一个有效的UTF-8字符。因此，Rust标准库中也没有办法，通过迭代更改字节的方式，来更改字符串。</p><p>当通过<code>chars()</code>迭代器函数对字符串的Range进行迭代时，循环体内的变量值，会使用Range类型的最先初始化时候的值，尽管在循环体内发生了更改，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">r</span> = <span class="string">&quot;abc&quot;</span>.<span class="title function_ invoke__">chars</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> r &#123;</span><br><span class="line">r = <span class="string">&quot;XY&quot;</span>.<span class="title function_ invoke__">chars</span>();</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;; &quot;</span>, i, r.<span class="title function_ invoke__">next</span>().<span class="title function_ invoke__">unwrap</span>());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将会打印输出：“a x; b X; c X;”。虽然<code>r</code>的的值在循环内部进行了resign，但循环体仍然使用的时初始化时候的值。</p><p>在任何迭代中循环变量被初始化，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">r</span> = <span class="number">0</span>..<span class="number">5</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="title class_">mut</span> i <span class="keyword">in</span> r &#123;</span><br><span class="line">i += <span class="number">10</span>;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里会打印：“10 11 12 13 14”，因为<code>i</code>在循环体内使用了<code>mut</code>从句定义，但<code>i</code>在下一次迭代仍然会被重新初始化，<code>r</code>的值依然不变。</p><p>因此，对于字符串和Range来说，不能通过迭代器的方式来更改它内部序列的条目。</p><h2 id="Iterations-with-Mutation"><a class="header-anchor" href="#Iterations-with-Mutation">¶</a>Iterations with Mutation</h2><p>但有时候，确实会有这样的需求，要求更改序列的内部条目。前面我看到迭代器不能处理这样的需求，即使是一个可变的迭代器也不能。</p><p>实际上，一个可变迭代器，可以或可能通过另一个序列的迭代进行创建，而不是用来改变这个序列。</p><p>一个可变迭代器的可能用法是，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">slice1</span> = &amp;[<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="variable">slice2</span> = &amp;[<span class="number">7</span>, <span class="number">8</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">iterator</span> = slice1.<span class="title function_ invoke__">iter</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="variable">item_ref</span> <span class="keyword">in</span> iterator &#123;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;[&#123;&#125;] &quot;</span>, *item_ref);</span><br><span class="line">&#125;</span><br><span class="line">iterator = slice2.<span class="title function_ invoke__">iter</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="variable">item_ref</span> <span class="keyword">in</span> iterator &#123;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;(&#123;&#125;) &quot;</span>, *item_ref);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>变量<code>iterator</code>首先引用参考了序列<code>slice1</code>，然后是<code>slice2</code>。</p><p>一个迭代器类似于一个引用，这里一个可变引用(mutable reference)不等同于一个可变对象(a reference to a mutable object)的引用这个概念。</p><p>但如果你想通过一个迭代器来变更这样一个序列，你不能使用常规的迭代器(可变的mutable或不可变的immutable)，即使是，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">slice</span> = &amp;<span class="keyword">mut</span> [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">iterator</span> = slice.<span class="title function_ invoke__">iter</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="title class_">mut</span> item_ref <span class="keyword">in</span> iterator &#123;</span><br><span class="line">*item_ref += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, slice);</span><br></pre></td></tr></table></figure><p>尽管这段程序有好几处用到了<code>mut</code>从句，它在循环语句内产生了一个编译错误，因为<code>*item_ref</code>仍然是不可变的。</p><p>所以，你需要另外一种迭代器类型，可变迭代器(<strong><code>mutating iterator</code></strong> )，它必须由一个可变序列进行初始化，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">slice</span> = &amp;<span class="keyword">mut</span> [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">iterator</span> = slice.<span class="title function_ invoke__">iter_mut</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="variable">item_ref</span> <span class="keyword">in</span> iterator &#123;</span><br><span class="line">*item_ref += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, slice);</span><br></pre></td></tr></table></figure><p>结果将打印：“<code>[4, 5, 6]</code>”。</p><p>除了删掉一些不必要的<code>mut</code>从句，与上一段代码侧重于相比，此处将<code>iter</code>调用替换为了<code>iter_mut</code>。顾名思义，函数表述为，“get an iterator to read it”，“get an iterator to mutate it”。</p><p>你还可以显式指定迭代器的类型，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">slice</span> = &amp;<span class="keyword">mut</span> [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">iterator</span>: std::slice::IterMut&lt;<span class="type">i32</span>&gt; = slice.<span class="title function_ invoke__">iter_mut</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="variable">item_ref</span> <span class="keyword">in</span> iterator &#123;</span><br><span class="line">*item_ref += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, slice);</span><br></pre></td></tr></table></figure><p>其中，<code>iter</code>返回一个<code>Iter&lt;T&gt;</code>的值类型，<code>iter_mut</code>返回一个<code>IterMut&lt;T&gt;</code>的值类型。</p><p>回到上个小节关于变更slice、array、vector元素的值的问题，下面是其同样的实现，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="variable">item_ref</span> <span class="keyword">in</span> (&amp;<span class="keyword">mut</span> [<span class="number">11u8</span>, <span class="number">22</span>, <span class="number">33</span>]).<span class="title function_ invoke__">iter_mut</span>() &#123;</span><br><span class="line">*item_ref += <span class="number">1</span>;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, *item_ref);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> <span class="variable">item_ref</span> <span class="keyword">in</span> [<span class="number">44</span>, <span class="number">55</span>, <span class="number">66</span>].<span class="title function_ invoke__">iter_mut</span>() &#123;</span><br><span class="line">*item_ref += <span class="number">1</span>;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, *item_ref);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> <span class="variable">item_ref</span> <span class="keyword">in</span> <span class="built_in">vec!</span>[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>].<span class="title function_ invoke__">iter_mut</span>() &#123;</span><br><span class="line">*item_ref = <span class="keyword">if</span> *item_ref == <span class="string">&#x27;b&#x27;</span> &#123; <span class="string">&#x27;B&#x27;</span> &#125; <span class="keyword">else</span> &#123; <span class="string">&#x27;-&#x27;</span> &#125;;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, *item_ref);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将会打印：“12 13 34 45 56 67 - B -”。</p><p>该段程序可以拆分为下面的代码，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">slice</span>: &amp;<span class="keyword">mut</span> [<span class="type">u8</span>] = &amp;<span class="keyword">mut</span> [<span class="number">11u8</span>, <span class="number">22</span>, <span class="number">33</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="variable">slice_it</span>: std::slice::IterMut&lt;<span class="type">u8</span>&gt; = slice.<span class="title function_ invoke__">iter_mut</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="variable">item_ref</span> <span class="keyword">in</span> slice_it &#123;</span><br><span class="line">*item_ref += <span class="number">1</span>;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, *item_ref);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">arr</span>: [<span class="type">i32</span>; <span class="number">3</span>] = [<span class="number">44</span>, <span class="number">55</span>, <span class="number">66</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="variable">arr_it</span>: std::slice::IterMut&lt;<span class="type">i32</span>&gt; = arr.<span class="title function_ invoke__">iter_mut</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="variable">item_ref</span> <span class="keyword">in</span> arr_it &#123;</span><br><span class="line">*item_ref += <span class="number">1</span>;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, *item_ref);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">vec</span>: <span class="type">Vec</span>&lt;<span class="type">char</span>&gt; = <span class="built_in">vec!</span>[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="variable">vec_it</span>: std::slice::IterMut&lt;<span class="type">char</span>&gt; = vec.<span class="title function_ invoke__">iter_mut</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="variable">item_ref</span> <span class="keyword">in</span> vec_it &#123;</span><br><span class="line">*item_ref = <span class="keyword">if</span> *item_ref == <span class="string">&#x27;b&#x27;</span> &#123; <span class="string">&#x27;B&#x27;</span> &#125; <span class="keyword">else</span> &#123; <span class="string">&#x27;-&#x27;</span> &#125;;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, *item_ref);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里仅是将原来注释部分还原，其中，</p><ul><li><code>slice</code>变量是一个 <strong>mutable</strong> 字节slice reference</li><li><code>arr</code>和<code>vec</code>变量是 <strong>mutable</strong></li><li>三处的<code>iter</code>函数调用，替换为了<code>iter_mut</code></li><li><code>iter_mut</code>返回一个<code>IterMut</code>泛型值类型</li><li>循环中由变量<code>item_ref</code>引用的元素发生了变更</li></ul><p>下面引用一段程序来证明原生数据的变更已经生效，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">slice</span> = &amp;<span class="keyword">mut</span> [<span class="number">11u8</span>, <span class="number">22</span>, <span class="number">33</span>];</span><br><span class="line"><span class="keyword">for</span> <span class="variable">item_ref</span> <span class="keyword">in</span> slice.<span class="title function_ invoke__">iter_mut</span>() &#123;</span><br><span class="line">*item_ref += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, slice);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">arr</span> = [<span class="number">44</span>, <span class="number">55</span>, <span class="number">66</span>];</span><br><span class="line"><span class="keyword">for</span> <span class="variable">item_ref</span> <span class="keyword">in</span> arr.<span class="title function_ invoke__">item_mut</span>() &#123;</span><br><span class="line">*item_ref += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, arr);</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">vec</span> = <span class="built_in">vec!</span>[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"><span class="keyword">for</span> <span class="variable">item_ref</span> <span class="keyword">in</span> vec.<span class="title function_ invoke__">iter_mut</span>() &#123;</span><br><span class="line">*item_ref = <span class="keyword">if</span> *item_ref == <span class="string">&#x27;b&#x27;</span> &#123; <span class="string">&#x27;B&#x27;</span> &#125; <span class="keyword">else</span> &#123; <span class="string">&#x27;-&#x27;</span> &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125; &quot;</span>, vec);</span><br></pre></td></tr></table></figure><p>将会打印：“<code>[12, 23, 34] [45, 56, 67] ['-', 'B', '-']</code>”。</p><p>截止目前为止，接触了四个迭代类型的函数：<code>chars</code>、<code>bytes</code>、<code>iter</code>、<code>iter_mut</code>。这种不获取迭代器，而是返回迭代器的函数，称为“迭代器生成器( <strong>iterator generators</strong> )”。</p><h2 id="An-Iterator-Adapter-filter"><a class="header-anchor" href="#An-Iterator-Adapter-filter">¶</a>An Iterator Adapter: filter</h2><p>让我们看看迭代器的一些其它用法。</p><p>例如，给一个数字数组，如何将所有的负数打印？</p><p>一个可能的方法是：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">arr</span> = [<span class="number">66</span>, -<span class="number">8</span>, <span class="number">43</span>, <span class="number">19</span>, <span class="number">0</span>, -<span class="number">31</span>];</span><br><span class="line"><span class="keyword">for</span> <span class="variable">n</span> <span class="keyword">in</span> arr.<span class="title function_ invoke__">iter</span>() &#123;</span><br><span class="line"><span class="keyword">if</span> *n &lt; <span class="number">0</span> &#123; <span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, n); &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果输出：“-8 -31”。</p><p>但另一种可能的方式是，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">arr</span> = [<span class="number">66</span>, -<span class="number">8</span>, <span class="number">43</span>, <span class="number">19</span>, <span class="number">0</span>, -<span class="number">31</span>];</span><br><span class="line"><span class="keyword">for</span> <span class="variable">n</span> <span class="keyword">in</span> arr.<span class="title function_ invoke__">iter</span>().<span class="title function_ invoke__">filter</span>(|x| **x &lt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>filter</code>函数定义在Rust的标准库中。它作用于一个迭代器，并接收一个闭包作为参数。正如其名，它用于“过滤”被迭代的序列，并丢弃不满足闭包定义条件的元素，剩下满足条件的元素。</p><p>闭包在每次迭代的元素时调用，例如，这里每次迭代的元素为<code>x</code>，</p><p><code>filter</code>要求闭包参数的返回值类型必须是Boolean。</p><p>实际上，<code>filter</code>函数返回一个迭代器(<code>next</code>函数被调用时)，它由闭包返回<code>ture</code>的情况下产生，</p><p>我们注意到，我们仅关心是否为负数，即闭包内为<code>x &lt; 0</code>即可，但为什么这里会有两个星号( * )？</p><p>首先，一个星号是明确的。因为我们已经说过，<code>iter</code>函数会产生序列元素的引用，而不是元素自身。</p><p>另外，<code>filter</code>函数中，它接收迭代器中的一个元素，并将该元素的引用传递给闭包，所以需要另一个星号( * )。因此<code>x</code>变成了引用的引用，要添加两个星号才能获取其表示的值。</p><p>我们说过<code>filter</code>函数返回另外一个迭代器。所以我们可以在<code>for</code>循环中使用，并做迭代实现。</p><p>这样一来，<code>filter</code>通过一个迭代器，返回另一个迭代器，它担当了一个“转换器transforms”的角色。这种“transformers”通常称为“迭代适配器(iterator adapters)”。术语“adapter”由电连接器得名：如果一个插头不能适合插座，使用一个适配嫁接。</p><h2 id="The-map-Iterator-Adapter"><a class="header-anchor" href="#The-map-Iterator-Adapter">¶</a>The map Iterator Adapter</h2><p><code>map</code>函数相当于一个映射，即<code>x:T -&gt; y:T</code>，它被定义在标准库中，<code>map</code>函数不会删除元素，而是将里面的元素进行了转换，区别于<code>filter</code>函数，<code>filter</code>元素传递给闭包参数的值是一个引用，<code>map</code>传递的是一个值。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">arr</span> = [<span class="number">66</span>, -<span class="number">8</span>, <span class="number">43</span>, <span class="number">19</span>, <span class="number">0</span>, -<span class="number">31</span>];</span><br><span class="line"><span class="keyword">for</span> <span class="variable">n</span> <span class="keyword">in</span> arr.<span class="title function_ invoke__">iter</span>().<span class="title function_ invoke__">map</span>(&#123;x&#125; *x * <span class="number">2</span>) &#123;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="The-enumerate-Iterator-Adapter"><a class="header-anchor" href="#The-enumerate-Iterator-Adapter">¶</a>The enumerate Iterator Adapter</h2><p>要对一个序列进行迭代，最传统做法是，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">arr</span> = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">0</span>..arr.<span class="title function_ invoke__">len</span>() &#123;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;, &quot;</span>, i, arr[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用迭代器，可以避免出现计数，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">arrlet</span> arr = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"><span class="keyword">for</span> <span class="variable">ch</span> <span class="keyword">in</span> arr.<span class="title function_ invoke__">iter</span>() &#123;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;, &quot;</span>, ch);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但如果你想在新学习基础上对其进行计数，你可以，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">arr</span> = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"><span class="keyword">for</span> (i, ch) <span class="keyword">in</span> arr.<span class="title function_ invoke__">iter</span>().<span class="title function_ invoke__">enumerate</span>() &#123;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;, &quot;</span>, i, *ch);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在第二行，循环变量实际上是一个tuple，第一次迭代时，<code>i</code>的值是0，<code>ch</code>是第一个字符数组的地址，每次迭代时，<code>i</code>和<code>ch</code>都会递增。</p><p><code>enumerate</code>函数接收一个迭代器，并返回另外一个迭代器。该返回的迭代器，在每次迭代时都返回一个类型为<code>(usize, &amp;char)</code>的tuple，第一个字段是一个计数器，第二个字段是原来迭代器元素的一份拷贝。</p><h2 id="An-Iterator-Consumer-any"><a class="header-anchor" href="#An-Iterator-Consumer-any">¶</a>An Iterator Consumer: <code>any</code></h2><p>给定一个字符串，如何判断是否包含某个字符？</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">s</span> = <span class="string">&quot;Hello world!&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">ch</span> = <span class="string">&#x27;R&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">contains</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="variable">c</span> <span class="keyword">in</span> s.<span class="title function_ invoke__">chars</span>() &#123;</span><br><span class="line"><span class="keyword">if</span> c == ch &#123;</span><br><span class="line">contains = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;\&quot;&#123;&#125;\&quot; &#123;&#125; &#x27;&#123;&#125;&#x27;.&quot;</span>, s,</span><br><span class="line"><span class="keyword">if</span> contains &#123;</span><br><span class="line"><span class="string">&quot;contains&quot;</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="string">&quot;does not contain&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line">ch</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>结果将打印：“Hello world!” does not contain ‘R’.</p><p>这里进行了字符大小写的比较。如果换为<code>R</code>，则会输出第二种情况，你可以替换为闭包实现，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">s</span> = <span class="string">&quot;Hello, world!&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">ch</span> = <span class="string">&#x27;R&#x27;</span>;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;\&quot;&#123;&#125;\&quot; &#123;&#125; &#x27;&#123;&#125;&#x27;.&quot;</span>,</span><br><span class="line">s,</span><br><span class="line"><span class="keyword">if</span> s.<span class="title function_ invoke__">chars</span>().<span class="title function_ invoke__">any</span>(|c| c == ch) &#123;</span><br><span class="line"><span class="string">&quot;contains&quot;</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="string">&quot;does not contain&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line">ch);</span><br></pre></td></tr></table></figure><p>闭包的好处是替换掉原来使用自定义变量的做法；这个变量替换为了表达式<code>s.chars().any(|c| c == ch)</code>的实现。</p><p>函数<code>any()</code>定义在Rust标准库中，它作用在迭代器上。它的目的是确定迭代器中的任意元素是否满足布尔函数(又名“预设”predicate)。</p><p><code>any()</code>函数必须是作用在一个迭代器上的，以及必须接收一个闭包参数。闭包内的操作，对迭代内的每个元素进行处理，当某个处理到某个元素返回<code>true</code>时，结果立即返回<code>true</code>，否则所以元素的处理结果为<code>false</code>时，函数返回<code>false</code>。</p><p>因此，函数名<code>any()</code>，顾名思义就是“任意的”满足条件。</p><p>前面的一个判断是否包含负数的例子，可以用<code>any()</code>函数来处理，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#[macro_use]</span></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">crate</span> t_bang;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> t_bang::*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">main</span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">arr</span> = [<span class="number">45</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">6</span>];</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">arr_iter</span> = arr.<span class="title function_ invoke__">iter</span>();</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">arr_any</span> = arr_iter.<span class="title function_ invoke__">any</span>(|n| *n &lt; <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, t!(arr_iter));</span><br><span class="line">    <span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, arr_any);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为了代码清晰，你可以给闭包的类型加上注解，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, [<span class="number">45</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">6</span>].<span class="title function_ invoke__">iter</span>().<span class="title function_ invoke__">any</span>(|n: &amp;<span class="type">i32</span>| <span class="punctuation">-&gt;</span> <span class="type">bool</span> &#123; *n &lt; <span class="number">0</span> &#125;));</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, [<span class="number">45</span>, <span class="number">8</span>, -<span class="number">2</span>, <span class="number">6</span>].<span class="title function_ invoke__">iter</span>().<span class="title function_ invoke__">any</span>(|n: &amp;<span class="type">i32</span>| <span class="punctuation">-&gt;</span> <span class="type">bool</span> &#123; *n &lt; <span class="number">0</span> &#125;));</span><br></pre></td></tr></table></figure><p>前面说过，迭代器的迭代变量是一个reference，所以这里不能省略<code>&amp;</code>符号，否则有类型错误。</p><p>前面介绍了几种迭代概念，</p><ul><li>函数作用在非迭代器，生成一个迭代器的，称为“迭代生成器(iterator generator)”</li><li>函数作用在一个迭代器，返回另一个迭代器的，称为“迭代适配器(iterator adapter)”</li><li>函数作用在一个迭代器，但不返回迭代器的，称为“迭代消费者(iterator consumer)”</li></ul><p>迭代器 “ <strong>消费者</strong> ”，就是消费掉了数据，而不是“ <strong>适配</strong> ”数据。除了这里的<code>any()</code>消费者，下面再介绍几种常见的。</p><h2 id="The-all-Iterator-Consumer"><a class="header-anchor" href="#The-all-Iterator-Consumer">¶</a>The <code>all</code> Iterator Consumer</h2><p><code>any()</code>就是“任意的”，至少有一个满足条件；对应就有<code>all()</code>，“所有的”，要求全部满足条件；</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, [<span class="number">45</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">6</span>].<span class="title function_ invoke__">iter</span>().<span class="title function_ invoke__">all</span>(|n: &amp;<span class="type">i32</span>| <span class="punctuation">-&gt;</span> <span class="type">bool</span> &#123; *n &lt; <span class="number">0</span> &#125;));</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, [<span class="number">45</span>, <span class="number">8</span>, -<span class="number">2</span>, <span class="number">6</span>].<span class="title function_ invoke__">iter</span>().<span class="title function_ invoke__">all</span>(|n: &amp;<span class="type">i32</span>| <span class="punctuation">-&gt;</span> <span class="type">bool</span> &#123; *n &lt; <span class="number">0</span> &#125;));</span><br></pre></td></tr></table></figure><h2 id="The-count-Iterator-Consumer"><a class="header-anchor" href="#The-count-Iterator-Consumer">¶</a>The <code>count</code> Iterator Consumer</h2><p>迭代计数器<code>count()</code>和<code>enumerate()</code>概念类似，只不过<code>count()</code>是个消费者，不会生成另一个迭代器，内部元素不会发生拷贝。</p><p>例如，你想统计一个slice，array，vector的长度，你可能会使用<code>len</code>函数。但要想知道一个字符串里面有多少个字符，你就必须扫描这个字符串，因为组成字符串的字符不会保存，除非你将它存储下来。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">s</span> = <span class="string">&quot;€èe&quot;</span>;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>, s.<span class="title function_ invoke__">chars</span>().<span class="title function_ invoke__">count</span>(), s.<span class="title function_ invoke__">len</span>());</span><br></pre></td></tr></table></figure><p><code>count()</code>不接收任何参数，以及它的返回值类型总是<code>usize</code>。</p><h2 id="The-sum-Iterator-Consumer"><a class="header-anchor" href="#The-sum-Iterator-Consumer">¶</a>The <code>sum</code> Iterator Consumer</h2><p><code>sum()</code>函数用于迭代添加，它也是个迭代消费者，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, [<span class="number">45</span>, <span class="number">8</span>, -<span class="number">2</span>, <span class="number">6</span>].<span class="title function_ invoke__">iter</span>().sum::&lt;<span class="type">i32</span>&gt;());</span><br></pre></td></tr></table></figure><p>这里可以指定它的类型参数<code>&lt;i32&gt;</code>，这个类型参数是可选的，可选的前提条件是：迭代器的元素类型需要是可加的，这样才能被类型推断处理；例如<code>[3.4].iter().sum::&lt;f64&gt;()</code>是合法的，但<code>[true].iter().sum::&lt;bool&gt;()</code>是不合法的，因为布尔值无法满足加法。</p><h2 id="The-min-and-max-Iterator-Consumers"><a class="header-anchor" href="#The-min-and-max-Iterator-Consumers">¶</a>The <code>min</code> and <code>max</code> Iterator Consumers</h2><p><code>min()</code>和<code>max()</code>函数用于查找最小值、最大值，它的返回类型是<code>Option</code>，其中<code>Some</code>值的作用在非空序列，<code>None</code>时则表示序列是空的。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">arr</span> = [<span class="number">45</span>, <span class="number">8</span>, -<span class="number">2</span>, <span class="number">6</span>];</span><br><span class="line"><span class="keyword">match</span> arr.<span class="title function_ invoke__">iter</span>().<span class="title function_ invoke__">min</span>() &#123;</span><br><span class="line"><span class="title function_ invoke__">Some</span>(n) =&gt; <span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, n),</span><br><span class="line">_ =&gt; (),</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">match</span> arr.<span class="title function_ invoke__">iter</span>().<span class="title function_ invoke__">max</span>() &#123;</span><br><span class="line"><span class="title function_ invoke__">Some</span>(n) =&gt; <span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, n),</span><br><span class="line">_ =&gt; (),</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">match</span> [<span class="number">0</span>; <span class="number">0</span>].<span class="title function_ invoke__">iter</span>().<span class="title function_ invoke__">min</span>() &#123;</span><br><span class="line"><span class="title function_ invoke__">Some</span>(n) =&gt; <span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, n),</span><br><span class="line">_ =&gt; <span class="built_in">print!</span>(<span class="string">&quot;---&quot;</span>),</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将会打印： -2 45 —.</p><p><code>min()</code>和<code>max()</code>也可作用在非数字的迭代对象上，但要满足可比较性(即该类型要有<code>std::cmp</code>)，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">arr</span> = [<span class="string">&quot;hello&quot;</span>, <span class="string">&quot;brave&quot;</span>, <span class="string">&quot;new&quot;</span>, <span class="string">&quot;world&quot;</span>];</span><br><span class="line"><span class="keyword">match</span> arr.<span class="title function_ invoke__">iter</span>().<span class="title function_ invoke__">min</span>() &#123;</span><br><span class="line"><span class="title function_ invoke__">Some</span>(n) =&gt; <span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, n),</span><br><span class="line">_ =&gt; (),</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">match</span> arr.<span class="title function_ invoke__">iter</span>().<span class="title function_ invoke__">max</span>() &#123;</span><br><span class="line"><span class="title function_ invoke__">Some</span>(n) =&gt; <span class="built_in">print!</span>(<span class="string">&quot;&#123;] &quot;</span>, n),</span><br><span class="line">_ =&gt; (),</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="The-collect-Consumer"><a class="header-anchor" href="#The-collect-Consumer">¶</a>The <code>collect</code> Consumer</h2><p>像<code>any()</code>、<code>all()</code>、<code>count()</code>、<code>sum()</code>、<code>min()</code>和<code>max()</code>这些迭代消费者返回都是简单一个值，但如果我们想将所有处理的元素收集到一个Vector呢，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">arr</span> = [<span class="number">36</span>, <span class="number">1</span>, <span class="number">15</span>, <span class="number">9</span>, <span class="number">4</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="variable">v</span> = arr.<span class="title function_ invoke__">iter</span>().collect::&lt;<span class="type">Vec</span>&lt;&amp;<span class="type">i32</span>&gt;&gt;();</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, v);</span><br></pre></td></tr></table></figure><p>结果将打印：“<code>[36, 1, 15, 9, 4]</code>”.</p><p>这里的类型参数是必须的，不过可以改为这样写，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">arr</span> = [<span class="number">36</span>, <span class="number">1</span>, <span class="number">15</span>, <span class="number">9</span>, <span class="number">4</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="variable">v</span> = arr.<span class="title function_ invoke__">iter</span>().collect::&lt;<span class="type">Vec</span>&lt;_&gt;&gt;();</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, v);</span><br></pre></td></tr></table></figure><p>又或者这样，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">arr</span> = [<span class="number">36</span>, <span class="number">1</span>, <span class="number">15</span>, <span class="number">9</span>, <span class="number">4</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="variable">v</span>: <span class="type">Vec</span>&lt;_&gt; = arr.<span class="title function_ invoke__">iter</span>().<span class="title function_ invoke__">collect</span>();</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, v);</span><br></pre></td></tr></table></figure><p>同样，字符和字节也可以收集到一个Vector，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">s</span> = <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, s.<span class="title function_ invoke__">chars</span>().collect::&lt;<span class="type">String</span>&gt;());</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, s.<span class="title function_ invoke__">chars</span>().collect::&lt;<span class="type">Vec</span>&lt;<span class="type">char</span>&gt;&gt;());</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, s.<span class="title function_ invoke__">bytes</span>().collect::&lt;<span class="type">Vec</span>&lt;<span class="type">u8</span>&gt;&gt;());</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, s.<span class="title function_ invoke__">as_bytes</span>().<span class="title function_ invoke__">iter</span>().collect::&lt;<span class="type">Vec</span>&lt;&amp;<span class="type">u8</span>&gt;&gt;());</span><br></pre></td></tr></table></figure><p>将会打印，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot;Hello&quot;</span><br><span class="line">[&#x27;H&#x27;, &#x27;e&#x27;, &#x27;l&#x27;, &#x27;l&#x27;, &#x27;o&#x27;]</span><br><span class="line">[72, 101, 108, 108, 111]</span><br><span class="line">[72, 101, 108, 108, 111]</span><br></pre></td></tr></table></figure><p>注意<code>collect()</code>函数不能用于静态字符串、静态数组、或静态切片，因为它要求运行期内存分配。</p><h2 id="Iterator-Chains"><a class="header-anchor" href="#Iterator-Chains">¶</a>Iterator Chains</h2><p>假设你想要将一个数组里面的负数，平方后收集到另一个vector中，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">arr</span> = [<span class="number">66</span>, -<span class="number">8</span>, <span class="number">43</span>, <span class="number">19</span>, <span class="number">0</span>, -<span class="number">31</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">v</span> = <span class="built_in">vec!</span>[];</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">0</span>..arr.<span class="title function_ invoke__">len</span>() &#123;</span><br><span class="line"><span class="keyword">if</span> arr[i] &gt; <span class="number">0</span> &#123; v.<span class="title function_ invoke__">push</span>(arr[i] * <span class="number">2</span>); &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, v);</span><br></pre></td></tr></table></figure><p>打印输出：<code>[132, 86, 38]</code>.</p><p>一个等效实现是，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">arr</span> = [<span class="number">66</span>, -<span class="number">8</span>, <span class="number">43</span>, <span class="number">19</span>, <span class="number">0</span>, -<span class="number">31</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">v</span> = <span class="built_in">vec!</span>[];</span><br><span class="line"><span class="keyword">for</span> <span class="variable">n</span> <span class="keyword">in</span> arr.<span class="title function_ invoke__">iter</span>() &#123;</span><br><span class="line"><span class="keyword">if</span> *n &gt; <span class="number">0</span> &#123; v.<span class="title function_ invoke__">push</span>(*n * <span class="number">2</span>); &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, v);</span><br></pre></td></tr></table></figure><p>又或者，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">arr</span> = [<span class="number">66</span>, -<span class="number">8</span>, <span class="number">43</span>, <span class="number">19</span>, <span class="number">0</span>, -<span class="number">31</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">v</span> = <span class="built_in">vec!</span>[];</span><br><span class="line"><span class="keyword">for</span> <span class="variable">n</span> <span class="keyword">in</span> arr</span><br><span class="line">.<span class="title function_ invoke__">iter</span>()</span><br><span class="line">.<span class="title function_ invoke__">filter</span>(|x| **x &gt; <span class="number">0</span>)</span><br><span class="line">.<span class="title function_ invoke__">map</span>(|x| *x * <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">v.<span class="title function_ invoke__">push</span>(n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, v);</span><br></pre></td></tr></table></figure><p>再或，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">arr</span> = [<span class="number">66</span>, -<span class="number">8</span>, <span class="number">43</span>, <span class="number">19</span>, <span class="number">0</span>, -<span class="number">31</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">v</span> = <span class="built_in">vec!</span>[];</span><br><span class="line"><span class="keyword">for</span> <span class="variable">n</span> <span class="keyword">in</span> arr</span><br><span class="line">.<span class="title function_ invoke__">iter</span>()</span><br><span class="line">.<span class="title function_ invoke__">filter</span>(|x| **x &gt; <span class="number">0</span>)</span><br><span class="line">.<span class="title function_ invoke__">map</span>(|x| *x * <span class="number">2</span>)</span><br><span class="line">.collect::&lt;<span class="type">Vec</span>&lt;_&gt;&gt;();</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, v);</span><br></pre></td></tr></table></figure><p>最后一个版本展示的编程模式是函数式语言的典型：迭代链(iterator chain)。</p><p>迭代链由几个概念属于组成，<strong>迭代生成器(iterator generator)</strong> + <strong>迭代适配器(iterator adapter)</strong> + <strong>迭代消费者(iterator consumer)</strong> 。</p><h2 id="Iterators-Are-“Lazy”"><a class="header-anchor" href="#Iterators-Are-“Lazy”">¶</a>Iterators Are “Lazy”</h2><p>我们给最后一个例子加一些调试信息打印出来，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">v</span> = [<span class="number">66</span>, -<span class="number">8</span>, <span class="number">43</span>, <span class="number">19</span>, <span class="number">0</span>, -<span class="number">31</span>]</span><br><span class="line">.<span class="title function_ invoke__">iter</span>()</span><br><span class="line">.<span class="title function_ invoke__">filter</span>(|x| &#123; <span class="built_in">print!</span>(<span class="string">&quot;F&#123;&#125; &quot;</span>, x); **x &gt; <span class="number">0</span> &#125;)</span><br><span class="line">.<span class="title function_ invoke__">map</span>(|x| &#123; <span class="built_in">print!</span>(<span class="string">&quot;M&#123;&#125; &quot;</span>, x); *x * <span class="number">2</span> &#125;)</span><br><span class="line">.collect::&lt;<span class="type">Vec</span>&lt;_&gt;&gt;();</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, v);</span><br></pre></td></tr></table></figure><p>将打印：<code>F66 M66 F-8 F43 M43 F19 M19 F0 F-31 [132, 86, 38]</code>。</p><p>运行时的操作如下，</p><p>首先调用了<code>iter()</code>准备一个迭代器，但它没有访问该数组。我们给该迭代器命名为“I”。</p><p><code>filter()</code>的调用准备了一个迭代器，但它没有处理数据。我们给迭代器命名为“F”。</p><p><code>map()</code>的调用准备了一个迭代器，但它没有处理数据。我们给该迭代器命名为“M”。</p><p><code>collect()</code>的调用，向“M”请求一个元素；“M”向“F”请求一个元素；“F”向“I”请求一个元素；“I”拿到来自数组的数66，传给“F”，打印这个数，检查是否是正数，然后传递给“M”，打印，平方，再传递给<code>collect()</code>，最后推送到Vector。</p><p>接着，<code>collect()</code>接收到<code>Some</code>，继续向“M”请求另一个元素，重复这个操作，知道元素-8到达“F”时，由于是负数被过滤。所有“M”没有打印出结果。停留在“F”，因为“F”接收到<code>Some</code>，继续问“I”索取另一个元素。</p><p>该算法处理，会直到数组完成。当“I”不能在数组找到其它元素时，将一个<code>None</code>发给“F”告知它没有更多元素了。“F”收到<code>None</code>后，再将其传递给“M”，“M”再发给<code>collect()</code>，整个语句结束。</p><p>如果省略掉迭代器消费者，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">66</span>, -<span class="number">8</span>, <span class="number">43</span>, <span class="number">19</span>, <span class="number">0</span>, -<span class="number">31</span>]</span><br><span class="line">.<span class="title function_ invoke__">iter</span>()</span><br><span class="line">.<span class="title function_ invoke__">filter</span>(|x| &#123; <span class="built_in">print!</span>(<span class="string">&quot;F&#123;&#125; &quot;</span>, x); **x &gt; <span class="number">0</span> &#125;)</span><br><span class="line">.<span class="title function_ invoke__">map</span>(|x| &#123; <span class="built_in">print!</span>(<span class="string">&quot;M&#123;&#125; &quot;</span>, x); *x * <span class="number">2</span> &#125;);</span><br></pre></td></tr></table></figure><p>它不会输出任何消息，因为它什么也没有做，编译器只会报告，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">warning unused `std::iter::Map` witch must be used: iterator adapters are lazy and do nothing unless consumed.</span><br></pre></td></tr></table></figure><p>“lazy”在计算机科学中是“惰性求值”的概念，以为这尽可能迟的处理。迭代适配器是惰性的，它仅在其它函数向其请求元素时才真正调用：即需要消费者。</p><p>如果没有数据接收器，就没有数据访问(If there is no data sink, there is no data access)。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本章覆盖有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;字符串如何存储字符，为什么不能直接访问&lt;/li&gt;
&lt;li&gt;如何用iterators读取字符串字符或字符串字节&lt;/li&gt;
&lt;li&gt;如何使用可变iterators修改slices，arrays，vectors&lt;/li&gt;
&lt;li&gt;如何使用适配器：&lt;code&gt;filter&lt;/code&gt;，&lt;code&gt;map&lt;/code&gt;和&lt;code&gt;enumerate&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;如何使用消费者：&lt;code&gt;any&lt;/code&gt;，&lt;code&gt;all&lt;/code&gt;，&lt;code&gt;count&lt;/code&gt;，&lt;code&gt;sum&lt;/code&gt;，&lt;code&gt;min&lt;/code&gt;，&lt;code&gt;max&lt;/code&gt;和&lt;code&gt;collect&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;惰性处理的概念&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    <content src="https://galudisu.info/%3Cp%3E%E6%9C%AC%E7%AB%A0%E8%A6%86%E7%9B%96%E6%9C%89%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A6%82%E4%BD%95%E5%AD%98%E5%82%A8%E5%AD%97%E7%AC%A6%EF%BC%8C%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E8%83%BD%E7%9B%B4%E6%8E%A5%E8%AE%BF%E9%97%AE%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E7%94%A8iterators%E8%AF%BB%E5%8F%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AD%97%E7%AC%A6%E6%88%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AD%97%E8%8A%82%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%8F%AF%E5%8F%98iterators%E4%BF%AE%E6%94%B9slices%EF%BC%8Carrays%EF%BC%8Cvectors%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E9%80%82%E9%85%8D%E5%99%A8%EF%BC%9A%3Ccode%3Efilter%3C/code%3E%EF%BC%8C%3Ccode%3Emap%3C/code%3E%E5%92%8C%3Ccode%3Eenumerate%3C/code%3E%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E6%B6%88%E8%B4%B9%E8%80%85%EF%BC%9A%3Ccode%3Eany%3C/code%3E%EF%BC%8C%3Ccode%3Eall%3C/code%3E%EF%BC%8C%3Ccode%3Ecount%3C/code%3E%EF%BC%8C%3Ccode%3Esum%3C/code%3E%EF%BC%8C%3Ccode%3Emin%3C/code%3E%EF%BC%8C%3Ccode%3Emax%3C/code%3E%E5%92%8C%3Ccode%3Ecollect%3C/code%3E%3C/li%3E%3Cli%3E%E6%83%B0%E6%80%A7%E5%A4%84%E7%90%86%E7%9A%84%E6%A6%82%E5%BF%B5%3C/li%3E%3C/ul%3E%3Cspan%20id=%22more%22%3E%3C/span%3E%3Ch2%20id=%22String-Characters%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#String-Characters%22%3E%C2%B6%3C/a%3EString%20Characters%3C/h2%3E%3Cp%3E%E5%89%8D%E9%9D%A2%E4%BB%8B%E7%BB%8D%E4%BA%86Rust%E6%9C%89%E9%9D%99%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%8C%E5%AE%83%E4%BB%AC%E7%9A%84%E7%BC%96%E7%A0%81%E9%83%BD%E6%98%AFUTF-8%E3%80%82%E8%BF%99%E7%A7%8D%E7%BC%96%E7%A0%81%E4%BD%BF%E7%94%A81%E5%88%B06%E4%B8%AA%E5%AD%97%E8%8A%82%E5%BA%8F%E5%88%97%E8%A1%A8%E7%A4%BA%E6%AF%8F%E4%B8%AAUnicode%E5%AD%97%E7%AC%A6%EF%BC%8C%E5%9B%A0%E6%AD%A4%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%8D%E6%98%AF%E7%AE%80%E5%8D%95%E7%9A%84%E5%AD%97%E7%AC%A6%E6%95%B0%E7%BB%84%EF%BC%8C%E8%80%8C%E6%98%AF%E8%A1%A8%E7%A4%BA%E5%AD%97%E7%AC%A6%E5%BA%8F%E5%88%97%E7%9A%84%E5%AD%97%E8%8A%82%E7%9A%84%E6%95%B0%E7%BB%84%E3%80%82%3C/p%3E%3Cp%3E%E6%97%A2%E7%84%B6%E6%98%AF%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%8C%E9%82%A3%E4%B9%88%E8%A1%A8%E8%BE%BE%E5%BC%8F%3Ccode%3Es[0]%3C/code%3E%E8%A1%A8%E7%A4%BA%E7%9A%84%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F%E5%AE%83%E6%98%AF%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6(character)%EF%BC%8C%E8%BF%98%E6%98%AF%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%AD%97%E8%8A%82(byte)%EF%BC%9F%3C/p%3E%3Cp%3E%E9%83%BD%E4%B8%8D%E6%98%AF%EF%BC%8CRust%E4%B8%AD%E4%B8%8D%E5%85%81%E8%AE%B8%E8%BF%99%E7%A7%8D%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%A1%A8%E8%BE%BE%E5%BC%8F%E3%80%82%E8%A6%81%E8%8E%B7%E5%8F%96%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%AD%97%E8%8A%82%EF%BC%8C%E5%BF%85%E9%A1%BB%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E4%B8%BA%E4%B8%80%E4%B8%AA%E5%AD%97%E8%8A%82%E5%88%87%E7%89%87(a%20slice%20of%20bytes)%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Es%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;abc012%C3%A8%E2%82%AC&amp;quot;%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..s.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;:%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20i,%20s.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eas_bytes%3C/span%3E()[i]);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E6%89%93%E5%8D%B0%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20plaintext%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E0:%2097%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E1:%2098%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2:%2099%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3:%2048%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4:%2049%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5:%2050%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6:%20195%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7:%20168%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8:%20226%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9:%20130%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10:%20172%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%86%8D%E6%AC%A1%E9%87%8D%E6%B8%A9%EF%BC%8C%E8%BF%99%E9%87%8C%E7%9A%84%E5%8F%98%E9%87%8F%3Ccode%3Es%3C/code%3E%E7%9A%84%E7%B1%BB%E5%9E%8B%E6%98%AF%3Ccode%3E&amp;amp;str%3C/code%3E%E7%9A%84%EF%BC%8C%E8%A1%A8%E7%A4%BA%E9%9D%99%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%82%E5%AE%83%E6%98%AFRust%E4%B8%AD%E7%9A%84%E4%B8%80%E7%A7%8D%E7%89%B9%E6%AE%8A%E5%BC%95%E7%94%A8%EF%BC%8C%E7%94%B1%3Ccode%3E%E6%8C%87%E9%92%88:%20%E9%95%BF%E5%BA%A6%3C/code%3E%E9%94%AE%E5%80%BC%E5%AF%B9%E7%BB%84%E6%88%90%EF%BC%8C%E6%8C%87%E5%90%91%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BC%93%E5%86%B2%E5%8C%BA%E3%80%82%3C/p%3E%3Cp%3E%E5%87%BD%E6%95%B0%3Ccode%3Eas_bytes%3C/code%3E%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E4%B8%BA%E4%B8%80%E4%B8%AA%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%9A%84%3Ccode%3Eu8%3C/code%3E%E5%88%87%E7%89%87%E3%80%82%E8%BF%99%E7%A7%8D%E8%BD%AC%E6%8D%A2%E5%9C%A8%E8%BF%90%E8%A1%8C%E6%9C%9F0%E6%B6%88%E8%80%97%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AD%97%E7%AC%A6%E7%BC%93%E5%86%B2%E5%8C%BA%E9%87%8C%E9%9D%A2%E7%9A%84%E4%B8%9C%E8%A5%BF%E4%B8%8D%E6%98%AF%E5%88%AB%E7%9A%84%EF%BC%8C%E5%B0%B1%E6%98%AF%E5%AD%97%E8%8A%82%E5%BA%8F%E5%88%97(sequence%20of%20bytes)%E7%9A%84%E3%80%82%3C/p%3E%3Cp%3EUTF-8%E5%8F%AF%E4%BB%A5%E8%A1%A8%E8%BF%B0%E4%BB%BB%E4%BD%95ASCII%E5%AD%97%E7%AC%A6%EF%BC%8C%E4%B8%8A%E8%BF%B0%E4%BB%A3%E7%A0%81%E4%B8%AD%E5%AD%97%E7%AC%A6%3Ccode%3Ea%3C/code%3E%EF%BC%8C%3Ccode%3Eb%3C/code%3E%EF%BC%8C%3Ccode%3Ec%3C/code%3E%EF%BC%8C%3Ccode%3E0%3C/code%3E%EF%BC%8C%3Ccode%3E1%3C/code%3E%EF%BC%8C%3Ccode%3E2%3C/code%3E%EF%BC%8C%E6%89%93%E5%8D%B0%E7%9A%84%E5%80%BC%E5%B0%B1%E6%98%AFASCII%E7%A0%81%E3%80%82%3C/p%3E%3Cp%3E%E5%AD%97%E7%AC%A6%3Ccode%3E%C3%A8%3C/code%3E%E7%94%B1%E4%B8%80%E5%AF%B9%E5%AD%97%E8%8A%82%E8%A1%A8%E7%A4%BA%EF%BC%8C%E5%8C%85%E5%90%AB%E5%80%BC195%E5%92%8C168%E3%80%82%E5%AD%97%E7%AC%A6%3Ccode%3E%E2%82%AC%3C/code%3E%E7%94%B1%E4%B8%89%E4%B8%AA%E5%AD%97%E8%8A%82%E8%A1%A8%E7%A4%BA%EF%BC%8C%E5%8C%85%E5%90%AB%E5%80%BC226%EF%BC%8C130%E5%92%8C172%E3%80%82%3C/p%3E%3Ch2%20id=%22Scanning-a-String%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Scanning-a-String%22%3E%C2%B6%3C/a%3EScanning%20a%20String%3C/h2%3E%3Cp%3E%E8%A6%81%E5%AF%B9%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BF%9B%E8%A1%8C%E5%A4%84%E7%90%86%EF%BC%8C%E9%9C%80%E8%A6%81%E5%AF%B9%E5%85%B6%E8%BF%9B%E8%A1%8C%E6%89%AB%E6%8F%8F%E3%80%82%3C/p%3E%3Cp%3E%E7%B1%BB%E4%BC%BC%E4%BA%8E%E5%AD%97%E7%AC%A6%E4%B8%B2%E2%80%9C%E2%82%AC%C3%A8e%E2%80%9D%EF%BC%8C%E6%88%91%E4%BB%AC%E6%83%B3%E8%A6%81%E6%89%93%E5%8D%B0%E7%AC%AC%E4%B8%89%E4%B8%AA%E5%AD%97%E7%AC%A6%E3%80%82%E9%A6%96%E5%85%88%EF%BC%8C%E6%88%91%E4%BB%AC%E9%9C%80%E8%A6%81%E6%89%AB%E6%8F%8F%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E7%9A%84%E4%B8%89%E4%B8%AA%E5%AD%97%E8%8A%82%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AD%97%E7%AC%A6%E2%80%9C%E2%82%AC%E2%80%9D%E7%94%B1%E4%B8%89%E4%B8%AA%E5%AD%97%E8%8A%82%E5%BA%8F%E5%88%97%E8%A1%A8%E7%A4%BA%EF%BC%9B%E6%8E%A5%E7%9D%80%E6%89%AB%E6%8F%8F%E7%AC%AC%E4%BA%8C%E4%B8%AA%E5%AD%97%E7%AC%A6%E2%80%9C%C3%A8%E2%80%9D%EF%BC%8C%E5%AE%83%E7%94%B1%E4%B8%A4%E5%AD%97%E8%8A%82%E5%BA%8F%E5%88%97%E8%A1%A8%E7%A4%BA%EF%BC%9B%E6%8E%A5%E7%9D%80%E6%89%AB%E6%8F%8F%E7%AC%AC%E4%B8%89%E4%B8%AA%E5%AD%97%E8%8A%82%EF%BC%8C%E5%AD%97%E7%AC%A6%E2%80%9Ce%E2%80%9D%E4%BB%85%E7%94%B1%E4%B8%80%E4%B8%AA%E5%AD%97%E8%8A%82%E5%BA%8F%E5%88%97%E8%A1%A8%E7%A4%BA%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E9%87%8C%EF%BC%8C%E6%9C%89%E2%80%9C%E8%BF%AD%E4%BB%A3%E2%80%9D(%E6%9C%89%E6%97%B6%E5%8F%AB%E2%80%9C%E6%B8%B8%E6%A0%87%E2%80%9D)%E7%9A%84%E6%A6%82%E5%BF%B5%EF%BC%8C%E5%AE%83%E8%A7%A3%E5%8E%8B%E5%A4%84%E7%90%86%E4%B8%80%E4%B8%AA%E5%BA%8F%E5%88%97%E7%9A%84%E5%BD%93%E5%89%8D%E4%BD%8D%E7%BD%AE%EF%BC%8C%E5%B9%B6%E5%9C%A8%E5%BD%93%E5%89%8D%E4%BD%8D%E7%BD%AE%E5%90%91%E5%89%8D%E9%80%92%E8%BF%9B%E3%80%82%E8%BF%99%E7%A7%8D%E6%93%8D%E4%BD%9C%E5%8F%AF%E4%BB%A5%E7%94%A8%E4%BA%8E%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%89%AB%E6%8F%8F%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E6%88%91%E4%BB%AC%E9%9C%80%E8%A6%81%E4%B8%80%E4%B8%AA%20%3Cstrong%3E%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BF%AD%E4%BB%A3%E5%99%A8(string%20iterator)%3C/strong%3E%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eprint_nth_char%3C/span%3E(s:%20&amp;amp;%3Cspan%20class=%22type%22%3Estr%3C/span%3E,%20%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20n:%20%3Cspan%20class=%22type%22%3Eu32%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Eiter%3C/span%3E:%20std::%3Cspan%20class=%22type%22%3Estr%3C/span%3E::Chars%20=%20s.%3Cspan%20class=%22title%20function_%20invoke__%22%3Echars%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Eloop%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eitem%3C/span%3E:%20%3Cspan%20class=%22type%22%3EOption%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Echar%3C/span%3E&amp;gt;%20=%20iter.%3Cspan%20class=%22title%20function_%20invoke__%22%3Enext%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22keyword%22%3Ematch%3C/span%3E%20item%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22title%20function_%20invoke__%22%3ESome%3C/span%3E(c)%20=&amp;gt;%20%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20n%20==%20%3Cspan%20class=%22number%22%3E1%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20c);%20&amp;#125;,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22literal%22%3ENone%3C/span%3E%20=&amp;gt;%20&amp;#123;%20%3Cspan%20class=%22keyword%22%3Ebreak%3C/span%3E;%20&amp;#125;,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20n%20-=%20%3Cspan%20class=%22number%22%3E1%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Eprint_nth_char%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;%E2%82%AC%C3%A8e&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22number%22%3E3%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%AF%A5%E5%87%BD%E6%95%B0%E7%9A%84%E4%BD%9C%E7%94%A8%E6%98%AF%EF%BC%8C%E7%BB%99%E5%AE%9A%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%3Ccode%3Es%3C/code%3E%EF%BC%8C%E6%95%B0%E5%AD%97%3Ccode%3En%3C/code%3E%EF%BC%8C%E5%A6%82%E6%9E%9C%E6%9C%89%E5%AF%B9%E5%BA%94%E4%BD%8D%E7%BD%AE%EF%BC%8C%E5%88%99%E6%89%93%E5%8D%B0%3Ccode%3Es%3C/code%3E%E4%B8%AD%E4%BD%8D%E7%BD%AE%3Ccode%3En%3C/code%3E%E7%9A%84%E5%AD%97%E7%AC%A6%EF%BC%8C%E5%90%A6%E5%88%99%E4%B8%8D%E4%BD%9C%E4%BB%BB%E4%BD%95%E5%A4%84%E7%90%86%E3%80%82%3C/p%3E%3Cp%3ERust%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%AD%E6%8F%90%E4%BE%9B%E4%BA%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BF%AD%E4%BB%A3%E7%B1%BB%E5%9E%8B%E2%80%9CChars%E2%80%9D%E3%80%82%E7%BB%99%E5%AE%9A%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E2%80%9Cs%E2%80%9D%EF%BC%8C%E9%80%9A%E8%BF%87%3Ccode%3Es.chars()%3C/code%3E%E8%8E%B7%E5%BE%97%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BF%AD%E4%BB%A3%E5%99%A8%E3%80%82%3C/p%3E%3Cp%3E%E4%BB%BB%E4%BD%95%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%9C%89%3Ccode%3Enext%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E8%AF%A5%E5%87%BD%E6%95%B0%E8%8C%83%E5%9B%B4%E5%9F%BA%E7%A1%80%E5%BA%8F%E5%88%97%E5%BD%93%E5%89%8D%E4%BD%8D%E7%BD%AE%E7%9A%84%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%9D%A1%E7%9B%AE%EF%BC%8C%E5%B9%B6%E5%90%91%E5%89%8D%E6%8E%A8%E8%BF%9B%E3%80%82%E7%84%B6%E8%80%8C%EF%BC%8C%E5%A4%A7%E9%83%A8%E5%88%86%E5%BA%8F%E5%88%97%E6%9C%89%E7%BB%88%E7%82%B9%E3%80%82%E6%89%80%E4%BB%A5%EF%BC%8C%E8%BF%AD%E4%BB%A3%E5%99%A8%E8%BF%94%E5%9B%9E%E7%9A%84%E4%B8%8B%E4%B8%80%E4%B8%AA%E5%80%BC%EF%BC%8C%E9%9C%80%E8%A6%81%E5%AD%98%E5%9C%A8%E6%9C%89%E8%BF%99%E4%B8%AA%E4%BD%8D%E7%BD%AE%E3%80%82%E8%80%83%E8%99%91%E5%88%B0%E8%BF%99%E4%B8%AA%E5%8E%9F%E5%9B%A0%EF%BC%8CRust%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%9A%84%3Ccode%3Enext%3C/code%3E%E8%BF%94%E5%9B%9E%E7%9A%84%E6%98%AF%E4%B8%80%E4%B8%AA%3Ccode%3EOption&amp;lt;T&amp;gt;%3C/code%3E%E7%B1%BB%E5%9E%8B%EF%BC%8C%E6%B2%A1%E6%9C%89%E5%88%99%E6%98%AF%3Ccode%3ENone%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E4%BD%BF%E7%94%A8%3Ccode%3Ematch%3C/code%3E%E8%AF%AD%E5%8F%A5%EF%BC%8C%E7%94%A8%3Ccode%3ESome%3C/code%3E%E8%A7%A6%E5%8F%91%E5%A4%84%E7%90%86%E4%B8%8B%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%EF%BC%8C%3Ccode%3ENone%3C/code%3E%E6%9D%A5%E9%80%80%E5%87%BA%E6%97%A0%E5%B0%BD%E7%9A%84%E5%BE%AA%E7%8E%AF%E3%80%82%3C/p%3E%3Cp%3E%E7%BB%99%E5%AE%9A%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%8C%E6%89%93%E5%8D%B0%E5%AE%83%E7%9A%84%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eprint_codes%3C/span%3E(s:%20&amp;amp;%3Cspan%20class=%22type%22%3Estr%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Eiter%3C/span%3E%20=%20s.%3Cspan%20class=%22title%20function_%20invoke__%22%3Echars%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eloop%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ematch%3C/span%3E%20iter.%3Cspan%20class=%22title%20function_%20invoke__%22%3Enext%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3ESome%3C/span%3E(c)%20=&amp;gt;%20&amp;#123;%20%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;:%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20c,%20c%20%3Cspan%20class=%22keyword%22%3Eas%3C/span%3E%20%3Cspan%20class=%22type%22%3Eu32%3C/span%3E);%20&amp;#125;,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22literal%22%3ENone%3C/span%3E%20=&amp;gt;%20&amp;#123;%20%3Cspan%20class=%22keyword%22%3Ebreak%3C/span%3E;%20&amp;#125;,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Eprint_codes%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;%E2%82%AC%C3%A8e&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E8%BE%93%E5%87%BA%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20plaintext%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%E2%82%AC:%208364%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%C3%A8:%20232%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ee:%20101%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Ch2%20id=%22Using-Iterators-in-for-Loops%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Using-Iterators-in-for-Loops%22%3E%C2%B6%3C/a%3EUsing%20Iterators%20in%20%3Ccode%3Efor%3C/code%3E%20Loops%3C/h2%3E%3Cp%3E%E4%B8%8A%E9%9D%A2%E7%9A%84%E5%86%99%E6%B3%95%E6%9C%89%E7%82%B9%E7%B4%AF%E8%B5%98%EF%BC%8C%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%BA%94%E8%AF%A5%E5%9C%A8%E8%AF%AD%E5%8F%A5%E4%B8%8A%E8%BF%9B%E8%A1%8C%E5%BD%BB%E5%BA%95%E7%9A%84%E7%AE%80%E5%8C%96%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eprint_codes%3C/span%3E(s:%20&amp;amp;%3Cspan%20class=%22type%22%3Estr%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ec%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20s.%3Cspan%20class=%22title%20function_%20invoke__%22%3Echars%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;:%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20c,%20c%20%3Cspan%20class=%22keyword%22%3Eas%3C/span%3E%20%3Cspan%20class=%22type%22%3Eu32%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Eprint_codes%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;%E2%82%AC%C3%A8e&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%3Ccode%3Efor%3C/code%3E%E5%BE%AA%E7%8E%AF%E5%90%8E%E9%9D%A2%E8%B7%9F%E7%9D%80%E7%9A%84%3Ccode%3Ein%3C/code%3E%E5%85%B3%E9%94%AE%E5%90%8E%E7%9A%84%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8F%AF%E4%BB%A5%E6%98%AF%E4%B8%80%E4%B8%AA%E8%BF%AD%E4%BB%A3%E5%99%A8%E3%80%82%3C/p%3E%3Cp%3E%E9%82%A3%E4%B9%88%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%A9%B6%E7%AB%9F%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F%E5%AE%83%E4%B8%8D%E6%98%AF%E4%B8%80%E4%B8%AA%E7%B1%BB%E5%9E%8B%EF%BC%8C%E8%80%8C%E6%98%AF%E4%B8%80%E4%B8%AA%E7%B1%BB%E5%9E%8B%E8%A7%84%E8%8C%83%E3%80%82%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%8F%AF%E4%BB%A5%E8%AE%A4%E4%B8%BA%E6%98%AF%E5%8C%85%E5%90%AB%3Ccode%3Enext%3C/code%3E%E6%96%B9%E6%B3%95%EF%BC%8C%E8%BF%94%E5%9B%9E%3Ccode%3EOption&amp;lt;T&amp;gt;%3C/code%3E%E5%80%BC%E7%9A%84%E4%BB%BB%E4%BD%95%E8%A1%A8%E8%BE%BE%E5%BC%8F%E3%80%82%3C/p%3E%3Cp%3E%E4%B9%8B%E5%89%8D%EF%BC%8C%E6%88%91%E4%BB%AC%E5%9C%A8for%E5%BE%AA%E7%8E%AF%E4%B8%AD%E7%94%A8%E8%BF%87%3Ccode%3Erange%3C/code%3E%E3%80%82%E8%BF%99%E6%A0%B7%EF%BC%8C%E6%89%80%E6%9C%89%E6%9C%89%E4%B8%8A%E9%99%90%E5%80%BC%E5%BE%97range%E9%83%BD%E6%98%AF%E8%BF%AD%E4%BB%A3%E5%99%A8%E4%BA%86%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E4%BB%AC%E6%9C%89%3Ccode%3Enext%3C/code%3E%E5%87%BD%E6%95%B0%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20std::ops::Range&amp;lt;u32&amp;gt;%20%E6%98%AF%E4%B8%80%E4%B8%AA%E8%BF%AD%E4%BB%A3%E5%99%A8%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_v1%3C/span%3E%20=%20(%3Cspan%20class=%22number%22%3E0u32%3C/span%3E..%3Cspan%20class=%22number%22%3E10%3C/span%3E).%3Cspan%20class=%22title%20function_%20invoke__%22%3Enext%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20std::ops::RangeFrom&amp;lt;u32&amp;gt;%20%E6%98%AF%E4%B8%80%E4%B8%AA%E8%BF%AD%E4%BB%A3%E5%99%A8%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_v2%3C/span%3E%20=%20(%3Cspan%20class=%22number%22%3E5u32%3C/span%3E..).%3Cspan%20class=%22title%20function_%20invoke__%22%3Enext%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%9Astd::ops::RangeTo&amp;lt;u32&amp;gt;%20%E4%B8%8D%E6%98%AF%E4%B8%80%E4%B8%AA%E8%BF%AD%E4%BB%A3%E5%99%A8%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20let%20_v3%20=%20(..8u32).next();%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%9Astd::ops::RangeFull%20%E4%B8%8D%E6%98%AF%E4%B8%80%E4%B8%AA%E8%BF%AD%E4%BB%A3%E5%99%A8%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20let%20_v4%20=%20(..).next();%3C/span%3E%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E9%99%A4%E4%BA%86%E5%AD%97%E7%AC%A6%E4%B9%8B%E5%A4%96%EF%BC%8C%E4%B9%9F%E5%8F%AF%E4%BB%A5%E5%AF%B9%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%AF%B9%E5%BA%94%E7%9A%84%E5%AD%97%E8%8A%82%E8%BF%9B%E8%A1%8C%E8%BF%AD%E4%BB%A3%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ebyte%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;quot;%E2%82%AC%C3%A8e&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Ebytes%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20byte);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E6%89%93%E5%8D%B0%E4%B8%BA%EF%BC%9A%E2%80%9C%3Ccode%3E226%20130%20172%20195%20168%20101%3C/code%3E%E2%80%9D%E3%80%82%E5%89%8D%E9%9D%A2%E4%B8%89%E4%B8%AA%E6%95%B0%E8%A1%A8%E7%A4%BA%E7%9A%84%E6%98%AF%3Ccode%3E%E2%82%AC%3C/code%3E%E5%AD%97%E7%AC%A6%EF%BC%9B%E7%B4%A7%E6%8E%A5%E7%9D%80%E7%9A%84%E4%B8%A4%E4%B8%AA%E8%A1%A8%E7%A4%BA%E7%9A%84%E6%98%AF%3Ccode%3E%C3%A8%3C/code%3E%E5%AD%97%E7%AC%A6%EF%BC%9B%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E6%95%B0%E8%A1%A8%E7%A4%BA%E7%9A%84%E6%98%AF%3Ccode%3Ee%3C/code%3E%E5%AF%B9%E5%BA%94ASCII%E7%A0%81%E3%80%82%3C/p%3E%3Cp%3E%E8%AF%A5%E6%AE%B5%E7%A8%8B%E5%BA%8F%E5%8F%AF%E4%BB%A5%E6%8B%86%E5%88%86%E4%B8%BA%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Estring%3C/span%3E:%20&amp;amp;%3Cspan%20class=%22type%22%3Estr%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;%E2%82%AC%C3%A8e&amp;quot;%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Estring_it%3C/span%3E:%20std::%3Cspan%20class=%22type%22%3Estr%3C/span%3E::Bytes%20=%20string.%3Cspan%20class=%22title%20function_%20invoke__%22%3Ebytes%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ebyte%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20string_it%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20byte);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%85%B6%E4%B8%AD%EF%BC%8C%E5%89%8D%E4%B8%80%E4%B8%AA%3Ccode%3Echars%3C/code%3E%E5%87%BD%E6%95%B0%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC%E7%B1%BB%E5%9E%8B%E6%98%AF%3Ccode%3Estd::str::Chars%3C/code%3E%EF%BC%8C%E8%BF%99%E4%B8%AA%E7%9A%84%3Ccode%3Ebytes%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E8%BF%94%E5%9B%9E%E7%9A%84%E5%80%BC%E7%B1%BB%E5%9E%8B%E6%98%AF%3Ccode%3Estd::str::Bytes%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%3Ccode%3EChars%3C/code%3E%E5%92%8C%3Ccode%3EBytes%3C/code%3E%E9%83%BD%E6%98%AF%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E8%BF%AD%E4%BB%A3%E7%B1%BB%E5%9E%8B%EF%BC%8C%E4%BB%A5%E5%8F%8A%3Ccode%3EChars%3C/code%3E%E7%9A%84%3Ccode%3Enext%3C/code%3E%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E7%9A%84%E6%98%AF%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E4%B8%8B%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%EF%BC%8C%E8%80%8C%E5%AF%B9%E4%BA%8E%3Ccode%3EBytes%3C/code%3E%E7%9A%84%3Ccode%3Enext%3C/code%3E%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E7%9A%84%E6%98%AF%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E4%B8%8B%E4%B8%80%E4%B8%AA%E5%AD%97%E8%8A%82%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E7%B1%BB%E5%87%BD%E6%95%B0%E5%92%8C%3Ccode%3Eas_bytes%3C/code%3E%E5%87%BD%E6%95%B0%E4%B8%8D%E5%90%8C%EF%BC%8C%E5%AE%83%E4%BB%AC%E8%BF%94%E5%9B%9E%E7%9A%84%E6%98%AF%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AF%B9%E5%BA%94%E5%85%B6%E5%AD%97%E8%8A%82%E4%B8%8A%E7%9A%84%E5%BC%95%E7%94%A8%E5%88%87%E7%89%87%E3%80%82%3C/p%3E%3Cp%3E%E5%85%B8%E5%9E%8B%E5%9C%B0%EF%BC%8C%E5%AF%B9%E4%BA%8Eslice%E3%80%81array%E6%88%96vector%E4%B9%9F%E4%B8%80%E6%A0%B7%E3%80%82%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%81slice%E3%80%81arrays%E3%80%81vectors%E9%83%BD%E4%B8%8D%E6%98%AF%E8%BF%AD%E4%BB%A3%E5%99%A8%E3%80%82%E4%BD%86%EF%BC%8C%E5%B0%B1%E5%A6%82%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%85%E5%90%AB%E4%B8%80%E4%B8%AA%E8%BF%AD%E4%BB%A3%E5%99%A8%3Ccode%3Echars%3C/code%3E%E5%87%BD%E6%95%B0%E4%B8%80%E6%A0%B7%EF%BC%8Cslice%E3%80%81array%E3%80%81vector%E5%90%8C%E6%A0%B7%E5%8C%85%E5%90%AB%E4%B8%80%E4%B8%AA%E8%BF%AD%E4%BB%A3%E5%87%BD%E6%95%B0%3Ccode%3Eiter%3C/code%3E%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eitem_ref%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20(&amp;amp;[%3Cspan%20class=%22number%22%3E11u8%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E,%20%3Cspan%20class=%22number%22%3E33%3C/span%3E]).%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20*item_ref%20+=%201;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20*item_ref);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eitem_ref%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20[%3Cspan%20class=%22number%22%3E44%3C/span%3E,%20%3Cspan%20class=%22number%22%3E55%3C/span%3E,%20%3Cspan%20class=%22number%22%3E66%3C/span%3E].%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20*item_ref%20+=%201;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20*item_ref);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eitem_ref%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22string%22%3E&amp;#x27;a&amp;#x27;%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;b&amp;#x27;%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;c&amp;#x27;%3C/span%3E].%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20*item_ref%20=%20if%20*item_ref%20==%20&amp;#x27;b&amp;#x27;%20&amp;#123;%20&amp;#x27;B&amp;#x27;%20&amp;#125;%20else%20&amp;#123;%20&amp;#x27;-&amp;#x27;%20&amp;#125;;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20*item_ref);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E6%89%93%E5%8D%B0%E5%87%BA%EF%BC%9A%E2%80%9C11%2022%2033%2044%2055%2066%20a%20b%20c%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E8%AF%A5%E7%A8%8B%E5%BA%8F%E5%8F%AF%E4%BB%A5%E6%94%B9%E4%B8%BA%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eslice%3C/span%3E:%20&amp;amp;[%3Cspan%20class=%22type%22%3Eu8%3C/span%3E]%20=%20&amp;amp;[%3Cspan%20class=%22number%22%3E11u8%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E,%20%3Cspan%20class=%22number%22%3E33%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eslice_it%3C/span%3E:%20std::slice::Iter&amp;lt;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E&amp;gt;%20=%20slice.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eitem_ref%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20slice_it%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20*item_ref%20+=%201;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20*item_ref);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Earr%3C/span%3E:%20[%3Cspan%20class=%22type%22%3Ei32%3C/span%3E;%20%3Cspan%20class=%22number%22%3E3%3C/span%3E]%20=%20[%3Cspan%20class=%22number%22%3E44%3C/span%3E,%20%3Cspan%20class=%22number%22%3E55%3C/span%3E,%20%3Cspan%20class=%22number%22%3E66%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Earr_it%3C/span%3E:%20std::slice::Iter&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E&amp;gt;%20=%20arr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eitem_ref%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20arr_it%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20*item_ref%20+=%201;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20*item_ref);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Evec%3C/span%3E:%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Echar%3C/span%3E&amp;gt;%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22string%22%3E&amp;#x27;a&amp;#x27;%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;b&amp;#x27;%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;c&amp;#x27;%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Evec_it%3C/span%3E:%20std::slice::Iter&amp;lt;%3Cspan%20class=%22type%22%3Echar%3C/span%3E&amp;gt;%20=%20vec.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eitem_ref%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20vec_it%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20*item_ref%20=%20if%20*item_ref%20==%20&amp;#x27;b&amp;#x27;%20&amp;#123;%20&amp;#x27;B&amp;#x27;%20&amp;#125;%20else%20&amp;#123;%20&amp;#x27;-&amp;#x27;%20&amp;#125;;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20*item_ref);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%3Ccode%3Eiter%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E4%BD%9C%E7%94%A8%E4%BA%8E%E7%B1%BB%E5%9E%8B%3Ccode%3ET%3C/code%3E%E7%9A%84%E5%88%87%E7%89%87%E7%9A%84%E6%AF%8F%E4%B8%AA%E5%85%83%E7%B4%A0%EF%BC%8C%E6%88%96%E4%BD%9C%E7%94%A8%E4%BA%8E%E7%B1%BB%E5%9E%8B%3Ccode%3ET%3C/code%3E%E7%9A%84%E6%95%B0%E7%BB%84%E7%9A%84%E6%AF%8F%E4%B8%AA%E5%85%83%E7%B4%A0%EF%BC%8C%E6%88%96%E4%BD%9C%E7%94%A8%E4%BA%8E%E7%B1%BB%E5%9E%8B%3Ccode%3ET%3C/code%3E%E7%9A%84%E5%90%91%E9%87%8F%E7%9A%84%E6%AF%8F%E4%B8%AA%E5%85%83%E7%B4%A0%E3%80%82%E8%BF%94%E5%9B%9E%E5%80%BC%E7%B1%BB%E5%9E%8B%E4%B8%BA%3Ccode%3Estd::slice::Iter&amp;lt;T&amp;gt;%3C/code%3E%E3%80%82%E6%AD%A3%E5%A6%82%E5%85%B6%E5%90%8D%EF%BC%8C%E5%AE%83%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC%E7%B1%BB%E5%9E%8B%E6%98%AF%E4%B8%80%E4%B8%AA%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%B1%BB%E5%9E%8B%EF%BC%8C%E5%9B%A0%E6%AD%A4%E5%AE%83%E5%8F%AF%E4%BB%A5%E7%94%A8%E4%BA%8E%3Ccode%3Efor%3C/code%3E%E5%BE%AA%E7%8E%AF%E4%B8%AD%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E5%9C%A8%E7%B1%BB%E5%9E%8B%E4%B8%BA%3Ccode%3ET%3C/code%3E%E7%9A%84%E8%8C%83%E5%9B%B4%E4%B8%8A%E8%BF%AD%E4%BB%A3%E6%97%B6%EF%BC%8Cloop%E5%8F%98%E9%87%8F%E7%9A%84%E7%B1%BB%E5%9E%8B%E6%98%AF%3Ccode%3ET%3C/code%3E%EF%BC%9B%E5%BD%93%E5%9C%A8%E5%AD%97%E7%AC%A6%E8%BF%AD%E4%BB%A3%E5%99%A8%E4%B8%8A%E8%BF%AD%E4%BB%A3%E6%97%B6%EF%BC%8Cloop%E5%86%85%E5%8F%98%E9%87%8F%E7%9A%84%E7%B1%BB%E5%9E%8B%E6%98%AF%3Ccode%3Echar%3C/code%3E%EF%BC%9B%E7%9B%B8%E5%8F%8D%EF%BC%8C%E5%BD%93%E5%9C%A8%E7%B1%BB%E5%9E%8B%E4%B8%BA%3Ccode%3ET%3C/code%3E%E7%9A%84%E5%BA%8F%E5%88%97%E4%B8%8A%E8%BF%AD%E4%BB%A3%E6%97%B6%EF%BC%8C%E5%AE%83%E7%9A%84%E5%BE%AA%E7%8E%AF%E5%8F%98%E9%87%8F%E6%98%AF%3Ccode%3E&amp;amp;T%3C/code%3E%E7%B1%BB%E5%9E%8B%EF%BC%8C%E5%8D%B3%E5%AE%83%E7%9A%84%E5%BC%95%E7%94%A8%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E8%A6%81%E8%AE%BF%E9%97%AE%E4%B8%80%E4%B8%AA%E5%BA%8F%E5%88%97%E7%9A%84%E4%B8%8A%E8%BF%AD%E4%BB%A3%E7%9A%84%E5%8F%98%E9%87%8F%EF%BC%8C%E9%9C%80%E8%A6%81%E4%BD%BF%E7%94%A8%E5%8F%8D%E5%BC%95%E7%94%A8%E7%AC%A6%E5%8F%B7(%3Ccode%3E*%3C/code%3E)%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8A%E9%9D%A2%E4%BB%A3%E7%A0%81%E6%9C%89%E4%B8%89%E5%A4%84%E6%B3%A8%E9%87%8A%E6%8E%89%E7%9A%84%E8%AF%AD%E5%8F%A5%EF%BC%8C%E5%9B%A0%E4%B8%BA%E6%98%AF%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%E3%80%82%E4%BA%8B%E5%AE%9E%E4%B8%8A%EF%BC%8C%E5%BE%AA%E7%8E%AF%E4%BD%93%E5%86%85%E7%9A%84%E5%8F%98%E9%87%8F%E6%98%AF%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%9A%84%E3%80%82%E8%BF%99%E7%A7%8D%E4%B8%8D%E5%8F%AF%E5%8F%98%E6%80%A7%EF%BC%8C%E6%98%AF%E5%9F%BA%E4%BA%8E%3Ccode%3Eslice%3C/code%3E%E3%80%81%3Ccode%3Earr%3C/code%3E%E5%92%8C%3Ccode%3Evec%3C/code%3E%E7%9A%84%E4%B8%8D%E5%8F%AF%E5%8F%98%E5%A3%B0%E6%98%8E%E7%9A%84%E5%8F%98%E9%87%8F%E5%AE%9A%E4%B9%89%E3%80%82%3C/p%3E%3Cp%3E%E5%89%8D%E9%9D%A2%E7%9C%8B%E5%88%B0%EF%BC%8C%3Ccode%3Ebyte%3C/code%3E%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%9A%84%E5%88%9B%E5%BB%BA%E6%98%AF%E4%BD%BF%E7%94%A8%E4%BA%86%3Ccode%3Ebytes%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ebyte%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;quot;%E2%82%AC%C3%A8e&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Ebytes%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20byte);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%9C%89%E5%8F%A6%E5%A4%96%E4%B8%80%E7%A7%8D%E5%AF%B9%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%AD%97%E8%8A%82%E8%BF%AD%E4%BB%A3%E7%9A%84%E6%96%B9%E6%B3%95%EF%BC%8C%E9%A6%96%E5%85%88%E6%98%AF%E5%88%9B%E5%BB%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AD%97%E8%8A%82%E7%9A%84%E5%88%87%E7%89%87%E5%BC%95%E7%94%A8%EF%BC%8C%E5%8D%B3%E4%BD%BF%E7%94%A8%3Ccode%3Eas_bytes%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E7%84%B6%E5%90%8E%E5%86%8D%E5%AF%B9%E5%85%B6%E5%88%87%E7%89%87%E5%BC%95%E7%94%A8%E8%BF%AD%E4%BB%A3%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ebyte%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;quot;%E2%82%AC%C3%A8e&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eas_bytes%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20byte);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Ch2%20id=%22Iterations-Without-Mutation%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Iterations-Without-Mutation%22%3E%C2%B6%3C/a%3EIterations%20Without%20Mutation%3C/h2%3E%3Cp%3E%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%9A%84%E5%85%B8%E5%9E%8B%E7%94%A8%E6%B3%95%E9%80%9A%E5%B8%B8%E4%BB%85%E7%94%A8%E6%9D%A5%E8%AF%BB%E5%8F%96%E5%BA%8F%E5%88%97%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E8%A6%81%E5%AF%B9%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%8A%E7%9A%84%E5%AD%97%E7%AC%A6%E8%BF%9B%E8%A1%8C%E8%BF%AD%E4%BB%A3%E6%97%B6%EF%BC%8C%E5%B0%9D%E8%AF%95%E6%94%B9%E5%8F%98%E5%AE%83%E6%98%AF%E8%8D%92%E8%AF%9E%E7%9A%84%EF%BC%8C%E5%9B%A0%E4%B8%BA%E8%BF%99%E4%BA%9B%E5%AD%97%E7%AC%A6%E6%98%AF%E7%94%B1%E7%A1%AE%E5%88%87%E5%AD%98%E5%9C%A8%E7%9A%84%E4%B8%8D%E5%90%8C%E5%AD%97%E8%8A%82%E6%95%B0%E8%A1%A8%E7%A4%BA%E3%80%82%E5%81%87%E8%AE%BE%EF%BC%8C%E5%AD%97%E7%AC%A6%3Ccode%3E%C3%A8%3C/code%3E%E7%94%B1%E4%B8%A4%E4%B8%AA%E5%AD%97%E8%8A%82%E8%A1%A8%E7%A4%BA%EF%BC%8C%E9%82%A3%E4%B9%88%3Ccode%3Ee%3C/code%3E%E5%BF%85%E9%A1%BB%E7%94%B1%E4%B8%80%E4%B8%AA%E5%AD%97%E8%8A%82%E8%A1%A8%E7%A4%BA%E3%80%82%E8%BF%99%E5%9C%A8Rust%E6%A0%87%E5%87%86%E5%BA%93%EF%BC%8C%E6%B2%A1%E6%B3%95%E9%80%9A%E8%BF%87%E5%AD%97%E7%AC%A6%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%94%B9%E5%8F%98%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E7%9A%84%E5%81%9A%E6%B3%95(%E6%AF%94%E5%A6%82%3Ccode%3Ee%3C/code%3E)%EF%BC%8C%E6%9D%A5%E6%94%B9%E5%8F%98%E5%8F%A6%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6(%E6%AF%94%E5%A6%82%3Ccode%3E%C3%A8%3C/code%3E)%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E5%AF%B9%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%AD%97%E8%8A%82%E8%BF%9B%E8%A1%8C%E8%BF%AD%E4%BB%A3%E6%97%B6%EF%BC%8C%E8%A6%81%E5%AF%B9%E5%85%B6%E8%BF%9B%E8%A1%8C%E5%8F%98%E6%9B%B4%E6%98%AF%E4%B8%8D%E5%AE%89%E5%85%A8%E7%9A%84%EF%BC%8C%E5%9B%A0%E4%B8%BA%E6%96%B0%E5%88%9B%E5%BB%BA%E7%9A%84%E5%AD%97%E8%8A%82%E5%8F%AF%E8%83%BD%E4%B8%8D%E6%98%AF%E4%B8%80%E4%B8%AA%E6%9C%89%E6%95%88%E7%9A%84UTF-8%E5%AD%97%E7%AC%A6%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8CRust%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%AD%E4%B9%9F%E6%B2%A1%E6%9C%89%E5%8A%9E%E6%B3%95%EF%BC%8C%E9%80%9A%E8%BF%87%E8%BF%AD%E4%BB%A3%E6%9B%B4%E6%94%B9%E5%AD%97%E8%8A%82%E7%9A%84%E6%96%B9%E5%BC%8F%EF%BC%8C%E6%9D%A5%E6%9B%B4%E6%94%B9%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E9%80%9A%E8%BF%87%3Ccode%3Echars()%3C/code%3E%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%87%BD%E6%95%B0%E5%AF%B9%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84Range%E8%BF%9B%E8%A1%8C%E8%BF%AD%E4%BB%A3%E6%97%B6%EF%BC%8C%E5%BE%AA%E7%8E%AF%E4%BD%93%E5%86%85%E7%9A%84%E5%8F%98%E9%87%8F%E5%80%BC%EF%BC%8C%E4%BC%9A%E4%BD%BF%E7%94%A8Range%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%9C%80%E5%85%88%E5%88%9D%E5%A7%8B%E5%8C%96%E6%97%B6%E5%80%99%E7%9A%84%E5%80%BC%EF%BC%8C%E5%B0%BD%E7%AE%A1%E5%9C%A8%E5%BE%AA%E7%8E%AF%E4%BD%93%E5%86%85%E5%8F%91%E7%94%9F%E4%BA%86%E6%9B%B4%E6%94%B9%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Er%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;abc&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Echars%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20r%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Er%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;XY&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Echars%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;;%20&amp;quot;%3C/span%3E,%20i,%20r.%3Cspan%20class=%22title%20function_%20invoke__%22%3Enext%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%B0%86%E4%BC%9A%E6%89%93%E5%8D%B0%E8%BE%93%E5%87%BA%EF%BC%9A%E2%80%9Ca%20x;%20b%20X;%20c%20X;%E2%80%9D%E3%80%82%E8%99%BD%E7%84%B6%3Ccode%3Er%3C/code%3E%E7%9A%84%E7%9A%84%E5%80%BC%E5%9C%A8%E5%BE%AA%E7%8E%AF%E5%86%85%E9%83%A8%E8%BF%9B%E8%A1%8C%E4%BA%86resign%EF%BC%8C%E4%BD%86%E5%BE%AA%E7%8E%AF%E4%BD%93%E4%BB%8D%E7%84%B6%E4%BD%BF%E7%94%A8%E7%9A%84%E6%97%B6%E5%88%9D%E5%A7%8B%E5%8C%96%E6%97%B6%E5%80%99%E7%9A%84%E5%80%BC%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E4%BB%BB%E4%BD%95%E8%BF%AD%E4%BB%A3%E4%B8%AD%E5%BE%AA%E7%8E%AF%E5%8F%98%E9%87%8F%E8%A2%AB%E5%88%9D%E5%A7%8B%E5%8C%96%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Er%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..%3Cspan%20class=%22number%22%3E5%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3Emut%3C/span%3E%20i%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20r%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ei%20+=%20%3Cspan%20class=%22number%22%3E10%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20i);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E9%87%8C%E4%BC%9A%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C10%2011%2012%2013%2014%E2%80%9D%EF%BC%8C%E5%9B%A0%E4%B8%BA%3Ccode%3Ei%3C/code%3E%E5%9C%A8%E5%BE%AA%E7%8E%AF%E4%BD%93%E5%86%85%E4%BD%BF%E7%94%A8%E4%BA%86%3Ccode%3Emut%3C/code%3E%E4%BB%8E%E5%8F%A5%E5%AE%9A%E4%B9%89%EF%BC%8C%E4%BD%86%3Ccode%3Ei%3C/code%3E%E5%9C%A8%E4%B8%8B%E4%B8%80%E6%AC%A1%E8%BF%AD%E4%BB%A3%E4%BB%8D%E7%84%B6%E4%BC%9A%E8%A2%AB%E9%87%8D%E6%96%B0%E5%88%9D%E5%A7%8B%E5%8C%96%EF%BC%8C%3Ccode%3Er%3C/code%3E%E7%9A%84%E5%80%BC%E4%BE%9D%E7%84%B6%E4%B8%8D%E5%8F%98%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%AF%B9%E4%BA%8E%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8CRange%E6%9D%A5%E8%AF%B4%EF%BC%8C%E4%B8%8D%E8%83%BD%E9%80%9A%E8%BF%87%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%9A%84%E6%96%B9%E5%BC%8F%E6%9D%A5%E6%9B%B4%E6%94%B9%E5%AE%83%E5%86%85%E9%83%A8%E5%BA%8F%E5%88%97%E7%9A%84%E6%9D%A1%E7%9B%AE%E3%80%82%3C/p%3E%3Ch2%20id=%22Iterations-with-Mutation%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Iterations-with-Mutation%22%3E%C2%B6%3C/a%3EIterations%20with%20Mutation%3C/h2%3E%3Cp%3E%E4%BD%86%E6%9C%89%E6%97%B6%E5%80%99%EF%BC%8C%E7%A1%AE%E5%AE%9E%E4%BC%9A%E6%9C%89%E8%BF%99%E6%A0%B7%E7%9A%84%E9%9C%80%E6%B1%82%EF%BC%8C%E8%A6%81%E6%B1%82%E6%9B%B4%E6%94%B9%E5%BA%8F%E5%88%97%E7%9A%84%E5%86%85%E9%83%A8%E6%9D%A1%E7%9B%AE%E3%80%82%E5%89%8D%E9%9D%A2%E6%88%91%E7%9C%8B%E5%88%B0%E8%BF%AD%E4%BB%A3%E5%99%A8%E4%B8%8D%E8%83%BD%E5%A4%84%E7%90%86%E8%BF%99%E6%A0%B7%E7%9A%84%E9%9C%80%E6%B1%82%EF%BC%8C%E5%8D%B3%E4%BD%BF%E6%98%AF%E4%B8%80%E4%B8%AA%E5%8F%AF%E5%8F%98%E7%9A%84%E8%BF%AD%E4%BB%A3%E5%99%A8%E4%B9%9F%E4%B8%8D%E8%83%BD%E3%80%82%3C/p%3E%3Cp%3E%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E4%B8%80%E4%B8%AA%E5%8F%AF%E5%8F%98%E8%BF%AD%E4%BB%A3%E5%99%A8%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%88%96%E5%8F%AF%E8%83%BD%E9%80%9A%E8%BF%87%E5%8F%A6%E4%B8%80%E4%B8%AA%E5%BA%8F%E5%88%97%E7%9A%84%E8%BF%AD%E4%BB%A3%E8%BF%9B%E8%A1%8C%E5%88%9B%E5%BB%BA%EF%BC%8C%E8%80%8C%E4%B8%8D%E6%98%AF%E7%94%A8%E6%9D%A5%E6%94%B9%E5%8F%98%E8%BF%99%E4%B8%AA%E5%BA%8F%E5%88%97%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%80%E4%B8%AA%E5%8F%AF%E5%8F%98%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%9A%84%E5%8F%AF%E8%83%BD%E7%94%A8%E6%B3%95%E6%98%AF%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eslice1%3C/span%3E%20=%20&amp;amp;[%3Cspan%20class=%22number%22%3E3%3C/span%3E,%20%3Cspan%20class=%22number%22%3E4%3C/span%3E,%20%3Cspan%20class=%22number%22%3E5%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eslice2%3C/span%3E%20=%20&amp;amp;[%3Cspan%20class=%22number%22%3E7%3C/span%3E,%20%3Cspan%20class=%22number%22%3E8%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Eiterator%3C/span%3E%20=%20slice1.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eitem_ref%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20iterator%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;[&amp;#123;&amp;#125;]%20&amp;quot;%3C/span%3E,%20*item_ref);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eiterator%20=%20slice2.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eitem_ref%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20iterator%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;(&amp;#123;&amp;#125;)%20&amp;quot;%3C/span%3E,%20*item_ref);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%8F%98%E9%87%8F%3Ccode%3Eiterator%3C/code%3E%E9%A6%96%E5%85%88%E5%BC%95%E7%94%A8%E5%8F%82%E8%80%83%E4%BA%86%E5%BA%8F%E5%88%97%3Ccode%3Eslice1%3C/code%3E%EF%BC%8C%E7%84%B6%E5%90%8E%E6%98%AF%3Ccode%3Eslice2%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%80%E4%B8%AA%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%B1%BB%E4%BC%BC%E4%BA%8E%E4%B8%80%E4%B8%AA%E5%BC%95%E7%94%A8%EF%BC%8C%E8%BF%99%E9%87%8C%E4%B8%80%E4%B8%AA%E5%8F%AF%E5%8F%98%E5%BC%95%E7%94%A8(mutable%20reference)%E4%B8%8D%E7%AD%89%E5%90%8C%E4%BA%8E%E4%B8%80%E4%B8%AA%E5%8F%AF%E5%8F%98%E5%AF%B9%E8%B1%A1(a%20reference%20to%20a%20mutable%20object)%E7%9A%84%E5%BC%95%E7%94%A8%E8%BF%99%E4%B8%AA%E6%A6%82%E5%BF%B5%E3%80%82%3C/p%3E%3Cp%3E%E4%BD%86%E5%A6%82%E6%9E%9C%E4%BD%A0%E6%83%B3%E9%80%9A%E8%BF%87%E4%B8%80%E4%B8%AA%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%9D%A5%E5%8F%98%E6%9B%B4%E8%BF%99%E6%A0%B7%E4%B8%80%E4%B8%AA%E5%BA%8F%E5%88%97%EF%BC%8C%E4%BD%A0%E4%B8%8D%E8%83%BD%E4%BD%BF%E7%94%A8%E5%B8%B8%E8%A7%84%E7%9A%84%E8%BF%AD%E4%BB%A3%E5%99%A8(%E5%8F%AF%E5%8F%98%E7%9A%84mutable%E6%88%96%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%9A%84immutable)%EF%BC%8C%E5%8D%B3%E4%BD%BF%E6%98%AF%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Eslice%3C/span%3E%20=%20&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20[%3Cspan%20class=%22number%22%3E3%3C/span%3E,%20%3Cspan%20class=%22number%22%3E4%3C/span%3E,%20%3Cspan%20class=%22number%22%3E5%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Eiterator%3C/span%3E%20=%20slice.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3Emut%3C/span%3E%20item_ref%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20iterator%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E*item_ref%20+=%20%3Cspan%20class=%22number%22%3E1%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20slice);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%B0%BD%E7%AE%A1%E8%BF%99%E6%AE%B5%E7%A8%8B%E5%BA%8F%E6%9C%89%E5%A5%BD%E5%87%A0%E5%A4%84%E7%94%A8%E5%88%B0%E4%BA%86%3Ccode%3Emut%3C/code%3E%E4%BB%8E%E5%8F%A5%EF%BC%8C%E5%AE%83%E5%9C%A8%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5%E5%86%85%E4%BA%A7%E7%94%9F%E4%BA%86%E4%B8%80%E4%B8%AA%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%EF%BC%8C%E5%9B%A0%E4%B8%BA%3Ccode%3E*item_ref%3C/code%3E%E4%BB%8D%E7%84%B6%E6%98%AF%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%9A%84%E3%80%82%3C/p%3E%3Cp%3E%E6%89%80%E4%BB%A5%EF%BC%8C%E4%BD%A0%E9%9C%80%E8%A6%81%E5%8F%A6%E5%A4%96%E4%B8%80%E7%A7%8D%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%B1%BB%E5%9E%8B%EF%BC%8C%E5%8F%AF%E5%8F%98%E8%BF%AD%E4%BB%A3%E5%99%A8(%3Cstrong%3E%3Ccode%3Emutating%20iterator%3C/code%3E%3C/strong%3E%20)%EF%BC%8C%E5%AE%83%E5%BF%85%E9%A1%BB%E7%94%B1%E4%B8%80%E4%B8%AA%E5%8F%AF%E5%8F%98%E5%BA%8F%E5%88%97%E8%BF%9B%E8%A1%8C%E5%88%9D%E5%A7%8B%E5%8C%96%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eslice%3C/span%3E%20=%20&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20[%3Cspan%20class=%22number%22%3E3%3C/span%3E,%20%3Cspan%20class=%22number%22%3E4%3C/span%3E,%20%3Cspan%20class=%22number%22%3E5%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eiterator%3C/span%3E%20=%20slice.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter_mut%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eitem_ref%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20iterator%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E*item_ref%20+=%20%3Cspan%20class=%22number%22%3E1%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20slice);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C%3Ccode%3E[4,%205,%206]%3C/code%3E%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E9%99%A4%E4%BA%86%E5%88%A0%E6%8E%89%E4%B8%80%E4%BA%9B%E4%B8%8D%E5%BF%85%E8%A6%81%E7%9A%84%3Ccode%3Emut%3C/code%3E%E4%BB%8E%E5%8F%A5%EF%BC%8C%E4%B8%8E%E4%B8%8A%E4%B8%80%E6%AE%B5%E4%BB%A3%E7%A0%81%E4%BE%A7%E9%87%8D%E4%BA%8E%E7%9B%B8%E6%AF%94%EF%BC%8C%E6%AD%A4%E5%A4%84%E5%B0%86%3Ccode%3Eiter%3C/code%3E%E8%B0%83%E7%94%A8%E6%9B%BF%E6%8D%A2%E4%B8%BA%E4%BA%86%3Ccode%3Eiter_mut%3C/code%3E%E3%80%82%E9%A1%BE%E5%90%8D%E6%80%9D%E4%B9%89%EF%BC%8C%E5%87%BD%E6%95%B0%E8%A1%A8%E8%BF%B0%E4%B8%BA%EF%BC%8C%E2%80%9Cget%20an%20iterator%20to%20read%20it%E2%80%9D%EF%BC%8C%E2%80%9Cget%20an%20iterator%20to%20mutate%20it%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E4%BD%A0%E8%BF%98%E5%8F%AF%E4%BB%A5%E6%98%BE%E5%BC%8F%E6%8C%87%E5%AE%9A%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%9A%84%E7%B1%BB%E5%9E%8B%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eslice%3C/span%3E%20=%20&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20[%3Cspan%20class=%22number%22%3E3%3C/span%3E,%20%3Cspan%20class=%22number%22%3E4%3C/span%3E,%20%3Cspan%20class=%22number%22%3E5%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eiterator%3C/span%3E:%20std::slice::IterMut&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E&amp;gt;%20=%20slice.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter_mut%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eitem_ref%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20iterator%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E*item_ref%20+=%20%3Cspan%20class=%22number%22%3E1%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20slice);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%85%B6%E4%B8%AD%EF%BC%8C%3Ccode%3Eiter%3C/code%3E%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%3Ccode%3EIter&amp;lt;T&amp;gt;%3C/code%3E%E7%9A%84%E5%80%BC%E7%B1%BB%E5%9E%8B%EF%BC%8C%3Ccode%3Eiter_mut%3C/code%3E%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%3Ccode%3EIterMut&amp;lt;T&amp;gt;%3C/code%3E%E7%9A%84%E5%80%BC%E7%B1%BB%E5%9E%8B%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%9E%E5%88%B0%E4%B8%8A%E4%B8%AA%E5%B0%8F%E8%8A%82%E5%85%B3%E4%BA%8E%E5%8F%98%E6%9B%B4slice%E3%80%81array%E3%80%81vector%E5%85%83%E7%B4%A0%E7%9A%84%E5%80%BC%E7%9A%84%E9%97%AE%E9%A2%98%EF%BC%8C%E4%B8%8B%E9%9D%A2%E6%98%AF%E5%85%B6%E5%90%8C%E6%A0%B7%E7%9A%84%E5%AE%9E%E7%8E%B0%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eitem_ref%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20(&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20[%3Cspan%20class=%22number%22%3E11u8%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E,%20%3Cspan%20class=%22number%22%3E33%3C/span%3E]).%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter_mut%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E*item_ref%20+=%20%3Cspan%20class=%22number%22%3E1%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20*item_ref);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eitem_ref%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20[%3Cspan%20class=%22number%22%3E44%3C/span%3E,%20%3Cspan%20class=%22number%22%3E55%3C/span%3E,%20%3Cspan%20class=%22number%22%3E66%3C/span%3E].%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter_mut%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E*item_ref%20+=%20%3Cspan%20class=%22number%22%3E1%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20*item_ref);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eitem_ref%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22string%22%3E&amp;#x27;a&amp;#x27;%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;b&amp;#x27;%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;c&amp;#x27;%3C/span%3E].%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter_mut%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E*item_ref%20=%20%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20*item_ref%20==%20%3Cspan%20class=%22string%22%3E&amp;#x27;b&amp;#x27;%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22string%22%3E&amp;#x27;B&amp;#x27;%3C/span%3E%20&amp;#125;%20%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22string%22%3E&amp;#x27;-&amp;#x27;%3C/span%3E%20&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20*item_ref);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%B0%86%E4%BC%9A%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C12%2013%2034%2045%2056%2067%20-%20B%20-%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E8%AF%A5%E6%AE%B5%E7%A8%8B%E5%BA%8F%E5%8F%AF%E4%BB%A5%E6%8B%86%E5%88%86%E4%B8%BA%E4%B8%8B%E9%9D%A2%E7%9A%84%E4%BB%A3%E7%A0%81%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eslice%3C/span%3E:%20&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20[%3Cspan%20class=%22type%22%3Eu8%3C/span%3E]%20=%20&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20[%3Cspan%20class=%22number%22%3E11u8%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E,%20%3Cspan%20class=%22number%22%3E33%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eslice_it%3C/span%3E:%20std::slice::IterMut&amp;lt;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E&amp;gt;%20=%20slice.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter_mut%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eitem_ref%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20slice_it%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E*item_ref%20+=%20%3Cspan%20class=%22number%22%3E1%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20*item_ref);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Earr%3C/span%3E:%20[%3Cspan%20class=%22type%22%3Ei32%3C/span%3E;%20%3Cspan%20class=%22number%22%3E3%3C/span%3E]%20=%20[%3Cspan%20class=%22number%22%3E44%3C/span%3E,%20%3Cspan%20class=%22number%22%3E55%3C/span%3E,%20%3Cspan%20class=%22number%22%3E66%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Earr_it%3C/span%3E:%20std::slice::IterMut&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E&amp;gt;%20=%20arr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter_mut%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eitem_ref%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20arr_it%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E*item_ref%20+=%20%3Cspan%20class=%22number%22%3E1%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20*item_ref);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Evec%3C/span%3E:%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Echar%3C/span%3E&amp;gt;%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22string%22%3E&amp;#x27;a&amp;#x27;%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;b&amp;#x27;%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;c&amp;#x27;%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Evec_it%3C/span%3E:%20std::slice::IterMut&amp;lt;%3Cspan%20class=%22type%22%3Echar%3C/span%3E&amp;gt;%20=%20vec.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter_mut%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eitem_ref%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20vec_it%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E*item_ref%20=%20%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20*item_ref%20==%20%3Cspan%20class=%22string%22%3E&amp;#x27;b&amp;#x27;%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22string%22%3E&amp;#x27;B&amp;#x27;%3C/span%3E%20&amp;#125;%20%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22string%22%3E&amp;#x27;-&amp;#x27;%3C/span%3E%20&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20*item_ref);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E9%87%8C%E4%BB%85%E6%98%AF%E5%B0%86%E5%8E%9F%E6%9D%A5%E6%B3%A8%E9%87%8A%E9%83%A8%E5%88%86%E8%BF%98%E5%8E%9F%EF%BC%8C%E5%85%B6%E4%B8%AD%EF%BC%8C%3C/p%3E%3Cul%3E%3Cli%3E%3Ccode%3Eslice%3C/code%3E%E5%8F%98%E9%87%8F%E6%98%AF%E4%B8%80%E4%B8%AA%20%3Cstrong%3Emutable%3C/strong%3E%20%E5%AD%97%E8%8A%82slice%20reference%3C/li%3E%3Cli%3E%3Ccode%3Earr%3C/code%3E%E5%92%8C%3Ccode%3Evec%3C/code%3E%E5%8F%98%E9%87%8F%E6%98%AF%20%3Cstrong%3Emutable%3C/strong%3E%3C/li%3E%3Cli%3E%E4%B8%89%E5%A4%84%E7%9A%84%3Ccode%3Eiter%3C/code%3E%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%EF%BC%8C%E6%9B%BF%E6%8D%A2%E4%B8%BA%E4%BA%86%3Ccode%3Eiter_mut%3C/code%3E%3C/li%3E%3Cli%3E%3Ccode%3Eiter_mut%3C/code%3E%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%3Ccode%3EIterMut%3C/code%3E%E6%B3%9B%E5%9E%8B%E5%80%BC%E7%B1%BB%E5%9E%8B%3C/li%3E%3Cli%3E%E5%BE%AA%E7%8E%AF%E4%B8%AD%E7%94%B1%E5%8F%98%E9%87%8F%3Ccode%3Eitem_ref%3C/code%3E%E5%BC%95%E7%94%A8%E7%9A%84%E5%85%83%E7%B4%A0%E5%8F%91%E7%94%9F%E4%BA%86%E5%8F%98%E6%9B%B4%3C/li%3E%3C/ul%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E5%BC%95%E7%94%A8%E4%B8%80%E6%AE%B5%E7%A8%8B%E5%BA%8F%E6%9D%A5%E8%AF%81%E6%98%8E%E5%8E%9F%E7%94%9F%E6%95%B0%E6%8D%AE%E7%9A%84%E5%8F%98%E6%9B%B4%E5%B7%B2%E7%BB%8F%E7%94%9F%E6%95%88%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eslice%3C/span%3E%20=%20&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20[%3Cspan%20class=%22number%22%3E11u8%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E,%20%3Cspan%20class=%22number%22%3E33%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eitem_ref%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20slice.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter_mut%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E*item_ref%20+=%20%3Cspan%20class=%22number%22%3E1%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20slice);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E44%3C/span%3E,%20%3Cspan%20class=%22number%22%3E55%3C/span%3E,%20%3Cspan%20class=%22number%22%3E66%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eitem_ref%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20arr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eitem_mut%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E*item_ref%20+=%20%3Cspan%20class=%22number%22%3E1%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20arr);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Evec%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22string%22%3E&amp;#x27;a&amp;#x27;%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;b&amp;#x27;%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;c&amp;#x27;%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eitem_ref%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20vec.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter_mut%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E*item_ref%20=%20%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20*item_ref%20==%20%3Cspan%20class=%22string%22%3E&amp;#x27;b&amp;#x27;%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22string%22%3E&amp;#x27;B&amp;#x27;%3C/span%3E%20&amp;#125;%20%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22string%22%3E&amp;#x27;-&amp;#x27;%3C/span%3E%20&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;%20&amp;quot;%3C/span%3E,%20vec);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%B0%86%E4%BC%9A%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C%3Ccode%3E[12,%2023,%2034]%20[45,%2056,%2067]%20[&#39;-&#39;,%20&#39;B&#39;,%20&#39;-&#39;]%3C/code%3E%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E6%88%AA%E6%AD%A2%E7%9B%AE%E5%89%8D%E4%B8%BA%E6%AD%A2%EF%BC%8C%E6%8E%A5%E8%A7%A6%E4%BA%86%E5%9B%9B%E4%B8%AA%E8%BF%AD%E4%BB%A3%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%87%BD%E6%95%B0%EF%BC%9A%3Ccode%3Echars%3C/code%3E%E3%80%81%3Ccode%3Ebytes%3C/code%3E%E3%80%81%3Ccode%3Eiter%3C/code%3E%E3%80%81%3Ccode%3Eiter_mut%3C/code%3E%E3%80%82%E8%BF%99%E7%A7%8D%E4%B8%8D%E8%8E%B7%E5%8F%96%E8%BF%AD%E4%BB%A3%E5%99%A8%EF%BC%8C%E8%80%8C%E6%98%AF%E8%BF%94%E5%9B%9E%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%9A%84%E5%87%BD%E6%95%B0%EF%BC%8C%E7%A7%B0%E4%B8%BA%E2%80%9C%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%94%9F%E6%88%90%E5%99%A8(%20%3Cstrong%3Eiterator%20generators%3C/strong%3E%20)%E2%80%9D%E3%80%82%3C/p%3E%3Ch2%20id=%22An-Iterator-Adapter-filter%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#An-Iterator-Adapter-filter%22%3E%C2%B6%3C/a%3EAn%20Iterator%20Adapter:%20filter%3C/h2%3E%3Cp%3E%E8%AE%A9%E6%88%91%E4%BB%AC%E7%9C%8B%E7%9C%8B%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%9A%84%E4%B8%80%E4%BA%9B%E5%85%B6%E5%AE%83%E7%94%A8%E6%B3%95%E3%80%82%3C/p%3E%3Cp%3E%E4%BE%8B%E5%A6%82%EF%BC%8C%E7%BB%99%E4%B8%80%E4%B8%AA%E6%95%B0%E5%AD%97%E6%95%B0%E7%BB%84%EF%BC%8C%E5%A6%82%E4%BD%95%E5%B0%86%E6%89%80%E6%9C%89%E7%9A%84%E8%B4%9F%E6%95%B0%E6%89%93%E5%8D%B0%EF%BC%9F%3C/p%3E%3Cp%3E%E4%B8%80%E4%B8%AA%E5%8F%AF%E8%83%BD%E7%9A%84%E6%96%B9%E6%B3%95%E6%98%AF%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E66%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E8%3C/span%3E,%20%3Cspan%20class=%22number%22%3E43%3C/span%3E,%20%3Cspan%20class=%22number%22%3E19%3C/span%3E,%20%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E31%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3En%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20arr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20*n%20&amp;lt;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20n);%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E8%BE%93%E5%87%BA%EF%BC%9A%E2%80%9C-8%20-31%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E4%BD%86%E5%8F%A6%E4%B8%80%E7%A7%8D%E5%8F%AF%E8%83%BD%E7%9A%84%E6%96%B9%E5%BC%8F%E6%98%AF%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E66%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E8%3C/span%3E,%20%3Cspan%20class=%22number%22%3E43%3C/span%3E,%20%3Cspan%20class=%22number%22%3E19%3C/span%3E,%20%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E31%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3En%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20arr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Efilter%3C/span%3E(|x|%20**x%20&amp;lt;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20n);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%3Ccode%3Efilter%3C/code%3E%E5%87%BD%E6%95%B0%E5%AE%9A%E4%B9%89%E5%9C%A8Rust%E7%9A%84%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%AD%E3%80%82%E5%AE%83%E4%BD%9C%E7%94%A8%E4%BA%8E%E4%B8%80%E4%B8%AA%E8%BF%AD%E4%BB%A3%E5%99%A8%EF%BC%8C%E5%B9%B6%E6%8E%A5%E6%94%B6%E4%B8%80%E4%B8%AA%E9%97%AD%E5%8C%85%E4%BD%9C%E4%B8%BA%E5%8F%82%E6%95%B0%E3%80%82%E6%AD%A3%E5%A6%82%E5%85%B6%E5%90%8D%EF%BC%8C%E5%AE%83%E7%94%A8%E4%BA%8E%E2%80%9C%E8%BF%87%E6%BB%A4%E2%80%9D%E8%A2%AB%E8%BF%AD%E4%BB%A3%E7%9A%84%E5%BA%8F%E5%88%97%EF%BC%8C%E5%B9%B6%E4%B8%A2%E5%BC%83%E4%B8%8D%E6%BB%A1%E8%B6%B3%E9%97%AD%E5%8C%85%E5%AE%9A%E4%B9%89%E6%9D%A1%E4%BB%B6%E7%9A%84%E5%85%83%E7%B4%A0%EF%BC%8C%E5%89%A9%E4%B8%8B%E6%BB%A1%E8%B6%B3%E6%9D%A1%E4%BB%B6%E7%9A%84%E5%85%83%E7%B4%A0%E3%80%82%3C/p%3E%3Cp%3E%E9%97%AD%E5%8C%85%E5%9C%A8%E6%AF%8F%E6%AC%A1%E8%BF%AD%E4%BB%A3%E7%9A%84%E5%85%83%E7%B4%A0%E6%97%B6%E8%B0%83%E7%94%A8%EF%BC%8C%E4%BE%8B%E5%A6%82%EF%BC%8C%E8%BF%99%E9%87%8C%E6%AF%8F%E6%AC%A1%E8%BF%AD%E4%BB%A3%E7%9A%84%E5%85%83%E7%B4%A0%E4%B8%BA%3Ccode%3Ex%3C/code%3E%EF%BC%8C%3C/p%3E%3Cp%3E%3Ccode%3Efilter%3C/code%3E%E8%A6%81%E6%B1%82%E9%97%AD%E5%8C%85%E5%8F%82%E6%95%B0%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC%E7%B1%BB%E5%9E%8B%E5%BF%85%E9%A1%BB%E6%98%AFBoolean%E3%80%82%3C/p%3E%3Cp%3E%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%3Ccode%3Efilter%3C/code%3E%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%E8%BF%AD%E4%BB%A3%E5%99%A8(%3Ccode%3Enext%3C/code%3E%E5%87%BD%E6%95%B0%E8%A2%AB%E8%B0%83%E7%94%A8%E6%97%B6)%EF%BC%8C%E5%AE%83%E7%94%B1%E9%97%AD%E5%8C%85%E8%BF%94%E5%9B%9E%3Ccode%3Eture%3C/code%3E%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E4%BA%A7%E7%94%9F%EF%BC%8C%3C/p%3E%3Cp%3E%E6%88%91%E4%BB%AC%E6%B3%A8%E6%84%8F%E5%88%B0%EF%BC%8C%E6%88%91%E4%BB%AC%E4%BB%85%E5%85%B3%E5%BF%83%E6%98%AF%E5%90%A6%E4%B8%BA%E8%B4%9F%E6%95%B0%EF%BC%8C%E5%8D%B3%E9%97%AD%E5%8C%85%E5%86%85%E4%B8%BA%3Ccode%3Ex%20&amp;lt;%200%3C/code%3E%E5%8D%B3%E5%8F%AF%EF%BC%8C%E4%BD%86%E4%B8%BA%E4%BB%80%E4%B9%88%E8%BF%99%E9%87%8C%E4%BC%9A%E6%9C%89%E4%B8%A4%E4%B8%AA%E6%98%9F%E5%8F%B7(%20*%20)%EF%BC%9F%3C/p%3E%3Cp%3E%E9%A6%96%E5%85%88%EF%BC%8C%E4%B8%80%E4%B8%AA%E6%98%9F%E5%8F%B7%E6%98%AF%E6%98%8E%E7%A1%AE%E7%9A%84%E3%80%82%E5%9B%A0%E4%B8%BA%E6%88%91%E4%BB%AC%E5%B7%B2%E7%BB%8F%E8%AF%B4%E8%BF%87%EF%BC%8C%3Ccode%3Eiter%3C/code%3E%E5%87%BD%E6%95%B0%E4%BC%9A%E4%BA%A7%E7%94%9F%E5%BA%8F%E5%88%97%E5%85%83%E7%B4%A0%E7%9A%84%E5%BC%95%E7%94%A8%EF%BC%8C%E8%80%8C%E4%B8%8D%E6%98%AF%E5%85%83%E7%B4%A0%E8%87%AA%E8%BA%AB%E3%80%82%3C/p%3E%3Cp%3E%E5%8F%A6%E5%A4%96%EF%BC%8C%3Ccode%3Efilter%3C/code%3E%E5%87%BD%E6%95%B0%E4%B8%AD%EF%BC%8C%E5%AE%83%E6%8E%A5%E6%94%B6%E8%BF%AD%E4%BB%A3%E5%99%A8%E4%B8%AD%E7%9A%84%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%EF%BC%8C%E5%B9%B6%E5%B0%86%E8%AF%A5%E5%85%83%E7%B4%A0%E7%9A%84%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92%E7%BB%99%E9%97%AD%E5%8C%85%EF%BC%8C%E6%89%80%E4%BB%A5%E9%9C%80%E8%A6%81%E5%8F%A6%E4%B8%80%E4%B8%AA%E6%98%9F%E5%8F%B7(%20*%20)%E3%80%82%E5%9B%A0%E6%AD%A4%3Ccode%3Ex%3C/code%3E%E5%8F%98%E6%88%90%E4%BA%86%E5%BC%95%E7%94%A8%E7%9A%84%E5%BC%95%E7%94%A8%EF%BC%8C%E8%A6%81%E6%B7%BB%E5%8A%A0%E4%B8%A4%E4%B8%AA%E6%98%9F%E5%8F%B7%E6%89%8D%E8%83%BD%E8%8E%B7%E5%8F%96%E5%85%B6%E8%A1%A8%E7%A4%BA%E7%9A%84%E5%80%BC%E3%80%82%3C/p%3E%3Cp%3E%E6%88%91%E4%BB%AC%E8%AF%B4%E8%BF%87%3Ccode%3Efilter%3C/code%3E%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E5%8F%A6%E5%A4%96%E4%B8%80%E4%B8%AA%E8%BF%AD%E4%BB%A3%E5%99%A8%E3%80%82%E6%89%80%E4%BB%A5%E6%88%91%E4%BB%AC%E5%8F%AF%E4%BB%A5%E5%9C%A8%3Ccode%3Efor%3C/code%3E%E5%BE%AA%E7%8E%AF%E4%B8%AD%E4%BD%BF%E7%94%A8%EF%BC%8C%E5%B9%B6%E5%81%9A%E8%BF%AD%E4%BB%A3%E5%AE%9E%E7%8E%B0%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E6%A0%B7%E4%B8%80%E6%9D%A5%EF%BC%8C%3Ccode%3Efilter%3C/code%3E%E9%80%9A%E8%BF%87%E4%B8%80%E4%B8%AA%E8%BF%AD%E4%BB%A3%E5%99%A8%EF%BC%8C%E8%BF%94%E5%9B%9E%E5%8F%A6%E4%B8%80%E4%B8%AA%E8%BF%AD%E4%BB%A3%E5%99%A8%EF%BC%8C%E5%AE%83%E6%8B%85%E5%BD%93%E4%BA%86%E4%B8%80%E4%B8%AA%E2%80%9C%E8%BD%AC%E6%8D%A2%E5%99%A8transforms%E2%80%9D%E7%9A%84%E8%A7%92%E8%89%B2%E3%80%82%E8%BF%99%E7%A7%8D%E2%80%9Ctransformers%E2%80%9D%E9%80%9A%E5%B8%B8%E7%A7%B0%E4%B8%BA%E2%80%9C%E8%BF%AD%E4%BB%A3%E9%80%82%E9%85%8D%E5%99%A8(iterator%20adapters)%E2%80%9D%E3%80%82%E6%9C%AF%E8%AF%AD%E2%80%9Cadapter%E2%80%9D%E7%94%B1%E7%94%B5%E8%BF%9E%E6%8E%A5%E5%99%A8%E5%BE%97%E5%90%8D%EF%BC%9A%E5%A6%82%E6%9E%9C%E4%B8%80%E4%B8%AA%E6%8F%92%E5%A4%B4%E4%B8%8D%E8%83%BD%E9%80%82%E5%90%88%E6%8F%92%E5%BA%A7%EF%BC%8C%E4%BD%BF%E7%94%A8%E4%B8%80%E4%B8%AA%E9%80%82%E9%85%8D%E5%AB%81%E6%8E%A5%E3%80%82%3C/p%3E%3Ch2%20id=%22The-map-Iterator-Adapter%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#The-map-Iterator-Adapter%22%3E%C2%B6%3C/a%3EThe%20map%20Iterator%20Adapter%3C/h2%3E%3Cp%3E%3Ccode%3Emap%3C/code%3E%E5%87%BD%E6%95%B0%E7%9B%B8%E5%BD%93%E4%BA%8E%E4%B8%80%E4%B8%AA%E6%98%A0%E5%B0%84%EF%BC%8C%E5%8D%B3%3Ccode%3Ex:T%20-&amp;gt;%20y:T%3C/code%3E%EF%BC%8C%E5%AE%83%E8%A2%AB%E5%AE%9A%E4%B9%89%E5%9C%A8%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%AD%EF%BC%8C%3Ccode%3Emap%3C/code%3E%E5%87%BD%E6%95%B0%E4%B8%8D%E4%BC%9A%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0%EF%BC%8C%E8%80%8C%E6%98%AF%E5%B0%86%E9%87%8C%E9%9D%A2%E7%9A%84%E5%85%83%E7%B4%A0%E8%BF%9B%E8%A1%8C%E4%BA%86%E8%BD%AC%E6%8D%A2%EF%BC%8C%E5%8C%BA%E5%88%AB%E4%BA%8E%3Ccode%3Efilter%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%3Ccode%3Efilter%3C/code%3E%E5%85%83%E7%B4%A0%E4%BC%A0%E9%80%92%E7%BB%99%E9%97%AD%E5%8C%85%E5%8F%82%E6%95%B0%E7%9A%84%E5%80%BC%E6%98%AF%E4%B8%80%E4%B8%AA%E5%BC%95%E7%94%A8%EF%BC%8C%3Ccode%3Emap%3C/code%3E%E4%BC%A0%E9%80%92%E7%9A%84%E6%98%AF%E4%B8%80%E4%B8%AA%E5%80%BC%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E66%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E8%3C/span%3E,%20%3Cspan%20class=%22number%22%3E43%3C/span%3E,%20%3Cspan%20class=%22number%22%3E19%3C/span%3E,%20%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E31%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3En%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20arr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Emap%3C/span%3E(&amp;#123;x&amp;#125;%20*x%20*%20%3Cspan%20class=%22number%22%3E2%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20n);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Ch2%20id=%22The-enumerate-Iterator-Adapter%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#The-enumerate-Iterator-Adapter%22%3E%C2%B6%3C/a%3EThe%20enumerate%20Iterator%20Adapter%3C/h2%3E%3Cp%3E%E8%A6%81%E5%AF%B9%E4%B8%80%E4%B8%AA%E5%BA%8F%E5%88%97%E8%BF%9B%E8%A1%8C%E8%BF%AD%E4%BB%A3%EF%BC%8C%E6%9C%80%E4%BC%A0%E7%BB%9F%E5%81%9A%E6%B3%95%E6%98%AF%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22string%22%3E&amp;#x27;a&amp;#x27;%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;b&amp;#x27;%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;c&amp;#x27;%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..arr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;,%20&amp;quot;%3C/span%3E,%20i,%20arr[i]);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%BD%BF%E7%94%A8%E8%BF%AD%E4%BB%A3%E5%99%A8%EF%BC%8C%E5%8F%AF%E4%BB%A5%E9%81%BF%E5%85%8D%E5%87%BA%E7%8E%B0%E8%AE%A1%E6%95%B0%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Earrlet%3C/span%3E%20arr%20=%20[%3Cspan%20class=%22string%22%3E&amp;#x27;a&amp;#x27;%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;b&amp;#x27;%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;c&amp;#x27;%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ech%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20arr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;,%20&amp;quot;%3C/span%3E,%20ch);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%BD%86%E5%A6%82%E6%9E%9C%E4%BD%A0%E6%83%B3%E5%9C%A8%E6%96%B0%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E4%B8%8A%E5%AF%B9%E5%85%B6%E8%BF%9B%E8%A1%8C%E8%AE%A1%E6%95%B0%EF%BC%8C%E4%BD%A0%E5%8F%AF%E4%BB%A5%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22string%22%3E&amp;#x27;a&amp;#x27;%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;b&amp;#x27;%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;c&amp;#x27;%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20(i,%20ch)%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20arr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Eenumerate%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;,%20&amp;quot;%3C/span%3E,%20i,%20*ch);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%9C%A8%E7%AC%AC%E4%BA%8C%E8%A1%8C%EF%BC%8C%E5%BE%AA%E7%8E%AF%E5%8F%98%E9%87%8F%E5%AE%9E%E9%99%85%E4%B8%8A%E6%98%AF%E4%B8%80%E4%B8%AAtuple%EF%BC%8C%E7%AC%AC%E4%B8%80%E6%AC%A1%E8%BF%AD%E4%BB%A3%E6%97%B6%EF%BC%8C%3Ccode%3Ei%3C/code%3E%E7%9A%84%E5%80%BC%E6%98%AF0%EF%BC%8C%3Ccode%3Ech%3C/code%3E%E6%98%AF%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E6%95%B0%E7%BB%84%E7%9A%84%E5%9C%B0%E5%9D%80%EF%BC%8C%E6%AF%8F%E6%AC%A1%E8%BF%AD%E4%BB%A3%E6%97%B6%EF%BC%8C%3Ccode%3Ei%3C/code%3E%E5%92%8C%3Ccode%3Ech%3C/code%3E%E9%83%BD%E4%BC%9A%E9%80%92%E5%A2%9E%E3%80%82%3C/p%3E%3Cp%3E%3Ccode%3Eenumerate%3C/code%3E%E5%87%BD%E6%95%B0%E6%8E%A5%E6%94%B6%E4%B8%80%E4%B8%AA%E8%BF%AD%E4%BB%A3%E5%99%A8%EF%BC%8C%E5%B9%B6%E8%BF%94%E5%9B%9E%E5%8F%A6%E5%A4%96%E4%B8%80%E4%B8%AA%E8%BF%AD%E4%BB%A3%E5%99%A8%E3%80%82%E8%AF%A5%E8%BF%94%E5%9B%9E%E7%9A%84%E8%BF%AD%E4%BB%A3%E5%99%A8%EF%BC%8C%E5%9C%A8%E6%AF%8F%E6%AC%A1%E8%BF%AD%E4%BB%A3%E6%97%B6%E9%83%BD%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%E7%B1%BB%E5%9E%8B%E4%B8%BA%3Ccode%3E(usize,%20&amp;amp;char)%3C/code%3E%E7%9A%84tuple%EF%BC%8C%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%AD%97%E6%AE%B5%E6%98%AF%E4%B8%80%E4%B8%AA%E8%AE%A1%E6%95%B0%E5%99%A8%EF%BC%8C%E7%AC%AC%E4%BA%8C%E4%B8%AA%E5%AD%97%E6%AE%B5%E6%98%AF%E5%8E%9F%E6%9D%A5%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%85%83%E7%B4%A0%E7%9A%84%E4%B8%80%E4%BB%BD%E6%8B%B7%E8%B4%9D%E3%80%82%3C/p%3E%3Ch2%20id=%22An-Iterator-Consumer-any%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#An-Iterator-Consumer-any%22%3E%C2%B6%3C/a%3EAn%20Iterator%20Consumer:%20%3Ccode%3Eany%3C/code%3E%3C/h2%3E%3Cp%3E%E7%BB%99%E5%AE%9A%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%8C%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E5%8C%85%E5%90%AB%E6%9F%90%E4%B8%AA%E5%AD%97%E7%AC%A6%EF%BC%9F%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Es%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;Hello%20world!&amp;quot;%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ech%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;#x27;R&amp;#x27;%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Econtains%3C/span%3E%20=%20%3Cspan%20class=%22literal%22%3Efalse%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ec%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20s.%3Cspan%20class=%22title%20function_%20invoke__%22%3Echars%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20c%20==%20ch%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Econtains%20=%20%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&#92;&amp;quot;&amp;#123;&amp;#125;&#92;&amp;quot;%20&amp;#123;&amp;#125;%20&amp;#x27;&amp;#123;&amp;#125;&amp;#x27;.&amp;quot;%3C/span%3E,%20s,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20contains%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22string%22%3E&amp;quot;contains&amp;quot;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%20%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22string%22%3E&amp;quot;does%20not%20contain&amp;quot;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ech%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9CHello%20world!%E2%80%9D%20does%20not%20contain%20%E2%80%98R%E2%80%99.%3C/p%3E%3Cp%3E%E8%BF%99%E9%87%8C%E8%BF%9B%E8%A1%8C%E4%BA%86%E5%AD%97%E7%AC%A6%E5%A4%A7%E5%B0%8F%E5%86%99%E7%9A%84%E6%AF%94%E8%BE%83%E3%80%82%E5%A6%82%E6%9E%9C%E6%8D%A2%E4%B8%BA%3Ccode%3ER%3C/code%3E%EF%BC%8C%E5%88%99%E4%BC%9A%E8%BE%93%E5%87%BA%E7%AC%AC%E4%BA%8C%E7%A7%8D%E6%83%85%E5%86%B5%EF%BC%8C%E4%BD%A0%E5%8F%AF%E4%BB%A5%E6%9B%BF%E6%8D%A2%E4%B8%BA%E9%97%AD%E5%8C%85%E5%AE%9E%E7%8E%B0%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Es%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;Hello,%20world!&amp;quot;%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ech%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;#x27;R&amp;#x27;%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&#92;&amp;quot;&amp;#123;&amp;#125;&#92;&amp;quot;%20&amp;#123;&amp;#125;%20&amp;#x27;&amp;#123;&amp;#125;&amp;#x27;.&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Es,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20s.%3Cspan%20class=%22title%20function_%20invoke__%22%3Echars%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Eany%3C/span%3E(|c|%20c%20==%20ch)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22string%22%3E&amp;quot;contains&amp;quot;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%20%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22string%22%3E&amp;quot;does%20not%20contain&amp;quot;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ech);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E9%97%AD%E5%8C%85%E7%9A%84%E5%A5%BD%E5%A4%84%E6%98%AF%E6%9B%BF%E6%8D%A2%E6%8E%89%E5%8E%9F%E6%9D%A5%E4%BD%BF%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F%E7%9A%84%E5%81%9A%E6%B3%95%EF%BC%9B%E8%BF%99%E4%B8%AA%E5%8F%98%E9%87%8F%E6%9B%BF%E6%8D%A2%E4%B8%BA%E4%BA%86%E8%A1%A8%E8%BE%BE%E5%BC%8F%3Ccode%3Es.chars().any(|c|%20c%20==%20ch)%3C/code%3E%E7%9A%84%E5%AE%9E%E7%8E%B0%E3%80%82%3C/p%3E%3Cp%3E%E5%87%BD%E6%95%B0%3Ccode%3Eany()%3C/code%3E%E5%AE%9A%E4%B9%89%E5%9C%A8Rust%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%AD%EF%BC%8C%E5%AE%83%E4%BD%9C%E7%94%A8%E5%9C%A8%E8%BF%AD%E4%BB%A3%E5%99%A8%E4%B8%8A%E3%80%82%E5%AE%83%E7%9A%84%E7%9B%AE%E7%9A%84%E6%98%AF%E7%A1%AE%E5%AE%9A%E8%BF%AD%E4%BB%A3%E5%99%A8%E4%B8%AD%E7%9A%84%E4%BB%BB%E6%84%8F%E5%85%83%E7%B4%A0%E6%98%AF%E5%90%A6%E6%BB%A1%E8%B6%B3%E5%B8%83%E5%B0%94%E5%87%BD%E6%95%B0(%E5%8F%88%E5%90%8D%E2%80%9C%E9%A2%84%E8%AE%BE%E2%80%9Dpredicate)%E3%80%82%3C/p%3E%3Cp%3E%3Ccode%3Eany()%3C/code%3E%E5%87%BD%E6%95%B0%E5%BF%85%E9%A1%BB%E6%98%AF%E4%BD%9C%E7%94%A8%E5%9C%A8%E4%B8%80%E4%B8%AA%E8%BF%AD%E4%BB%A3%E5%99%A8%E4%B8%8A%E7%9A%84%EF%BC%8C%E4%BB%A5%E5%8F%8A%E5%BF%85%E9%A1%BB%E6%8E%A5%E6%94%B6%E4%B8%80%E4%B8%AA%E9%97%AD%E5%8C%85%E5%8F%82%E6%95%B0%E3%80%82%E9%97%AD%E5%8C%85%E5%86%85%E7%9A%84%E6%93%8D%E4%BD%9C%EF%BC%8C%E5%AF%B9%E8%BF%AD%E4%BB%A3%E5%86%85%E7%9A%84%E6%AF%8F%E4%B8%AA%E5%85%83%E7%B4%A0%E8%BF%9B%E8%A1%8C%E5%A4%84%E7%90%86%EF%BC%8C%E5%BD%93%E6%9F%90%E4%B8%AA%E5%A4%84%E7%90%86%E5%88%B0%E6%9F%90%E4%B8%AA%E5%85%83%E7%B4%A0%E8%BF%94%E5%9B%9E%3Ccode%3Etrue%3C/code%3E%E6%97%B6%EF%BC%8C%E7%BB%93%E6%9E%9C%E7%AB%8B%E5%8D%B3%E8%BF%94%E5%9B%9E%3Ccode%3Etrue%3C/code%3E%EF%BC%8C%E5%90%A6%E5%88%99%E6%89%80%E4%BB%A5%E5%85%83%E7%B4%A0%E7%9A%84%E5%A4%84%E7%90%86%E7%BB%93%E6%9E%9C%E4%B8%BA%3Ccode%3Efalse%3C/code%3E%E6%97%B6%EF%BC%8C%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%3Ccode%3Efalse%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%87%BD%E6%95%B0%E5%90%8D%3Ccode%3Eany()%3C/code%3E%EF%BC%8C%E9%A1%BE%E5%90%8D%E6%80%9D%E4%B9%89%E5%B0%B1%E6%98%AF%E2%80%9C%E4%BB%BB%E6%84%8F%E7%9A%84%E2%80%9D%E6%BB%A1%E8%B6%B3%E6%9D%A1%E4%BB%B6%E3%80%82%3C/p%3E%3Cp%3E%E5%89%8D%E9%9D%A2%E7%9A%84%E4%B8%80%E4%B8%AA%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E5%8C%85%E5%90%AB%E8%B4%9F%E6%95%B0%E7%9A%84%E4%BE%8B%E5%AD%90%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%94%A8%3Ccode%3Eany()%3C/code%3E%E5%87%BD%E6%95%B0%E6%9D%A5%E5%A4%84%E7%90%86%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22meta%22%3E#[macro_use]%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eextern%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ecrate%3C/span%3E%20t_bang;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Euse%3C/span%3E%20t_bang::*;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Emain%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E45%3C/span%3E,%20%3Cspan%20class=%22number%22%3E8%3C/span%3E,%20%3Cspan%20class=%22number%22%3E2%3C/span%3E,%20%3Cspan%20class=%22number%22%3E6%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Earr_iter%3C/span%3E%20=%20arr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Earr_any%3C/span%3E%20=%20arr_iter.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eany%3C/span%3E(|n|%20*n%20&amp;lt;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20t!(arr_iter));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20arr_any);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%B8%BA%E4%BA%86%E4%BB%A3%E7%A0%81%E6%B8%85%E6%99%B0%EF%BC%8C%E4%BD%A0%E5%8F%AF%E4%BB%A5%E7%BB%99%E9%97%AD%E5%8C%85%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%8A%A0%E4%B8%8A%E6%B3%A8%E8%A7%A3%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20[%3Cspan%20class=%22number%22%3E45%3C/span%3E,%20%3Cspan%20class=%22number%22%3E8%3C/span%3E,%20%3Cspan%20class=%22number%22%3E2%3C/span%3E,%20%3Cspan%20class=%22number%22%3E6%3C/span%3E].%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Eany%3C/span%3E(|n:%20&amp;amp;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E|%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E%20&amp;#123;%20*n%20&amp;lt;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E%20&amp;#125;));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20[%3Cspan%20class=%22number%22%3E45%3C/span%3E,%20%3Cspan%20class=%22number%22%3E8%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E2%3C/span%3E,%20%3Cspan%20class=%22number%22%3E6%3C/span%3E].%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Eany%3C/span%3E(|n:%20&amp;amp;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E|%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E%20&amp;#123;%20*n%20&amp;lt;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E%20&amp;#125;));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%89%8D%E9%9D%A2%E8%AF%B4%E8%BF%87%EF%BC%8C%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%9A%84%E8%BF%AD%E4%BB%A3%E5%8F%98%E9%87%8F%E6%98%AF%E4%B8%80%E4%B8%AAreference%EF%BC%8C%E6%89%80%E4%BB%A5%E8%BF%99%E9%87%8C%E4%B8%8D%E8%83%BD%E7%9C%81%E7%95%A5%3Ccode%3E&amp;amp;%3C/code%3E%E7%AC%A6%E5%8F%B7%EF%BC%8C%E5%90%A6%E5%88%99%E6%9C%89%E7%B1%BB%E5%9E%8B%E9%94%99%E8%AF%AF%E3%80%82%3C/p%3E%3Cp%3E%E5%89%8D%E9%9D%A2%E4%BB%8B%E7%BB%8D%E4%BA%86%E5%87%A0%E7%A7%8D%E8%BF%AD%E4%BB%A3%E6%A6%82%E5%BF%B5%EF%BC%8C%3C/p%3E%3Cul%3E%3Cli%3E%E5%87%BD%E6%95%B0%E4%BD%9C%E7%94%A8%E5%9C%A8%E9%9D%9E%E8%BF%AD%E4%BB%A3%E5%99%A8%EF%BC%8C%E7%94%9F%E6%88%90%E4%B8%80%E4%B8%AA%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%9A%84%EF%BC%8C%E7%A7%B0%E4%B8%BA%E2%80%9C%E8%BF%AD%E4%BB%A3%E7%94%9F%E6%88%90%E5%99%A8(iterator%20generator)%E2%80%9D%3C/li%3E%3Cli%3E%E5%87%BD%E6%95%B0%E4%BD%9C%E7%94%A8%E5%9C%A8%E4%B8%80%E4%B8%AA%E8%BF%AD%E4%BB%A3%E5%99%A8%EF%BC%8C%E8%BF%94%E5%9B%9E%E5%8F%A6%E4%B8%80%E4%B8%AA%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%9A%84%EF%BC%8C%E7%A7%B0%E4%B8%BA%E2%80%9C%E8%BF%AD%E4%BB%A3%E9%80%82%E9%85%8D%E5%99%A8(iterator%20adapter)%E2%80%9D%3C/li%3E%3Cli%3E%E5%87%BD%E6%95%B0%E4%BD%9C%E7%94%A8%E5%9C%A8%E4%B8%80%E4%B8%AA%E8%BF%AD%E4%BB%A3%E5%99%A8%EF%BC%8C%E4%BD%86%E4%B8%8D%E8%BF%94%E5%9B%9E%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%9A%84%EF%BC%8C%E7%A7%B0%E4%B8%BA%E2%80%9C%E8%BF%AD%E4%BB%A3%E6%B6%88%E8%B4%B9%E8%80%85(iterator%20consumer)%E2%80%9D%3C/li%3E%3C/ul%3E%3Cp%3E%E8%BF%AD%E4%BB%A3%E5%99%A8%20%E2%80%9C%20%3Cstrong%3E%E6%B6%88%E8%B4%B9%E8%80%85%3C/strong%3E%20%E2%80%9D%EF%BC%8C%E5%B0%B1%E6%98%AF%E6%B6%88%E8%B4%B9%E6%8E%89%E4%BA%86%E6%95%B0%E6%8D%AE%EF%BC%8C%E8%80%8C%E4%B8%8D%E6%98%AF%E2%80%9C%20%3Cstrong%3E%E9%80%82%E9%85%8D%3C/strong%3E%20%E2%80%9D%E6%95%B0%E6%8D%AE%E3%80%82%E9%99%A4%E4%BA%86%E8%BF%99%E9%87%8C%E7%9A%84%3Ccode%3Eany()%3C/code%3E%E6%B6%88%E8%B4%B9%E8%80%85%EF%BC%8C%E4%B8%8B%E9%9D%A2%E5%86%8D%E4%BB%8B%E7%BB%8D%E5%87%A0%E7%A7%8D%E5%B8%B8%E8%A7%81%E7%9A%84%E3%80%82%3C/p%3E%3Ch2%20id=%22The-all-Iterator-Consumer%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#The-all-Iterator-Consumer%22%3E%C2%B6%3C/a%3EThe%20%3Ccode%3Eall%3C/code%3E%20Iterator%20Consumer%3C/h2%3E%3Cp%3E%3Ccode%3Eany()%3C/code%3E%E5%B0%B1%E6%98%AF%E2%80%9C%E4%BB%BB%E6%84%8F%E7%9A%84%E2%80%9D%EF%BC%8C%E8%87%B3%E5%B0%91%E6%9C%89%E4%B8%80%E4%B8%AA%E6%BB%A1%E8%B6%B3%E6%9D%A1%E4%BB%B6%EF%BC%9B%E5%AF%B9%E5%BA%94%E5%B0%B1%E6%9C%89%3Ccode%3Eall()%3C/code%3E%EF%BC%8C%E2%80%9C%E6%89%80%E6%9C%89%E7%9A%84%E2%80%9D%EF%BC%8C%E8%A6%81%E6%B1%82%E5%85%A8%E9%83%A8%E6%BB%A1%E8%B6%B3%E6%9D%A1%E4%BB%B6%EF%BC%9B%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20[%3Cspan%20class=%22number%22%3E45%3C/span%3E,%20%3Cspan%20class=%22number%22%3E8%3C/span%3E,%20%3Cspan%20class=%22number%22%3E2%3C/span%3E,%20%3Cspan%20class=%22number%22%3E6%3C/span%3E].%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Eall%3C/span%3E(|n:%20&amp;amp;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E|%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E%20&amp;#123;%20*n%20&amp;lt;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E%20&amp;#125;));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20[%3Cspan%20class=%22number%22%3E45%3C/span%3E,%20%3Cspan%20class=%22number%22%3E8%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E2%3C/span%3E,%20%3Cspan%20class=%22number%22%3E6%3C/span%3E].%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Eall%3C/span%3E(|n:%20&amp;amp;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E|%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E%20&amp;#123;%20*n%20&amp;lt;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E%20&amp;#125;));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Ch2%20id=%22The-count-Iterator-Consumer%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#The-count-Iterator-Consumer%22%3E%C2%B6%3C/a%3EThe%20%3Ccode%3Ecount%3C/code%3E%20Iterator%20Consumer%3C/h2%3E%3Cp%3E%E8%BF%AD%E4%BB%A3%E8%AE%A1%E6%95%B0%E5%99%A8%3Ccode%3Ecount()%3C/code%3E%E5%92%8C%3Ccode%3Eenumerate()%3C/code%3E%E6%A6%82%E5%BF%B5%E7%B1%BB%E4%BC%BC%EF%BC%8C%E5%8F%AA%E4%B8%8D%E8%BF%87%3Ccode%3Ecount()%3C/code%3E%E6%98%AF%E4%B8%AA%E6%B6%88%E8%B4%B9%E8%80%85%EF%BC%8C%E4%B8%8D%E4%BC%9A%E7%94%9F%E6%88%90%E5%8F%A6%E4%B8%80%E4%B8%AA%E8%BF%AD%E4%BB%A3%E5%99%A8%EF%BC%8C%E5%86%85%E9%83%A8%E5%85%83%E7%B4%A0%E4%B8%8D%E4%BC%9A%E5%8F%91%E7%94%9F%E6%8B%B7%E8%B4%9D%E3%80%82%3C/p%3E%3Cp%3E%E4%BE%8B%E5%A6%82%EF%BC%8C%E4%BD%A0%E6%83%B3%E7%BB%9F%E8%AE%A1%E4%B8%80%E4%B8%AAslice%EF%BC%8Carray%EF%BC%8Cvector%E7%9A%84%E9%95%BF%E5%BA%A6%EF%BC%8C%E4%BD%A0%E5%8F%AF%E8%83%BD%E4%BC%9A%E4%BD%BF%E7%94%A8%3Ccode%3Elen%3C/code%3E%E5%87%BD%E6%95%B0%E3%80%82%E4%BD%86%E8%A6%81%E6%83%B3%E7%9F%A5%E9%81%93%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%87%8C%E9%9D%A2%E6%9C%89%E5%A4%9A%E5%B0%91%E4%B8%AA%E5%AD%97%E7%AC%A6%EF%BC%8C%E4%BD%A0%E5%B0%B1%E5%BF%85%E9%A1%BB%E6%89%AB%E6%8F%8F%E8%BF%99%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%8C%E5%9B%A0%E4%B8%BA%E7%BB%84%E6%88%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%8D%E4%BC%9A%E4%BF%9D%E5%AD%98%EF%BC%8C%E9%99%A4%E9%9D%9E%E4%BD%A0%E5%B0%86%E5%AE%83%E5%AD%98%E5%82%A8%E4%B8%8B%E6%9D%A5%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Es%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;%E2%82%AC%C3%A8e&amp;quot;%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20s.%3Cspan%20class=%22title%20function_%20invoke__%22%3Echars%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecount%3C/span%3E(),%20s.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E());%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%3Ccode%3Ecount()%3C/code%3E%E4%B8%8D%E6%8E%A5%E6%94%B6%E4%BB%BB%E4%BD%95%E5%8F%82%E6%95%B0%EF%BC%8C%E4%BB%A5%E5%8F%8A%E5%AE%83%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC%E7%B1%BB%E5%9E%8B%E6%80%BB%E6%98%AF%3Ccode%3Eusize%3C/code%3E%E3%80%82%3C/p%3E%3Ch2%20id=%22The-sum-Iterator-Consumer%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#The-sum-Iterator-Consumer%22%3E%C2%B6%3C/a%3EThe%20%3Ccode%3Esum%3C/code%3E%20Iterator%20Consumer%3C/h2%3E%3Cp%3E%3Ccode%3Esum()%3C/code%3E%E5%87%BD%E6%95%B0%E7%94%A8%E4%BA%8E%E8%BF%AD%E4%BB%A3%E6%B7%BB%E5%8A%A0%EF%BC%8C%E5%AE%83%E4%B9%9F%E6%98%AF%E4%B8%AA%E8%BF%AD%E4%BB%A3%E6%B6%88%E8%B4%B9%E8%80%85%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20[%3Cspan%20class=%22number%22%3E45%3C/span%3E,%20%3Cspan%20class=%22number%22%3E8%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E2%3C/span%3E,%20%3Cspan%20class=%22number%22%3E6%3C/span%3E].%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E().sum::&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E&amp;gt;());%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E9%87%8C%E5%8F%AF%E4%BB%A5%E6%8C%87%E5%AE%9A%E5%AE%83%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%8F%82%E6%95%B0%3Ccode%3E&amp;lt;i32&amp;gt;%3C/code%3E%EF%BC%8C%E8%BF%99%E4%B8%AA%E7%B1%BB%E5%9E%8B%E5%8F%82%E6%95%B0%E6%98%AF%E5%8F%AF%E9%80%89%E7%9A%84%EF%BC%8C%E5%8F%AF%E9%80%89%E7%9A%84%E5%89%8D%E6%8F%90%E6%9D%A1%E4%BB%B6%E6%98%AF%EF%BC%9A%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%9A%84%E5%85%83%E7%B4%A0%E7%B1%BB%E5%9E%8B%E9%9C%80%E8%A6%81%E6%98%AF%E5%8F%AF%E5%8A%A0%E7%9A%84%EF%BC%8C%E8%BF%99%E6%A0%B7%E6%89%8D%E8%83%BD%E8%A2%AB%E7%B1%BB%E5%9E%8B%E6%8E%A8%E6%96%AD%E5%A4%84%E7%90%86%EF%BC%9B%E4%BE%8B%E5%A6%82%3Ccode%3E[3.4].iter().sum::&amp;lt;f64&amp;gt;()%3C/code%3E%E6%98%AF%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%8C%E4%BD%86%3Ccode%3E[true].iter().sum::&amp;lt;bool&amp;gt;()%3C/code%3E%E6%98%AF%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%B8%83%E5%B0%94%E5%80%BC%E6%97%A0%E6%B3%95%E6%BB%A1%E8%B6%B3%E5%8A%A0%E6%B3%95%E3%80%82%3C/p%3E%3Ch2%20id=%22The-min-and-max-Iterator-Consumers%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#The-min-and-max-Iterator-Consumers%22%3E%C2%B6%3C/a%3EThe%20%3Ccode%3Emin%3C/code%3E%20and%20%3Ccode%3Emax%3C/code%3E%20Iterator%20Consumers%3C/h2%3E%3Cp%3E%3Ccode%3Emin()%3C/code%3E%E5%92%8C%3Ccode%3Emax()%3C/code%3E%E5%87%BD%E6%95%B0%E7%94%A8%E4%BA%8E%E6%9F%A5%E6%89%BE%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%81%E6%9C%80%E5%A4%A7%E5%80%BC%EF%BC%8C%E5%AE%83%E7%9A%84%E8%BF%94%E5%9B%9E%E7%B1%BB%E5%9E%8B%E6%98%AF%3Ccode%3EOption%3C/code%3E%EF%BC%8C%E5%85%B6%E4%B8%AD%3Ccode%3ESome%3C/code%3E%E5%80%BC%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9C%A8%E9%9D%9E%E7%A9%BA%E5%BA%8F%E5%88%97%EF%BC%8C%3Ccode%3ENone%3C/code%3E%E6%97%B6%E5%88%99%E8%A1%A8%E7%A4%BA%E5%BA%8F%E5%88%97%E6%98%AF%E7%A9%BA%E7%9A%84%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E45%3C/span%3E,%20%3Cspan%20class=%22number%22%3E8%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E2%3C/span%3E,%20%3Cspan%20class=%22number%22%3E6%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ematch%3C/span%3E%20arr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Emin%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3ESome%3C/span%3E(n)%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20n),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_%20=&amp;gt;%20(),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ematch%3C/span%3E%20arr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Emax%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3ESome%3C/span%3E(n)%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20n),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_%20=&amp;gt;%20(),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ematch%3C/span%3E%20[%3Cspan%20class=%22number%22%3E0%3C/span%3E;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E].%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Emin%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3ESome%3C/span%3E(n)%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20n),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;---&amp;quot;%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%B0%86%E4%BC%9A%E6%89%93%E5%8D%B0%EF%BC%9A%20-2%2045%20%E2%80%94.%3C/p%3E%3Cp%3E%3Ccode%3Emin()%3C/code%3E%E5%92%8C%3Ccode%3Emax()%3C/code%3E%E4%B9%9F%E5%8F%AF%E4%BD%9C%E7%94%A8%E5%9C%A8%E9%9D%9E%E6%95%B0%E5%AD%97%E7%9A%84%E8%BF%AD%E4%BB%A3%E5%AF%B9%E8%B1%A1%E4%B8%8A%EF%BC%8C%E4%BD%86%E8%A6%81%E6%BB%A1%E8%B6%B3%E5%8F%AF%E6%AF%94%E8%BE%83%E6%80%A7(%E5%8D%B3%E8%AF%A5%E7%B1%BB%E5%9E%8B%E8%A6%81%E6%9C%89%3Ccode%3Estd::cmp%3C/code%3E)%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22string%22%3E&amp;quot;hello&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;quot;brave&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;quot;new&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;quot;world&amp;quot;%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ematch%3C/span%3E%20arr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Emin%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3ESome%3C/span%3E(n)%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20n),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_%20=&amp;gt;%20(),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ematch%3C/span%3E%20arr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Emax%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3ESome%3C/span%3E(n)%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;]%20&amp;quot;%3C/span%3E,%20n),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_%20=&amp;gt;%20(),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Ch2%20id=%22The-collect-Consumer%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#The-collect-Consumer%22%3E%C2%B6%3C/a%3EThe%20%3Ccode%3Ecollect%3C/code%3E%20Consumer%3C/h2%3E%3Cp%3E%E5%83%8F%3Ccode%3Eany()%3C/code%3E%E3%80%81%3Ccode%3Eall()%3C/code%3E%E3%80%81%3Ccode%3Ecount()%3C/code%3E%E3%80%81%3Ccode%3Esum()%3C/code%3E%E3%80%81%3Ccode%3Emin()%3C/code%3E%E5%92%8C%3Ccode%3Emax()%3C/code%3E%E8%BF%99%E4%BA%9B%E8%BF%AD%E4%BB%A3%E6%B6%88%E8%B4%B9%E8%80%85%E8%BF%94%E5%9B%9E%E9%83%BD%E6%98%AF%E7%AE%80%E5%8D%95%E4%B8%80%E4%B8%AA%E5%80%BC%EF%BC%8C%E4%BD%86%E5%A6%82%E6%9E%9C%E6%88%91%E4%BB%AC%E6%83%B3%E5%B0%86%E6%89%80%E6%9C%89%E5%A4%84%E7%90%86%E7%9A%84%E5%85%83%E7%B4%A0%E6%94%B6%E9%9B%86%E5%88%B0%E4%B8%80%E4%B8%AAVector%E5%91%A2%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E36%3C/span%3E,%20%3Cspan%20class=%22number%22%3E1%3C/span%3E,%20%3Cspan%20class=%22number%22%3E15%3C/span%3E,%20%3Cspan%20class=%22number%22%3E9%3C/span%3E,%20%3Cspan%20class=%22number%22%3E4%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ev%3C/span%3E%20=%20arr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E().collect::&amp;lt;%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;&amp;amp;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E&amp;gt;&amp;gt;();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20v);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C%3Ccode%3E[36,%201,%2015,%209,%204]%3C/code%3E%E2%80%9D.%3C/p%3E%3Cp%3E%E8%BF%99%E9%87%8C%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%8F%82%E6%95%B0%E6%98%AF%E5%BF%85%E9%A1%BB%E7%9A%84%EF%BC%8C%E4%B8%8D%E8%BF%87%E5%8F%AF%E4%BB%A5%E6%94%B9%E4%B8%BA%E8%BF%99%E6%A0%B7%E5%86%99%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E36%3C/span%3E,%20%3Cspan%20class=%22number%22%3E1%3C/span%3E,%20%3Cspan%20class=%22number%22%3E15%3C/span%3E,%20%3Cspan%20class=%22number%22%3E9%3C/span%3E,%20%3Cspan%20class=%22number%22%3E4%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ev%3C/span%3E%20=%20arr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E().collect::&amp;lt;%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;_&amp;gt;&amp;gt;();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20v);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%8F%88%E6%88%96%E8%80%85%E8%BF%99%E6%A0%B7%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E36%3C/span%3E,%20%3Cspan%20class=%22number%22%3E1%3C/span%3E,%20%3Cspan%20class=%22number%22%3E15%3C/span%3E,%20%3Cspan%20class=%22number%22%3E9%3C/span%3E,%20%3Cspan%20class=%22number%22%3E4%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ev%3C/span%3E:%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;_&amp;gt;%20=%20arr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecollect%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20v);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%90%8C%E6%A0%B7%EF%BC%8C%E5%AD%97%E7%AC%A6%E5%92%8C%E5%AD%97%E8%8A%82%E4%B9%9F%E5%8F%AF%E4%BB%A5%E6%94%B6%E9%9B%86%E5%88%B0%E4%B8%80%E4%B8%AAVector%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Es%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;Hello&amp;quot;%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20s.%3Cspan%20class=%22title%20function_%20invoke__%22%3Echars%3C/span%3E().collect::&amp;lt;%3Cspan%20class=%22type%22%3EString%3C/span%3E&amp;gt;());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20s.%3Cspan%20class=%22title%20function_%20invoke__%22%3Echars%3C/span%3E().collect::&amp;lt;%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Echar%3C/span%3E&amp;gt;&amp;gt;());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20s.%3Cspan%20class=%22title%20function_%20invoke__%22%3Ebytes%3C/span%3E().collect::&amp;lt;%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E&amp;gt;&amp;gt;());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20s.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eas_bytes%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E().collect::&amp;lt;%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;&amp;amp;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E&amp;gt;&amp;gt;());%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%B0%86%E4%BC%9A%E6%89%93%E5%8D%B0%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20plaintext%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E&amp;quot;Hello&amp;quot;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E[&amp;#x27;H&amp;#x27;,%20&amp;#x27;e&amp;#x27;,%20&amp;#x27;l&amp;#x27;,%20&amp;#x27;l&amp;#x27;,%20&amp;#x27;o&amp;#x27;]%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E[72,%20101,%20108,%20108,%20111]%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E[72,%20101,%20108,%20108,%20111]%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%B3%A8%E6%84%8F%3Ccode%3Ecollect()%3C/code%3E%E5%87%BD%E6%95%B0%E4%B8%8D%E8%83%BD%E7%94%A8%E4%BA%8E%E9%9D%99%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%81%E9%9D%99%E6%80%81%E6%95%B0%E7%BB%84%E3%80%81%E6%88%96%E9%9D%99%E6%80%81%E5%88%87%E7%89%87%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E8%A6%81%E6%B1%82%E8%BF%90%E8%A1%8C%E6%9C%9F%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E3%80%82%3C/p%3E%3Ch2%20id=%22Iterator-Chains%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Iterator-Chains%22%3E%C2%B6%3C/a%3EIterator%20Chains%3C/h2%3E%3Cp%3E%E5%81%87%E8%AE%BE%E4%BD%A0%E6%83%B3%E8%A6%81%E5%B0%86%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%E9%87%8C%E9%9D%A2%E7%9A%84%E8%B4%9F%E6%95%B0%EF%BC%8C%E5%B9%B3%E6%96%B9%E5%90%8E%E6%94%B6%E9%9B%86%E5%88%B0%E5%8F%A6%E4%B8%80%E4%B8%AAvector%E4%B8%AD%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E66%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E8%3C/span%3E,%20%3Cspan%20class=%22number%22%3E43%3C/span%3E,%20%3Cspan%20class=%22number%22%3E19%3C/span%3E,%20%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E31%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ev%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..arr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20arr[i]%20&amp;gt;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E%20&amp;#123;%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(arr[i]%20*%20%3Cspan%20class=%22number%22%3E2%3C/span%3E);%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20v);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%89%93%E5%8D%B0%E8%BE%93%E5%87%BA%EF%BC%9A%3Ccode%3E[132,%2086,%2038]%3C/code%3E.%3C/p%3E%3Cp%3E%E4%B8%80%E4%B8%AA%E7%AD%89%E6%95%88%E5%AE%9E%E7%8E%B0%E6%98%AF%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E66%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E8%3C/span%3E,%20%3Cspan%20class=%22number%22%3E43%3C/span%3E,%20%3Cspan%20class=%22number%22%3E19%3C/span%3E,%20%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E31%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ev%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3En%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20arr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20*n%20&amp;gt;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E%20&amp;#123;%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(*n%20*%20%3Cspan%20class=%22number%22%3E2%3C/span%3E);%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20v);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%8F%88%E6%88%96%E8%80%85%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E66%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E8%3C/span%3E,%20%3Cspan%20class=%22number%22%3E43%3C/span%3E,%20%3Cspan%20class=%22number%22%3E19%3C/span%3E,%20%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E31%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ev%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3En%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20arr%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E()%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Efilter%3C/span%3E(|x|%20**x%20&amp;gt;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Emap%3C/span%3E(|x|%20*x%20*%20%3Cspan%20class=%22number%22%3E2%3C/span%3E)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(n);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20v);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%86%8D%E6%88%96%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E66%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E8%3C/span%3E,%20%3Cspan%20class=%22number%22%3E43%3C/span%3E,%20%3Cspan%20class=%22number%22%3E19%3C/span%3E,%20%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E31%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ev%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3En%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20arr%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E()%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Efilter%3C/span%3E(|x|%20**x%20&amp;gt;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Emap%3C/span%3E(|x|%20*x%20*%20%3Cspan%20class=%22number%22%3E2%3C/span%3E)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E.collect::&amp;lt;%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;_&amp;gt;&amp;gt;();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20v);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E7%89%88%E6%9C%AC%E5%B1%95%E7%A4%BA%E7%9A%84%E7%BC%96%E7%A8%8B%E6%A8%A1%E5%BC%8F%E6%98%AF%E5%87%BD%E6%95%B0%E5%BC%8F%E8%AF%AD%E8%A8%80%E7%9A%84%E5%85%B8%E5%9E%8B%EF%BC%9A%E8%BF%AD%E4%BB%A3%E9%93%BE(iterator%20chain)%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%AD%E4%BB%A3%E9%93%BE%E7%94%B1%E5%87%A0%E4%B8%AA%E6%A6%82%E5%BF%B5%E5%B1%9E%E4%BA%8E%E7%BB%84%E6%88%90%EF%BC%8C%3Cstrong%3E%E8%BF%AD%E4%BB%A3%E7%94%9F%E6%88%90%E5%99%A8(iterator%20generator)%3C/strong%3E%20+%20%3Cstrong%3E%E8%BF%AD%E4%BB%A3%E9%80%82%E9%85%8D%E5%99%A8(iterator%20adapter)%3C/strong%3E%20+%20%3Cstrong%3E%E8%BF%AD%E4%BB%A3%E6%B6%88%E8%B4%B9%E8%80%85(iterator%20consumer)%3C/strong%3E%20%E3%80%82%3C/p%3E%3Ch2%20id=%22Iterators-Are-%E2%80%9CLazy%E2%80%9D%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Iterators-Are-%E2%80%9CLazy%E2%80%9D%22%3E%C2%B6%3C/a%3EIterators%20Are%20%E2%80%9CLazy%E2%80%9D%3C/h2%3E%3Cp%3E%E6%88%91%E4%BB%AC%E7%BB%99%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E4%BE%8B%E5%AD%90%E5%8A%A0%E4%B8%80%E4%BA%9B%E8%B0%83%E8%AF%95%E4%BF%A1%E6%81%AF%E6%89%93%E5%8D%B0%E5%87%BA%E6%9D%A5%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ev%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E66%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E8%3C/span%3E,%20%3Cspan%20class=%22number%22%3E43%3C/span%3E,%20%3Cspan%20class=%22number%22%3E19%3C/span%3E,%20%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E31%3C/span%3E]%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E()%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Efilter%3C/span%3E(|x|%20&amp;#123;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;F&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20x);%20**x%20&amp;gt;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E%20&amp;#125;)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Emap%3C/span%3E(|x|%20&amp;#123;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;M&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20x);%20*x%20*%20%3Cspan%20class=%22number%22%3E2%3C/span%3E%20&amp;#125;)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E.collect::&amp;lt;%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;_&amp;gt;&amp;gt;();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20v);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%B0%86%E6%89%93%E5%8D%B0%EF%BC%9A%3Ccode%3EF66%20M66%20F-8%20F43%20M43%20F19%20M19%20F0%20F-31%20[132,%2086,%2038]%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%90%E8%A1%8C%E6%97%B6%E7%9A%84%E6%93%8D%E4%BD%9C%E5%A6%82%E4%B8%8B%EF%BC%8C%3C/p%3E%3Cp%3E%E9%A6%96%E5%85%88%E8%B0%83%E7%94%A8%E4%BA%86%3Ccode%3Eiter()%3C/code%3E%E5%87%86%E5%A4%87%E4%B8%80%E4%B8%AA%E8%BF%AD%E4%BB%A3%E5%99%A8%EF%BC%8C%E4%BD%86%E5%AE%83%E6%B2%A1%E6%9C%89%E8%AE%BF%E9%97%AE%E8%AF%A5%E6%95%B0%E7%BB%84%E3%80%82%E6%88%91%E4%BB%AC%E7%BB%99%E8%AF%A5%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%91%BD%E5%90%8D%E4%B8%BA%E2%80%9CI%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%3Ccode%3Efilter()%3C/code%3E%E7%9A%84%E8%B0%83%E7%94%A8%E5%87%86%E5%A4%87%E4%BA%86%E4%B8%80%E4%B8%AA%E8%BF%AD%E4%BB%A3%E5%99%A8%EF%BC%8C%E4%BD%86%E5%AE%83%E6%B2%A1%E6%9C%89%E5%A4%84%E7%90%86%E6%95%B0%E6%8D%AE%E3%80%82%E6%88%91%E4%BB%AC%E7%BB%99%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%91%BD%E5%90%8D%E4%B8%BA%E2%80%9CF%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%3Ccode%3Emap()%3C/code%3E%E7%9A%84%E8%B0%83%E7%94%A8%E5%87%86%E5%A4%87%E4%BA%86%E4%B8%80%E4%B8%AA%E8%BF%AD%E4%BB%A3%E5%99%A8%EF%BC%8C%E4%BD%86%E5%AE%83%E6%B2%A1%E6%9C%89%E5%A4%84%E7%90%86%E6%95%B0%E6%8D%AE%E3%80%82%E6%88%91%E4%BB%AC%E7%BB%99%E8%AF%A5%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%91%BD%E5%90%8D%E4%B8%BA%E2%80%9CM%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%3Ccode%3Ecollect()%3C/code%3E%E7%9A%84%E8%B0%83%E7%94%A8%EF%BC%8C%E5%90%91%E2%80%9CM%E2%80%9D%E8%AF%B7%E6%B1%82%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%EF%BC%9B%E2%80%9CM%E2%80%9D%E5%90%91%E2%80%9CF%E2%80%9D%E8%AF%B7%E6%B1%82%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%EF%BC%9B%E2%80%9CF%E2%80%9D%E5%90%91%E2%80%9CI%E2%80%9D%E8%AF%B7%E6%B1%82%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%EF%BC%9B%E2%80%9CI%E2%80%9D%E6%8B%BF%E5%88%B0%E6%9D%A5%E8%87%AA%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B066%EF%BC%8C%E4%BC%A0%E7%BB%99%E2%80%9CF%E2%80%9D%EF%BC%8C%E6%89%93%E5%8D%B0%E8%BF%99%E4%B8%AA%E6%95%B0%EF%BC%8C%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E6%98%AF%E6%AD%A3%E6%95%B0%EF%BC%8C%E7%84%B6%E5%90%8E%E4%BC%A0%E9%80%92%E7%BB%99%E2%80%9CM%E2%80%9D%EF%BC%8C%E6%89%93%E5%8D%B0%EF%BC%8C%E5%B9%B3%E6%96%B9%EF%BC%8C%E5%86%8D%E4%BC%A0%E9%80%92%E7%BB%99%3Ccode%3Ecollect()%3C/code%3E%EF%BC%8C%E6%9C%80%E5%90%8E%E6%8E%A8%E9%80%81%E5%88%B0Vector%E3%80%82%3C/p%3E%3Cp%3E%E6%8E%A5%E7%9D%80%EF%BC%8C%3Ccode%3Ecollect()%3C/code%3E%E6%8E%A5%E6%94%B6%E5%88%B0%3Ccode%3ESome%3C/code%3E%EF%BC%8C%E7%BB%A7%E7%BB%AD%E5%90%91%E2%80%9CM%E2%80%9D%E8%AF%B7%E6%B1%82%E5%8F%A6%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%EF%BC%8C%E9%87%8D%E5%A4%8D%E8%BF%99%E4%B8%AA%E6%93%8D%E4%BD%9C%EF%BC%8C%E7%9F%A5%E9%81%93%E5%85%83%E7%B4%A0-8%E5%88%B0%E8%BE%BE%E2%80%9CF%E2%80%9D%E6%97%B6%EF%BC%8C%E7%94%B1%E4%BA%8E%E6%98%AF%E8%B4%9F%E6%95%B0%E8%A2%AB%E8%BF%87%E6%BB%A4%E3%80%82%E6%89%80%E6%9C%89%E2%80%9CM%E2%80%9D%E6%B2%A1%E6%9C%89%E6%89%93%E5%8D%B0%E5%87%BA%E7%BB%93%E6%9E%9C%E3%80%82%E5%81%9C%E7%95%99%E5%9C%A8%E2%80%9CF%E2%80%9D%EF%BC%8C%E5%9B%A0%E4%B8%BA%E2%80%9CF%E2%80%9D%E6%8E%A5%E6%94%B6%E5%88%B0%3Ccode%3ESome%3C/code%3E%EF%BC%8C%E7%BB%A7%E7%BB%AD%E9%97%AE%E2%80%9CI%E2%80%9D%E7%B4%A2%E5%8F%96%E5%8F%A6%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%E3%80%82%3C/p%3E%3Cp%3E%E8%AF%A5%E7%AE%97%E6%B3%95%E5%A4%84%E7%90%86%EF%BC%8C%E4%BC%9A%E7%9B%B4%E5%88%B0%E6%95%B0%E7%BB%84%E5%AE%8C%E6%88%90%E3%80%82%E5%BD%93%E2%80%9CI%E2%80%9D%E4%B8%8D%E8%83%BD%E5%9C%A8%E6%95%B0%E7%BB%84%E6%89%BE%E5%88%B0%E5%85%B6%E5%AE%83%E5%85%83%E7%B4%A0%E6%97%B6%EF%BC%8C%E5%B0%86%E4%B8%80%E4%B8%AA%3Ccode%3ENone%3C/code%3E%E5%8F%91%E7%BB%99%E2%80%9CF%E2%80%9D%E5%91%8A%E7%9F%A5%E5%AE%83%E6%B2%A1%E6%9C%89%E6%9B%B4%E5%A4%9A%E5%85%83%E7%B4%A0%E4%BA%86%E3%80%82%E2%80%9CF%E2%80%9D%E6%94%B6%E5%88%B0%3Ccode%3ENone%3C/code%3E%E5%90%8E%EF%BC%8C%E5%86%8D%E5%B0%86%E5%85%B6%E4%BC%A0%E9%80%92%E7%BB%99%E2%80%9CM%E2%80%9D%EF%BC%8C%E2%80%9CM%E2%80%9D%E5%86%8D%E5%8F%91%E7%BB%99%3Ccode%3Ecollect()%3C/code%3E%EF%BC%8C%E6%95%B4%E4%B8%AA%E8%AF%AD%E5%8F%A5%E7%BB%93%E6%9D%9F%E3%80%82%3C/p%3E%3Cp%3E%E5%A6%82%E6%9E%9C%E7%9C%81%E7%95%A5%E6%8E%89%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%B6%88%E8%B4%B9%E8%80%85%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E[%3Cspan%20class=%22number%22%3E66%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E8%3C/span%3E,%20%3Cspan%20class=%22number%22%3E43%3C/span%3E,%20%3Cspan%20class=%22number%22%3E19%3C/span%3E,%20%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E31%3C/span%3E]%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eiter%3C/span%3E()%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Efilter%3C/span%3E(|x|%20&amp;#123;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;F&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20x);%20**x%20&amp;gt;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E%20&amp;#125;)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Emap%3C/span%3E(|x|%20&amp;#123;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;M&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20x);%20*x%20*%20%3Cspan%20class=%22number%22%3E2%3C/span%3E%20&amp;#125;);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%AE%83%E4%B8%8D%E4%BC%9A%E8%BE%93%E5%87%BA%E4%BB%BB%E4%BD%95%E6%B6%88%E6%81%AF%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E4%BB%80%E4%B9%88%E4%B9%9F%E6%B2%A1%E6%9C%89%E5%81%9A%EF%BC%8C%E7%BC%96%E8%AF%91%E5%99%A8%E5%8F%AA%E4%BC%9A%E6%8A%A5%E5%91%8A%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20plaintext%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3Ewarning%20unused%20%60std::iter::Map%60%20witch%20must%20be%20used:%20iterator%20adapters%20are%20lazy%20and%20do%20nothing%20unless%20consumed.%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E2%80%9Clazy%E2%80%9D%E5%9C%A8%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%AD%E6%98%AF%E2%80%9C%E6%83%B0%E6%80%A7%E6%B1%82%E5%80%BC%E2%80%9D%E7%9A%84%E6%A6%82%E5%BF%B5%EF%BC%8C%E4%BB%A5%E4%B8%BA%E8%BF%99%E5%B0%BD%E5%8F%AF%E8%83%BD%E8%BF%9F%E7%9A%84%E5%A4%84%E7%90%86%E3%80%82%E8%BF%AD%E4%BB%A3%E9%80%82%E9%85%8D%E5%99%A8%E6%98%AF%E6%83%B0%E6%80%A7%E7%9A%84%EF%BC%8C%E5%AE%83%E4%BB%85%E5%9C%A8%E5%85%B6%E5%AE%83%E5%87%BD%E6%95%B0%E5%90%91%E5%85%B6%E8%AF%B7%E6%B1%82%E5%85%83%E7%B4%A0%E6%97%B6%E6%89%8D%E7%9C%9F%E6%AD%A3%E8%B0%83%E7%94%A8%EF%BC%9A%E5%8D%B3%E9%9C%80%E8%A6%81%E6%B6%88%E8%B4%B9%E8%80%85%E3%80%82%3C/p%3E%3Cp%3E%E5%A6%82%E6%9E%9C%E6%B2%A1%E6%9C%89%E6%95%B0%E6%8D%AE%E6%8E%A5%E6%94%B6%E5%99%A8%EF%BC%8C%E5%B0%B1%E6%B2%A1%E6%9C%89%E6%95%B0%E6%8D%AE%E8%AE%BF%E9%97%AE(If%20there%20is%20no%20data%20sink,%20there%20is%20no%20data%20access)%E3%80%82%3C/p%3E" type="image"/>
    
    
    <category term="learning" scheme="https://galudisu.info/categories/learning/"/>
    
    
    <category term="rust" scheme="https://galudisu.info/tags/rust/"/>
    
  </entry>
  
  <entry>
    <title>rust基础入门[15] - Ranges and Slices</title>
    <link href="https://galudisu.info/2023/01/15/rust/beginning/chapter15_Ranges%20and%20Slices/"/>
    <id>https://galudisu.info/2023/01/15/rust/beginning/chapter15_Ranges%20and%20Slices/</id>
    <published>2023-01-15T07:50:46.000Z</published>
    <updated>2025-04-27T11:59:08.282Z</updated>
    
    <content type="html"><![CDATA[<p>本章覆盖有：</p><ul><li>如何使用closed ranges和open-ended ranges</li><li>如何用slice处理array或vector的portions</li></ul><span id="more"></span><h2 id="The-Ranges"><a class="header-anchor" href="#The-Ranges">¶</a>The Ranges</h2><p>for loop的一种写法：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">0</span>..<span class="number">12</span> &#123; <span class="built_in">println!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, i); &#125;</span><br></pre></td></tr></table></figure><p>其实还有另一种可能的写法：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">dozen</span> = <span class="number">0</span>..<span class="number">12</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> dozen &#123; <span class="built_in">println!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, i); &#125;</span><br></pre></td></tr></table></figure><p>这是显示了<code>0..12</code>从句不是<code>for</code>语句的语法，而是一个表达式，而且它的值可以指派给一个变量。以及这个值可以用于<code>for</code>语句。这中值类型称为“range”。</p><p>下面是使用range的更多相关代码：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">range</span>: std::ops::Range&lt;<span class="type">usize</span>&gt; = <span class="number">3</span>..<span class="number">8</span>;</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;:?&#125;, &#123;&#125;, &#123;&#125;, &#123;&#125;&quot;</span>,</span><br><span class="line">range, range.start, range.end, range.<span class="title function_ invoke__">len</span>());</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> range &#123; <span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;, &quot;</span>, i); &#125;</span><br></pre></td></tr></table></figure><p>打印输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3..8, 3, 8, 5</span><br><span class="line">3, 4, 5, 6, 7,</span><br></pre></td></tr></table></figure><p>从第一行得知，任何range都是一个<code>Range&lt;T&gt;</code>泛型类型的具象化，其中<code>T</code>必须是一个整形类型以表示range的极限。</p><p>第二条语句输出变量range的相关信息，第一个是它自身的debug值3…8；<code>start</code>和<code>end</code>为range的字段内容，为3和8。它表明了<code>Range</code>类型对象包含有两个字段。实际上，除此之外再没其它东西了。</p><p>然后<code>len</code>函数被调用，它是<code>end - start</code>的简单求值，即 <code>8 - 3 = 5</code>。</p><p>最后，range被用于for loop，用于浏览从<code>start</code>到<code>end</code>的值。这里的迭代值个数和<code>len</code>函数给的相同。</p><p><code>Range&lt;T&gt;</code>类型的参数化类型<code>T</code>，可以有两个参数进行推断：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">r1</span> = <span class="number">3u8</span>..<span class="number">12u8</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">r2</span> = <span class="number">3u8</span>..<span class="number">12</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">r3</span> = <span class="number">3</span>..<span class="number">12u8</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">r4</span> = <span class="number">3</span>..<span class="number">12</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">r5</span> = -<span class="number">3</span>..<span class="number">12</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">r6</span> = <span class="number">3</span>..<span class="number">12</span> <span class="keyword">as</span> <span class="type">i64</span>;</span><br><span class="line"><span class="built_in">print!</span>(</span><br><span class="line"><span class="string">&quot;&#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125;&quot;</span>,</span><br><span class="line">std::mem:;<span class="title function_ invoke__">size_of_val</span>(&amp;r1),</span><br><span class="line">std::mem::<span class="title function_ invoke__">size_of_val</span>(&amp;r2),</span><br><span class="line">std::mem::<span class="title function_ invoke__">size_of_val</span>(&amp;r3),</span><br><span class="line">std::mem::<span class="title function_ invoke__">size_of_val</span>(&amp;r4),</span><br><span class="line">std::mem::<span class="title function_ invoke__">size_of_val</span>(&amp;r5),</span><br><span class="line">std::mem::<span class="title function_ invoke__">size_of_val</span>(&amp;r6));</span><br></pre></td></tr></table></figure><p>打印：“2 2 2 8 8 16”。</p><p>变量<code>r1</code>的两个极值(extrames)声明为<code>u8</code>类型，因此它有确定的类型，<code>u8</code>占一个字节，整个range占两个字节。</p><p>变量<code>r2</code>和<code>r3</code>仅其中一个声明为<code>u8</code>，另外一个留待不指定。因此它强制为<code>u8</code>类型。</p><p>变量<code>r4</code>和<code>r5</code>都不指定，因此泛型参数<code>T</code>由默认值<code>i32</code>表示。</p><p>变量<code>r6</code>其中一个极值显式表述为<code>i64</code>，另一个未指定，所以<code>T</code>必须是<code>i64</code>。</p><p>注意下面所有语句都是不合法的：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">r1</span> = <span class="number">3u8</span>..<span class="number">12i8</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">r2</span>: std::ops::Range&lt;<span class="type">u32</span>&gt; = -<span class="number">3</span>..<span class="number">12</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">r3</span>: std::ops::Range&lt;<span class="type">i32</span>&gt; = <span class="number">3i16</span>..<span class="number">12</span>;</span><br></pre></td></tr></table></figure><p>第一条语句两个极值类型不同。第二条语句，-3不是<code>u32</code>类型的，最后一个语句，<code>3i16</code>不是<code>i32</code>类型的。</p><p>下面的语句可能允许，但可能出错，会出现编译告警：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">_r1</span> = <span class="number">3u8</span>..<span class="number">1200</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_r2</span> = <span class="number">3</span>..<span class="number">5_000_000_000</span>;</span><br></pre></td></tr></table></figure><p>两者都超出了整形的长度限制，其中第一条语句类型是<code>Range&lt;u8&gt;</code>，第二条是<code>Range&lt;i32&gt;</code>。</p><p>下面语句被允许并且不带告警。即使他们可能无意义：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">_r1</span> = <span class="literal">false</span> .. <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_r2</span> = <span class="string">&quot;hello&quot;</span> .. <span class="string">&quot;world&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_r3</span> = <span class="number">4.2</span> .. <span class="number">7.9</span>;</span><br></pre></td></tr></table></figure><p>实际上，这种荒诞的range不可以用于<code>for</code>循环中。</p><h2 id="Passing-a-Sequence-to-a-Function"><a class="header-anchor" href="#Passing-a-Sequence-to-a-Function">¶</a>Passing a Sequence to a Function</h2><p>让我们假设你需要创建一个函数，获取一个8个记录的数组参数，并返回数组中最小的值。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">min</span>(arr: [<span class="type">i32</span>; <span class="number">8</span>]) <span class="punctuation">-&gt;</span> <span class="type">i32</span> &#123;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">minimum</span> = arr[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">1</span>..arr.<span class="title function_ invoke__">len</span>() &#123;</span><br><span class="line"><span class="keyword">if</span> arr[i] &lt; minimum &#123; minimum = arr[i]; &#125;</span><br><span class="line">&#125;</span><br><span class="line">minimum</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, <span class="title function_ invoke__">min</span>([<span class="number">23</span>, <span class="number">17</span>, <span class="number">12</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">28</span>, <span class="number">17</span>, <span class="number">30</span>]));</span><br></pre></td></tr></table></figure><p>程序会正确地打印12。但，这个<code>min</code>函数有某些缺陷：</p><ul><li>它拿的是整个数组的拷贝，需要大量的时间转换，并在栈空间和堆空间缓存了大量空间。</li><li>它不能处理数组的部分请求。</li><li>它仅能接收一个仅8个数的数组。如果传递了7或9个记录的数组，或得到一个编译错误。</li><li>它不能传递一个vector作为参数。</li></ul><p>为了克服第一个缺陷，你可以传递数组的引用，由值传递(by value)变为引用传递(by reference)，使用下面代码：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">min</span>(arr: &amp;[<span class="type">i32</span>; <span class="number">8</span>]) <span class="punctuation">-&gt;</span> <span class="type">i32</span> &#123;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">minimum</span> = arr[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">1</span>..arr.<span class="title function_ invoke__">len</span>() &#123;</span><br><span class="line"><span class="keyword">if</span> arr[i] &lt; minimum &#123; minimum = arr[i]; &#125;</span><br><span class="line">&#125;</span><br><span class="line">minimum</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, <span class="title function_ invoke__">min</span>(&amp;[<span class="number">23</span>, <span class="number">17</span>, <span class="number">12</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">28</span>, <span class="number">17</span>, <span class="number">30</span>]));</span><br></pre></td></tr></table></figure><p>这里不用更改函数体内容，仅添加两处<code>&amp;</code>，一处在入参声明部分，即函数签名；另一个处是方法调用。函数体中的<code>arr</code>引用会隐式反引用处理。</p><p>为了克服第二个缺陷，你可以添加参数指定从哪个条目开始，另一个参数指定需要处理多少个：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">min</span>(arr: &amp;[<span class="type">i32</span>; <span class="number">8</span>], start: <span class="type">usize</span>, count: <span class="type">usize</span>) <span class="punctuation">-&gt;</span> <span class="type">i32</span> &#123;</span><br><span class="line"><span class="comment">// Let&#x27;s assume &#x27;start&#x27; is between 0 and 7,</span></span><br><span class="line"><span class="comment">// and &#x27;count&#x27; is between 1 and 8 - start.</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">mu</span> minimum = arr[start];</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> start + <span class="number">1</span>..start + count &#123;</span><br><span class="line"><span class="keyword">if</span> arr[i] &lt; minimum &#123; minimum = arr[i]; &#125;</span><br><span class="line">&#125;</span><br><span class="line">minimum</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, <span class="title function_ invoke__">min</span>(&amp;[<span class="number">23</span>, <span class="number">17</span>, <span class="number">12</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">28</span>, <span class="number">17</span>, <span class="number">30</span>], <span class="number">3</span>, <span class="number">2</span>));</span><br></pre></td></tr></table></figure><p>结果将打印输出15。实际上，它指定了处理两个条目，从位置3开始。即从<code>[16，15]</code>处理。</p><p>然而，还遗留两个缺陷。</p><p>考虑到我们的函数仅需要知道内存的开始地址，要处理多少个条目，序列条目的类型。因此不要求知道这个序列是不是大序列的一部分，更不想知道更大的序列在哪里开始和结束。</p><p>另外，考虑到任何vector将它的数据存储在栈分配的数组，因此只要知道要处理的条目在哪里，这个函数也可以处理。</p><h2 id="The-Slices"><a class="header-anchor" href="#The-Slices">¶</a>The Slices</h2><p>考虑所有这些，为了克服所有指出的错误，“切片(slice)”的概念被引入到该语言中。它的语法参考：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">min</span>(arr: &amp;[<span class="type">i32</span>]) <span class="punctuation">-&gt;</span> <span class="type">i32</span> &#123;</span><br><span class="line"><span class="comment">// Let&#x27;s assume &#x27;arr&#x27; is not empty.</span></span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">minimum</span> = arr[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">1</span>..arr.<span class="title function_ invoke__">len</span>() &#123;</span><br><span class="line"><span class="keyword">if</span> arr[i] &lt; minimum &#123; minimum = arr[i]; &#125;</span><br><span class="line">&#125;</span><br><span class="line">minimum</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, <span class="title function_ invoke__">min</span>(&amp;[<span class="number">23</span>, <span class="number">17</span>, <span class="number">12</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">28</span>, <span class="number">17</span>, <span class="number">30</span>]));</span><br></pre></td></tr></table></figure><p>和上一小节的不同是，“<code>; 8</code>”消失了。现在<code>arr</code>参数看起来是一个数组引用，并且没有指定数组的大小。</p><p>这种类型是一个<code>切片引用(a reference to a slice, or slice reference)</code>。它的泛型形式是“<code>&amp;[T]</code>”，<code>T</code>表示包含在数组中的任何类型。这里的“slice”表示的序列条目的子序列(sub-sequence)，就像一个数组或一个向量缓冲区。基于这个目的，一个切片引用的实现是一对值：序列的第一个条目的地址，以及条目的个数。</p><p>注意通常我们有变量类型是“切片引用(slice reference)”很少会“切”。一个slice会有类型“<code>[T]</code>”，但这种类型不能作为参数传递给一个函数，因为它的大小在编译时没有定义，函数参数的一个需求是它们在编译期定义大小。因此，我们仅能给一个函数传递<code>切片引用(references to slices)</code>，而不是<code>slices(切片)</code>。这种对象是一个指针和长度的对，因此它们占的内存为常规引用对象的两倍。</p><p>切片引用的用法和一个数组用法十分类似。主要实现的不同是，数组上的<code>len</code>函数的调用，可以通过替换为数组长度的常量进行优；而对于切片引用上的<code>len</code>函数，通过访问该对象第二个字段实现。</p><p>实际上，前一个章节我们看到跟slices和slice references可以类比：字符串缓冲区，静态字符串。</p><p>我们可以建一个相似性表格：</p><table><thead><tr><th>undefined-length sequence of bytes</th><th>(address of beginning, length in bytes)</th><th>(address of beginning, length in bytes, number of bytes used)</th></tr></thead><tbody><tr><td>String buffer: <code>str</code></td><td>Static string: <code>&amp;str</code></td><td>Dynamic string: <code>String</code></td></tr><tr><td>Slice of bytes: <code>[ u8 ]</code></td><td>Reference to slice of bytes: <code>&amp;[u8]</code></td><td>Vector or bytes: <code>Vec&lt;u8&gt;</code></td></tr></tbody></table><p>第一列是未定义长度的类型。<code>字符缓冲区(string buffers)</code>，类型是<code>str</code>，是由UTF-8字符的序列推断的未定义长度字节序列。<code>切片(slices)</code>是无符号8位数，它的类型是<code>[u8]</code>，是未定义长度的字节序列。</p><p>第二列是第一列的类型引用。<code>静态字符串(static strings)</code>，类型是<code>&amp;str</code>，由两个字段构造：字符缓冲区的内存首地址，以及缓冲区字节的长度。<code>切片引用(references to slices)</code>是无符号8位数，类型是<code>&amp;[u8]</code>，由两个字段构成：无符号8位数的切片的内存首地址，以及切片的长度。</p><p>第三列是动态分配的堆分配对象。其中<code>动态字符串(dynamic strings)</code>，它的类型是<code>String</code>，有三个字段构造而成：堆空间分配的字符缓冲区的内存首地址，缓冲区的字节长度，以及被用于缓冲区的字节数。对于无符号8位数的vector，类型是<code>Vec&lt;u8&gt;</code>，也是由三个字段构造而成：对空间分配的无符号8位数的一个切片的内存首地址，切片的长度，以及切片当前使用的字节数。</p><p>回到最后一个示例代码，注意<code>min</code>函数的调用没有发生改变。仍然将数组的引用作为参数传递。实际上，这个数组引用会隐式地转换为一个切片引用，使用数组的地址作为切片地址，数组的长度作为切片长度。</p><p>因此，程序最后语句传递给函数一个两个字段的结构：首先是包含数字23的数组元素的内存地址，其次是数字8.</p><p>使用切片，便利性增加了。因此，现在可以这样写：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">min</span>(arr: &amp;[<span class="type">i32</span>]) <span class="punctuation">-&gt;</span> <span class="type">i32</span> &#123;</span><br><span class="line"><span class="comment">// Let&#x27;s assume &#x27;arr&#x27; is not empty.</span></span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">minimum</span> = arr[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">1</span>..arr.<span class="title function_ invoke__">len</span>() &#123;</span><br><span class="line"><span class="keyword">if</span> arr[i] &lt; minimum &#123; minimum = arr[i]; &#125;</span><br><span class="line">&#125;</span><br><span class="line">minimum</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, <span class="title function_ invoke__">min</span>(&amp;[<span class="number">23</span>, <span class="number">17</span>]));</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, <span class="title function_ invoke__">min</span>(&amp;<span class="built_in">vec!</span>[<span class="number">55</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>]));</span><br></pre></td></tr></table></figure><p>打印：“17 22”。</p><p>第一次调用仅传递两个参数，17是它们中最小的。因此，<code>min</code>函数不再局限于8个元素的数组，它可以处理任何长度不为0的数组和切片。</p><p>第二次调用展示了<code>min</code>也可以处理vector。传递给该函数的值是一个vector的引用，因为函数的参数类型是“reference to slice”，参数变成了一个切片的引用表示整个vector内容。</p><p>因此，我们已经克服了前面提到过得所有缺陷。</p><h2 id="Slicing"><a class="header-anchor" href="#Slicing">¶</a>Slicing</h2><p>有了切片的便利，渴望一个新的可能的用法。</p><p>我们说有一个数组或一个向量，例如<code>vector[23, 17, 12, 16, 15, 2]</code>，以及一个函数以切片(slice)作为参数，例如上面看到的<code>min</code>函数，我们想用该函数处理仅数组或函数的一小段。例如，我们想在数组的第三、第四和第五元素中查找最小值。</p><p>我们需要做的是伪造一个切片表示一个数组或向量的片段，不需要整个数组和向量。</p><p>为了获得一个数组<code>arr</code>或向量<code>v</code>下标2的条目，分别可以写<code>arr[2]</code>或<code>v[2]</code>。为了获得2到5之间的所有元素，可以写<code>arr[2..5]</code>或<code>v[2..5]</code>。下面是另一种用法：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">min</span>(arr: &amp;[<span class="type">i32</span>]) <span class="punctuation">-&gt;</span> <span class="type">i32</span> &#123;</span><br><span class="line"><span class="comment">// Let&#x27;s assume &#x27;arr&#x27; is not empty.</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">mu</span> minimum = arr[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">1</span>..arr.<span class="title function_ invoke__">len</span>() &#123;</span><br><span class="line"><span class="keyword">if</span> arr[i] &lt; minimum &#123; minimum = arr[i]; &#125;</span><br><span class="line">&#125;</span><br><span class="line">minimum</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">arr</span> = [<span class="number">23</span>, <span class="number">17</span>, <span class="number">12</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">2</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="variable">range</span> = <span class="number">2</span>..<span class="number">5</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">slice_ref</span> = &amp;arr[range];</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, <span class="title function_ invoke__">min</span>(slice_ref));</span><br></pre></td></tr></table></figure><p>打印“12”，最后4行可以合并：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">min</span>(arr: &amp;[<span class="type">i32</span>]) <span class="punctuation">-&gt;</span> <span class="type">i32</span> &#123;</span><br><span class="line"><span class="comment">// Let&#x27;s assume &#x27;arr&#x27; is not empty.</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">mu</span> minimum = arr[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">1</span>..arr.<span class="title function_ invoke__">len</span>() &#123;</span><br><span class="line"><span class="keyword">if</span> arr[i] &lt; minimum &#123; minimum = arr[i]; &#125;</span><br><span class="line">&#125;</span><br><span class="line">minimum</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, <span class="title function_ invoke__">min</span>(&amp;[<span class="number">23</span>, <span class="number">17</span>, <span class="number">12</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">2</span>][<span class="number">2</span>..<span class="number">5</span>]));</span><br></pre></td></tr></table></figure><p>这种从一个数组或一个向量获取切片(slice)的过程，称为“切分(slicing)”。</p><p>注意，和<code>for</code>循环一样，slicing不包含上限值。所以，范围<code>2..5</code>的记录包含的位置是2,3,4。从0开始计数。</p><p>切片操作可以作用在数组和向量中，也可以作用在其它切片：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">arr</span> = [<span class="number">55</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">66</span>, <span class="number">7</span>, <span class="number">8</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="variable">v</span> = <span class="built_in">vec!</span>[<span class="number">55</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">66</span>, <span class="number">7</span>,<span class="number">9</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="variable">sr1</span> = &amp;arr[<span class="number">2</span>..<span class="number">5</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="variable">sr2</span> = &amp;v[<span class="number">2</span>..<span class="number">5</span>];</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125; &#123;:?&#125; &#123;:?&#125; &#123;:?&#125;&quot;</span>, sr1, sr2, &amp;arr1[<span class="number">1</span>..<span class="number">2</span>], &amp;sr1[<span class="number">1</span>]);</span><br></pre></td></tr></table></figure><p>结果将输出“<code>[33, 44, 66] [33, 44, 66] [44] 44</code>”。</p><p>其中<code>sr1</code>变量是一个切片引用，它引用的是数组<code>arr</code>的第三、第四和第五个元素。</p><p><code>sr2</code>是一个类似地切片引用，但它引用的是向量<code>v</code>的条目。</p><h2 id="Out-of-range-Slicing"><a class="header-anchor" href="#Out-of-range-Slicing">¶</a>Out-of-range Slicing</h2><p>除了常规的切分(slicing)，甚至可以做某些怪异的事情：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">arr</span> = [<span class="number">55</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">66</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_r1</span> = <span class="number">4</span>..<span class="number">4</span>; <span class="keyword">let</span> <span class="variable">_a1</span> = &amp;arr[_r1];</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_r2</span> = <span class="number">4</span>..<span class="number">3</span>;<span class="comment">//let _a2 = &amp;arr[_r2];</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">_r3</span> = -<span class="number">3i32</span>..<span class="number">2</span>;<span class="comment">//let _a3 = &amp;arr[_r3];</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">_r4</span> = <span class="number">3</span>..<span class="number">8</span>;<span class="comment">//let _a4 = &amp;arr[_r4];</span></span><br></pre></td></tr></table></figure><p>该程序中，除了第一行，其它行都是以第一行作为切分数组方式声明一个range。</p><p>所有range都是合法的，但不是所有切分操作合法，所以注释掉了某些语句。</p><p>第二行是非常正确的，从位置4开始，再从位置4结束。它是一个空slice，空slice是允许的。</p><p>第三行用了一个“倒退”的切片。在编译器中它是允许的，但在运行期会导致panic，就和超范围数组访问一样。运行期出现的错误信息，会打印在控制台，<code>slice index that starts at 4 but ends at 3</code>。</p><p>第四行使用了类型限制为<code>i32</code>的一个range。它会导致编译错误，因为对于切分(slicing)操作，和序列索引一样，必须是<code>usize</code>类型。</p><p>第五行使用的range超出了<code>arr</code>的范围。它编译会通过，但在运行期会带有一个panic信息“<code>index 8 out of range for slice of length 5</code>”。</p><p>注意到，在这里，不论是array、vector还是slice，情况都一样。</p><h2 id="Mutable-Slicing"><a class="header-anchor" href="#Mutable-Slicing">¶</a>Mutable Slicing</h2><p>切片是另一个序列的一段(a portion)，更改切片内容意味着更改原来序列相应的记录。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">arr</span> = [<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>];</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">sl_ref</span> = &amp;<span class="keyword">mut</span> arr[<span class="number">1</span>..<span class="number">3</span>];</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, sl_ref);</span><br><span class="line">sl_ref[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot; &#123;:?&#125;&quot;</span>, sl_ref);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot; &#123;:?&#125;&quot;</span>, arr);</span><br></pre></td></tr></table></figure><p>这会打印“<code>[22, 33] [22, 0] [11, 22, 0, 44]</code>”。</p><p>可变变量<code>sl_ref</code>指向一个可变切片(mutable slice)。因此，引用不变，但切片会被改变，意味着这里可以更改数组的记录。</p><p>为了获得一个可变切片的引用，基础序列(underlying sequence)必须是可变的。所以要求第一行带<code>mut</code>从句。</p><p>更改切片引用意味着什么？切片引用是引用的一种，更改该引用意味着序列片段引用的更改，这里的序列(sequence)可能是切片片段，也可能是基础序列(数组或向量)片段。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">arr</span> = [<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>];</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">sl_ref</span> = &amp;arr[<span class="number">1</span>..<span class="number">3</span>];</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, sl_ref);</span><br><span class="line">sl_ref = &amp;arr[<span class="number">0</span>..<span class="number">1</span>];</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot; &#123;:?&#125;&quot;</span>, sl_ref);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&quot;</span> &#123;:?&#125;<span class="string">&quot;, arr);</span></span><br></pre></td></tr></table></figure><p>这里将打印：“<code>[22, 33] [11] [11, 22, 33, 44]</code>”。</p><p>这段程序中，变量<code>arr</code>是一个不可变数组，所以它不会更改。变量<code>sl_ref</code>是指向一个可变切片的可变引用。</p><h2 id="Open-Ended-Ranges-and-Slicing"><a class="header-anchor" href="#Open-Ended-Ranges-and-Slicing">¶</a>Open-Ended Ranges and Slicing</h2><p>有时希望从给定的<code>n</code>开始获取一个序列的所有条目，或从<code>n</code>到最后的条目，可以这样：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">arr</span> = [<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="variable">n</span> = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">sr1</span> = &amp;arr[<span class="number">0</span>..n];</span><br><span class="line"><span class="keyword">let</span> <span class="variable">sr2</span> = &amp;arr[n..arr.<span class="title function_ invoke__">len</span>()];</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125; &#123;:?&#125;&quot;</span>, sr1, sr2);</span><br></pre></td></tr></table></figure><p>结果打印输出：“<code>[11, 22] [33, 44]</code>”。</p><p>但有更简单的写法：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">arr</span> = [<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="variable">n</span> = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">sr1</span> = &amp;arr[..n];</span><br><span class="line"><span class="keyword">let</span> <span class="variable">sr2</span> = &amp;arr[n..];</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125; &#123;:?&#125;&quot;</span>, sr1, sr2);</span><br></pre></td></tr></table></figure><p>第三行没有上限，第四行没有下限。实际上，这些Range是不同类型：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">r1</span>: std::ops::RangeFrom&lt;<span class="type">i32</span>&gt; = <span class="number">3</span>..;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">r2</span>: std::ops::RangeTo&lt;<span class="type">i32</span>&gt; = ..<span class="number">12</span>;</span><br><span class="line"><span class="title function_ invoke__">println</span>(<span class="string">&quot;&#123;:?&#125; &#123;:?&#125; &#123;&#125; &#123;&#125;&quot;</span>, r1, r2, std::mem::<span class="title function_ invoke__">size_of_val</span>(&amp;r1), std::mem::<span class="title function_ invoke__">size_of_val</span>(&amp;r2));</span><br></pre></td></tr></table></figure><p>结果将打印：“<code>3.. ..12 4 4</code>”。变量<code>r1</code>的类型是<code>RangeFrom</code>，有下限没有上限。变量<code>r2</code>的类型是<code>RangeTo</code>，有上限没有下限。都占4个字节，因为它们仅需要存储<code>i32</code>类型的对象。</p><p><code>RangeTo</code>仅用于开口切片(open-ended slicing)，而<code>RangeFrom</code>也可能用于特定的循环中。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">3</span>.. &#123;</span><br><span class="line"><span class="keyword">if</span> i * i &gt; <span class="number">40</span> &#123; <span class="keyword">break</span>; &#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果输出：“<code>3 4 5 6</code>”。</p><p>除了上面介绍的两种，还有一种泛型类型的range：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">range</span>: std::ops::RangeFull = ..;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">a1</span> = [<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="variable">a2</span> = &amp;a1[range];</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;:?&#125; &#123;:?&#125;&quot;</span>, std::mem::<span class="title function_ invoke__">size_of_val</span>(&amp;range), a1, a2);</span><br></pre></td></tr></table></figure><p>结果打印：“<code>0 [11, 22, 33, 44] [11, 22, 33, 44]</code>”。</p><p>因为<code>RangeFull</code>没有存储东西，所以它的大小是0。它被用于基础序列范围特别大的情形。</p><p>下面总结一下容易混淆的概念，</p><blockquote><p><code>[T; n]</code> is an array of length <code>n</code>, represented as <code>n</code> adjacent <code>T</code> instances.<br><code>&amp;[T; n]</code> is purely a reference to that array, represented as a thin pointer to the data.<br><code>[T]</code> is a slice, an unsized type; it can only be used through some form of indirection.<br><code>&amp;[T]</code>, called a slice, is a sized type. It’s a fat pointer, represented as a pointer to the first item and the length of the slice.</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;本章覆盖有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如何使用closed ranges和open-ended ranges&lt;/li&gt;
&lt;li&gt;如何用slice处理array或vector的portions&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    <content src="https://galudisu.info/%3Cp%3E%E6%9C%AC%E7%AB%A0%E8%A6%86%E7%9B%96%E6%9C%89%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8closed%20ranges%E5%92%8Copen-ended%20ranges%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E7%94%A8slice%E5%A4%84%E7%90%86array%E6%88%96vector%E7%9A%84portions%3C/li%3E%3C/ul%3E%3Cspan%20id=%22more%22%3E%3C/span%3E%3Ch2%20id=%22The-Ranges%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#The-Ranges%22%3E%C2%B6%3C/a%3EThe%20Ranges%3C/h2%3E%3Cp%3Efor%20loop%E7%9A%84%E4%B8%80%E7%A7%8D%E5%86%99%E6%B3%95%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..%3Cspan%20class=%22number%22%3E12%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20i);%20&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%85%B6%E5%AE%9E%E8%BF%98%E6%9C%89%E5%8F%A6%E4%B8%80%E7%A7%8D%E5%8F%AF%E8%83%BD%E7%9A%84%E5%86%99%E6%B3%95%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Edozen%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20dozen%20&amp;#123;%20%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20i);%20&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E6%98%AF%E6%98%BE%E7%A4%BA%E4%BA%86%3Ccode%3E0..12%3C/code%3E%E4%BB%8E%E5%8F%A5%E4%B8%8D%E6%98%AF%3Ccode%3Efor%3C/code%3E%E8%AF%AD%E5%8F%A5%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%8C%E8%80%8C%E6%98%AF%E4%B8%80%E4%B8%AA%E8%A1%A8%E8%BE%BE%E5%BC%8F%EF%BC%8C%E8%80%8C%E4%B8%94%E5%AE%83%E7%9A%84%E5%80%BC%E5%8F%AF%E4%BB%A5%E6%8C%87%E6%B4%BE%E7%BB%99%E4%B8%80%E4%B8%AA%E5%8F%98%E9%87%8F%E3%80%82%E4%BB%A5%E5%8F%8A%E8%BF%99%E4%B8%AA%E5%80%BC%E5%8F%AF%E4%BB%A5%E7%94%A8%E4%BA%8E%3Ccode%3Efor%3C/code%3E%E8%AF%AD%E5%8F%A5%E3%80%82%E8%BF%99%E4%B8%AD%E5%80%BC%E7%B1%BB%E5%9E%8B%E7%A7%B0%E4%B8%BA%E2%80%9Crange%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E6%98%AF%E4%BD%BF%E7%94%A8range%E7%9A%84%E6%9B%B4%E5%A4%9A%E7%9B%B8%E5%85%B3%E4%BB%A3%E7%A0%81%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Erange%3C/span%3E:%20std::ops::Range&amp;lt;%3Cspan%20class=%22type%22%3Eusize%3C/span%3E&amp;gt;%20=%20%3Cspan%20class=%22number%22%3E3%3C/span%3E..%3Cspan%20class=%22number%22%3E8%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;,%20&amp;#123;&amp;#125;,%20&amp;#123;&amp;#125;,%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Erange,%20range.start,%20range.end,%20range.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20range%20&amp;#123;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;,%20&amp;quot;%3C/span%3E,%20i);%20&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%89%93%E5%8D%B0%E8%BE%93%E5%87%BA%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20plaintext%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E3..8,%203,%208,%205%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3,%204,%205,%206,%207,%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%BB%8E%E7%AC%AC%E4%B8%80%E8%A1%8C%E5%BE%97%E7%9F%A5%EF%BC%8C%E4%BB%BB%E4%BD%95range%E9%83%BD%E6%98%AF%E4%B8%80%E4%B8%AA%3Ccode%3ERange&amp;lt;T&amp;gt;%3C/code%3E%E6%B3%9B%E5%9E%8B%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%85%B7%E8%B1%A1%E5%8C%96%EF%BC%8C%E5%85%B6%E4%B8%AD%3Ccode%3ET%3C/code%3E%E5%BF%85%E9%A1%BB%E6%98%AF%E4%B8%80%E4%B8%AA%E6%95%B4%E5%BD%A2%E7%B1%BB%E5%9E%8B%E4%BB%A5%E8%A1%A8%E7%A4%BArange%E7%9A%84%E6%9E%81%E9%99%90%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%BA%8C%E6%9D%A1%E8%AF%AD%E5%8F%A5%E8%BE%93%E5%87%BA%E5%8F%98%E9%87%8Frange%E7%9A%84%E7%9B%B8%E5%85%B3%E4%BF%A1%E6%81%AF%EF%BC%8C%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%98%AF%E5%AE%83%E8%87%AA%E8%BA%AB%E7%9A%84debug%E5%80%BC3%E2%80%A68%EF%BC%9B%3Ccode%3Estart%3C/code%3E%E5%92%8C%3Ccode%3Eend%3C/code%3E%E4%B8%BArange%E7%9A%84%E5%AD%97%E6%AE%B5%E5%86%85%E5%AE%B9%EF%BC%8C%E4%B8%BA3%E5%92%8C8%E3%80%82%E5%AE%83%E8%A1%A8%E6%98%8E%E4%BA%86%3Ccode%3ERange%3C/code%3E%E7%B1%BB%E5%9E%8B%E5%AF%B9%E8%B1%A1%E5%8C%85%E5%90%AB%E6%9C%89%E4%B8%A4%E4%B8%AA%E5%AD%97%E6%AE%B5%E3%80%82%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E9%99%A4%E6%AD%A4%E4%B9%8B%E5%A4%96%E5%86%8D%E6%B2%A1%E5%85%B6%E5%AE%83%E4%B8%9C%E8%A5%BF%E4%BA%86%E3%80%82%3C/p%3E%3Cp%3E%E7%84%B6%E5%90%8E%3Ccode%3Elen%3C/code%3E%E5%87%BD%E6%95%B0%E8%A2%AB%E8%B0%83%E7%94%A8%EF%BC%8C%E5%AE%83%E6%98%AF%3Ccode%3Eend%20-%20start%3C/code%3E%E7%9A%84%E7%AE%80%E5%8D%95%E6%B1%82%E5%80%BC%EF%BC%8C%E5%8D%B3%20%3Ccode%3E8%20-%203%20=%205%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E6%9C%80%E5%90%8E%EF%BC%8Crange%E8%A2%AB%E7%94%A8%E4%BA%8Efor%20loop%EF%BC%8C%E7%94%A8%E4%BA%8E%E6%B5%8F%E8%A7%88%E4%BB%8E%3Ccode%3Estart%3C/code%3E%E5%88%B0%3Ccode%3Eend%3C/code%3E%E7%9A%84%E5%80%BC%E3%80%82%E8%BF%99%E9%87%8C%E7%9A%84%E8%BF%AD%E4%BB%A3%E5%80%BC%E4%B8%AA%E6%95%B0%E5%92%8C%3Ccode%3Elen%3C/code%3E%E5%87%BD%E6%95%B0%E7%BB%99%E7%9A%84%E7%9B%B8%E5%90%8C%E3%80%82%3C/p%3E%3Cp%3E%3Ccode%3ERange&amp;lt;T&amp;gt;%3C/code%3E%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%8F%82%E6%95%B0%E5%8C%96%E7%B1%BB%E5%9E%8B%3Ccode%3ET%3C/code%3E%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%9C%89%E4%B8%A4%E4%B8%AA%E5%8F%82%E6%95%B0%E8%BF%9B%E8%A1%8C%E6%8E%A8%E6%96%AD%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Er1%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E3u8%3C/span%3E..%3Cspan%20class=%22number%22%3E12u8%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Er2%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E3u8%3C/span%3E..%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Er3%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E3%3C/span%3E..%3Cspan%20class=%22number%22%3E12u8%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Er4%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E3%3C/span%3E..%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Er5%3C/span%3E%20=%20-%3Cspan%20class=%22number%22%3E3%3C/span%3E..%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Er6%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E3%3C/span%3E..%3Cspan%20class=%22number%22%3E12%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eas%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei64%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Estd::mem:;%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;r1),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Estd::mem::%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;r2),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Estd::mem::%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;r3),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Estd::mem::%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;r4),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Estd::mem::%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;r5),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Estd::mem::%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;r6));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C2%202%202%208%208%2016%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%8F%98%E9%87%8F%3Ccode%3Er1%3C/code%3E%E7%9A%84%E4%B8%A4%E4%B8%AA%E6%9E%81%E5%80%BC(extrames)%E5%A3%B0%E6%98%8E%E4%B8%BA%3Ccode%3Eu8%3C/code%3E%E7%B1%BB%E5%9E%8B%EF%BC%8C%E5%9B%A0%E6%AD%A4%E5%AE%83%E6%9C%89%E7%A1%AE%E5%AE%9A%E7%9A%84%E7%B1%BB%E5%9E%8B%EF%BC%8C%3Ccode%3Eu8%3C/code%3E%E5%8D%A0%E4%B8%80%E4%B8%AA%E5%AD%97%E8%8A%82%EF%BC%8C%E6%95%B4%E4%B8%AArange%E5%8D%A0%E4%B8%A4%E4%B8%AA%E5%AD%97%E8%8A%82%E3%80%82%3C/p%3E%3Cp%3E%E5%8F%98%E9%87%8F%3Ccode%3Er2%3C/code%3E%E5%92%8C%3Ccode%3Er3%3C/code%3E%E4%BB%85%E5%85%B6%E4%B8%AD%E4%B8%80%E4%B8%AA%E5%A3%B0%E6%98%8E%E4%B8%BA%3Ccode%3Eu8%3C/code%3E%EF%BC%8C%E5%8F%A6%E5%A4%96%E4%B8%80%E4%B8%AA%E7%95%99%E5%BE%85%E4%B8%8D%E6%8C%87%E5%AE%9A%E3%80%82%E5%9B%A0%E6%AD%A4%E5%AE%83%E5%BC%BA%E5%88%B6%E4%B8%BA%3Ccode%3Eu8%3C/code%3E%E7%B1%BB%E5%9E%8B%E3%80%82%3C/p%3E%3Cp%3E%E5%8F%98%E9%87%8F%3Ccode%3Er4%3C/code%3E%E5%92%8C%3Ccode%3Er5%3C/code%3E%E9%83%BD%E4%B8%8D%E6%8C%87%E5%AE%9A%EF%BC%8C%E5%9B%A0%E6%AD%A4%E6%B3%9B%E5%9E%8B%E5%8F%82%E6%95%B0%3Ccode%3ET%3C/code%3E%E7%94%B1%E9%BB%98%E8%AE%A4%E5%80%BC%3Ccode%3Ei32%3C/code%3E%E8%A1%A8%E7%A4%BA%E3%80%82%3C/p%3E%3Cp%3E%E5%8F%98%E9%87%8F%3Ccode%3Er6%3C/code%3E%E5%85%B6%E4%B8%AD%E4%B8%80%E4%B8%AA%E6%9E%81%E5%80%BC%E6%98%BE%E5%BC%8F%E8%A1%A8%E8%BF%B0%E4%B8%BA%3Ccode%3Ei64%3C/code%3E%EF%BC%8C%E5%8F%A6%E4%B8%80%E4%B8%AA%E6%9C%AA%E6%8C%87%E5%AE%9A%EF%BC%8C%E6%89%80%E4%BB%A5%3Ccode%3ET%3C/code%3E%E5%BF%85%E9%A1%BB%E6%98%AF%3Ccode%3Ei64%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E6%B3%A8%E6%84%8F%E4%B8%8B%E9%9D%A2%E6%89%80%E6%9C%89%E8%AF%AD%E5%8F%A5%E9%83%BD%E6%98%AF%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Er1%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E3u8%3C/span%3E..%3Cspan%20class=%22number%22%3E12i8%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Er2%3C/span%3E:%20std::ops::Range&amp;lt;%3Cspan%20class=%22type%22%3Eu32%3C/span%3E&amp;gt;%20=%20-%3Cspan%20class=%22number%22%3E3%3C/span%3E..%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Er3%3C/span%3E:%20std::ops::Range&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E&amp;gt;%20=%20%3Cspan%20class=%22number%22%3E3i16%3C/span%3E..%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%AC%AC%E4%B8%80%E6%9D%A1%E8%AF%AD%E5%8F%A5%E4%B8%A4%E4%B8%AA%E6%9E%81%E5%80%BC%E7%B1%BB%E5%9E%8B%E4%B8%8D%E5%90%8C%E3%80%82%E7%AC%AC%E4%BA%8C%E6%9D%A1%E8%AF%AD%E5%8F%A5%EF%BC%8C-3%E4%B8%8D%E6%98%AF%3Ccode%3Eu32%3C/code%3E%E7%B1%BB%E5%9E%8B%E7%9A%84%EF%BC%8C%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E8%AF%AD%E5%8F%A5%EF%BC%8C%3Ccode%3E3i16%3C/code%3E%E4%B8%8D%E6%98%AF%3Ccode%3Ei32%3C/code%3E%E7%B1%BB%E5%9E%8B%E7%9A%84%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E7%9A%84%E8%AF%AD%E5%8F%A5%E5%8F%AF%E8%83%BD%E5%85%81%E8%AE%B8%EF%BC%8C%E4%BD%86%E5%8F%AF%E8%83%BD%E5%87%BA%E9%94%99%EF%BC%8C%E4%BC%9A%E5%87%BA%E7%8E%B0%E7%BC%96%E8%AF%91%E5%91%8A%E8%AD%A6%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_r1%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E3u8%3C/span%3E..%3Cspan%20class=%22number%22%3E1200%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_r2%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E3%3C/span%3E..%3Cspan%20class=%22number%22%3E5_000_000_000%3C/span%3E;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%B8%A4%E8%80%85%E9%83%BD%E8%B6%85%E5%87%BA%E4%BA%86%E6%95%B4%E5%BD%A2%E7%9A%84%E9%95%BF%E5%BA%A6%E9%99%90%E5%88%B6%EF%BC%8C%E5%85%B6%E4%B8%AD%E7%AC%AC%E4%B8%80%E6%9D%A1%E8%AF%AD%E5%8F%A5%E7%B1%BB%E5%9E%8B%E6%98%AF%3Ccode%3ERange&amp;lt;u8&amp;gt;%3C/code%3E%EF%BC%8C%E7%AC%AC%E4%BA%8C%E6%9D%A1%E6%98%AF%3Ccode%3ERange&amp;lt;i32&amp;gt;%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E8%AF%AD%E5%8F%A5%E8%A2%AB%E5%85%81%E8%AE%B8%E5%B9%B6%E4%B8%94%E4%B8%8D%E5%B8%A6%E5%91%8A%E8%AD%A6%E3%80%82%E5%8D%B3%E4%BD%BF%E4%BB%96%E4%BB%AC%E5%8F%AF%E8%83%BD%E6%97%A0%E6%84%8F%E4%B9%89%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_r1%3C/span%3E%20=%20%3Cspan%20class=%22literal%22%3Efalse%3C/span%3E%20..%20%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_r2%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;hello&amp;quot;%3C/span%3E%20..%20%3Cspan%20class=%22string%22%3E&amp;quot;world&amp;quot;%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_r3%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E4.2%3C/span%3E%20..%20%3Cspan%20class=%22number%22%3E7.9%3C/span%3E;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E8%BF%99%E7%A7%8D%E8%8D%92%E8%AF%9E%E7%9A%84range%E4%B8%8D%E5%8F%AF%E4%BB%A5%E7%94%A8%E4%BA%8E%3Ccode%3Efor%3C/code%3E%E5%BE%AA%E7%8E%AF%E4%B8%AD%E3%80%82%3C/p%3E%3Ch2%20id=%22Passing-a-Sequence-to-a-Function%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Passing-a-Sequence-to-a-Function%22%3E%C2%B6%3C/a%3EPassing%20a%20Sequence%20to%20a%20Function%3C/h2%3E%3Cp%3E%E8%AE%A9%E6%88%91%E4%BB%AC%E5%81%87%E8%AE%BE%E4%BD%A0%E9%9C%80%E8%A6%81%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%EF%BC%8C%E8%8E%B7%E5%8F%96%E4%B8%80%E4%B8%AA8%E4%B8%AA%E8%AE%B0%E5%BD%95%E7%9A%84%E6%95%B0%E7%BB%84%E5%8F%82%E6%95%B0%EF%BC%8C%E5%B9%B6%E8%BF%94%E5%9B%9E%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9C%80%E5%B0%8F%E7%9A%84%E5%80%BC%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Emin%3C/span%3E(arr:%20[%3Cspan%20class=%22type%22%3Ei32%3C/span%3E;%20%3Cspan%20class=%22number%22%3E8%3C/span%3E])%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Eminimum%3C/span%3E%20=%20arr[%3Cspan%20class=%22number%22%3E0%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E1%3C/span%3E..arr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20arr[i]%20&amp;lt;%20minimum%20&amp;#123;%20minimum%20=%20arr[i];%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eminimum%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Emin%3C/span%3E([%3Cspan%20class=%22number%22%3E23%3C/span%3E,%20%3Cspan%20class=%22number%22%3E17%3C/span%3E,%20%3Cspan%20class=%22number%22%3E12%3C/span%3E,%20%3Cspan%20class=%22number%22%3E16%3C/span%3E,%20%3Cspan%20class=%22number%22%3E15%3C/span%3E,%20%3Cspan%20class=%22number%22%3E28%3C/span%3E,%20%3Cspan%20class=%22number%22%3E17%3C/span%3E,%20%3Cspan%20class=%22number%22%3E30%3C/span%3E]));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%A8%8B%E5%BA%8F%E4%BC%9A%E6%AD%A3%E7%A1%AE%E5%9C%B0%E6%89%93%E5%8D%B012%E3%80%82%E4%BD%86%EF%BC%8C%E8%BF%99%E4%B8%AA%3Ccode%3Emin%3C/code%3E%E5%87%BD%E6%95%B0%E6%9C%89%E6%9F%90%E4%BA%9B%E7%BC%BA%E9%99%B7%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E5%AE%83%E6%8B%BF%E7%9A%84%E6%98%AF%E6%95%B4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E6%8B%B7%E8%B4%9D%EF%BC%8C%E9%9C%80%E8%A6%81%E5%A4%A7%E9%87%8F%E7%9A%84%E6%97%B6%E9%97%B4%E8%BD%AC%E6%8D%A2%EF%BC%8C%E5%B9%B6%E5%9C%A8%E6%A0%88%E7%A9%BA%E9%97%B4%E5%92%8C%E5%A0%86%E7%A9%BA%E9%97%B4%E7%BC%93%E5%AD%98%E4%BA%86%E5%A4%A7%E9%87%8F%E7%A9%BA%E9%97%B4%E3%80%82%3C/li%3E%3Cli%3E%E5%AE%83%E4%B8%8D%E8%83%BD%E5%A4%84%E7%90%86%E6%95%B0%E7%BB%84%E7%9A%84%E9%83%A8%E5%88%86%E8%AF%B7%E6%B1%82%E3%80%82%3C/li%3E%3Cli%3E%E5%AE%83%E4%BB%85%E8%83%BD%E6%8E%A5%E6%94%B6%E4%B8%80%E4%B8%AA%E4%BB%858%E4%B8%AA%E6%95%B0%E7%9A%84%E6%95%B0%E7%BB%84%E3%80%82%E5%A6%82%E6%9E%9C%E4%BC%A0%E9%80%92%E4%BA%867%E6%88%969%E4%B8%AA%E8%AE%B0%E5%BD%95%E7%9A%84%E6%95%B0%E7%BB%84%EF%BC%8C%E6%88%96%E5%BE%97%E5%88%B0%E4%B8%80%E4%B8%AA%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%E3%80%82%3C/li%3E%3Cli%3E%E5%AE%83%E4%B8%8D%E8%83%BD%E4%BC%A0%E9%80%92%E4%B8%80%E4%B8%AAvector%E4%BD%9C%E4%B8%BA%E5%8F%82%E6%95%B0%E3%80%82%3C/li%3E%3C/ul%3E%3Cp%3E%E4%B8%BA%E4%BA%86%E5%85%8B%E6%9C%8D%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%BC%BA%E9%99%B7%EF%BC%8C%E4%BD%A0%E5%8F%AF%E4%BB%A5%E4%BC%A0%E9%80%92%E6%95%B0%E7%BB%84%E7%9A%84%E5%BC%95%E7%94%A8%EF%BC%8C%E7%94%B1%E5%80%BC%E4%BC%A0%E9%80%92(by%20value)%E5%8F%98%E4%B8%BA%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92(by%20reference)%EF%BC%8C%E4%BD%BF%E7%94%A8%E4%B8%8B%E9%9D%A2%E4%BB%A3%E7%A0%81%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Emin%3C/span%3E(arr:%20&amp;amp;[%3Cspan%20class=%22type%22%3Ei32%3C/span%3E;%20%3Cspan%20class=%22number%22%3E8%3C/span%3E])%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Eminimum%3C/span%3E%20=%20arr[%3Cspan%20class=%22number%22%3E0%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E1%3C/span%3E..arr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20arr[i]%20&amp;lt;%20minimum%20&amp;#123;%20minimum%20=%20arr[i];%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eminimum%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Emin%3C/span%3E(&amp;amp;[%3Cspan%20class=%22number%22%3E23%3C/span%3E,%20%3Cspan%20class=%22number%22%3E17%3C/span%3E,%20%3Cspan%20class=%22number%22%3E12%3C/span%3E,%20%3Cspan%20class=%22number%22%3E16%3C/span%3E,%20%3Cspan%20class=%22number%22%3E15%3C/span%3E,%20%3Cspan%20class=%22number%22%3E28%3C/span%3E,%20%3Cspan%20class=%22number%22%3E17%3C/span%3E,%20%3Cspan%20class=%22number%22%3E30%3C/span%3E]));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E9%87%8C%E4%B8%8D%E7%94%A8%E6%9B%B4%E6%94%B9%E5%87%BD%E6%95%B0%E4%BD%93%E5%86%85%E5%AE%B9%EF%BC%8C%E4%BB%85%E6%B7%BB%E5%8A%A0%E4%B8%A4%E5%A4%84%3Ccode%3E&amp;amp;%3C/code%3E%EF%BC%8C%E4%B8%80%E5%A4%84%E5%9C%A8%E5%85%A5%E5%8F%82%E5%A3%B0%E6%98%8E%E9%83%A8%E5%88%86%EF%BC%8C%E5%8D%B3%E5%87%BD%E6%95%B0%E7%AD%BE%E5%90%8D%EF%BC%9B%E5%8F%A6%E4%B8%80%E4%B8%AA%E5%A4%84%E6%98%AF%E6%96%B9%E6%B3%95%E8%B0%83%E7%94%A8%E3%80%82%E5%87%BD%E6%95%B0%E4%BD%93%E4%B8%AD%E7%9A%84%3Ccode%3Earr%3C/code%3E%E5%BC%95%E7%94%A8%E4%BC%9A%E9%9A%90%E5%BC%8F%E5%8F%8D%E5%BC%95%E7%94%A8%E5%A4%84%E7%90%86%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%BA%E4%BA%86%E5%85%8B%E6%9C%8D%E7%AC%AC%E4%BA%8C%E4%B8%AA%E7%BC%BA%E9%99%B7%EF%BC%8C%E4%BD%A0%E5%8F%AF%E4%BB%A5%E6%B7%BB%E5%8A%A0%E5%8F%82%E6%95%B0%E6%8C%87%E5%AE%9A%E4%BB%8E%E5%93%AA%E4%B8%AA%E6%9D%A1%E7%9B%AE%E5%BC%80%E5%A7%8B%EF%BC%8C%E5%8F%A6%E4%B8%80%E4%B8%AA%E5%8F%82%E6%95%B0%E6%8C%87%E5%AE%9A%E9%9C%80%E8%A6%81%E5%A4%84%E7%90%86%E5%A4%9A%E5%B0%91%E4%B8%AA%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Emin%3C/span%3E(arr:%20&amp;amp;[%3Cspan%20class=%22type%22%3Ei32%3C/span%3E;%20%3Cspan%20class=%22number%22%3E8%3C/span%3E],%20start:%20%3Cspan%20class=%22type%22%3Eusize%3C/span%3E,%20count:%20%3Cspan%20class=%22type%22%3Eusize%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20Let&amp;#x27;s%20assume%20&amp;#x27;start&amp;#x27;%20is%20between%200%20and%207,%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20and%20&amp;#x27;count&amp;#x27;%20is%20between%201%20and%208%20-%20start.%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Emu%3C/span%3E%20minimum%20=%20arr[start];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20start%20+%20%3Cspan%20class=%22number%22%3E1%3C/span%3E..start%20+%20count%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20arr[i]%20&amp;lt;%20minimum%20&amp;#123;%20minimum%20=%20arr[i];%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eminimum%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Emin%3C/span%3E(&amp;amp;[%3Cspan%20class=%22number%22%3E23%3C/span%3E,%20%3Cspan%20class=%22number%22%3E17%3C/span%3E,%20%3Cspan%20class=%22number%22%3E12%3C/span%3E,%20%3Cspan%20class=%22number%22%3E16%3C/span%3E,%20%3Cspan%20class=%22number%22%3E15%3C/span%3E,%20%3Cspan%20class=%22number%22%3E28%3C/span%3E,%20%3Cspan%20class=%22number%22%3E17%3C/span%3E,%20%3Cspan%20class=%22number%22%3E30%3C/span%3E],%20%3Cspan%20class=%22number%22%3E3%3C/span%3E,%20%3Cspan%20class=%22number%22%3E2%3C/span%3E));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E6%89%93%E5%8D%B0%E8%BE%93%E5%87%BA15%E3%80%82%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E5%AE%83%E6%8C%87%E5%AE%9A%E4%BA%86%E5%A4%84%E7%90%86%E4%B8%A4%E4%B8%AA%E6%9D%A1%E7%9B%AE%EF%BC%8C%E4%BB%8E%E4%BD%8D%E7%BD%AE3%E5%BC%80%E5%A7%8B%E3%80%82%E5%8D%B3%E4%BB%8E%3Ccode%3E[16%EF%BC%8C15]%3C/code%3E%E5%A4%84%E7%90%86%E3%80%82%3C/p%3E%3Cp%3E%E7%84%B6%E8%80%8C%EF%BC%8C%E8%BF%98%E9%81%97%E7%95%99%E4%B8%A4%E4%B8%AA%E7%BC%BA%E9%99%B7%E3%80%82%3C/p%3E%3Cp%3E%E8%80%83%E8%99%91%E5%88%B0%E6%88%91%E4%BB%AC%E7%9A%84%E5%87%BD%E6%95%B0%E4%BB%85%E9%9C%80%E8%A6%81%E7%9F%A5%E9%81%93%E5%86%85%E5%AD%98%E7%9A%84%E5%BC%80%E5%A7%8B%E5%9C%B0%E5%9D%80%EF%BC%8C%E8%A6%81%E5%A4%84%E7%90%86%E5%A4%9A%E5%B0%91%E4%B8%AA%E6%9D%A1%E7%9B%AE%EF%BC%8C%E5%BA%8F%E5%88%97%E6%9D%A1%E7%9B%AE%E7%9A%84%E7%B1%BB%E5%9E%8B%E3%80%82%E5%9B%A0%E6%AD%A4%E4%B8%8D%E8%A6%81%E6%B1%82%E7%9F%A5%E9%81%93%E8%BF%99%E4%B8%AA%E5%BA%8F%E5%88%97%E6%98%AF%E4%B8%8D%E6%98%AF%E5%A4%A7%E5%BA%8F%E5%88%97%E7%9A%84%E4%B8%80%E9%83%A8%E5%88%86%EF%BC%8C%E6%9B%B4%E4%B8%8D%E6%83%B3%E7%9F%A5%E9%81%93%E6%9B%B4%E5%A4%A7%E7%9A%84%E5%BA%8F%E5%88%97%E5%9C%A8%E5%93%AA%E9%87%8C%E5%BC%80%E5%A7%8B%E5%92%8C%E7%BB%93%E6%9D%9F%E3%80%82%3C/p%3E%3Cp%3E%E5%8F%A6%E5%A4%96%EF%BC%8C%E8%80%83%E8%99%91%E5%88%B0%E4%BB%BB%E4%BD%95vector%E5%B0%86%E5%AE%83%E7%9A%84%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E5%9C%A8%E6%A0%88%E5%88%86%E9%85%8D%E7%9A%84%E6%95%B0%E7%BB%84%EF%BC%8C%E5%9B%A0%E6%AD%A4%E5%8F%AA%E8%A6%81%E7%9F%A5%E9%81%93%E8%A6%81%E5%A4%84%E7%90%86%E7%9A%84%E6%9D%A1%E7%9B%AE%E5%9C%A8%E5%93%AA%E9%87%8C%EF%BC%8C%E8%BF%99%E4%B8%AA%E5%87%BD%E6%95%B0%E4%B9%9F%E5%8F%AF%E4%BB%A5%E5%A4%84%E7%90%86%E3%80%82%3C/p%3E%3Ch2%20id=%22The-Slices%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#The-Slices%22%3E%C2%B6%3C/a%3EThe%20Slices%3C/h2%3E%3Cp%3E%E8%80%83%E8%99%91%E6%89%80%E6%9C%89%E8%BF%99%E4%BA%9B%EF%BC%8C%E4%B8%BA%E4%BA%86%E5%85%8B%E6%9C%8D%E6%89%80%E6%9C%89%E6%8C%87%E5%87%BA%E7%9A%84%E9%94%99%E8%AF%AF%EF%BC%8C%E2%80%9C%E5%88%87%E7%89%87(slice)%E2%80%9D%E7%9A%84%E6%A6%82%E5%BF%B5%E8%A2%AB%E5%BC%95%E5%85%A5%E5%88%B0%E8%AF%A5%E8%AF%AD%E8%A8%80%E4%B8%AD%E3%80%82%E5%AE%83%E7%9A%84%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Emin%3C/span%3E(arr:%20&amp;amp;[%3Cspan%20class=%22type%22%3Ei32%3C/span%3E])%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20Let&amp;#x27;s%20assume%20&amp;#x27;arr&amp;#x27;%20is%20not%20empty.%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Eminimum%3C/span%3E%20=%20arr[%3Cspan%20class=%22number%22%3E0%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E1%3C/span%3E..arr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20arr[i]%20&amp;lt;%20minimum%20&amp;#123;%20minimum%20=%20arr[i];%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eminimum%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Emin%3C/span%3E(&amp;amp;[%3Cspan%20class=%22number%22%3E23%3C/span%3E,%20%3Cspan%20class=%22number%22%3E17%3C/span%3E,%20%3Cspan%20class=%22number%22%3E12%3C/span%3E,%20%3Cspan%20class=%22number%22%3E16%3C/span%3E,%20%3Cspan%20class=%22number%22%3E15%3C/span%3E,%20%3Cspan%20class=%22number%22%3E28%3C/span%3E,%20%3Cspan%20class=%22number%22%3E17%3C/span%3E,%20%3Cspan%20class=%22number%22%3E30%3C/span%3E]));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%92%8C%E4%B8%8A%E4%B8%80%E5%B0%8F%E8%8A%82%E7%9A%84%E4%B8%8D%E5%90%8C%E6%98%AF%EF%BC%8C%E2%80%9C%3Ccode%3E;%208%3C/code%3E%E2%80%9D%E6%B6%88%E5%A4%B1%E4%BA%86%E3%80%82%E7%8E%B0%E5%9C%A8%3Ccode%3Earr%3C/code%3E%E5%8F%82%E6%95%B0%E7%9C%8B%E8%B5%B7%E6%9D%A5%E6%98%AF%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%E5%BC%95%E7%94%A8%EF%BC%8C%E5%B9%B6%E4%B8%94%E6%B2%A1%E6%9C%89%E6%8C%87%E5%AE%9A%E6%95%B0%E7%BB%84%E7%9A%84%E5%A4%A7%E5%B0%8F%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E7%A7%8D%E7%B1%BB%E5%9E%8B%E6%98%AF%E4%B8%80%E4%B8%AA%3Ccode%3E%E5%88%87%E7%89%87%E5%BC%95%E7%94%A8(a%20reference%20to%20a%20slice,%20or%20slice%20reference)%3C/code%3E%E3%80%82%E5%AE%83%E7%9A%84%E6%B3%9B%E5%9E%8B%E5%BD%A2%E5%BC%8F%E6%98%AF%E2%80%9C%3Ccode%3E&amp;amp;[T]%3C/code%3E%E2%80%9D%EF%BC%8C%3Ccode%3ET%3C/code%3E%E8%A1%A8%E7%A4%BA%E5%8C%85%E5%90%AB%E5%9C%A8%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E4%BB%BB%E4%BD%95%E7%B1%BB%E5%9E%8B%E3%80%82%E8%BF%99%E9%87%8C%E7%9A%84%E2%80%9Cslice%E2%80%9D%E8%A1%A8%E7%A4%BA%E7%9A%84%E5%BA%8F%E5%88%97%E6%9D%A1%E7%9B%AE%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97(sub-sequence)%EF%BC%8C%E5%B0%B1%E5%83%8F%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%E6%88%96%E4%B8%80%E4%B8%AA%E5%90%91%E9%87%8F%E7%BC%93%E5%86%B2%E5%8C%BA%E3%80%82%E5%9F%BA%E4%BA%8E%E8%BF%99%E4%B8%AA%E7%9B%AE%E7%9A%84%EF%BC%8C%E4%B8%80%E4%B8%AA%E5%88%87%E7%89%87%E5%BC%95%E7%94%A8%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%98%AF%E4%B8%80%E5%AF%B9%E5%80%BC%EF%BC%9A%E5%BA%8F%E5%88%97%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%9D%A1%E7%9B%AE%E7%9A%84%E5%9C%B0%E5%9D%80%EF%BC%8C%E4%BB%A5%E5%8F%8A%E6%9D%A1%E7%9B%AE%E7%9A%84%E4%B8%AA%E6%95%B0%E3%80%82%3C/p%3E%3Cp%3E%E6%B3%A8%E6%84%8F%E9%80%9A%E5%B8%B8%E6%88%91%E4%BB%AC%E6%9C%89%E5%8F%98%E9%87%8F%E7%B1%BB%E5%9E%8B%E6%98%AF%E2%80%9C%E5%88%87%E7%89%87%E5%BC%95%E7%94%A8(slice%20reference)%E2%80%9D%E5%BE%88%E5%B0%91%E4%BC%9A%E2%80%9C%E5%88%87%E2%80%9D%E3%80%82%E4%B8%80%E4%B8%AAslice%E4%BC%9A%E6%9C%89%E7%B1%BB%E5%9E%8B%E2%80%9C%3Ccode%3E[T]%3C/code%3E%E2%80%9D%EF%BC%8C%E4%BD%86%E8%BF%99%E7%A7%8D%E7%B1%BB%E5%9E%8B%E4%B8%8D%E8%83%BD%E4%BD%9C%E4%B8%BA%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E7%BB%99%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E7%9A%84%E5%A4%A7%E5%B0%8F%E5%9C%A8%E7%BC%96%E8%AF%91%E6%97%B6%E6%B2%A1%E6%9C%89%E5%AE%9A%E4%B9%89%EF%BC%8C%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E7%9A%84%E4%B8%80%E4%B8%AA%E9%9C%80%E6%B1%82%E6%98%AF%E5%AE%83%E4%BB%AC%E5%9C%A8%E7%BC%96%E8%AF%91%E6%9C%9F%E5%AE%9A%E4%B9%89%E5%A4%A7%E5%B0%8F%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E6%88%91%E4%BB%AC%E4%BB%85%E8%83%BD%E7%BB%99%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E4%BC%A0%E9%80%92%3Ccode%3E%E5%88%87%E7%89%87%E5%BC%95%E7%94%A8(references%20to%20slices)%3C/code%3E%EF%BC%8C%E8%80%8C%E4%B8%8D%E6%98%AF%3Ccode%3Eslices(%E5%88%87%E7%89%87)%3C/code%3E%E3%80%82%E8%BF%99%E7%A7%8D%E5%AF%B9%E8%B1%A1%E6%98%AF%E4%B8%80%E4%B8%AA%E6%8C%87%E9%92%88%E5%92%8C%E9%95%BF%E5%BA%A6%E7%9A%84%E5%AF%B9%EF%BC%8C%E5%9B%A0%E6%AD%A4%E5%AE%83%E4%BB%AC%E5%8D%A0%E7%9A%84%E5%86%85%E5%AD%98%E4%B8%BA%E5%B8%B8%E8%A7%84%E5%BC%95%E7%94%A8%E5%AF%B9%E8%B1%A1%E7%9A%84%E4%B8%A4%E5%80%8D%E3%80%82%3C/p%3E%3Cp%3E%E5%88%87%E7%89%87%E5%BC%95%E7%94%A8%E7%9A%84%E7%94%A8%E6%B3%95%E5%92%8C%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%E7%94%A8%E6%B3%95%E5%8D%81%E5%88%86%E7%B1%BB%E4%BC%BC%E3%80%82%E4%B8%BB%E8%A6%81%E5%AE%9E%E7%8E%B0%E7%9A%84%E4%B8%8D%E5%90%8C%E6%98%AF%EF%BC%8C%E6%95%B0%E7%BB%84%E4%B8%8A%E7%9A%84%3Ccode%3Elen%3C/code%3E%E5%87%BD%E6%95%B0%E7%9A%84%E8%B0%83%E7%94%A8%EF%BC%8C%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87%E6%9B%BF%E6%8D%A2%E4%B8%BA%E6%95%B0%E7%BB%84%E9%95%BF%E5%BA%A6%E7%9A%84%E5%B8%B8%E9%87%8F%E8%BF%9B%E8%A1%8C%E4%BC%98%EF%BC%9B%E8%80%8C%E5%AF%B9%E4%BA%8E%E5%88%87%E7%89%87%E5%BC%95%E7%94%A8%E4%B8%8A%E7%9A%84%3Ccode%3Elen%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E9%80%9A%E8%BF%87%E8%AE%BF%E9%97%AE%E8%AF%A5%E5%AF%B9%E8%B1%A1%E7%AC%AC%E4%BA%8C%E4%B8%AA%E5%AD%97%E6%AE%B5%E5%AE%9E%E7%8E%B0%E3%80%82%3C/p%3E%3Cp%3E%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E5%89%8D%E4%B8%80%E4%B8%AA%E7%AB%A0%E8%8A%82%E6%88%91%E4%BB%AC%E7%9C%8B%E5%88%B0%E8%B7%9Fslices%E5%92%8Cslice%20references%E5%8F%AF%E4%BB%A5%E7%B1%BB%E6%AF%94%EF%BC%9A%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BC%93%E5%86%B2%E5%8C%BA%EF%BC%8C%E9%9D%99%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%82%3C/p%3E%3Cp%3E%E6%88%91%E4%BB%AC%E5%8F%AF%E4%BB%A5%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%9B%B8%E4%BC%BC%E6%80%A7%E8%A1%A8%E6%A0%BC%EF%BC%9A%3C/p%3E%3Ctable%3E%3Cthead%3E%3Ctr%3E%3Cth%3Eundefined-length%20sequence%20of%20bytes%3C/th%3E%3Cth%3E(address%20of%20beginning,%20length%20in%20bytes)%3C/th%3E%3Cth%3E(address%20of%20beginning,%20length%20in%20bytes,%20number%20of%20bytes%20used)%3C/th%3E%3C/tr%3E%3C/thead%3E%3Ctbody%3E%3Ctr%3E%3Ctd%3EString%20buffer:%20%3Ccode%3Estr%3C/code%3E%3C/td%3E%3Ctd%3EStatic%20string:%20%3Ccode%3E&amp;amp;str%3C/code%3E%3C/td%3E%3Ctd%3EDynamic%20string:%20%3Ccode%3EString%3C/code%3E%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%3ESlice%20of%20bytes:%20%3Ccode%3E[%20u8%20]%3C/code%3E%3C/td%3E%3Ctd%3EReference%20to%20slice%20of%20bytes:%20%3Ccode%3E&amp;amp;[u8]%3C/code%3E%3C/td%3E%3Ctd%3EVector%20or%20bytes:%20%3Ccode%3EVec&amp;lt;u8&amp;gt;%3C/code%3E%3C/td%3E%3C/tr%3E%3C/tbody%3E%3C/table%3E%3Cp%3E%E7%AC%AC%E4%B8%80%E5%88%97%E6%98%AF%E6%9C%AA%E5%AE%9A%E4%B9%89%E9%95%BF%E5%BA%A6%E7%9A%84%E7%B1%BB%E5%9E%8B%E3%80%82%3Ccode%3E%E5%AD%97%E7%AC%A6%E7%BC%93%E5%86%B2%E5%8C%BA(string%20buffers)%3C/code%3E%EF%BC%8C%E7%B1%BB%E5%9E%8B%E6%98%AF%3Ccode%3Estr%3C/code%3E%EF%BC%8C%E6%98%AF%E7%94%B1UTF-8%E5%AD%97%E7%AC%A6%E7%9A%84%E5%BA%8F%E5%88%97%E6%8E%A8%E6%96%AD%E7%9A%84%E6%9C%AA%E5%AE%9A%E4%B9%89%E9%95%BF%E5%BA%A6%E5%AD%97%E8%8A%82%E5%BA%8F%E5%88%97%E3%80%82%3Ccode%3E%E5%88%87%E7%89%87(slices)%3C/code%3E%E6%98%AF%E6%97%A0%E7%AC%A6%E5%8F%B78%E4%BD%8D%E6%95%B0%EF%BC%8C%E5%AE%83%E7%9A%84%E7%B1%BB%E5%9E%8B%E6%98%AF%3Ccode%3E[u8]%3C/code%3E%EF%BC%8C%E6%98%AF%E6%9C%AA%E5%AE%9A%E4%B9%89%E9%95%BF%E5%BA%A6%E7%9A%84%E5%AD%97%E8%8A%82%E5%BA%8F%E5%88%97%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%BA%8C%E5%88%97%E6%98%AF%E7%AC%AC%E4%B8%80%E5%88%97%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%BC%95%E7%94%A8%E3%80%82%3Ccode%3E%E9%9D%99%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2(static%20strings)%3C/code%3E%EF%BC%8C%E7%B1%BB%E5%9E%8B%E6%98%AF%3Ccode%3E&amp;amp;str%3C/code%3E%EF%BC%8C%E7%94%B1%E4%B8%A4%E4%B8%AA%E5%AD%97%E6%AE%B5%E6%9E%84%E9%80%A0%EF%BC%9A%E5%AD%97%E7%AC%A6%E7%BC%93%E5%86%B2%E5%8C%BA%E7%9A%84%E5%86%85%E5%AD%98%E9%A6%96%E5%9C%B0%E5%9D%80%EF%BC%8C%E4%BB%A5%E5%8F%8A%E7%BC%93%E5%86%B2%E5%8C%BA%E5%AD%97%E8%8A%82%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%82%3Ccode%3E%E5%88%87%E7%89%87%E5%BC%95%E7%94%A8(references%20to%20slices)%3C/code%3E%E6%98%AF%E6%97%A0%E7%AC%A6%E5%8F%B78%E4%BD%8D%E6%95%B0%EF%BC%8C%E7%B1%BB%E5%9E%8B%E6%98%AF%3Ccode%3E&amp;amp;[u8]%3C/code%3E%EF%BC%8C%E7%94%B1%E4%B8%A4%E4%B8%AA%E5%AD%97%E6%AE%B5%E6%9E%84%E6%88%90%EF%BC%9A%E6%97%A0%E7%AC%A6%E5%8F%B78%E4%BD%8D%E6%95%B0%E7%9A%84%E5%88%87%E7%89%87%E7%9A%84%E5%86%85%E5%AD%98%E9%A6%96%E5%9C%B0%E5%9D%80%EF%BC%8C%E4%BB%A5%E5%8F%8A%E5%88%87%E7%89%87%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%B8%89%E5%88%97%E6%98%AF%E5%8A%A8%E6%80%81%E5%88%86%E9%85%8D%E7%9A%84%E5%A0%86%E5%88%86%E9%85%8D%E5%AF%B9%E8%B1%A1%E3%80%82%E5%85%B6%E4%B8%AD%3Ccode%3E%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2(dynamic%20strings)%3C/code%3E%EF%BC%8C%E5%AE%83%E7%9A%84%E7%B1%BB%E5%9E%8B%E6%98%AF%3Ccode%3EString%3C/code%3E%EF%BC%8C%E6%9C%89%E4%B8%89%E4%B8%AA%E5%AD%97%E6%AE%B5%E6%9E%84%E9%80%A0%E8%80%8C%E6%88%90%EF%BC%9A%E5%A0%86%E7%A9%BA%E9%97%B4%E5%88%86%E9%85%8D%E7%9A%84%E5%AD%97%E7%AC%A6%E7%BC%93%E5%86%B2%E5%8C%BA%E7%9A%84%E5%86%85%E5%AD%98%E9%A6%96%E5%9C%B0%E5%9D%80%EF%BC%8C%E7%BC%93%E5%86%B2%E5%8C%BA%E7%9A%84%E5%AD%97%E8%8A%82%E9%95%BF%E5%BA%A6%EF%BC%8C%E4%BB%A5%E5%8F%8A%E8%A2%AB%E7%94%A8%E4%BA%8E%E7%BC%93%E5%86%B2%E5%8C%BA%E7%9A%84%E5%AD%97%E8%8A%82%E6%95%B0%E3%80%82%E5%AF%B9%E4%BA%8E%E6%97%A0%E7%AC%A6%E5%8F%B78%E4%BD%8D%E6%95%B0%E7%9A%84vector%EF%BC%8C%E7%B1%BB%E5%9E%8B%E6%98%AF%3Ccode%3EVec&amp;lt;u8&amp;gt;%3C/code%3E%EF%BC%8C%E4%B9%9F%E6%98%AF%E7%94%B1%E4%B8%89%E4%B8%AA%E5%AD%97%E6%AE%B5%E6%9E%84%E9%80%A0%E8%80%8C%E6%88%90%EF%BC%9A%E5%AF%B9%E7%A9%BA%E9%97%B4%E5%88%86%E9%85%8D%E7%9A%84%E6%97%A0%E7%AC%A6%E5%8F%B78%E4%BD%8D%E6%95%B0%E7%9A%84%E4%B8%80%E4%B8%AA%E5%88%87%E7%89%87%E7%9A%84%E5%86%85%E5%AD%98%E9%A6%96%E5%9C%B0%E5%9D%80%EF%BC%8C%E5%88%87%E7%89%87%E7%9A%84%E9%95%BF%E5%BA%A6%EF%BC%8C%E4%BB%A5%E5%8F%8A%E5%88%87%E7%89%87%E5%BD%93%E5%89%8D%E4%BD%BF%E7%94%A8%E7%9A%84%E5%AD%97%E8%8A%82%E6%95%B0%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%9E%E5%88%B0%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%81%EF%BC%8C%E6%B3%A8%E6%84%8F%3Ccode%3Emin%3C/code%3E%E5%87%BD%E6%95%B0%E7%9A%84%E8%B0%83%E7%94%A8%E6%B2%A1%E6%9C%89%E5%8F%91%E7%94%9F%E6%94%B9%E5%8F%98%E3%80%82%E4%BB%8D%E7%84%B6%E5%B0%86%E6%95%B0%E7%BB%84%E7%9A%84%E5%BC%95%E7%94%A8%E4%BD%9C%E4%B8%BA%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E3%80%82%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E8%BF%99%E4%B8%AA%E6%95%B0%E7%BB%84%E5%BC%95%E7%94%A8%E4%BC%9A%E9%9A%90%E5%BC%8F%E5%9C%B0%E8%BD%AC%E6%8D%A2%E4%B8%BA%E4%B8%80%E4%B8%AA%E5%88%87%E7%89%87%E5%BC%95%E7%94%A8%EF%BC%8C%E4%BD%BF%E7%94%A8%E6%95%B0%E7%BB%84%E7%9A%84%E5%9C%B0%E5%9D%80%E4%BD%9C%E4%B8%BA%E5%88%87%E7%89%87%E5%9C%B0%E5%9D%80%EF%BC%8C%E6%95%B0%E7%BB%84%E7%9A%84%E9%95%BF%E5%BA%A6%E4%BD%9C%E4%B8%BA%E5%88%87%E7%89%87%E9%95%BF%E5%BA%A6%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E7%A8%8B%E5%BA%8F%E6%9C%80%E5%90%8E%E8%AF%AD%E5%8F%A5%E4%BC%A0%E9%80%92%E7%BB%99%E5%87%BD%E6%95%B0%E4%B8%80%E4%B8%AA%E4%B8%A4%E4%B8%AA%E5%AD%97%E6%AE%B5%E7%9A%84%E7%BB%93%E6%9E%84%EF%BC%9A%E9%A6%96%E5%85%88%E6%98%AF%E5%8C%85%E5%90%AB%E6%95%B0%E5%AD%9723%E7%9A%84%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E7%9A%84%E5%86%85%E5%AD%98%E5%9C%B0%E5%9D%80%EF%BC%8C%E5%85%B6%E6%AC%A1%E6%98%AF%E6%95%B0%E5%AD%978.%3C/p%3E%3Cp%3E%E4%BD%BF%E7%94%A8%E5%88%87%E7%89%87%EF%BC%8C%E4%BE%BF%E5%88%A9%E6%80%A7%E5%A2%9E%E5%8A%A0%E4%BA%86%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E7%8E%B0%E5%9C%A8%E5%8F%AF%E4%BB%A5%E8%BF%99%E6%A0%B7%E5%86%99%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Emin%3C/span%3E(arr:%20&amp;amp;[%3Cspan%20class=%22type%22%3Ei32%3C/span%3E])%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20Let&amp;#x27;s%20assume%20&amp;#x27;arr&amp;#x27;%20is%20not%20empty.%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Eminimum%3C/span%3E%20=%20arr[%3Cspan%20class=%22number%22%3E0%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E1%3C/span%3E..arr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20arr[i]%20&amp;lt;%20minimum%20&amp;#123;%20minimum%20=%20arr[i];%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eminimum%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Emin%3C/span%3E(&amp;amp;[%3Cspan%20class=%22number%22%3E23%3C/span%3E,%20%3Cspan%20class=%22number%22%3E17%3C/span%3E]));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Emin%3C/span%3E(&amp;amp;%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22number%22%3E55%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E,%20%3Cspan%20class=%22number%22%3E33%3C/span%3E,%20%3Cspan%20class=%22number%22%3E44%3C/span%3E]));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C17%2022%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%B8%80%E6%AC%A1%E8%B0%83%E7%94%A8%E4%BB%85%E4%BC%A0%E9%80%92%E4%B8%A4%E4%B8%AA%E5%8F%82%E6%95%B0%EF%BC%8C17%E6%98%AF%E5%AE%83%E4%BB%AC%E4%B8%AD%E6%9C%80%E5%B0%8F%E7%9A%84%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%3Ccode%3Emin%3C/code%3E%E5%87%BD%E6%95%B0%E4%B8%8D%E5%86%8D%E5%B1%80%E9%99%90%E4%BA%8E8%E4%B8%AA%E5%85%83%E7%B4%A0%E7%9A%84%E6%95%B0%E7%BB%84%EF%BC%8C%E5%AE%83%E5%8F%AF%E4%BB%A5%E5%A4%84%E7%90%86%E4%BB%BB%E4%BD%95%E9%95%BF%E5%BA%A6%E4%B8%8D%E4%B8%BA0%E7%9A%84%E6%95%B0%E7%BB%84%E5%92%8C%E5%88%87%E7%89%87%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%BA%8C%E6%AC%A1%E8%B0%83%E7%94%A8%E5%B1%95%E7%A4%BA%E4%BA%86%3Ccode%3Emin%3C/code%3E%E4%B9%9F%E5%8F%AF%E4%BB%A5%E5%A4%84%E7%90%86vector%E3%80%82%E4%BC%A0%E9%80%92%E7%BB%99%E8%AF%A5%E5%87%BD%E6%95%B0%E7%9A%84%E5%80%BC%E6%98%AF%E4%B8%80%E4%B8%AAvector%E7%9A%84%E5%BC%95%E7%94%A8%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%87%BD%E6%95%B0%E7%9A%84%E5%8F%82%E6%95%B0%E7%B1%BB%E5%9E%8B%E6%98%AF%E2%80%9Creference%20to%20slice%E2%80%9D%EF%BC%8C%E5%8F%82%E6%95%B0%E5%8F%98%E6%88%90%E4%BA%86%E4%B8%80%E4%B8%AA%E5%88%87%E7%89%87%E7%9A%84%E5%BC%95%E7%94%A8%E8%A1%A8%E7%A4%BA%E6%95%B4%E4%B8%AAvector%E5%86%85%E5%AE%B9%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E6%88%91%E4%BB%AC%E5%B7%B2%E7%BB%8F%E5%85%8B%E6%9C%8D%E4%BA%86%E5%89%8D%E9%9D%A2%E6%8F%90%E5%88%B0%E8%BF%87%E5%BE%97%E6%89%80%E6%9C%89%E7%BC%BA%E9%99%B7%E3%80%82%3C/p%3E%3Ch2%20id=%22Slicing%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Slicing%22%3E%C2%B6%3C/a%3ESlicing%3C/h2%3E%3Cp%3E%E6%9C%89%E4%BA%86%E5%88%87%E7%89%87%E7%9A%84%E4%BE%BF%E5%88%A9%EF%BC%8C%E6%B8%B4%E6%9C%9B%E4%B8%80%E4%B8%AA%E6%96%B0%E7%9A%84%E5%8F%AF%E8%83%BD%E7%9A%84%E7%94%A8%E6%B3%95%E3%80%82%3C/p%3E%3Cp%3E%E6%88%91%E4%BB%AC%E8%AF%B4%E6%9C%89%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%E6%88%96%E4%B8%80%E4%B8%AA%E5%90%91%E9%87%8F%EF%BC%8C%E4%BE%8B%E5%A6%82%3Ccode%3Evector[23,%2017,%2012,%2016,%2015,%202]%3C/code%3E%EF%BC%8C%E4%BB%A5%E5%8F%8A%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E4%BB%A5%E5%88%87%E7%89%87(slice)%E4%BD%9C%E4%B8%BA%E5%8F%82%E6%95%B0%EF%BC%8C%E4%BE%8B%E5%A6%82%E4%B8%8A%E9%9D%A2%E7%9C%8B%E5%88%B0%E7%9A%84%3Ccode%3Emin%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E6%88%91%E4%BB%AC%E6%83%B3%E7%94%A8%E8%AF%A5%E5%87%BD%E6%95%B0%E5%A4%84%E7%90%86%E4%BB%85%E6%95%B0%E7%BB%84%E6%88%96%E5%87%BD%E6%95%B0%E7%9A%84%E4%B8%80%E5%B0%8F%E6%AE%B5%E3%80%82%E4%BE%8B%E5%A6%82%EF%BC%8C%E6%88%91%E4%BB%AC%E6%83%B3%E5%9C%A8%E6%95%B0%E7%BB%84%E7%9A%84%E7%AC%AC%E4%B8%89%E3%80%81%E7%AC%AC%E5%9B%9B%E5%92%8C%E7%AC%AC%E4%BA%94%E5%85%83%E7%B4%A0%E4%B8%AD%E6%9F%A5%E6%89%BE%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%82%3C/p%3E%3Cp%3E%E6%88%91%E4%BB%AC%E9%9C%80%E8%A6%81%E5%81%9A%E7%9A%84%E6%98%AF%E4%BC%AA%E9%80%A0%E4%B8%80%E4%B8%AA%E5%88%87%E7%89%87%E8%A1%A8%E7%A4%BA%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%E6%88%96%E5%90%91%E9%87%8F%E7%9A%84%E7%89%87%E6%AE%B5%EF%BC%8C%E4%B8%8D%E9%9C%80%E8%A6%81%E6%95%B4%E4%B8%AA%E6%95%B0%E7%BB%84%E5%92%8C%E5%90%91%E9%87%8F%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%BA%E4%BA%86%E8%8E%B7%E5%BE%97%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%3Ccode%3Earr%3C/code%3E%E6%88%96%E5%90%91%E9%87%8F%3Ccode%3Ev%3C/code%3E%E4%B8%8B%E6%A0%872%E7%9A%84%E6%9D%A1%E7%9B%AE%EF%BC%8C%E5%88%86%E5%88%AB%E5%8F%AF%E4%BB%A5%E5%86%99%3Ccode%3Earr[2]%3C/code%3E%E6%88%96%3Ccode%3Ev[2]%3C/code%3E%E3%80%82%E4%B8%BA%E4%BA%86%E8%8E%B7%E5%BE%972%E5%88%B05%E4%B9%8B%E9%97%B4%E7%9A%84%E6%89%80%E6%9C%89%E5%85%83%E7%B4%A0%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%86%99%3Ccode%3Earr[2..5]%3C/code%3E%E6%88%96%3Ccode%3Ev[2..5]%3C/code%3E%E3%80%82%E4%B8%8B%E9%9D%A2%E6%98%AF%E5%8F%A6%E4%B8%80%E7%A7%8D%E7%94%A8%E6%B3%95%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Emin%3C/span%3E(arr:%20&amp;amp;[%3Cspan%20class=%22type%22%3Ei32%3C/span%3E])%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20Let&amp;#x27;s%20assume%20&amp;#x27;arr&amp;#x27;%20is%20not%20empty.%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Emu%3C/span%3E%20minimum%20=%20arr[%3Cspan%20class=%22number%22%3E0%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E1%3C/span%3E..arr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20arr[i]%20&amp;lt;%20minimum%20&amp;#123;%20minimum%20=%20arr[i];%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eminimum%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E23%3C/span%3E,%20%3Cspan%20class=%22number%22%3E17%3C/span%3E,%20%3Cspan%20class=%22number%22%3E12%3C/span%3E,%20%3Cspan%20class=%22number%22%3E16%3C/span%3E,%20%3Cspan%20class=%22number%22%3E15%3C/span%3E,%20%3Cspan%20class=%22number%22%3E2%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Erange%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E2%3C/span%3E..%3Cspan%20class=%22number%22%3E5%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eslice_ref%3C/span%3E%20=%20&amp;amp;arr[range];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Emin%3C/span%3E(slice_ref));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%89%93%E5%8D%B0%E2%80%9C12%E2%80%9D%EF%BC%8C%E6%9C%80%E5%90%8E4%E8%A1%8C%E5%8F%AF%E4%BB%A5%E5%90%88%E5%B9%B6%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Emin%3C/span%3E(arr:%20&amp;amp;[%3Cspan%20class=%22type%22%3Ei32%3C/span%3E])%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20Let&amp;#x27;s%20assume%20&amp;#x27;arr&amp;#x27;%20is%20not%20empty.%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Emu%3C/span%3E%20minimum%20=%20arr[%3Cspan%20class=%22number%22%3E0%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E1%3C/span%3E..arr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20arr[i]%20&amp;lt;%20minimum%20&amp;#123;%20minimum%20=%20arr[i];%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eminimum%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Emin%3C/span%3E(&amp;amp;[%3Cspan%20class=%22number%22%3E23%3C/span%3E,%20%3Cspan%20class=%22number%22%3E17%3C/span%3E,%20%3Cspan%20class=%22number%22%3E12%3C/span%3E,%20%3Cspan%20class=%22number%22%3E16%3C/span%3E,%20%3Cspan%20class=%22number%22%3E15%3C/span%3E,%20%3Cspan%20class=%22number%22%3E2%3C/span%3E][%3Cspan%20class=%22number%22%3E2%3C/span%3E..%3Cspan%20class=%22number%22%3E5%3C/span%3E]));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E7%A7%8D%E4%BB%8E%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%E6%88%96%E4%B8%80%E4%B8%AA%E5%90%91%E9%87%8F%E8%8E%B7%E5%8F%96%E5%88%87%E7%89%87(slice)%E7%9A%84%E8%BF%87%E7%A8%8B%EF%BC%8C%E7%A7%B0%E4%B8%BA%E2%80%9C%E5%88%87%E5%88%86(slicing)%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E6%B3%A8%E6%84%8F%EF%BC%8C%E5%92%8C%3Ccode%3Efor%3C/code%3E%E5%BE%AA%E7%8E%AF%E4%B8%80%E6%A0%B7%EF%BC%8Cslicing%E4%B8%8D%E5%8C%85%E5%90%AB%E4%B8%8A%E9%99%90%E5%80%BC%E3%80%82%E6%89%80%E4%BB%A5%EF%BC%8C%E8%8C%83%E5%9B%B4%3Ccode%3E2..5%3C/code%3E%E7%9A%84%E8%AE%B0%E5%BD%95%E5%8C%85%E5%90%AB%E7%9A%84%E4%BD%8D%E7%BD%AE%E6%98%AF2,3,4%E3%80%82%E4%BB%8E0%E5%BC%80%E5%A7%8B%E8%AE%A1%E6%95%B0%E3%80%82%3C/p%3E%3Cp%3E%E5%88%87%E7%89%87%E6%93%8D%E4%BD%9C%E5%8F%AF%E4%BB%A5%E4%BD%9C%E7%94%A8%E5%9C%A8%E6%95%B0%E7%BB%84%E5%92%8C%E5%90%91%E9%87%8F%E4%B8%AD%EF%BC%8C%E4%B9%9F%E5%8F%AF%E4%BB%A5%E4%BD%9C%E7%94%A8%E5%9C%A8%E5%85%B6%E5%AE%83%E5%88%87%E7%89%87%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E55%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E,%20%3Cspan%20class=%22number%22%3E33%3C/span%3E,%20%3Cspan%20class=%22number%22%3E44%3C/span%3E,%20%3Cspan%20class=%22number%22%3E66%3C/span%3E,%20%3Cspan%20class=%22number%22%3E7%3C/span%3E,%20%3Cspan%20class=%22number%22%3E8%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ev%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22number%22%3E55%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E,%20%3Cspan%20class=%22number%22%3E33%3C/span%3E,%20%3Cspan%20class=%22number%22%3E44%3C/span%3E,%20%3Cspan%20class=%22number%22%3E66%3C/span%3E,%20%3Cspan%20class=%22number%22%3E7%3C/span%3E,%3Cspan%20class=%22number%22%3E9%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Esr1%3C/span%3E%20=%20&amp;amp;arr[%3Cspan%20class=%22number%22%3E2%3C/span%3E..%3Cspan%20class=%22number%22%3E5%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Esr2%3C/span%3E%20=%20&amp;amp;v[%3Cspan%20class=%22number%22%3E2%3C/span%3E..%3Cspan%20class=%22number%22%3E5%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;%20&amp;#123;:?&amp;#125;%20&amp;#123;:?&amp;#125;%20&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20sr1,%20sr2,%20&amp;amp;arr1[%3Cspan%20class=%22number%22%3E1%3C/span%3E..%3Cspan%20class=%22number%22%3E2%3C/span%3E],%20&amp;amp;sr1[%3Cspan%20class=%22number%22%3E1%3C/span%3E]);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E8%BE%93%E5%87%BA%E2%80%9C%3Ccode%3E[33,%2044,%2066]%20[33,%2044,%2066]%20[44]%2044%3C/code%3E%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%85%B6%E4%B8%AD%3Ccode%3Esr1%3C/code%3E%E5%8F%98%E9%87%8F%E6%98%AF%E4%B8%80%E4%B8%AA%E5%88%87%E7%89%87%E5%BC%95%E7%94%A8%EF%BC%8C%E5%AE%83%E5%BC%95%E7%94%A8%E7%9A%84%E6%98%AF%E6%95%B0%E7%BB%84%3Ccode%3Earr%3C/code%3E%E7%9A%84%E7%AC%AC%E4%B8%89%E3%80%81%E7%AC%AC%E5%9B%9B%E5%92%8C%E7%AC%AC%E4%BA%94%E4%B8%AA%E5%85%83%E7%B4%A0%E3%80%82%3C/p%3E%3Cp%3E%3Ccode%3Esr2%3C/code%3E%E6%98%AF%E4%B8%80%E4%B8%AA%E7%B1%BB%E4%BC%BC%E5%9C%B0%E5%88%87%E7%89%87%E5%BC%95%E7%94%A8%EF%BC%8C%E4%BD%86%E5%AE%83%E5%BC%95%E7%94%A8%E7%9A%84%E6%98%AF%E5%90%91%E9%87%8F%3Ccode%3Ev%3C/code%3E%E7%9A%84%E6%9D%A1%E7%9B%AE%E3%80%82%3C/p%3E%3Ch2%20id=%22Out-of-range-Slicing%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Out-of-range-Slicing%22%3E%C2%B6%3C/a%3EOut-of-range%20Slicing%3C/h2%3E%3Cp%3E%E9%99%A4%E4%BA%86%E5%B8%B8%E8%A7%84%E7%9A%84%E5%88%87%E5%88%86(slicing)%EF%BC%8C%E7%94%9A%E8%87%B3%E5%8F%AF%E4%BB%A5%E5%81%9A%E6%9F%90%E4%BA%9B%E6%80%AA%E5%BC%82%E7%9A%84%E4%BA%8B%E6%83%85%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E55%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E,%20%3Cspan%20class=%22number%22%3E33%3C/span%3E,%20%3Cspan%20class=%22number%22%3E44%3C/span%3E,%20%3Cspan%20class=%22number%22%3E66%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_r1%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E4%3C/span%3E..%3Cspan%20class=%22number%22%3E4%3C/span%3E;%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_a1%3C/span%3E%20=%20&amp;amp;arr[_r1];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_r2%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E4%3C/span%3E..%3Cspan%20class=%22number%22%3E3%3C/span%3E;%3Cspan%20class=%22comment%22%3E/let%20_a2%20=%20&amp;amp;arr[_r2];%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_r3%3C/span%3E%20=%20-%3Cspan%20class=%22number%22%3E3i32%3C/span%3E..%3Cspan%20class=%22number%22%3E2%3C/span%3E;%3Cspan%20class=%22comment%22%3E/let%20_a3%20=%20&amp;amp;arr[_r3];%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_r4%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E3%3C/span%3E..%3Cspan%20class=%22number%22%3E8%3C/span%3E;%3Cspan%20class=%22comment%22%3E/let%20_a4%20=%20&amp;amp;arr[_r4];%3C/span%3E%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%AF%A5%E7%A8%8B%E5%BA%8F%E4%B8%AD%EF%BC%8C%E9%99%A4%E4%BA%86%E7%AC%AC%E4%B8%80%E8%A1%8C%EF%BC%8C%E5%85%B6%E5%AE%83%E8%A1%8C%E9%83%BD%E6%98%AF%E4%BB%A5%E7%AC%AC%E4%B8%80%E8%A1%8C%E4%BD%9C%E4%B8%BA%E5%88%87%E5%88%86%E6%95%B0%E7%BB%84%E6%96%B9%E5%BC%8F%E5%A3%B0%E6%98%8E%E4%B8%80%E4%B8%AArange%E3%80%82%3C/p%3E%3Cp%3E%E6%89%80%E6%9C%89range%E9%83%BD%E6%98%AF%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%8C%E4%BD%86%E4%B8%8D%E6%98%AF%E6%89%80%E6%9C%89%E5%88%87%E5%88%86%E6%93%8D%E4%BD%9C%E5%90%88%E6%B3%95%EF%BC%8C%E6%89%80%E4%BB%A5%E6%B3%A8%E9%87%8A%E6%8E%89%E4%BA%86%E6%9F%90%E4%BA%9B%E8%AF%AD%E5%8F%A5%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%BA%8C%E8%A1%8C%E6%98%AF%E9%9D%9E%E5%B8%B8%E6%AD%A3%E7%A1%AE%E7%9A%84%EF%BC%8C%E4%BB%8E%E4%BD%8D%E7%BD%AE4%E5%BC%80%E5%A7%8B%EF%BC%8C%E5%86%8D%E4%BB%8E%E4%BD%8D%E7%BD%AE4%E7%BB%93%E6%9D%9F%E3%80%82%E5%AE%83%E6%98%AF%E4%B8%80%E4%B8%AA%E7%A9%BAslice%EF%BC%8C%E7%A9%BAslice%E6%98%AF%E5%85%81%E8%AE%B8%E7%9A%84%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%B8%89%E8%A1%8C%E7%94%A8%E4%BA%86%E4%B8%80%E4%B8%AA%E2%80%9C%E5%80%92%E9%80%80%E2%80%9D%E7%9A%84%E5%88%87%E7%89%87%E3%80%82%E5%9C%A8%E7%BC%96%E8%AF%91%E5%99%A8%E4%B8%AD%E5%AE%83%E6%98%AF%E5%85%81%E8%AE%B8%E7%9A%84%EF%BC%8C%E4%BD%86%E5%9C%A8%E8%BF%90%E8%A1%8C%E6%9C%9F%E4%BC%9A%E5%AF%BC%E8%87%B4panic%EF%BC%8C%E5%B0%B1%E5%92%8C%E8%B6%85%E8%8C%83%E5%9B%B4%E6%95%B0%E7%BB%84%E8%AE%BF%E9%97%AE%E4%B8%80%E6%A0%B7%E3%80%82%E8%BF%90%E8%A1%8C%E6%9C%9F%E5%87%BA%E7%8E%B0%E7%9A%84%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF%EF%BC%8C%E4%BC%9A%E6%89%93%E5%8D%B0%E5%9C%A8%E6%8E%A7%E5%88%B6%E5%8F%B0%EF%BC%8C%3Ccode%3Eslice%20index%20that%20starts%20at%204%20but%20ends%20at%203%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E5%9B%9B%E8%A1%8C%E4%BD%BF%E7%94%A8%E4%BA%86%E7%B1%BB%E5%9E%8B%E9%99%90%E5%88%B6%E4%B8%BA%3Ccode%3Ei32%3C/code%3E%E7%9A%84%E4%B8%80%E4%B8%AArange%E3%80%82%E5%AE%83%E4%BC%9A%E5%AF%BC%E8%87%B4%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AF%B9%E4%BA%8E%E5%88%87%E5%88%86(slicing)%E6%93%8D%E4%BD%9C%EF%BC%8C%E5%92%8C%E5%BA%8F%E5%88%97%E7%B4%A2%E5%BC%95%E4%B8%80%E6%A0%B7%EF%BC%8C%E5%BF%85%E9%A1%BB%E6%98%AF%3Ccode%3Eusize%3C/code%3E%E7%B1%BB%E5%9E%8B%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%BA%94%E8%A1%8C%E4%BD%BF%E7%94%A8%E7%9A%84range%E8%B6%85%E5%87%BA%E4%BA%86%3Ccode%3Earr%3C/code%3E%E7%9A%84%E8%8C%83%E5%9B%B4%E3%80%82%E5%AE%83%E7%BC%96%E8%AF%91%E4%BC%9A%E9%80%9A%E8%BF%87%EF%BC%8C%E4%BD%86%E5%9C%A8%E8%BF%90%E8%A1%8C%E6%9C%9F%E4%BC%9A%E5%B8%A6%E6%9C%89%E4%B8%80%E4%B8%AApanic%E4%BF%A1%E6%81%AF%E2%80%9C%3Ccode%3Eindex%208%20out%20of%20range%20for%20slice%20of%20length%205%3C/code%3E%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E6%B3%A8%E6%84%8F%E5%88%B0%EF%BC%8C%E5%9C%A8%E8%BF%99%E9%87%8C%EF%BC%8C%E4%B8%8D%E8%AE%BA%E6%98%AFarray%E3%80%81vector%E8%BF%98%E6%98%AFslice%EF%BC%8C%E6%83%85%E5%86%B5%E9%83%BD%E4%B8%80%E6%A0%B7%E3%80%82%3C/p%3E%3Ch2%20id=%22Mutable-Slicing%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Mutable-Slicing%22%3E%C2%B6%3C/a%3EMutable%20Slicing%3C/h2%3E%3Cp%3E%E5%88%87%E7%89%87%E6%98%AF%E5%8F%A6%E4%B8%80%E4%B8%AA%E5%BA%8F%E5%88%97%E7%9A%84%E4%B8%80%E6%AE%B5(a%20portion)%EF%BC%8C%E6%9B%B4%E6%94%B9%E5%88%87%E7%89%87%E5%86%85%E5%AE%B9%E6%84%8F%E5%91%B3%E7%9D%80%E6%9B%B4%E6%94%B9%E5%8E%9F%E6%9D%A5%E5%BA%8F%E5%88%97%E7%9B%B8%E5%BA%94%E7%9A%84%E8%AE%B0%E5%BD%95%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E11%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E,%20%3Cspan%20class=%22number%22%3E33%3C/span%3E,%20%3Cspan%20class=%22number%22%3E44%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Esl_ref%3C/span%3E%20=%20&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20arr[%3Cspan%20class=%22number%22%3E1%3C/span%3E..%3Cspan%20class=%22number%22%3E3%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20sl_ref);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Esl_ref[%3Cspan%20class=%22number%22%3E1%3C/span%3E]%20=%20%3Cspan%20class=%22number%22%3E0%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;%20&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20sl_ref);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;%20&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20arr);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E4%BC%9A%E6%89%93%E5%8D%B0%E2%80%9C%3Ccode%3E[22,%2033]%20[22,%200]%20[11,%2022,%200,%2044]%3C/code%3E%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%8F%AF%E5%8F%98%E5%8F%98%E9%87%8F%3Ccode%3Esl_ref%3C/code%3E%E6%8C%87%E5%90%91%E4%B8%80%E4%B8%AA%E5%8F%AF%E5%8F%98%E5%88%87%E7%89%87(mutable%20slice)%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%BC%95%E7%94%A8%E4%B8%8D%E5%8F%98%EF%BC%8C%E4%BD%86%E5%88%87%E7%89%87%E4%BC%9A%E8%A2%AB%E6%94%B9%E5%8F%98%EF%BC%8C%E6%84%8F%E5%91%B3%E7%9D%80%E8%BF%99%E9%87%8C%E5%8F%AF%E4%BB%A5%E6%9B%B4%E6%94%B9%E6%95%B0%E7%BB%84%E7%9A%84%E8%AE%B0%E5%BD%95%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%BA%E4%BA%86%E8%8E%B7%E5%BE%97%E4%B8%80%E4%B8%AA%E5%8F%AF%E5%8F%98%E5%88%87%E7%89%87%E7%9A%84%E5%BC%95%E7%94%A8%EF%BC%8C%E5%9F%BA%E7%A1%80%E5%BA%8F%E5%88%97(underlying%20sequence)%E5%BF%85%E9%A1%BB%E6%98%AF%E5%8F%AF%E5%8F%98%E7%9A%84%E3%80%82%E6%89%80%E4%BB%A5%E8%A6%81%E6%B1%82%E7%AC%AC%E4%B8%80%E8%A1%8C%E5%B8%A6%3Ccode%3Emut%3C/code%3E%E4%BB%8E%E5%8F%A5%E3%80%82%3C/p%3E%3Cp%3E%E6%9B%B4%E6%94%B9%E5%88%87%E7%89%87%E5%BC%95%E7%94%A8%E6%84%8F%E5%91%B3%E7%9D%80%E4%BB%80%E4%B9%88%EF%BC%9F%E5%88%87%E7%89%87%E5%BC%95%E7%94%A8%E6%98%AF%E5%BC%95%E7%94%A8%E7%9A%84%E4%B8%80%E7%A7%8D%EF%BC%8C%E6%9B%B4%E6%94%B9%E8%AF%A5%E5%BC%95%E7%94%A8%E6%84%8F%E5%91%B3%E7%9D%80%E5%BA%8F%E5%88%97%E7%89%87%E6%AE%B5%E5%BC%95%E7%94%A8%E7%9A%84%E6%9B%B4%E6%94%B9%EF%BC%8C%E8%BF%99%E9%87%8C%E7%9A%84%E5%BA%8F%E5%88%97(sequence)%E5%8F%AF%E8%83%BD%E6%98%AF%E5%88%87%E7%89%87%E7%89%87%E6%AE%B5%EF%BC%8C%E4%B9%9F%E5%8F%AF%E8%83%BD%E6%98%AF%E5%9F%BA%E7%A1%80%E5%BA%8F%E5%88%97(%E6%95%B0%E7%BB%84%E6%88%96%E5%90%91%E9%87%8F)%E7%89%87%E6%AE%B5%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E11%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E,%20%3Cspan%20class=%22number%22%3E33%3C/span%3E,%20%3Cspan%20class=%22number%22%3E44%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Esl_ref%3C/span%3E%20=%20&amp;amp;arr[%3Cspan%20class=%22number%22%3E1%3C/span%3E..%3Cspan%20class=%22number%22%3E3%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20sl_ref);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Esl_ref%20=%20&amp;amp;arr[%3Cspan%20class=%22number%22%3E0%3C/span%3E..%3Cspan%20class=%22number%22%3E1%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;%20&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20sl_ref);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;quot;%3C/span%3E%20&amp;#123;:?&amp;#125;%3Cspan%20class=%22string%22%3E&amp;quot;,%20arr);%3C/span%3E%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E9%87%8C%E5%B0%86%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C%3Ccode%3E[22,%2033]%20[11]%20[11,%2022,%2033,%2044]%3C/code%3E%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E6%AE%B5%E7%A8%8B%E5%BA%8F%E4%B8%AD%EF%BC%8C%E5%8F%98%E9%87%8F%3Ccode%3Earr%3C/code%3E%E6%98%AF%E4%B8%80%E4%B8%AA%E4%B8%8D%E5%8F%AF%E5%8F%98%E6%95%B0%E7%BB%84%EF%BC%8C%E6%89%80%E4%BB%A5%E5%AE%83%E4%B8%8D%E4%BC%9A%E6%9B%B4%E6%94%B9%E3%80%82%E5%8F%98%E9%87%8F%3Ccode%3Esl_ref%3C/code%3E%E6%98%AF%E6%8C%87%E5%90%91%E4%B8%80%E4%B8%AA%E5%8F%AF%E5%8F%98%E5%88%87%E7%89%87%E7%9A%84%E5%8F%AF%E5%8F%98%E5%BC%95%E7%94%A8%E3%80%82%3C/p%3E%3Ch2%20id=%22Open-Ended-Ranges-and-Slicing%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Open-Ended-Ranges-and-Slicing%22%3E%C2%B6%3C/a%3EOpen-Ended%20Ranges%20and%20Slicing%3C/h2%3E%3Cp%3E%E6%9C%89%E6%97%B6%E5%B8%8C%E6%9C%9B%E4%BB%8E%E7%BB%99%E5%AE%9A%E7%9A%84%3Ccode%3En%3C/code%3E%E5%BC%80%E5%A7%8B%E8%8E%B7%E5%8F%96%E4%B8%80%E4%B8%AA%E5%BA%8F%E5%88%97%E7%9A%84%E6%89%80%E6%9C%89%E6%9D%A1%E7%9B%AE%EF%BC%8C%E6%88%96%E4%BB%8E%3Ccode%3En%3C/code%3E%E5%88%B0%E6%9C%80%E5%90%8E%E7%9A%84%E6%9D%A1%E7%9B%AE%EF%BC%8C%E5%8F%AF%E4%BB%A5%E8%BF%99%E6%A0%B7%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E11%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E,%20%3Cspan%20class=%22number%22%3E33%3C/span%3E,%20%3Cspan%20class=%22number%22%3E44%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3En%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E2%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Esr1%3C/span%3E%20=%20&amp;amp;arr[%3Cspan%20class=%22number%22%3E0%3C/span%3E..n];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Esr2%3C/span%3E%20=%20&amp;amp;arr[n..arr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E()];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;%20&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20sr1,%20sr2);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E6%89%93%E5%8D%B0%E8%BE%93%E5%87%BA%EF%BC%9A%E2%80%9C%3Ccode%3E[11,%2022]%20[33,%2044]%3C/code%3E%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E4%BD%86%E6%9C%89%E6%9B%B4%E7%AE%80%E5%8D%95%E7%9A%84%E5%86%99%E6%B3%95%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E11%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E,%20%3Cspan%20class=%22number%22%3E33%3C/span%3E,%20%3Cspan%20class=%22number%22%3E44%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3En%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E2%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Esr1%3C/span%3E%20=%20&amp;amp;arr[..n];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Esr2%3C/span%3E%20=%20&amp;amp;arr[n..];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;%20&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20sr1,%20sr2);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%AC%AC%E4%B8%89%E8%A1%8C%E6%B2%A1%E6%9C%89%E4%B8%8A%E9%99%90%EF%BC%8C%E7%AC%AC%E5%9B%9B%E8%A1%8C%E6%B2%A1%E6%9C%89%E4%B8%8B%E9%99%90%E3%80%82%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E8%BF%99%E4%BA%9BRange%E6%98%AF%E4%B8%8D%E5%90%8C%E7%B1%BB%E5%9E%8B%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Er1%3C/span%3E:%20std::ops::RangeFrom&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E&amp;gt;%20=%20%3Cspan%20class=%22number%22%3E3%3C/span%3E..;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Er2%3C/span%3E:%20std::ops::RangeTo&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E&amp;gt;%20=%20..%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Eprintln%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;%20&amp;#123;:?&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20r1,%20r2,%20std::mem::%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;r1),%20std::mem::%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;r2));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C%3Ccode%3E3..%20..12%204%204%3C/code%3E%E2%80%9D%E3%80%82%E5%8F%98%E9%87%8F%3Ccode%3Er1%3C/code%3E%E7%9A%84%E7%B1%BB%E5%9E%8B%E6%98%AF%3Ccode%3ERangeFrom%3C/code%3E%EF%BC%8C%E6%9C%89%E4%B8%8B%E9%99%90%E6%B2%A1%E6%9C%89%E4%B8%8A%E9%99%90%E3%80%82%E5%8F%98%E9%87%8F%3Ccode%3Er2%3C/code%3E%E7%9A%84%E7%B1%BB%E5%9E%8B%E6%98%AF%3Ccode%3ERangeTo%3C/code%3E%EF%BC%8C%E6%9C%89%E4%B8%8A%E9%99%90%E6%B2%A1%E6%9C%89%E4%B8%8B%E9%99%90%E3%80%82%E9%83%BD%E5%8D%A04%E4%B8%AA%E5%AD%97%E8%8A%82%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E4%BB%AC%E4%BB%85%E9%9C%80%E8%A6%81%E5%AD%98%E5%82%A8%3Ccode%3Ei32%3C/code%3E%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%AF%B9%E8%B1%A1%E3%80%82%3C/p%3E%3Cp%3E%3Ccode%3ERangeTo%3C/code%3E%E4%BB%85%E7%94%A8%E4%BA%8E%E5%BC%80%E5%8F%A3%E5%88%87%E7%89%87(open-ended%20slicing)%EF%BC%8C%E8%80%8C%3Ccode%3ERangeFrom%3C/code%3E%E4%B9%9F%E5%8F%AF%E8%83%BD%E7%94%A8%E4%BA%8E%E7%89%B9%E5%AE%9A%E7%9A%84%E5%BE%AA%E7%8E%AF%E4%B8%AD%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E3%3C/span%3E..%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20i%20*%20i%20&amp;gt;%20%3Cspan%20class=%22number%22%3E40%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22keyword%22%3Ebreak%3C/span%3E;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20i);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E8%BE%93%E5%87%BA%EF%BC%9A%E2%80%9C%3Ccode%3E3%204%205%206%3C/code%3E%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E9%99%A4%E4%BA%86%E4%B8%8A%E9%9D%A2%E4%BB%8B%E7%BB%8D%E7%9A%84%E4%B8%A4%E7%A7%8D%EF%BC%8C%E8%BF%98%E6%9C%89%E4%B8%80%E7%A7%8D%E6%B3%9B%E5%9E%8B%E7%B1%BB%E5%9E%8B%E7%9A%84range%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Erange%3C/span%3E:%20std::ops::RangeFull%20=%20..;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea1%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E11%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E,%20%3Cspan%20class=%22number%22%3E33%3C/span%3E,%20%3Cspan%20class=%22number%22%3E44%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea2%3C/span%3E%20=%20&amp;amp;a1[range];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;:?&amp;#125;%20&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20std::mem::%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;range),%20a1,%20a2);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C%3Ccode%3E0%20[11,%2022,%2033,%2044]%20[11,%2022,%2033,%2044]%3C/code%3E%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E4%B8%BA%3Ccode%3ERangeFull%3C/code%3E%E6%B2%A1%E6%9C%89%E5%AD%98%E5%82%A8%E4%B8%9C%E8%A5%BF%EF%BC%8C%E6%89%80%E4%BB%A5%E5%AE%83%E7%9A%84%E5%A4%A7%E5%B0%8F%E6%98%AF0%E3%80%82%E5%AE%83%E8%A2%AB%E7%94%A8%E4%BA%8E%E5%9F%BA%E7%A1%80%E5%BA%8F%E5%88%97%E8%8C%83%E5%9B%B4%E7%89%B9%E5%88%AB%E5%A4%A7%E7%9A%84%E6%83%85%E5%BD%A2%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E6%80%BB%E7%BB%93%E4%B8%80%E4%B8%8B%E5%AE%B9%E6%98%93%E6%B7%B7%E6%B7%86%E7%9A%84%E6%A6%82%E5%BF%B5%EF%BC%8C%3C/p%3E%3Cblockquote%3E%3Cp%3E%3Ccode%3E[T;%20n]%3C/code%3E%20is%20an%20array%20of%20length%20%3Ccode%3En%3C/code%3E,%20represented%20as%20%3Ccode%3En%3C/code%3E%20adjacent%20%3Ccode%3ET%3C/code%3E%20instances.%3Cbr%3E%3Ccode%3E&amp;amp;[T;%20n]%3C/code%3E%20is%20purely%20a%20reference%20to%20that%20array,%20represented%20as%20a%20thin%20pointer%20to%20the%20data.%3Cbr%3E%3Ccode%3E[T]%3C/code%3E%20is%20a%20slice,%20an%20unsized%20type;%20it%20can%20only%20be%20used%20through%20some%20form%20of%20indirection.%3Cbr%3E%3Ccode%3E&amp;amp;[T]%3C/code%3E,%20called%20a%20slice,%20is%20a%20sized%20type.%20It%E2%80%99s%20a%20fat%20pointer,%20represented%20as%20a%20pointer%20to%20the%20first%20item%20and%20the%20length%20of%20the%20slice.%3C/p%3E%3C/blockquote%3E" type="image"/>
    
    
    <category term="learning" scheme="https://galudisu.info/categories/learning/"/>
    
    
    <category term="rust" scheme="https://galudisu.info/tags/rust/"/>
    
  </entry>
  
  <entry>
    <title>rust基础入门[14] - Using Changeable Strings</title>
    <link href="https://galudisu.info/2023/01/14/rust/beginning/chapter14_Using%20Changeable%20Strings/"/>
    <id>https://galudisu.info/2023/01/14/rust/beginning/chapter14_Using%20Changeable%20Strings/</id>
    <published>2023-01-14T07:50:46.000Z</published>
    <updated>2025-04-27T11:59:08.282Z</updated>
    
    <content type="html"><![CDATA[<p>本章覆盖有：</p><ul><li>静态字符串是如何实现的</li><li>动态字符串是如何实现的</li><li>如何从动态字符串添加或删除字符</li><li>如何在静态字符串和动态字符串之间相互转换</li><li>如何合并字符串</li></ul><span id="more"></span><h2 id="Static-Strings"><a class="header-anchor" href="#Static-Strings">¶</a>Static Strings</h2><p>我们用到的字符串是可变的(changeable)吗？</p><p>某种层面上，她们是可变的(mutable)，我们可以改变它们：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">a</span> = <span class="string">&quot;Hel&quot;</span>;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, a);</span><br><span class="line">a = <span class="string">&quot;lo&quot;</span>;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, a);</span><br></pre></td></tr></table></figure><p>我们这里的改变，是更改了整个字符串的内容，不是某些字符。实际上，这里将字符串变量，指派给了一个新的字面量或字符串变量。</p><p>但如果我们想要创建一个字符串，是由算法、文件读取、或由用户输入(type)的，这怎么实现？可以确切说，这些都可以做到，并且会改变字符串的内容，它们有一个不可变的<code>content</code>，这些内容不能对其中一两个字符进行重写。基于这个原因，这些字符内容(content)称作<strong>静态字符串(static strings)</strong>。下面例子理清一下：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::mem::*;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">a</span>: &amp;<span class="type">str</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">b</span>: &amp;<span class="type">str</span> = <span class="string">&quot;0123456789&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">c</span>: &amp;<span class="type">str</span> = <span class="string">&quot;abcdè&quot;</span>;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125; &#123;&#125;&quot;</span>,</span><br><span class="line"><span class="title function_ invoke__">size_of_val</span>(a),</span><br><span class="line"><span class="title function_ invoke__">size_of_val</span>(b),</span><br><span class="line"><span class="title function_ invoke__">size_of_val</span>(c));</span><br></pre></td></tr></table></figure><p>结果将打印“0 10 6”。</p><p>首先，我们指定了三个变量的类型。它们的类型是<code>&amp;str</code>，即“<code>str</code>的引用”。</p><p><code>str</code>这个词定义在标准库中，作为一个不可修改的字节数组，表示UTF-8字符串。编译器每次解析到字面量字符串时，它存储在一个字符串的字符静态程序区域，这个区域是<code>str</code>类型的。编译器使用一个引用(reference)，来表示字面量字符串表达式在该区域的值，因此任何字符串字面量的类型都是<code>&amp;str</code>。</p><p>在例子中，泛型函数<code>size_of_val</code>入参三个字符串变量调用。还记得该函数返回引用对象的大小。如果参数是<code>a</code>，参数类型是<code>&amp;str</code>，该函数会返回由<code>a</code>引用的字符串缓冲区的大小，即返回类型<code>str</code>的大小。</p><p>因此，这里打印出引用字符串缓冲区<code>a</code>、<code>b</code>和<code>c</code>的大小。分别大小由<code>0</code>、<code>10</code>和<code>6</code>字节。第一个字符串为空，第二个包含10个数，与此，第三个仅包含5个字符，却打印了6.这是因为UTF-8标注的原因。这种标注，取决于字符本身，每个字符由一个或多个字节表示。ASCII字符由1个字节表示，对于“grave e”字符，即“è”，由两个字节表示。因此，整个字符串大小是6个字节。</p><p>注意由<code>a</code>、<code>b</code>和<code>c</code>变量引用的缓冲区的类型相同，都是<code>str</code>，但它们有不同长度：0，10，6。这里我们第一次看到了一个不与长度关联的类型。</p><p>这种类型不常见，但它们有某些限制。一是你不能给这种类型声明一个变量或一个函数参数。另一个明显的限制是，你不能访问这种类型的大小。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">a</span>: <span class="type">str</span>;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>(a: <span class="type">str</span>) &#123;&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, std::mem::size_of::&lt;<span class="type">str</span>&gt;());</span><br></pre></td></tr></table></figure><p>上面三个语句都是不合法的。</p><p>但，要怎样才能获得缓冲区的大小？在C语言，字符串终止符被作为字符串结束标志，但Rust中没有字符串终止符。</p><p>实际上<code>&amp;str</code>不是一个普通的Rust引用，它仅包含一个指针，但它是一对指针和长度(a pair of a pointer and a length)。指针的值是字符串缓冲区的开始地址，长度值是字符串缓冲区的字节数量。</p><p>让我们更深入探索一下这种奇怪的类型。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::mem::*;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">a</span>: &amp;<span class="type">str</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">b</span>: &amp;<span class="type">str</span> = <span class="string">&quot;0123456789&quot;</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">c</span>: &amp;<span class="type">str</span> = <span class="string">&quot;abcdè&quot;</span>;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125; &#123;&#125;; &quot;</span>,</span><br><span class="line"><span class="title function_ invoke__">size_of_val</span>(&amp;a),</span><br><span class="line"><span class="title function_ invoke__">size_of_val</span>(&amp;b),</span><br><span class="line"><span class="title function_ invoke__">size_of_val</span>(&amp;c));</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125; &#123;&#125;; &quot;</span>,</span><br><span class="line"><span class="title function_ invoke__">size_of_val</span>(&amp;&amp;a),</span><br><span class="line"><span class="title function_ invoke__">size_of_val</span>(&amp;&amp;b),</span><br><span class="line"><span class="title function_ invoke__">size_of_val</span>(&amp;&amp;c));</span><br></pre></td></tr></table></figure><p>该程序在一个64位系统将打印“16 16 16; 8 8 8”，在32位系统打印“8 8 8; 4 4 4”。</p><p>第一条<code>print</code>语句打印变量自身的大小，即类型<code>&amp;str</code>。该变量得到的结果，是常规引用大小的2倍，因为它们包含一个指针对象和一个<code>usize</code>对象。所以，当我们在一个静态字符串调用<code>len</code>函数，得到的是pair的第二个值。</p><p>第二条<code>print</code>语句打印变量自身引用的大小，即类型<code>&amp;&amp;str</code>。它们是常规引用。</p><h2 id="Dynamic-Strings"><a class="header-anchor" href="#Dynamic-Strings">¶</a>Dynamic Strings</h2><p>因此如果我们想要在运行期创建或更改字符串的内容(contents)，前面用到的<code>&amp;str</code>类型显然不适合。</p><p>Rust同时也提供了另外一种字符串类型，<code>动态字符串(dynamic strings)</code>，它的内容可以被改变：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">a</span>: <span class="type">String</span> = <span class="string">&quot;He&quot;</span>.<span class="title function_ invoke__">to_string</span>();</span><br><span class="line">a.<span class="title function_ invoke__">push</span>(<span class="string">&#x27;l&#x27;</span>);</span><br><span class="line">a.<span class="title function_ invoke__">push</span>(<span class="string">&#x27;l&#x27;</span>);</span><br><span class="line">a.<span class="title function_ invoke__">push</span>(<span class="string">&#x27;o&#x27;</span>);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, a);</span><br></pre></td></tr></table></figure><p>结果将输出“Hello”。</p><p>变量<code>a</code>是一个<code>String</code>类型，它是Rust静态字符串的类型。</p><p>在Rust中没有动态字符串字面量；字符串字面量总是静态的。但一个动态字符串可能由一个静态字符串的几种方式构造得来。一种方式是在静态字符串调用<code>to_string</code>函数。这种函数名应该考虑是<code>to_dynamic_string</code>或<code>to_String</code>。但第一个名字太长，第二个违反了函数名字母大写的规则。</p><p>一个动态字符串应该能像任何静态字符串一样打印输出，如上面的例子。以及它有静态字符串做不到的能力：增长。</p><p>第二、三、四语句中向字符串尾部添加一个字符。</p><p>以及可以在一个动态字符串内部的其它位置添加、或者删除字符：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">a</span>: <span class="type">String</span> = <span class="string">&quot;Xy&quot;</span>.<span class="title function_ invoke__">to_string</span>(); <span class="comment">// &quot;Xy&quot;</span></span><br><span class="line">a.<span class="title function_ invoke__">remove</span>(<span class="number">0</span>); <span class="comment">// &quot;y&quot;</span></span><br><span class="line">a.<span class="title function_ invoke__">insert</span>(<span class="number">0</span>, <span class="string">&#x27;H&#x27;</span>); <span class="comment">// &quot;Hy&quot;</span></span><br><span class="line">a.<span class="title function_ invoke__">pop</span>(); <span class="comment">// &quot;H&quot;</span></span><br><span class="line">a.<span class="title function_ invoke__">push</span>(<span class="string">&#x27;i&#x27;</span>); <span class="comment">// &quot;Hi&quot;</span></span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, a);</span><br></pre></td></tr></table></figure><p>结果将打印“Hi”。</p><p>变量<code>a</code>由<code>Xy</code>初始化。然后在位置0的字符被移除，剩下<code>y</code>。然后<code>H</code>插入到位置0，变成了<code>Hy</code>。然后最后一个字符pop out，剩下<code>H</code>。接着添加<code>i</code>，得到<code>Hi</code>。</p><h2 id="Implementation-of-String"><a class="header-anchor" href="#Implementation-of-String">¶</a>Implementation of String</h2><p>Rust的静态字符串和C语言的字符串有几分类似，带有一个额外的计数器，以及一个Rust动态字符串和C++ <code>std::string</code>对象十分相像。Rust和C<ins>动态字符串类型的主要不同是，C</ins>字符串包含一个字符数组，而Rust动态字符串，和Rust静态字符串一样，包含的是一个由UTF-8字符串表述的字节数组；它不是包含字符数组的。</p><p>Rust语言中保留了其它一些相似的特性。静态字符串缓冲区类似于数组，即<code>str</code>类型类似于泛型类型<code>[u8; N]</code>；动态字符串类似于字节向量，即<code>String</code>类型类似于<code>Vec&lt;u8&gt;</code>类型。</p><p>进一步，上面我们看到的函数——<code>push</code>，<code>pop</code>，<code>insert</code>以及<code>remove</code>，还有<code>len</code>函数，在<code>Vector</code>泛型类型都有对应的同名函数。</p><p>另外，动态字符串和向量拥有相同的实现。两者都又下面三部分构成：</p><ul><li>堆空间分配缓冲区的首地址包含数据条目；</li><li>条目的数量可能包含在分配的缓冲区；</li><li>条目的数量可能会在分配的缓冲区提供使用。</li></ul><p>然而，值得注意的是，字符串的“条目”是字节，不是字符：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">s1</span> = <span class="string">&quot;&quot;</span>.<span class="title function_ invoke__">to_string</span>();</span><br><span class="line">s1.<span class="title function_ invoke__">push</span>(<span class="string">&#x27;e&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">s2</span> = <span class="string">&quot;&quot;</span>.<span class="title function_ invoke__">to_string</span>();</span><br><span class="line">s2.<span class="title function_ invoke__">push</span>(<span class="string">&#x27;è&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">s3</span> = <span class="string">&quot;&quot;</span>.<span class="title function_ invoke__">to_string</span>();</span><br><span class="line">s3.<span class="title function_ invoke__">push</span>(<span class="string">&#x27;€&#x27;</span>);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;; &quot;</span>, s1.<span class="title function_ invoke__">capacity</span>(), s1.<span class="title function_ invoke__">len</span>());</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;; &quot;</span>, s2.<span class="title function_ invoke__">capacity</span>(), s2.<span class="title function_ invoke__">len</span>());</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>, s3.<span class="title function_ invoke__">capacity</span>(), s3.<span class="title function_ invoke__">len</span>());</span><br></pre></td></tr></table></figure><p>这里可能打印：“4 1; 2 2; 3 3”。意味着在一个4字节的缓冲区ASCII字符<code>e</code>占一个字节，在一个两字节缓冲区重音字符<code>è</code>占两个字节，在一个3字节缓冲区货币符号<code>€</code>占三个字节。字节数由UTF-8标准导致，而缓冲区大小则由Rust标准库的实现决定，它可能会在将来的版本改进。</p><p>让我们看看当向一个动态字符串添加若干字符时发生了啥：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">s</span> = <span class="string">&quot;&quot;</span>.<span class="title function_ invoke__">to_string</span>();</span><br><span class="line"><span class="keyword">for</span> <span class="variable">_</span> <span class="keyword">in</span> <span class="number">0</span>..<span class="number">10</span> &#123;</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;:?&#125; &#123;&#125; &#123;&#125;&quot;</span>,</span><br><span class="line">s.<span class="title function_ invoke__">as_ptr</span>(), s.<span class="title function_ invoke__">capacity</span>(), s.<span class="title function_ invoke__">len</span>());</span><br><span class="line">s.<span class="title function_ invoke__">push</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;:?&#125; &#123;&#125; &#123;&#125;: &#123;&#125;&quot;</span>,</span><br><span class="line">s.<span class="title function_ invoke__">as_ptr</span>(), s.<span class="title function_ invoke__">capacity</span>(), s.<span class="title function_ invoke__">len</span>(), s);</span><br></pre></td></tr></table></figure><p>在64位系统中，可能输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">0x1 0 0</span><br><span class="line">0x7fbf95e20020 4 1</span><br><span class="line">0x7fbf95e20020 4 2</span><br><span class="line">0x7fbf95e20020 4 3</span><br><span class="line">0x7fbf95e20020 4 4</span><br><span class="line">0x7fbf95e20020 8 5</span><br><span class="line">0x7fbf95e20020 8 6</span><br><span class="line">0x7fbf95e20020 8 7</span><br><span class="line">0x7fbf95e20020 8 8</span><br><span class="line">0x7fbf95e2a000 16 9</span><br><span class="line">0x7fbf95e2a000 16 10: aaaaaaaaaa</span><br></pre></td></tr></table></figure><p>函数<code>as_ptr</code>(可以读作“as pointer”)返回堆空间分配的字符串缓冲区地址。</p><p>注意到当字符串是空的，该地址简化为<code>1</code>，它不是一个有效的内存地址，因为没有给一个空字符串指派任何缓冲。</p><p>当一个ASCII字符被添加，一个4字节缓冲区被分配在一个由十六进制7fbf95e20020表述的地址上。</p><p>添加另外3个字符后，没有再分配的发生，因为缓冲区已经足够大了。</p><p>当第五个字符被添加，要求重新分配，但，由于内存紧接着的缓冲区仍然为空闲，缓冲区可以扩展8个字节简化实现。因此为了避免在新缓冲区分配上的开销，拷贝4个已用的字节，回收前面的缓冲区。</p><p>再说一遍，添加另外3个字符，不要求再分配，当第九个字符被添加，不仅缓冲区扩展到16个字节，而且它必须重新定位地址，因为，接下来8字节可能并不是空闲的。</p><p>最后，字符串用了10字节。</p><h2 id="Creating-Strings"><a class="header-anchor" href="#Creating-Strings">¶</a>Creating Strings</h2><p>创建空的动态字符串有几种方式。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">s1</span> = <span class="type">String</span>::<span class="title function_ invoke__">new</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="variable">s2</span> = <span class="type">String</span>::<span class="title function_ invoke__">from</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">s3</span> = <span class="string">&quot;&quot;</span>.<span class="title function_ invoke__">to_string</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="variable">s4</span> = <span class="string">&quot;&quot;</span>.<span class="title function_ invoke__">to_owned</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="variable">s5</span> = <span class="built_in">format!</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;(&#123;&#125;&#123;&#125;&#123;&#125;&#123;&#125;&#123;&#125;)&quot;</span>, s1, s2, s3, s4, s5);</span><br></pre></td></tr></table></figure><p>打印“()”。</p><p><code>new</code>函数是<code>String</code>类型的基础构造器，类似于C++的“default constructor”。</p><p><code>from</code>函数为<code>String</code>类型的转换构造器，类似于C++的“non-default constructor”。</p><p>函数<code>to_string</code>和<code>to_owned</code>现在是可以替换的用法。由于历史的原因有几分不同。</p><p><code>format</code>宏是<code>print</code>宏的identical，唯一不同的是<code>print</code>是将结果发送到控制台，而<code>format</code>是返回一个<code>String</code>对象结果。</p><p>上述几种方式，除了<code>new</code>函数，都可以由一个非空静态字符串转换为动态字符串。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">s</span> = <span class="string">&quot;a,&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">s1</span> = <span class="type">String</span>::<span class="title function_ invoke__">from</span>(s);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">s2</span> = s.<span class="title function_ invoke__">to_string</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="variable">s3</span> = s.<span class="title function_ invoke__">to_owned</span>();</span><br><span class="line"><span class="comment">//let s4 = format!(s);</span></span><br><span class="line"><span class="comment">//let s5 = format!(&quot;a,&#123;&#125;&quot;);</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">s6</span> = <span class="built_in">format!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, s);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;(&#123;&#125;&#123;&#125;&#123;&#125;&#123;&#125;)&quot;</span>, s1, s2, s3, s6);</span><br></pre></td></tr></table></figure><p>输出“<code>(a,a,a,a,)</code>”。</p><p>相反，在第五行和第六行会生成编译错误。实际上，<code>format</code>宏，和<code>print</code>还有<code>println</code>宏一样，要求它们第一个参数是一个字面量，以及这个字面量包含与连续参数相同数目的占位符。</p><h2 id="Concatenating-Strings"><a class="header-anchor" href="#Concatenating-Strings">¶</a>Concatenating Strings</h2><p>一个动态字符串也可以由两个静态字符串、两个动态字符串、或一个动态字符串一个静态字符串，组合得到。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">ss1</span> = <span class="string">&quot;He&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">ss2</span> = <span class="string">&quot;llo &quot;</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">ds1</span> = ss1.<span class="title function_ invoke__">to_string</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="variable">ds2</span> = ss2.<span class="title function_ invoke__">to_string</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="variable">ds3</span> = <span class="built_in">format!</span>(<span class="string">&quot;&#123;&#125;&#123;&#125;&quot;</span>, ss1, ss2);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, ds3);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">ds3</span> = <span class="built_in">format!</span>(<span class="string">&quot;&#123;&#125;&#123;&#125;&quot;</span>, ss1, ds2);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, ds3);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">ds3</span> = <span class="built_in">format!</span>(<span class="string">&quot;&#123;&#125;&#123;&#125;&quot;</span>, ds1, ss2);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, ds3);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">ds3</span> = <span class="built_in">format!</span>(<span class="string">&quot;&#123;&#125;&#123;&#125;&quot;</span>, ds1, ds2);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, ds3);</span><br></pre></td></tr></table></figure><p>输出“<code>Hello Hello Hello Hello</code>”。</p><p>通常，一个字符串的出现由另一个字符串取决，当然它必须是mutable的。这样可以使用<code>format</code>宏，但它是冗长和低效的：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">dyn_str</span> = <span class="string">&quot;Hello&quot;</span>.<span class="title function_ invoke__">to_string</span>();</span><br><span class="line">dyn_str = <span class="built_in">format!</span>(<span class="string">&quot;&#123;&#125;&#123;&#125;&quot;</span>, dyn_str, <span class="string">&quot;, &quot;</span>);</span><br><span class="line">dyn_str = <span class="built_in">format!</span>(<span class="string">&quot;&#123;&#125;&#123;&#125;&quot;</span>, dyn_str, <span class="string">&quot;world&quot;</span>);</span><br><span class="line">dyn_str = <span class="built_in">format!</span>(<span class="string">&quot;&#123;&#125;&#123;&#125;&quot;</span>, dyn_str, <span class="string">&quot;!&quot;</span>);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, dyn_str);</span><br></pre></td></tr></table></figure><p>下面是一个比较好的写法：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">dyn_str</span> = <span class="string">&quot;Hello&quot;</span>.<span class="title function_ invoke__">to_string</span>();</span><br><span class="line">dyn_str.<span class="title function_ invoke__">push_str</span>(<span class="string">&quot;, &quot;</span>);</span><br><span class="line">dyn_str.<span class="title function_ invoke__">push_str</span>(<span class="string">&quot;world&quot;</span>);</span><br><span class="line">dyn_str.<span class="title function_ invoke__">push_str</span>(<span class="string">&quot;!&quot;</span>);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, dyn_str);</span><br></pre></td></tr></table></figure><p>函数<code>push_str</code>接收一个静态字符串，并把所有接收到的字符串push到后面。打印“Hello, world!”。</p><p>另外有一种更紧凑(compact)的写法：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">dyn_str</span> = <span class="string">&quot;Hello&quot;</span>.<span class="title function_ invoke__">to_string</span>();</span><br><span class="line">dyn_str += <span class="string">&quot;, &quot;</span>;</span><br><span class="line">dyn_str += <span class="string">&quot;world&quot;</span>;</span><br><span class="line">dyn_str += <span class="string">&quot;!&quot;</span>;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, dyn_str);</span><br></pre></td></tr></table></figure><p><code>+=</code>操作符，当作用在一个<code>String</code>对象时，等价于<code>push_str</code>函数。</p><p>也可以追加字符串对象或单个字符。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">comma</span> = <span class="string">&quot;, &quot;</span>.<span class="title function_ invoke__">to_string</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="variable">world</span> = <span class="string">&quot;world&quot;</span>.<span class="title function_ invoke__">to_string</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="variable">excl_point</span> = <span class="string">&#x27;!&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">dyn_str</span> = <span class="string">&quot;Hello&quot;</span>.<span class="title function_ invoke__">to_string</span>();</span><br><span class="line">dyn_str += &amp;comma;</span><br><span class="line">dyn_str.<span class="title function_ invoke__">push_str</span>(&amp;world);</span><br><span class="line">dyn_str.<span class="title function_ invoke__">push</span>(excl_point);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, dyn_str);</span><br></pre></td></tr></table></figure><p>该程序和上一个是等价的。注意到将动态字符串作为参数传递给<code>push_str</code>或<code>+=</code>时，必须预先转换为静态字符串。这个效果使用<code>&amp;</code>操作符获得。实际上，可以用该操作符，获得一个<code>String</code>的引用，但任何一个<code>String</code>的引用，会隐式转换为一个<code>str</code>引用，如下：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">word</span> = <span class="string">&quot;bye&quot;</span>.<span class="title function_ invoke__">to_string</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="variable">w1</span>: &amp;<span class="type">str</span> = &amp;word;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">w2</span>: &amp;<span class="type">String</span> = &amp;word;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>, w1, w2);</span><br></pre></td></tr></table></figure><p>打印为：“bye bye”。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本章覆盖有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;静态字符串是如何实现的&lt;/li&gt;
&lt;li&gt;动态字符串是如何实现的&lt;/li&gt;
&lt;li&gt;如何从动态字符串添加或删除字符&lt;/li&gt;
&lt;li&gt;如何在静态字符串和动态字符串之间相互转换&lt;/li&gt;
&lt;li&gt;如何合并字符串&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    <content src="https://galudisu.info/%3Cp%3E%E6%9C%AC%E7%AB%A0%E8%A6%86%E7%9B%96%E6%9C%89%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E9%9D%99%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%9A%84%3C/li%3E%3Cli%3E%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%9A%84%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E4%BB%8E%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%B7%BB%E5%8A%A0%E6%88%96%E5%88%A0%E9%99%A4%E5%AD%97%E7%AC%A6%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E5%9C%A8%E9%9D%99%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B9%8B%E9%97%B4%E7%9B%B8%E4%BA%92%E8%BD%AC%E6%8D%A2%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E5%90%88%E5%B9%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%3C/li%3E%3C/ul%3E%3Cspan%20id=%22more%22%3E%3C/span%3E%3Ch2%20id=%22Static-Strings%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Static-Strings%22%3E%C2%B6%3C/a%3EStatic%20Strings%3C/h2%3E%3Cp%3E%E6%88%91%E4%BB%AC%E7%94%A8%E5%88%B0%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E5%8F%AF%E5%8F%98%E7%9A%84(changeable)%E5%90%97%EF%BC%9F%3C/p%3E%3Cp%3E%E6%9F%90%E7%A7%8D%E5%B1%82%E9%9D%A2%E4%B8%8A%EF%BC%8C%E5%A5%B9%E4%BB%AC%E6%98%AF%E5%8F%AF%E5%8F%98%E7%9A%84(mutable)%EF%BC%8C%E6%88%91%E4%BB%AC%E5%8F%AF%E4%BB%A5%E6%94%B9%E5%8F%98%E5%AE%83%E4%BB%AC%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;Hel&amp;quot;%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20a);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ea%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;lo&amp;quot;%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20a);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%88%91%E4%BB%AC%E8%BF%99%E9%87%8C%E7%9A%84%E6%94%B9%E5%8F%98%EF%BC%8C%E6%98%AF%E6%9B%B4%E6%94%B9%E4%BA%86%E6%95%B4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%86%85%E5%AE%B9%EF%BC%8C%E4%B8%8D%E6%98%AF%E6%9F%90%E4%BA%9B%E5%AD%97%E7%AC%A6%E3%80%82%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E8%BF%99%E9%87%8C%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%98%E9%87%8F%EF%BC%8C%E6%8C%87%E6%B4%BE%E7%BB%99%E4%BA%86%E4%B8%80%E4%B8%AA%E6%96%B0%E7%9A%84%E5%AD%97%E9%9D%A2%E9%87%8F%E6%88%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%98%E9%87%8F%E3%80%82%3C/p%3E%3Cp%3E%E4%BD%86%E5%A6%82%E6%9E%9C%E6%88%91%E4%BB%AC%E6%83%B3%E8%A6%81%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%8C%E6%98%AF%E7%94%B1%E7%AE%97%E6%B3%95%E3%80%81%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E3%80%81%E6%88%96%E7%94%B1%E7%94%A8%E6%88%B7%E8%BE%93%E5%85%A5(type)%E7%9A%84%EF%BC%8C%E8%BF%99%E6%80%8E%E4%B9%88%E5%AE%9E%E7%8E%B0%EF%BC%9F%E5%8F%AF%E4%BB%A5%E7%A1%AE%E5%88%87%E8%AF%B4%EF%BC%8C%E8%BF%99%E4%BA%9B%E9%83%BD%E5%8F%AF%E4%BB%A5%E5%81%9A%E5%88%B0%EF%BC%8C%E5%B9%B6%E4%B8%94%E4%BC%9A%E6%94%B9%E5%8F%98%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%86%85%E5%AE%B9%EF%BC%8C%E5%AE%83%E4%BB%AC%E6%9C%89%E4%B8%80%E4%B8%AA%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%9A%84%3Ccode%3Econtent%3C/code%3E%EF%BC%8C%E8%BF%99%E4%BA%9B%E5%86%85%E5%AE%B9%E4%B8%8D%E8%83%BD%E5%AF%B9%E5%85%B6%E4%B8%AD%E4%B8%80%E4%B8%A4%E4%B8%AA%E5%AD%97%E7%AC%A6%E8%BF%9B%E8%A1%8C%E9%87%8D%E5%86%99%E3%80%82%E5%9F%BA%E4%BA%8E%E8%BF%99%E4%B8%AA%E5%8E%9F%E5%9B%A0%EF%BC%8C%E8%BF%99%E4%BA%9B%E5%AD%97%E7%AC%A6%E5%86%85%E5%AE%B9(content)%E7%A7%B0%E4%BD%9C%3Cstrong%3E%E9%9D%99%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2(static%20strings)%3C/strong%3E%E3%80%82%E4%B8%8B%E9%9D%A2%E4%BE%8B%E5%AD%90%E7%90%86%E6%B8%85%E4%B8%80%E4%B8%8B%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Euse%3C/span%3E%20std::mem::*;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea%3C/span%3E:%20&amp;amp;%3Cspan%20class=%22type%22%3Estr%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;&amp;quot;%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eb%3C/span%3E:%20&amp;amp;%3Cspan%20class=%22type%22%3Estr%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;0123456789&amp;quot;%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ec%3C/span%3E:%20&amp;amp;%3Cspan%20class=%22type%22%3Estr%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;abcd%C3%A8&amp;quot;%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(a),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(b),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(c));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E6%89%93%E5%8D%B0%E2%80%9C0%2010%206%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E9%A6%96%E5%85%88%EF%BC%8C%E6%88%91%E4%BB%AC%E6%8C%87%E5%AE%9A%E4%BA%86%E4%B8%89%E4%B8%AA%E5%8F%98%E9%87%8F%E7%9A%84%E7%B1%BB%E5%9E%8B%E3%80%82%E5%AE%83%E4%BB%AC%E7%9A%84%E7%B1%BB%E5%9E%8B%E6%98%AF%3Ccode%3E&amp;amp;str%3C/code%3E%EF%BC%8C%E5%8D%B3%E2%80%9C%3Ccode%3Estr%3C/code%3E%E7%9A%84%E5%BC%95%E7%94%A8%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%3Ccode%3Estr%3C/code%3E%E8%BF%99%E4%B8%AA%E8%AF%8D%E5%AE%9A%E4%B9%89%E5%9C%A8%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%AD%EF%BC%8C%E4%BD%9C%E4%B8%BA%E4%B8%80%E4%B8%AA%E4%B8%8D%E5%8F%AF%E4%BF%AE%E6%94%B9%E7%9A%84%E5%AD%97%E8%8A%82%E6%95%B0%E7%BB%84%EF%BC%8C%E8%A1%A8%E7%A4%BAUTF-8%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%82%E7%BC%96%E8%AF%91%E5%99%A8%E6%AF%8F%E6%AC%A1%E8%A7%A3%E6%9E%90%E5%88%B0%E5%AD%97%E9%9D%A2%E9%87%8F%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%97%B6%EF%BC%8C%E5%AE%83%E5%AD%98%E5%82%A8%E5%9C%A8%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%AD%97%E7%AC%A6%E9%9D%99%E6%80%81%E7%A8%8B%E5%BA%8F%E5%8C%BA%E5%9F%9F%EF%BC%8C%E8%BF%99%E4%B8%AA%E5%8C%BA%E5%9F%9F%E6%98%AF%3Ccode%3Estr%3C/code%3E%E7%B1%BB%E5%9E%8B%E7%9A%84%E3%80%82%E7%BC%96%E8%AF%91%E5%99%A8%E4%BD%BF%E7%94%A8%E4%B8%80%E4%B8%AA%E5%BC%95%E7%94%A8(reference)%EF%BC%8C%E6%9D%A5%E8%A1%A8%E7%A4%BA%E5%AD%97%E9%9D%A2%E9%87%8F%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%9C%A8%E8%AF%A5%E5%8C%BA%E5%9F%9F%E7%9A%84%E5%80%BC%EF%BC%8C%E5%9B%A0%E6%AD%A4%E4%BB%BB%E4%BD%95%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AD%97%E9%9D%A2%E9%87%8F%E7%9A%84%E7%B1%BB%E5%9E%8B%E9%83%BD%E6%98%AF%3Ccode%3E&amp;amp;str%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E4%BE%8B%E5%AD%90%E4%B8%AD%EF%BC%8C%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%3Ccode%3Esize_of_val%3C/code%3E%E5%85%A5%E5%8F%82%E4%B8%89%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%98%E9%87%8F%E8%B0%83%E7%94%A8%E3%80%82%E8%BF%98%E8%AE%B0%E5%BE%97%E8%AF%A5%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E5%BC%95%E7%94%A8%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%A4%A7%E5%B0%8F%E3%80%82%E5%A6%82%E6%9E%9C%E5%8F%82%E6%95%B0%E6%98%AF%3Ccode%3Ea%3C/code%3E%EF%BC%8C%E5%8F%82%E6%95%B0%E7%B1%BB%E5%9E%8B%E6%98%AF%3Ccode%3E&amp;amp;str%3C/code%3E%EF%BC%8C%E8%AF%A5%E5%87%BD%E6%95%B0%E4%BC%9A%E8%BF%94%E5%9B%9E%E7%94%B1%3Ccode%3Ea%3C/code%3E%E5%BC%95%E7%94%A8%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BC%93%E5%86%B2%E5%8C%BA%E7%9A%84%E5%A4%A7%E5%B0%8F%EF%BC%8C%E5%8D%B3%E8%BF%94%E5%9B%9E%E7%B1%BB%E5%9E%8B%3Ccode%3Estr%3C/code%3E%E7%9A%84%E5%A4%A7%E5%B0%8F%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E8%BF%99%E9%87%8C%E6%89%93%E5%8D%B0%E5%87%BA%E5%BC%95%E7%94%A8%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BC%93%E5%86%B2%E5%8C%BA%3Ccode%3Ea%3C/code%3E%E3%80%81%3Ccode%3Eb%3C/code%3E%E5%92%8C%3Ccode%3Ec%3C/code%3E%E7%9A%84%E5%A4%A7%E5%B0%8F%E3%80%82%E5%88%86%E5%88%AB%E5%A4%A7%E5%B0%8F%E7%94%B1%3Ccode%3E0%3C/code%3E%E3%80%81%3Ccode%3E10%3C/code%3E%E5%92%8C%3Ccode%3E6%3C/code%3E%E5%AD%97%E8%8A%82%E3%80%82%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%BA%E7%A9%BA%EF%BC%8C%E7%AC%AC%E4%BA%8C%E4%B8%AA%E5%8C%85%E5%90%AB10%E4%B8%AA%E6%95%B0%EF%BC%8C%E4%B8%8E%E6%AD%A4%EF%BC%8C%E7%AC%AC%E4%B8%89%E4%B8%AA%E4%BB%85%E5%8C%85%E5%90%AB5%E4%B8%AA%E5%AD%97%E7%AC%A6%EF%BC%8C%E5%8D%B4%E6%89%93%E5%8D%B0%E4%BA%866.%E8%BF%99%E6%98%AF%E5%9B%A0%E4%B8%BAUTF-8%E6%A0%87%E6%B3%A8%E7%9A%84%E5%8E%9F%E5%9B%A0%E3%80%82%E8%BF%99%E7%A7%8D%E6%A0%87%E6%B3%A8%EF%BC%8C%E5%8F%96%E5%86%B3%E4%BA%8E%E5%AD%97%E7%AC%A6%E6%9C%AC%E8%BA%AB%EF%BC%8C%E6%AF%8F%E4%B8%AA%E5%AD%97%E7%AC%A6%E7%94%B1%E4%B8%80%E4%B8%AA%E6%88%96%E5%A4%9A%E4%B8%AA%E5%AD%97%E8%8A%82%E8%A1%A8%E7%A4%BA%E3%80%82ASCII%E5%AD%97%E7%AC%A6%E7%94%B11%E4%B8%AA%E5%AD%97%E8%8A%82%E8%A1%A8%E7%A4%BA%EF%BC%8C%E5%AF%B9%E4%BA%8E%E2%80%9Cgrave%20e%E2%80%9D%E5%AD%97%E7%AC%A6%EF%BC%8C%E5%8D%B3%E2%80%9C%C3%A8%E2%80%9D%EF%BC%8C%E7%94%B1%E4%B8%A4%E4%B8%AA%E5%AD%97%E8%8A%82%E8%A1%A8%E7%A4%BA%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E6%95%B4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%A7%E5%B0%8F%E6%98%AF6%E4%B8%AA%E5%AD%97%E8%8A%82%E3%80%82%3C/p%3E%3Cp%3E%E6%B3%A8%E6%84%8F%E7%94%B1%3Ccode%3Ea%3C/code%3E%E3%80%81%3Ccode%3Eb%3C/code%3E%E5%92%8C%3Ccode%3Ec%3C/code%3E%E5%8F%98%E9%87%8F%E5%BC%95%E7%94%A8%E7%9A%84%E7%BC%93%E5%86%B2%E5%8C%BA%E7%9A%84%E7%B1%BB%E5%9E%8B%E7%9B%B8%E5%90%8C%EF%BC%8C%E9%83%BD%E6%98%AF%3Ccode%3Estr%3C/code%3E%EF%BC%8C%E4%BD%86%E5%AE%83%E4%BB%AC%E6%9C%89%E4%B8%8D%E5%90%8C%E9%95%BF%E5%BA%A6%EF%BC%9A0%EF%BC%8C10%EF%BC%8C6%E3%80%82%E8%BF%99%E9%87%8C%E6%88%91%E4%BB%AC%E7%AC%AC%E4%B8%80%E6%AC%A1%E7%9C%8B%E5%88%B0%E4%BA%86%E4%B8%80%E4%B8%AA%E4%B8%8D%E4%B8%8E%E9%95%BF%E5%BA%A6%E5%85%B3%E8%81%94%E7%9A%84%E7%B1%BB%E5%9E%8B%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E7%A7%8D%E7%B1%BB%E5%9E%8B%E4%B8%8D%E5%B8%B8%E8%A7%81%EF%BC%8C%E4%BD%86%E5%AE%83%E4%BB%AC%E6%9C%89%E6%9F%90%E4%BA%9B%E9%99%90%E5%88%B6%E3%80%82%E4%B8%80%E6%98%AF%E4%BD%A0%E4%B8%8D%E8%83%BD%E7%BB%99%E8%BF%99%E7%A7%8D%E7%B1%BB%E5%9E%8B%E5%A3%B0%E6%98%8E%E4%B8%80%E4%B8%AA%E5%8F%98%E9%87%8F%E6%88%96%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E3%80%82%E5%8F%A6%E4%B8%80%E4%B8%AA%E6%98%8E%E6%98%BE%E7%9A%84%E9%99%90%E5%88%B6%E6%98%AF%EF%BC%8C%E4%BD%A0%E4%B8%8D%E8%83%BD%E8%AE%BF%E9%97%AE%E8%BF%99%E7%A7%8D%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%A4%A7%E5%B0%8F%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea%3C/span%3E:%20%3Cspan%20class=%22type%22%3Estr%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E(a:%20%3Cspan%20class=%22type%22%3Estr%3C/span%3E)%20&amp;#123;&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20std::mem::size_of::&amp;lt;%3Cspan%20class=%22type%22%3Estr%3C/span%3E&amp;gt;());%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%B8%8A%E9%9D%A2%E4%B8%89%E4%B8%AA%E8%AF%AD%E5%8F%A5%E9%83%BD%E6%98%AF%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%E3%80%82%3C/p%3E%3Cp%3E%E4%BD%86%EF%BC%8C%E8%A6%81%E6%80%8E%E6%A0%B7%E6%89%8D%E8%83%BD%E8%8E%B7%E5%BE%97%E7%BC%93%E5%86%B2%E5%8C%BA%E7%9A%84%E5%A4%A7%E5%B0%8F%EF%BC%9F%E5%9C%A8C%E8%AF%AD%E8%A8%80%EF%BC%8C%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BB%88%E6%AD%A2%E7%AC%A6%E8%A2%AB%E4%BD%9C%E4%B8%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BB%93%E6%9D%9F%E6%A0%87%E5%BF%97%EF%BC%8C%E4%BD%86Rust%E4%B8%AD%E6%B2%A1%E6%9C%89%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BB%88%E6%AD%A2%E7%AC%A6%E3%80%82%3C/p%3E%3Cp%3E%E5%AE%9E%E9%99%85%E4%B8%8A%3Ccode%3E&amp;amp;str%3C/code%3E%E4%B8%8D%E6%98%AF%E4%B8%80%E4%B8%AA%E6%99%AE%E9%80%9A%E7%9A%84Rust%E5%BC%95%E7%94%A8%EF%BC%8C%E5%AE%83%E4%BB%85%E5%8C%85%E5%90%AB%E4%B8%80%E4%B8%AA%E6%8C%87%E9%92%88%EF%BC%8C%E4%BD%86%E5%AE%83%E6%98%AF%E4%B8%80%E5%AF%B9%E6%8C%87%E9%92%88%E5%92%8C%E9%95%BF%E5%BA%A6(a%20pair%20of%20a%20pointer%20and%20a%20length)%E3%80%82%E6%8C%87%E9%92%88%E7%9A%84%E5%80%BC%E6%98%AF%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BC%93%E5%86%B2%E5%8C%BA%E7%9A%84%E5%BC%80%E5%A7%8B%E5%9C%B0%E5%9D%80%EF%BC%8C%E9%95%BF%E5%BA%A6%E5%80%BC%E6%98%AF%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BC%93%E5%86%B2%E5%8C%BA%E7%9A%84%E5%AD%97%E8%8A%82%E6%95%B0%E9%87%8F%E3%80%82%3C/p%3E%3Cp%3E%E8%AE%A9%E6%88%91%E4%BB%AC%E6%9B%B4%E6%B7%B1%E5%85%A5%E6%8E%A2%E7%B4%A2%E4%B8%80%E4%B8%8B%E8%BF%99%E7%A7%8D%E5%A5%87%E6%80%AA%E7%9A%84%E7%B1%BB%E5%9E%8B%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Euse%3C/span%3E%20std::mem::*;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea%3C/span%3E:%20&amp;amp;%3Cspan%20class=%22type%22%3Estr%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;&amp;quot;%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eb%3C/span%3E:%20&amp;amp;%3Cspan%20class=%22type%22%3Estr%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;0123456789&amp;quot;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ec%3C/span%3E:%20&amp;amp;%3Cspan%20class=%22type%22%3Estr%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;abcd%C3%A8&amp;quot;%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;;%20&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;a),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;b),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;c));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;;%20&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;&amp;amp;a),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;&amp;amp;b),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;&amp;amp;c));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%AF%A5%E7%A8%8B%E5%BA%8F%E5%9C%A8%E4%B8%80%E4%B8%AA64%E4%BD%8D%E7%B3%BB%E7%BB%9F%E5%B0%86%E6%89%93%E5%8D%B0%E2%80%9C16%2016%2016;%208%208%208%E2%80%9D%EF%BC%8C%E5%9C%A832%E4%BD%8D%E7%B3%BB%E7%BB%9F%E6%89%93%E5%8D%B0%E2%80%9C8%208%208;%204%204%204%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%B8%80%E6%9D%A1%3Ccode%3Eprint%3C/code%3E%E8%AF%AD%E5%8F%A5%E6%89%93%E5%8D%B0%E5%8F%98%E9%87%8F%E8%87%AA%E8%BA%AB%E7%9A%84%E5%A4%A7%E5%B0%8F%EF%BC%8C%E5%8D%B3%E7%B1%BB%E5%9E%8B%3Ccode%3E&amp;amp;str%3C/code%3E%E3%80%82%E8%AF%A5%E5%8F%98%E9%87%8F%E5%BE%97%E5%88%B0%E7%9A%84%E7%BB%93%E6%9E%9C%EF%BC%8C%E6%98%AF%E5%B8%B8%E8%A7%84%E5%BC%95%E7%94%A8%E5%A4%A7%E5%B0%8F%E7%9A%842%E5%80%8D%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E4%BB%AC%E5%8C%85%E5%90%AB%E4%B8%80%E4%B8%AA%E6%8C%87%E9%92%88%E5%AF%B9%E8%B1%A1%E5%92%8C%E4%B8%80%E4%B8%AA%3Ccode%3Eusize%3C/code%3E%E5%AF%B9%E8%B1%A1%E3%80%82%E6%89%80%E4%BB%A5%EF%BC%8C%E5%BD%93%E6%88%91%E4%BB%AC%E5%9C%A8%E4%B8%80%E4%B8%AA%E9%9D%99%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%B0%83%E7%94%A8%3Ccode%3Elen%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E5%BE%97%E5%88%B0%E7%9A%84%E6%98%AFpair%E7%9A%84%E7%AC%AC%E4%BA%8C%E4%B8%AA%E5%80%BC%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%BA%8C%E6%9D%A1%3Ccode%3Eprint%3C/code%3E%E8%AF%AD%E5%8F%A5%E6%89%93%E5%8D%B0%E5%8F%98%E9%87%8F%E8%87%AA%E8%BA%AB%E5%BC%95%E7%94%A8%E7%9A%84%E5%A4%A7%E5%B0%8F%EF%BC%8C%E5%8D%B3%E7%B1%BB%E5%9E%8B%3Ccode%3E&amp;amp;&amp;amp;str%3C/code%3E%E3%80%82%E5%AE%83%E4%BB%AC%E6%98%AF%E5%B8%B8%E8%A7%84%E5%BC%95%E7%94%A8%E3%80%82%3C/p%3E%3Ch2%20id=%22Dynamic-Strings%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Dynamic-Strings%22%3E%C2%B6%3C/a%3EDynamic%20Strings%3C/h2%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%E5%A6%82%E6%9E%9C%E6%88%91%E4%BB%AC%E6%83%B3%E8%A6%81%E5%9C%A8%E8%BF%90%E8%A1%8C%E6%9C%9F%E5%88%9B%E5%BB%BA%E6%88%96%E6%9B%B4%E6%94%B9%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%86%85%E5%AE%B9(contents)%EF%BC%8C%E5%89%8D%E9%9D%A2%E7%94%A8%E5%88%B0%E7%9A%84%3Ccode%3E&amp;amp;str%3C/code%3E%E7%B1%BB%E5%9E%8B%E6%98%BE%E7%84%B6%E4%B8%8D%E9%80%82%E5%90%88%E3%80%82%3C/p%3E%3Cp%3ERust%E5%90%8C%E6%97%B6%E4%B9%9F%E6%8F%90%E4%BE%9B%E4%BA%86%E5%8F%A6%E5%A4%96%E4%B8%80%E7%A7%8D%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%B1%BB%E5%9E%8B%EF%BC%8C%3Ccode%3E%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2(dynamic%20strings)%3C/code%3E%EF%BC%8C%E5%AE%83%E7%9A%84%E5%86%85%E5%AE%B9%E5%8F%AF%E4%BB%A5%E8%A2%AB%E6%94%B9%E5%8F%98%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ea%3C/span%3E:%20%3Cspan%20class=%22type%22%3EString%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;He&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ea.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;#x27;l&amp;#x27;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ea.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;#x27;l&amp;#x27;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ea.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;#x27;o&amp;#x27;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20a);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E8%BE%93%E5%87%BA%E2%80%9CHello%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%8F%98%E9%87%8F%3Ccode%3Ea%3C/code%3E%E6%98%AF%E4%B8%80%E4%B8%AA%3Ccode%3EString%3C/code%3E%E7%B1%BB%E5%9E%8B%EF%BC%8C%E5%AE%83%E6%98%AFRust%E9%9D%99%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E7%B1%BB%E5%9E%8B%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8Rust%E4%B8%AD%E6%B2%A1%E6%9C%89%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AD%97%E9%9D%A2%E9%87%8F%EF%BC%9B%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AD%97%E9%9D%A2%E9%87%8F%E6%80%BB%E6%98%AF%E9%9D%99%E6%80%81%E7%9A%84%E3%80%82%E4%BD%86%E4%B8%80%E4%B8%AA%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%AF%E8%83%BD%E7%94%B1%E4%B8%80%E4%B8%AA%E9%9D%99%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F%E6%9E%84%E9%80%A0%E5%BE%97%E6%9D%A5%E3%80%82%E4%B8%80%E7%A7%8D%E6%96%B9%E5%BC%8F%E6%98%AF%E5%9C%A8%E9%9D%99%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%B0%83%E7%94%A8%3Ccode%3Eto_string%3C/code%3E%E5%87%BD%E6%95%B0%E3%80%82%E8%BF%99%E7%A7%8D%E5%87%BD%E6%95%B0%E5%90%8D%E5%BA%94%E8%AF%A5%E8%80%83%E8%99%91%E6%98%AF%3Ccode%3Eto_dynamic_string%3C/code%3E%E6%88%96%3Ccode%3Eto_String%3C/code%3E%E3%80%82%E4%BD%86%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%90%8D%E5%AD%97%E5%A4%AA%E9%95%BF%EF%BC%8C%E7%AC%AC%E4%BA%8C%E4%B8%AA%E8%BF%9D%E5%8F%8D%E4%BA%86%E5%87%BD%E6%95%B0%E5%90%8D%E5%AD%97%E6%AF%8D%E5%A4%A7%E5%86%99%E7%9A%84%E8%A7%84%E5%88%99%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%80%E4%B8%AA%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%BA%94%E8%AF%A5%E8%83%BD%E5%83%8F%E4%BB%BB%E4%BD%95%E9%9D%99%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%80%E6%A0%B7%E6%89%93%E5%8D%B0%E8%BE%93%E5%87%BA%EF%BC%8C%E5%A6%82%E4%B8%8A%E9%9D%A2%E7%9A%84%E4%BE%8B%E5%AD%90%E3%80%82%E4%BB%A5%E5%8F%8A%E5%AE%83%E6%9C%89%E9%9D%99%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%81%9A%E4%B8%8D%E5%88%B0%E7%9A%84%E8%83%BD%E5%8A%9B%EF%BC%9A%E5%A2%9E%E9%95%BF%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%BA%8C%E3%80%81%E4%B8%89%E3%80%81%E5%9B%9B%E8%AF%AD%E5%8F%A5%E4%B8%AD%E5%90%91%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B0%BE%E9%83%A8%E6%B7%BB%E5%8A%A0%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E3%80%82%3C/p%3E%3Cp%3E%E4%BB%A5%E5%8F%8A%E5%8F%AF%E4%BB%A5%E5%9C%A8%E4%B8%80%E4%B8%AA%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%86%85%E9%83%A8%E7%9A%84%E5%85%B6%E5%AE%83%E4%BD%8D%E7%BD%AE%E6%B7%BB%E5%8A%A0%E3%80%81%E6%88%96%E8%80%85%E5%88%A0%E9%99%A4%E5%AD%97%E7%AC%A6%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ea%3C/span%3E:%20%3Cspan%20class=%22type%22%3EString%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;Xy&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E();%20%3Cspan%20class=%22comment%22%3E/%20&amp;quot;Xy&amp;quot;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ea.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eremove%3C/span%3E(%3Cspan%20class=%22number%22%3E0%3C/span%3E);%20%3Cspan%20class=%22comment%22%3E/%20&amp;quot;y&amp;quot;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ea.%3Cspan%20class=%22title%20function_%20invoke__%22%3Einsert%3C/span%3E(%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;H&amp;#x27;%3C/span%3E);%20%3Cspan%20class=%22comment%22%3E/%20&amp;quot;Hy&amp;quot;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ea.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epop%3C/span%3E();%20%3Cspan%20class=%22comment%22%3E/%20&amp;quot;H&amp;quot;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ea.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;#x27;i&amp;#x27;%3C/span%3E);%20%3Cspan%20class=%22comment%22%3E/%20&amp;quot;Hi&amp;quot;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20a);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E6%89%93%E5%8D%B0%E2%80%9CHi%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%8F%98%E9%87%8F%3Ccode%3Ea%3C/code%3E%E7%94%B1%3Ccode%3EXy%3C/code%3E%E5%88%9D%E5%A7%8B%E5%8C%96%E3%80%82%E7%84%B6%E5%90%8E%E5%9C%A8%E4%BD%8D%E7%BD%AE0%E7%9A%84%E5%AD%97%E7%AC%A6%E8%A2%AB%E7%A7%BB%E9%99%A4%EF%BC%8C%E5%89%A9%E4%B8%8B%3Ccode%3Ey%3C/code%3E%E3%80%82%E7%84%B6%E5%90%8E%3Ccode%3EH%3C/code%3E%E6%8F%92%E5%85%A5%E5%88%B0%E4%BD%8D%E7%BD%AE0%EF%BC%8C%E5%8F%98%E6%88%90%E4%BA%86%3Ccode%3EHy%3C/code%3E%E3%80%82%E7%84%B6%E5%90%8E%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6pop%20out%EF%BC%8C%E5%89%A9%E4%B8%8B%3Ccode%3EH%3C/code%3E%E3%80%82%E6%8E%A5%E7%9D%80%E6%B7%BB%E5%8A%A0%3Ccode%3Ei%3C/code%3E%EF%BC%8C%E5%BE%97%E5%88%B0%3Ccode%3EHi%3C/code%3E%E3%80%82%3C/p%3E%3Ch2%20id=%22Implementation-of-String%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Implementation-of-String%22%3E%C2%B6%3C/a%3EImplementation%20of%20String%3C/h2%3E%3Cp%3ERust%E7%9A%84%E9%9D%99%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8CC%E8%AF%AD%E8%A8%80%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9C%89%E5%87%A0%E5%88%86%E7%B1%BB%E4%BC%BC%EF%BC%8C%E5%B8%A6%E6%9C%89%E4%B8%80%E4%B8%AA%E9%A2%9D%E5%A4%96%E7%9A%84%E8%AE%A1%E6%95%B0%E5%99%A8%EF%BC%8C%E4%BB%A5%E5%8F%8A%E4%B8%80%E4%B8%AARust%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8CC++%20%3Ccode%3Estd::string%3C/code%3E%E5%AF%B9%E8%B1%A1%E5%8D%81%E5%88%86%E7%9B%B8%E5%83%8F%E3%80%82Rust%E5%92%8CC%3Cins%3E%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%B1%BB%E5%9E%8B%E7%9A%84%E4%B8%BB%E8%A6%81%E4%B8%8D%E5%90%8C%E6%98%AF%EF%BC%8CC%3C/ins%3E%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%85%E5%90%AB%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E6%95%B0%E7%BB%84%EF%BC%8C%E8%80%8CRust%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%8C%E5%92%8CRust%E9%9D%99%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%80%E6%A0%B7%EF%BC%8C%E5%8C%85%E5%90%AB%E7%9A%84%E6%98%AF%E4%B8%80%E4%B8%AA%E7%94%B1UTF-8%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%A1%A8%E8%BF%B0%E7%9A%84%E5%AD%97%E8%8A%82%E6%95%B0%E7%BB%84%EF%BC%9B%E5%AE%83%E4%B8%8D%E6%98%AF%E5%8C%85%E5%90%AB%E5%AD%97%E7%AC%A6%E6%95%B0%E7%BB%84%E7%9A%84%E3%80%82%3C/p%3E%3Cp%3ERust%E8%AF%AD%E8%A8%80%E4%B8%AD%E4%BF%9D%E7%95%99%E4%BA%86%E5%85%B6%E5%AE%83%E4%B8%80%E4%BA%9B%E7%9B%B8%E4%BC%BC%E7%9A%84%E7%89%B9%E6%80%A7%E3%80%82%E9%9D%99%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BC%93%E5%86%B2%E5%8C%BA%E7%B1%BB%E4%BC%BC%E4%BA%8E%E6%95%B0%E7%BB%84%EF%BC%8C%E5%8D%B3%3Ccode%3Estr%3C/code%3E%E7%B1%BB%E5%9E%8B%E7%B1%BB%E4%BC%BC%E4%BA%8E%E6%B3%9B%E5%9E%8B%E7%B1%BB%E5%9E%8B%3Ccode%3E[u8;%20N]%3C/code%3E%EF%BC%9B%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%B1%BB%E4%BC%BC%E4%BA%8E%E5%AD%97%E8%8A%82%E5%90%91%E9%87%8F%EF%BC%8C%E5%8D%B3%3Ccode%3EString%3C/code%3E%E7%B1%BB%E5%9E%8B%E7%B1%BB%E4%BC%BC%E4%BA%8E%3Ccode%3EVec&amp;lt;u8&amp;gt;%3C/code%3E%E7%B1%BB%E5%9E%8B%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%9B%E4%B8%80%E6%AD%A5%EF%BC%8C%E4%B8%8A%E9%9D%A2%E6%88%91%E4%BB%AC%E7%9C%8B%E5%88%B0%E7%9A%84%E5%87%BD%E6%95%B0%E2%80%94%E2%80%94%3Ccode%3Epush%3C/code%3E%EF%BC%8C%3Ccode%3Epop%3C/code%3E%EF%BC%8C%3Ccode%3Einsert%3C/code%3E%E4%BB%A5%E5%8F%8A%3Ccode%3Eremove%3C/code%3E%EF%BC%8C%E8%BF%98%E6%9C%89%3Ccode%3Elen%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E5%9C%A8%3Ccode%3EVector%3C/code%3E%E6%B3%9B%E5%9E%8B%E7%B1%BB%E5%9E%8B%E9%83%BD%E6%9C%89%E5%AF%B9%E5%BA%94%E7%9A%84%E5%90%8C%E5%90%8D%E5%87%BD%E6%95%B0%E3%80%82%3C/p%3E%3Cp%3E%E5%8F%A6%E5%A4%96%EF%BC%8C%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%90%91%E9%87%8F%E6%8B%A5%E6%9C%89%E7%9B%B8%E5%90%8C%E7%9A%84%E5%AE%9E%E7%8E%B0%E3%80%82%E4%B8%A4%E8%80%85%E9%83%BD%E5%8F%88%E4%B8%8B%E9%9D%A2%E4%B8%89%E9%83%A8%E5%88%86%E6%9E%84%E6%88%90%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E5%A0%86%E7%A9%BA%E9%97%B4%E5%88%86%E9%85%8D%E7%BC%93%E5%86%B2%E5%8C%BA%E7%9A%84%E9%A6%96%E5%9C%B0%E5%9D%80%E5%8C%85%E5%90%AB%E6%95%B0%E6%8D%AE%E6%9D%A1%E7%9B%AE%EF%BC%9B%3C/li%3E%3Cli%3E%E6%9D%A1%E7%9B%AE%E7%9A%84%E6%95%B0%E9%87%8F%E5%8F%AF%E8%83%BD%E5%8C%85%E5%90%AB%E5%9C%A8%E5%88%86%E9%85%8D%E7%9A%84%E7%BC%93%E5%86%B2%E5%8C%BA%EF%BC%9B%3C/li%3E%3Cli%3E%E6%9D%A1%E7%9B%AE%E7%9A%84%E6%95%B0%E9%87%8F%E5%8F%AF%E8%83%BD%E4%BC%9A%E5%9C%A8%E5%88%86%E9%85%8D%E7%9A%84%E7%BC%93%E5%86%B2%E5%8C%BA%E6%8F%90%E4%BE%9B%E4%BD%BF%E7%94%A8%E3%80%82%3C/li%3E%3C/ul%3E%3Cp%3E%E7%84%B6%E8%80%8C%EF%BC%8C%E5%80%BC%E5%BE%97%E6%B3%A8%E6%84%8F%E7%9A%84%E6%98%AF%EF%BC%8C%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E2%80%9C%E6%9D%A1%E7%9B%AE%E2%80%9D%E6%98%AF%E5%AD%97%E8%8A%82%EF%BC%8C%E4%B8%8D%E6%98%AF%E5%AD%97%E7%AC%A6%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Es1%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Es1.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;#x27;e&amp;#x27;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Es2%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Es2.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;#x27;%C3%A8&amp;#x27;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Es3%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Es3.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;#x27;%E2%82%AC&amp;#x27;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;;%20&amp;quot;%3C/span%3E,%20s1.%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecapacity%3C/span%3E(),%20s1.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;;%20&amp;quot;%3C/span%3E,%20s2.%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecapacity%3C/span%3E(),%20s2.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20s3.%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecapacity%3C/span%3E(),%20s3.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E());%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E9%87%8C%E5%8F%AF%E8%83%BD%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C4%201;%202%202;%203%203%E2%80%9D%E3%80%82%E6%84%8F%E5%91%B3%E7%9D%80%E5%9C%A8%E4%B8%80%E4%B8%AA4%E5%AD%97%E8%8A%82%E7%9A%84%E7%BC%93%E5%86%B2%E5%8C%BAASCII%E5%AD%97%E7%AC%A6%3Ccode%3Ee%3C/code%3E%E5%8D%A0%E4%B8%80%E4%B8%AA%E5%AD%97%E8%8A%82%EF%BC%8C%E5%9C%A8%E4%B8%80%E4%B8%AA%E4%B8%A4%E5%AD%97%E8%8A%82%E7%BC%93%E5%86%B2%E5%8C%BA%E9%87%8D%E9%9F%B3%E5%AD%97%E7%AC%A6%3Ccode%3E%C3%A8%3C/code%3E%E5%8D%A0%E4%B8%A4%E4%B8%AA%E5%AD%97%E8%8A%82%EF%BC%8C%E5%9C%A8%E4%B8%80%E4%B8%AA3%E5%AD%97%E8%8A%82%E7%BC%93%E5%86%B2%E5%8C%BA%E8%B4%A7%E5%B8%81%E7%AC%A6%E5%8F%B7%3Ccode%3E%E2%82%AC%3C/code%3E%E5%8D%A0%E4%B8%89%E4%B8%AA%E5%AD%97%E8%8A%82%E3%80%82%E5%AD%97%E8%8A%82%E6%95%B0%E7%94%B1UTF-8%E6%A0%87%E5%87%86%E5%AF%BC%E8%87%B4%EF%BC%8C%E8%80%8C%E7%BC%93%E5%86%B2%E5%8C%BA%E5%A4%A7%E5%B0%8F%E5%88%99%E7%94%B1Rust%E6%A0%87%E5%87%86%E5%BA%93%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%86%B3%E5%AE%9A%EF%BC%8C%E5%AE%83%E5%8F%AF%E8%83%BD%E4%BC%9A%E5%9C%A8%E5%B0%86%E6%9D%A5%E7%9A%84%E7%89%88%E6%9C%AC%E6%94%B9%E8%BF%9B%E3%80%82%3C/p%3E%3Cp%3E%E8%AE%A9%E6%88%91%E4%BB%AC%E7%9C%8B%E7%9C%8B%E5%BD%93%E5%90%91%E4%B8%80%E4%B8%AA%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%B7%BB%E5%8A%A0%E8%8B%A5%E5%B9%B2%E5%AD%97%E7%AC%A6%E6%97%B6%E5%8F%91%E7%94%9F%E4%BA%86%E5%95%A5%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Es%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..%3Cspan%20class=%22number%22%3E10%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Es.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eas_ptr%3C/span%3E(),%20s.%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecapacity%3C/span%3E(),%20s.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Es.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;#x27;a&amp;#x27;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;:%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Es.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eas_ptr%3C/span%3E(),%20s.%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecapacity%3C/span%3E(),%20s.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E(),%20s);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%9C%A864%E4%BD%8D%E7%B3%BB%E7%BB%9F%E4%B8%AD%EF%BC%8C%E5%8F%AF%E8%83%BD%E8%BE%93%E5%87%BA%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20plaintext%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E0x1%200%200%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E0x7fbf95e20020%204%201%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E0x7fbf95e20020%204%202%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E0x7fbf95e20020%204%203%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E0x7fbf95e20020%204%204%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E0x7fbf95e20020%208%205%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E0x7fbf95e20020%208%206%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E0x7fbf95e20020%208%207%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E0x7fbf95e20020%208%208%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E0x7fbf95e2a000%2016%209%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E0x7fbf95e2a000%2016%2010:%20aaaaaaaaaa%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%87%BD%E6%95%B0%3Ccode%3Eas_ptr%3C/code%3E(%E5%8F%AF%E4%BB%A5%E8%AF%BB%E4%BD%9C%E2%80%9Cas%20pointer%E2%80%9D)%E8%BF%94%E5%9B%9E%E5%A0%86%E7%A9%BA%E9%97%B4%E5%88%86%E9%85%8D%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BC%93%E5%86%B2%E5%8C%BA%E5%9C%B0%E5%9D%80%E3%80%82%3C/p%3E%3Cp%3E%E6%B3%A8%E6%84%8F%E5%88%B0%E5%BD%93%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E7%A9%BA%E7%9A%84%EF%BC%8C%E8%AF%A5%E5%9C%B0%E5%9D%80%E7%AE%80%E5%8C%96%E4%B8%BA%3Ccode%3E1%3C/code%3E%EF%BC%8C%E5%AE%83%E4%B8%8D%E6%98%AF%E4%B8%80%E4%B8%AA%E6%9C%89%E6%95%88%E7%9A%84%E5%86%85%E5%AD%98%E5%9C%B0%E5%9D%80%EF%BC%8C%E5%9B%A0%E4%B8%BA%E6%B2%A1%E6%9C%89%E7%BB%99%E4%B8%80%E4%B8%AA%E7%A9%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8C%87%E6%B4%BE%E4%BB%BB%E4%BD%95%E7%BC%93%E5%86%B2%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E4%B8%80%E4%B8%AAASCII%E5%AD%97%E7%AC%A6%E8%A2%AB%E6%B7%BB%E5%8A%A0%EF%BC%8C%E4%B8%80%E4%B8%AA4%E5%AD%97%E8%8A%82%E7%BC%93%E5%86%B2%E5%8C%BA%E8%A2%AB%E5%88%86%E9%85%8D%E5%9C%A8%E4%B8%80%E4%B8%AA%E7%94%B1%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B67fbf95e20020%E8%A1%A8%E8%BF%B0%E7%9A%84%E5%9C%B0%E5%9D%80%E4%B8%8A%E3%80%82%3C/p%3E%3Cp%3E%E6%B7%BB%E5%8A%A0%E5%8F%A6%E5%A4%963%E4%B8%AA%E5%AD%97%E7%AC%A6%E5%90%8E%EF%BC%8C%E6%B2%A1%E6%9C%89%E5%86%8D%E5%88%86%E9%85%8D%E7%9A%84%E5%8F%91%E7%94%9F%EF%BC%8C%E5%9B%A0%E4%B8%BA%E7%BC%93%E5%86%B2%E5%8C%BA%E5%B7%B2%E7%BB%8F%E8%B6%B3%E5%A4%9F%E5%A4%A7%E4%BA%86%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E7%AC%AC%E4%BA%94%E4%B8%AA%E5%AD%97%E7%AC%A6%E8%A2%AB%E6%B7%BB%E5%8A%A0%EF%BC%8C%E8%A6%81%E6%B1%82%E9%87%8D%E6%96%B0%E5%88%86%E9%85%8D%EF%BC%8C%E4%BD%86%EF%BC%8C%E7%94%B1%E4%BA%8E%E5%86%85%E5%AD%98%E7%B4%A7%E6%8E%A5%E7%9D%80%E7%9A%84%E7%BC%93%E5%86%B2%E5%8C%BA%E4%BB%8D%E7%84%B6%E4%B8%BA%E7%A9%BA%E9%97%B2%EF%BC%8C%E7%BC%93%E5%86%B2%E5%8C%BA%E5%8F%AF%E4%BB%A5%E6%89%A9%E5%B1%958%E4%B8%AA%E5%AD%97%E8%8A%82%E7%AE%80%E5%8C%96%E5%AE%9E%E7%8E%B0%E3%80%82%E5%9B%A0%E6%AD%A4%E4%B8%BA%E4%BA%86%E9%81%BF%E5%85%8D%E5%9C%A8%E6%96%B0%E7%BC%93%E5%86%B2%E5%8C%BA%E5%88%86%E9%85%8D%E4%B8%8A%E7%9A%84%E5%BC%80%E9%94%80%EF%BC%8C%E6%8B%B7%E8%B4%9D4%E4%B8%AA%E5%B7%B2%E7%94%A8%E7%9A%84%E5%AD%97%E8%8A%82%EF%BC%8C%E5%9B%9E%E6%94%B6%E5%89%8D%E9%9D%A2%E7%9A%84%E7%BC%93%E5%86%B2%E5%8C%BA%E3%80%82%3C/p%3E%3Cp%3E%E5%86%8D%E8%AF%B4%E4%B8%80%E9%81%8D%EF%BC%8C%E6%B7%BB%E5%8A%A0%E5%8F%A6%E5%A4%963%E4%B8%AA%E5%AD%97%E7%AC%A6%EF%BC%8C%E4%B8%8D%E8%A6%81%E6%B1%82%E5%86%8D%E5%88%86%E9%85%8D%EF%BC%8C%E5%BD%93%E7%AC%AC%E4%B9%9D%E4%B8%AA%E5%AD%97%E7%AC%A6%E8%A2%AB%E6%B7%BB%E5%8A%A0%EF%BC%8C%E4%B8%8D%E4%BB%85%E7%BC%93%E5%86%B2%E5%8C%BA%E6%89%A9%E5%B1%95%E5%88%B016%E4%B8%AA%E5%AD%97%E8%8A%82%EF%BC%8C%E8%80%8C%E4%B8%94%E5%AE%83%E5%BF%85%E9%A1%BB%E9%87%8D%E6%96%B0%E5%AE%9A%E4%BD%8D%E5%9C%B0%E5%9D%80%EF%BC%8C%E5%9B%A0%E4%B8%BA%EF%BC%8C%E6%8E%A5%E4%B8%8B%E6%9D%A58%E5%AD%97%E8%8A%82%E5%8F%AF%E8%83%BD%E5%B9%B6%E4%B8%8D%E6%98%AF%E7%A9%BA%E9%97%B2%E7%9A%84%E3%80%82%3C/p%3E%3Cp%3E%E6%9C%80%E5%90%8E%EF%BC%8C%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%94%A8%E4%BA%8610%E5%AD%97%E8%8A%82%E3%80%82%3C/p%3E%3Ch2%20id=%22Creating-Strings%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Creating-Strings%22%3E%C2%B6%3C/a%3ECreating%20Strings%3C/h2%3E%3Cp%3E%E5%88%9B%E5%BB%BA%E7%A9%BA%E7%9A%84%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9C%89%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Es1%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3EString%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Es2%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3EString%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3Efrom%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Es3%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Es4%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_owned%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Es5%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Eformat!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;(&amp;#123;&amp;#125;&amp;#123;&amp;#125;&amp;#123;&amp;#125;&amp;#123;&amp;#125;&amp;#123;&amp;#125;)&amp;quot;%3C/span%3E,%20s1,%20s2,%20s3,%20s4,%20s5);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%89%93%E5%8D%B0%E2%80%9C()%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%3Ccode%3Enew%3C/code%3E%E5%87%BD%E6%95%B0%E6%98%AF%3Ccode%3EString%3C/code%3E%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%9F%BA%E7%A1%80%E6%9E%84%E9%80%A0%E5%99%A8%EF%BC%8C%E7%B1%BB%E4%BC%BC%E4%BA%8EC++%E7%9A%84%E2%80%9Cdefault%20constructor%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%3Ccode%3Efrom%3C/code%3E%E5%87%BD%E6%95%B0%E4%B8%BA%3Ccode%3EString%3C/code%3E%E7%B1%BB%E5%9E%8B%E7%9A%84%E8%BD%AC%E6%8D%A2%E6%9E%84%E9%80%A0%E5%99%A8%EF%BC%8C%E7%B1%BB%E4%BC%BC%E4%BA%8EC++%E7%9A%84%E2%80%9Cnon-default%20constructor%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%87%BD%E6%95%B0%3Ccode%3Eto_string%3C/code%3E%E5%92%8C%3Ccode%3Eto_owned%3C/code%3E%E7%8E%B0%E5%9C%A8%E6%98%AF%E5%8F%AF%E4%BB%A5%E6%9B%BF%E6%8D%A2%E7%9A%84%E7%94%A8%E6%B3%95%E3%80%82%E7%94%B1%E4%BA%8E%E5%8E%86%E5%8F%B2%E7%9A%84%E5%8E%9F%E5%9B%A0%E6%9C%89%E5%87%A0%E5%88%86%E4%B8%8D%E5%90%8C%E3%80%82%3C/p%3E%3Cp%3E%3Ccode%3Eformat%3C/code%3E%E5%AE%8F%E6%98%AF%3Ccode%3Eprint%3C/code%3E%E5%AE%8F%E7%9A%84identical%EF%BC%8C%E5%94%AF%E4%B8%80%E4%B8%8D%E5%90%8C%E7%9A%84%E6%98%AF%3Ccode%3Eprint%3C/code%3E%E6%98%AF%E5%B0%86%E7%BB%93%E6%9E%9C%E5%8F%91%E9%80%81%E5%88%B0%E6%8E%A7%E5%88%B6%E5%8F%B0%EF%BC%8C%E8%80%8C%3Ccode%3Eformat%3C/code%3E%E6%98%AF%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%3Ccode%3EString%3C/code%3E%E5%AF%B9%E8%B1%A1%E7%BB%93%E6%9E%9C%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8A%E8%BF%B0%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F%EF%BC%8C%E9%99%A4%E4%BA%86%3Ccode%3Enew%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E9%83%BD%E5%8F%AF%E4%BB%A5%E7%94%B1%E4%B8%80%E4%B8%AA%E9%9D%9E%E7%A9%BA%E9%9D%99%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Es%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;a,&amp;quot;%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Es1%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3EString%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3Efrom%3C/span%3E(s);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Es2%3C/span%3E%20=%20s.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Es3%3C/span%3E%20=%20s.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_owned%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/let%20s4%20=%20format!(s);%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/let%20s5%20=%20format!(&amp;quot;a,&amp;#123;&amp;#125;&amp;quot;);%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Es6%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Eformat!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20s);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;(&amp;#123;&amp;#125;&amp;#123;&amp;#125;&amp;#123;&amp;#125;&amp;#123;&amp;#125;)&amp;quot;%3C/span%3E,%20s1,%20s2,%20s3,%20s6);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BE%93%E5%87%BA%E2%80%9C%3Ccode%3E(a,a,a,a,)%3C/code%3E%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E7%9B%B8%E5%8F%8D%EF%BC%8C%E5%9C%A8%E7%AC%AC%E4%BA%94%E8%A1%8C%E5%92%8C%E7%AC%AC%E5%85%AD%E8%A1%8C%E4%BC%9A%E7%94%9F%E6%88%90%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%E3%80%82%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%3Ccode%3Eformat%3C/code%3E%E5%AE%8F%EF%BC%8C%E5%92%8C%3Ccode%3Eprint%3C/code%3E%E8%BF%98%E6%9C%89%3Ccode%3Eprintln%3C/code%3E%E5%AE%8F%E4%B8%80%E6%A0%B7%EF%BC%8C%E8%A6%81%E6%B1%82%E5%AE%83%E4%BB%AC%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8F%82%E6%95%B0%E6%98%AF%E4%B8%80%E4%B8%AA%E5%AD%97%E9%9D%A2%E9%87%8F%EF%BC%8C%E4%BB%A5%E5%8F%8A%E8%BF%99%E4%B8%AA%E5%AD%97%E9%9D%A2%E9%87%8F%E5%8C%85%E5%90%AB%E4%B8%8E%E8%BF%9E%E7%BB%AD%E5%8F%82%E6%95%B0%E7%9B%B8%E5%90%8C%E6%95%B0%E7%9B%AE%E7%9A%84%E5%8D%A0%E4%BD%8D%E7%AC%A6%E3%80%82%3C/p%3E%3Ch2%20id=%22Concatenating-Strings%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Concatenating-Strings%22%3E%C2%B6%3C/a%3EConcatenating%20Strings%3C/h2%3E%3Cp%3E%E4%B8%80%E4%B8%AA%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B9%9F%E5%8F%AF%E4%BB%A5%E7%94%B1%E4%B8%A4%E4%B8%AA%E9%9D%99%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%81%E4%B8%A4%E4%B8%AA%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%81%E6%88%96%E4%B8%80%E4%B8%AA%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%80%E4%B8%AA%E9%9D%99%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%8C%E7%BB%84%E5%90%88%E5%BE%97%E5%88%B0%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ess1%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;He&amp;quot;%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ess2%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;llo%20&amp;quot;%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eds1%3C/span%3E%20=%20ss1.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eds2%3C/span%3E%20=%20ss2.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eds3%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Eformat!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20ss1,%20ss2);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20ds3);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eds3%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Eformat!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20ss1,%20ds2);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20ds3);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eds3%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Eformat!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20ds1,%20ss2);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20ds3);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eds3%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Eformat!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20ds1,%20ds2);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20ds3);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BE%93%E5%87%BA%E2%80%9C%3Ccode%3EHello%20Hello%20Hello%20Hello%3C/code%3E%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E9%80%9A%E5%B8%B8%EF%BC%8C%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%87%BA%E7%8E%B0%E7%94%B1%E5%8F%A6%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%96%E5%86%B3%EF%BC%8C%E5%BD%93%E7%84%B6%E5%AE%83%E5%BF%85%E9%A1%BB%E6%98%AFmutable%E7%9A%84%E3%80%82%E8%BF%99%E6%A0%B7%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%3Ccode%3Eformat%3C/code%3E%E5%AE%8F%EF%BC%8C%E4%BD%86%E5%AE%83%E6%98%AF%E5%86%97%E9%95%BF%E5%92%8C%E4%BD%8E%E6%95%88%E7%9A%84%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Edyn_str%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;Hello&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Edyn_str%20=%20%3Cspan%20class=%22built_in%22%3Eformat!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20dyn_str,%20%3Cspan%20class=%22string%22%3E&amp;quot;,%20&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Edyn_str%20=%20%3Cspan%20class=%22built_in%22%3Eformat!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20dyn_str,%20%3Cspan%20class=%22string%22%3E&amp;quot;world&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Edyn_str%20=%20%3Cspan%20class=%22built_in%22%3Eformat!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20dyn_str,%20%3Cspan%20class=%22string%22%3E&amp;quot;!&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20dyn_str);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E6%98%AF%E4%B8%80%E4%B8%AA%E6%AF%94%E8%BE%83%E5%A5%BD%E7%9A%84%E5%86%99%E6%B3%95%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Edyn_str%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;Hello&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Edyn_str.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush_str%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;,%20&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Edyn_str.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush_str%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;world&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Edyn_str.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush_str%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;!&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20dyn_str);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%87%BD%E6%95%B0%3Ccode%3Epush_str%3C/code%3E%E6%8E%A5%E6%94%B6%E4%B8%80%E4%B8%AA%E9%9D%99%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%8C%E5%B9%B6%E6%8A%8A%E6%89%80%E6%9C%89%E6%8E%A5%E6%94%B6%E5%88%B0%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2push%E5%88%B0%E5%90%8E%E9%9D%A2%E3%80%82%E6%89%93%E5%8D%B0%E2%80%9CHello,%20world!%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%8F%A6%E5%A4%96%E6%9C%89%E4%B8%80%E7%A7%8D%E6%9B%B4%E7%B4%A7%E5%87%91(compact)%E7%9A%84%E5%86%99%E6%B3%95%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Edyn_str%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;Hello&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Edyn_str%20+=%20%3Cspan%20class=%22string%22%3E&amp;quot;,%20&amp;quot;%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Edyn_str%20+=%20%3Cspan%20class=%22string%22%3E&amp;quot;world&amp;quot;%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Edyn_str%20+=%20%3Cspan%20class=%22string%22%3E&amp;quot;!&amp;quot;%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20dyn_str);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%3Ccode%3E+=%3C/code%3E%E6%93%8D%E4%BD%9C%E7%AC%A6%EF%BC%8C%E5%BD%93%E4%BD%9C%E7%94%A8%E5%9C%A8%E4%B8%80%E4%B8%AA%3Ccode%3EString%3C/code%3E%E5%AF%B9%E8%B1%A1%E6%97%B6%EF%BC%8C%E7%AD%89%E4%BB%B7%E4%BA%8E%3Ccode%3Epush_str%3C/code%3E%E5%87%BD%E6%95%B0%E3%80%82%3C/p%3E%3Cp%3E%E4%B9%9F%E5%8F%AF%E4%BB%A5%E8%BF%BD%E5%8A%A0%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AF%B9%E8%B1%A1%E6%88%96%E5%8D%95%E4%B8%AA%E5%AD%97%E7%AC%A6%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ecomma%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;,%20&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eworld%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;world&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eexcl_point%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;#x27;!&amp;#x27;%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Edyn_str%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;Hello&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Edyn_str%20+=%20&amp;amp;comma;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Edyn_str.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush_str%3C/span%3E(&amp;amp;world);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Edyn_str.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(excl_point);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20dyn_str);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%AF%A5%E7%A8%8B%E5%BA%8F%E5%92%8C%E4%B8%8A%E4%B8%80%E4%B8%AA%E6%98%AF%E7%AD%89%E4%BB%B7%E7%9A%84%E3%80%82%E6%B3%A8%E6%84%8F%E5%88%B0%E5%B0%86%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%BD%9C%E4%B8%BA%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E7%BB%99%3Ccode%3Epush_str%3C/code%3E%E6%88%96%3Ccode%3E+=%3C/code%3E%E6%97%B6%EF%BC%8C%E5%BF%85%E9%A1%BB%E9%A2%84%E5%85%88%E8%BD%AC%E6%8D%A2%E4%B8%BA%E9%9D%99%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%82%E8%BF%99%E4%B8%AA%E6%95%88%E6%9E%9C%E4%BD%BF%E7%94%A8%3Ccode%3E&amp;amp;%3C/code%3E%E6%93%8D%E4%BD%9C%E7%AC%A6%E8%8E%B7%E5%BE%97%E3%80%82%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%94%A8%E8%AF%A5%E6%93%8D%E4%BD%9C%E7%AC%A6%EF%BC%8C%E8%8E%B7%E5%BE%97%E4%B8%80%E4%B8%AA%3Ccode%3EString%3C/code%3E%E7%9A%84%E5%BC%95%E7%94%A8%EF%BC%8C%E4%BD%86%E4%BB%BB%E4%BD%95%E4%B8%80%E4%B8%AA%3Ccode%3EString%3C/code%3E%E7%9A%84%E5%BC%95%E7%94%A8%EF%BC%8C%E4%BC%9A%E9%9A%90%E5%BC%8F%E8%BD%AC%E6%8D%A2%E4%B8%BA%E4%B8%80%E4%B8%AA%3Ccode%3Estr%3C/code%3E%E5%BC%95%E7%94%A8%EF%BC%8C%E5%A6%82%E4%B8%8B%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eword%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;quot;bye&amp;quot;%3C/span%3E.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eto_string%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ew1%3C/span%3E:%20&amp;amp;%3Cspan%20class=%22type%22%3Estr%3C/span%3E%20=%20&amp;amp;word;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ew2%3C/span%3E:%20&amp;amp;%3Cspan%20class=%22type%22%3EString%3C/span%3E%20=%20&amp;amp;word;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20w1,%20w2);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%89%93%E5%8D%B0%E4%B8%BA%EF%BC%9A%E2%80%9Cbye%20bye%E2%80%9D%E3%80%82%3C/p%3E" type="image"/>
    
    
    <category term="learning" scheme="https://galudisu.info/categories/learning/"/>
    
    
    <category term="rust" scheme="https://galudisu.info/tags/rust/"/>
    
  </entry>
  
  <entry>
    <title>rust基础入门[13] - Defining Closures</title>
    <link href="https://galudisu.info/2023/01/13/rust/beginning/chapter13_Defining%20Closures/"/>
    <id>https://galudisu.info/2023/01/13/rust/beginning/chapter13_Defining%20Closures/</id>
    <published>2023-01-13T07:50:46.000Z</published>
    <updated>2025-04-27T11:59:08.282Z</updated>
    
    <content type="html"><![CDATA[<p>本章覆盖有：</p><ul><li>为什么需要匿名函数，如何编写匿名函数，如何访问它定义的变量</li><li>这些“闭包”，如何声明和调用</li></ul><span id="more"></span><h2 id="The-Need-for-“Disposable”-Functions"><a class="header-anchor" href="#The-Need-for-“Disposable”-Functions">¶</a>The Need for “Disposable” Functions</h2><p>Rust对数组的升序实现，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">arr</span> = [<span class="number">4</span>, <span class="number">8</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">45</span>, <span class="number">12</span>, <span class="number">7</span>];</span><br><span class="line">arr.<span class="title function_ invoke__">sort</span>();</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, arr);</span><br></pre></td></tr></table></figure><p>结果将输出：“<code>[0, 1, 4, 7, 8, 10, 12, 45]</code>”。</p><p>但标准库里面没有提供降序的函数；你需要调用<code>sort_by</code>函数，将它的一个引用传递给一个比较函数。这种函数接受两个记录，并返回一个indication：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">arr</span> = [<span class="number">4</span>, <span class="number">8</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">45</span>, <span class="number">12</span>, <span class="number">7</span>];</span><br><span class="line"><span class="keyword">use</span> std::cmp::Ordering;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">desc</span>(a: &amp;<span class="type">i32</span>, b: &amp;<span class="type">i32</span>) <span class="punctuation">-&gt;</span> Ordering &#123;</span><br><span class="line"><span class="keyword">if</span> a &lt; b &#123; Ordering::Greater &#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> a &gt; b &#123; Ordering::Less &#125;</span><br><span class="line"><span class="keyword">else</span> &#123; Ordering::Equal &#125;</span><br><span class="line">&#125;</span><br><span class="line">arr.<span class="title function_ invoke__">sort_by</span>(desc);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, arr);</span><br></pre></td></tr></table></figure><p><code>desc</code>函数返回了一个标准库中定义的类型：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> <span class="title class_">Ordering</span> &#123; Less, Equal, Greater &#125;</span><br></pre></td></tr></table></figure><p>这种方式生效，但有几点诟病。</p><p>首先，<code>desc</code>函数定义仅用于一处。标准库函数<code>sort_by</code>接收一个函数入参。这个入参需要是一个匿名函数，这个函数也仅用于一处。</p><p>另外，虽然类型规范对于变量声明是可选的，但对于参数和函数的返回值是必须的。这些规范，可以像函数名一样，方便地在其它语句或程序调用。但当你需要写一个函数仅在它声明的地方调用，这种规范几乎是匿名的。因此，声明和调用一个行内匿名的、由参数和返回值推断的类型的函数，将会是一个便利的特性。</p><p>另一个诟病是需要给函数体花括号闭合。通常函数会包含几条语句，因此不是所有匿名的带上花括号闭合。相反，匿名函数通常只有一条单一表达式，可以不用写闭合。</p><h2 id="Capturing-the-Environment"><a class="header-anchor" href="#Capturing-the-Environment">¶</a>Capturing the Environment</h2><p>本章我们所陈述的所有内容，对于其它大多数语言也是适用的，包括C语言。但Rust函数有一个额外的不寻常限制：它不能访问任何外部声明的变量。你可以访问<code>static</code>的，你可以访问<code>constants</code>的，但不能访问栈分配的变量(也就是用<code>let</code>声明的变量)。例如，下面例子是不合法的：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">two</span> = <span class="number">2</span>.;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">print_double</span>(x: <span class="type">f64</span>) &#123;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, x * two);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">print_double</span>(<span class="number">17.2</span>);</span><br></pre></td></tr></table></figure><p>编译出错：“can’t capture dynamic environment in an fn item.”</p><p>“dynamic environment”意味着一系列变量在函数调用时才生效。所以，它是“dynamic”的，这些变量核能在某些语句生效，在其它语句失效。“capture the environment”意味着能够访问这些变量。</p><p>相反，下面是有效的：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> TWO: <span class="type">f64</span> = <span class="number">2</span>.;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">print_double</span>(x: <span class="type">f64</span>) &#123;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, x * TWO);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">print_double</span>(<span class="number">17.2</span>);</span><br></pre></td></tr></table></figure><p>或者这样写</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> TWO: <span class="type">f64</span> = <span class="number">2</span>.;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">print_double</span>(x: <span class="type">f64</span>) &#123;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, x * TWO);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">print_double</span>(<span class="number">17.2</span>);</span><br></pre></td></tr></table></figure><p>这种限制有一个很好的理由：外部变量可以有效地进入函数的程序接口，但是从函数签名中看不出来，因此它对理解代码产生误导。</p><p>但当一个函数仅能在它定义的地方调用，访问外部变量并不能降低理解难度，因为这些外部变量在声明语句已经生效。</p><p>因此，我们特性的需求是：一个行内匿名函数，带类型推断；一个单一表达式作为函数体；可以捕获任何有效变量。</p><h2 id="Closures"><a class="header-anchor" href="#Closures">¶</a>Closures</h2><p>闭包，说白了就是引用了自由变量的函数。这个被引用的自由变量将和这个函数一同存在，即使离开了创造它的环境也不例外。</p><p>闭包的调用出现在它定义的地方。实际上，你也可以定义一个闭包，尽管类型规范可行，实际上典型使用闭包的场景并不多。下面是使用闭包实现排序的一种方式：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">arr</span> = [<span class="number">4</span>, <span class="number">8</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">45</span>, <span class="number">12</span>, <span class="number">7</span>];</span><br><span class="line"><span class="keyword">use</span> std::cmp::Ordering;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">desc</span> = |a: &amp;<span class="type">i32</span>, b: &amp;<span class="type">i32</span>| <span class="punctuation">-&gt;</span> Ordering &#123;</span><br><span class="line"><span class="keyword">if</span> a &lt; b &#123; Ordering::Greater &#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> a &gt; b &#123; Ordering::Less &#125;</span><br><span class="line"><span class="keyword">else</span> &#123; Ordering::Equal &#125;</span><br><span class="line">&#125;;</span><br><span class="line">arr.<span class="title function_ invoke__">sort_by</span>(desc);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, arr);</span><br></pre></td></tr></table></figure><p>跟前面不同的是：</p><ul><li>使用了<code>let</code>关键字代替<code>fn</code>。</li><li>闭包名后面带有<code>=</code>号。</li><li>函数的参数由<code>(</code>和<code>)</code>，在闭包中变为<code>|</code>(管道)标志。</li><li>闭包声明带有分号<code>;</code>。</li></ul><p>至此，我们说过，闭包声明和调用都在同一个地方，类型和大括号(braces)是可选的。因此，上面可以简化一下：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">arr</span> = [<span class="number">4</span>, <span class="number">8</span>, <span class="number">1</span>, <span class="number">20</span>, <span class="number">0</span>, <span class="number">45</span>, <span class="number">12</span>, <span class="number">7</span>];</span><br><span class="line"><span class="keyword">use</span> std::cmp::Ordering;</span><br><span class="line">arr.<span class="title function_ invoke__">sort_by</span>(|a, b|</span><br><span class="line"><span class="keyword">if</span> a &lt; b &#123; Ordering::Greater &#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> a &gt; b &#123; Ordering::Less &#125;</span><br><span class="line"><span class="keyword">else</span> &#123; Ordering:: Equal &#125;);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, arr);</span><br></pre></td></tr></table></figure><p>有很多简洁的写法。标准库早以包含有<code>cmp</code>函数(&quot;compare&quot;的简写)；该函数根据两个参数比较返回一个<code>Ordering</code>值。下面写法是等价的：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arr.<span class="title function_ invoke__">sort</span>();</span><br><span class="line">arr.<span class="title function_ invoke__">sort_by</span>(|a, b| a.<span class="title function_ invoke__">cmp</span>(b));</span><br></pre></td></tr></table></figure><p>因此，要想得到一个反转的顺序，你可以用下面的方式：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arr.<span class="title function_ invoke__">sort_by</span>(|a, b| (&amp;-*a).<span class="title function_ invoke__">cmp</span>(&amp;-*b));</span><br><span class="line">arr.<span class="title function_ invoke__">sort_by</span>(|a, b| b.<span class="title function_ invoke__">cmp</span>(a));</span><br></pre></td></tr></table></figure><p>完整代码：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">arr</span> = [<span class="number">4</span>, <span class="number">8</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">45</span>, <span class="number">12</span>, <span class="number">7</span>];</span><br><span class="line">arr.<span class="title function_ invoke__">sort_by</span>(|a, b| b.<span class="title function_ invoke__">cmp</span>(a));</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, arr);</span><br></pre></td></tr></table></figure><p>同时也删除了<code>use</code>指令，因为这里不再需要。</p><h2 id="Other-Examples"><a class="header-anchor" href="#Other-Examples">¶</a>Other Examples</h2><p>下面是以6种方式调用闭包的例子：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">factor</span> = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">multiply</span> = |a| a * factor;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, <span class="title function_ invoke__">multiply</span>(<span class="number">13</span>));</span><br><span class="line"><span class="keyword">let</span> <span class="variable">multiply_ref</span>: &amp;(<span class="title function_ invoke__">Fn</span>(<span class="type">i32</span>) <span class="punctuation">-&gt;</span> <span class="type">i32</span>) = &amp; multiply;</span><br><span class="line"><span class="built_in">print!</span>(</span><br><span class="line"><span class="string">&quot; &#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125;&quot;</span>,</span><br><span class="line">(*multiply_ref)(<span class="number">13</span>),</span><br><span class="line"><span class="title function_ invoke__">multiply_ref</span>(<span class="number">13</span>),</span><br><span class="line">(|a| a * factor)(<span class="number">13</span>),</span><br><span class="line">(|a: <span class="type">i32</span>| a * factor)(<span class="number">13</span>),</span><br><span class="line">|a| <span class="punctuation">-&gt;</span> <span class="type">i32</span> &#123; a * factor &#125;(<span class="number">13</span>));</span><br></pre></td></tr></table></figure><p>将会打印输出：“<code>26 26 26 26 26 26</code>”。</p><p>该程序提供6种不同风格的闭包调用。每个调用都接收一个<code>i32</code>的命名参数<code>a</code>；由变量<code>factor</code>作乘积；这里的入参总是13，所以结果总是26。</p><p>在第二行，声明了一个闭包，它根据参数<code>a</code>和返回值进行类型推断。闭包内访问内部变量<code>factor</code>，即捕获了自由变量。以及初始化了变量<code>multiply</code>，它的类型由推断得出。</p><p>在第三行，闭包指派到<code>multiply</code>变量的调用和函数类似。</p><p>在第四行，声明的闭包的地址被用于初始化<code>multiply_ref</code>变量。该变量的类型可以被推断，但已经被明确指定。这里的<code>Fn</code>表示它是一个函数类型。每个函数都有一个类型，它有它的参数和返回值确定。表达式<code>Fn(i32) -&gt; i32</code>表示“该函数的类型是：接收一个<code>i32</code>参数，返回一个<code>i32</code>”。该类型表达式又符号<code>&amp;</code>处理，因为它是一个“reference to a function”，不是“a function”。</p><p>在第七行，函数的引用被反向引用，获得一个函数，以及调用这个函数。</p><p>在第八行，函数不进行反引用被调用，因为该函数调用会隐式地反引用处理。</p><p>最后三条语句，声明了匿名闭包并进行调用。第一条语句可以推断出参数类型和返回类型；第二条制定了参数类型并推断返回类型；第三条指定了返回类型，推断出参数类型。</p><p>注意参数13被传递到闭包总是用小括号括住。为了避免表达式<code>(13)</code>与前面部分的闭包出现迷惑，某些情况下闭包表达式也需要用小括号括起来。与此，在最后一条语句，闭包的语句体，要与返回类型规范区别开来，需要用花括号(braces)。</p><p>当闭包包含几个语句时，花括号是必须的，例如：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print!</span>(</span><br><span class="line"><span class="string">&quot;&#123;&#125;&quot;</span>,</span><br><span class="line">(|v: &amp;<span class="type">Vec</span>&lt;<span class="type">i32</span>&gt;| &#123;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">sum</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">0</span>..v.<span class="title function_ invoke__">len</span>() &#123;</span><br><span class="line">sum += v[i];</span><br><span class="line">&#125;</span><br><span class="line">sum</span><br><span class="line">&#125;)(&amp;<span class="built_in">vec!</span>[<span class="number">11</span>, <span class="number">22</span>, <span class="number">34</span>]));</span><br></pre></td></tr></table></figure><p>这里将打印输出“67”，即向量元素求和。</p><p>这里需要制定参数的类型，不然编译器无法推断，以及抛出一个错误信息“<code>the type of this value must be known in this context</code>”，定义在表达式<code>v.len()</code>上。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本章覆盖有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为什么需要匿名函数，如何编写匿名函数，如何访问它定义的变量&lt;/li&gt;
&lt;li&gt;这些“闭包”，如何声明和调用&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    <content src="https://galudisu.info/%3Cp%3E%E6%9C%AC%E7%AB%A0%E8%A6%86%E7%9B%96%E6%9C%89%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E5%8C%BF%E5%90%8D%E5%87%BD%E6%95%B0%EF%BC%8C%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99%E5%8C%BF%E5%90%8D%E5%87%BD%E6%95%B0%EF%BC%8C%E5%A6%82%E4%BD%95%E8%AE%BF%E9%97%AE%E5%AE%83%E5%AE%9A%E4%B9%89%E7%9A%84%E5%8F%98%E9%87%8F%3C/li%3E%3Cli%3E%E8%BF%99%E4%BA%9B%E2%80%9C%E9%97%AD%E5%8C%85%E2%80%9D%EF%BC%8C%E5%A6%82%E4%BD%95%E5%A3%B0%E6%98%8E%E5%92%8C%E8%B0%83%E7%94%A8%3C/li%3E%3C/ul%3E%3Cspan%20id=%22more%22%3E%3C/span%3E%3Ch2%20id=%22The-Need-for-%E2%80%9CDisposable%E2%80%9D-Functions%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#The-Need-for-%E2%80%9CDisposable%E2%80%9D-Functions%22%3E%C2%B6%3C/a%3EThe%20Need%20for%20%E2%80%9CDisposable%E2%80%9D%20Functions%3C/h2%3E%3Cp%3ERust%E5%AF%B9%E6%95%B0%E7%BB%84%E7%9A%84%E5%8D%87%E5%BA%8F%E5%AE%9E%E7%8E%B0%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E4%3C/span%3E,%20%3Cspan%20class=%22number%22%3E8%3C/span%3E,%20%3Cspan%20class=%22number%22%3E1%3C/span%3E,%20%3Cspan%20class=%22number%22%3E10%3C/span%3E,%20%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20%3Cspan%20class=%22number%22%3E45%3C/span%3E,%20%3Cspan%20class=%22number%22%3E12%3C/span%3E,%20%3Cspan%20class=%22number%22%3E7%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Earr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Esort%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20arr);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E8%BE%93%E5%87%BA%EF%BC%9A%E2%80%9C%3Ccode%3E[0,%201,%204,%207,%208,%2010,%2012,%2045]%3C/code%3E%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E4%BD%86%E6%A0%87%E5%87%86%E5%BA%93%E9%87%8C%E9%9D%A2%E6%B2%A1%E6%9C%89%E6%8F%90%E4%BE%9B%E9%99%8D%E5%BA%8F%E7%9A%84%E5%87%BD%E6%95%B0%EF%BC%9B%E4%BD%A0%E9%9C%80%E8%A6%81%E8%B0%83%E7%94%A8%3Ccode%3Esort_by%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E5%B0%86%E5%AE%83%E7%9A%84%E4%B8%80%E4%B8%AA%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92%E7%BB%99%E4%B8%80%E4%B8%AA%E6%AF%94%E8%BE%83%E5%87%BD%E6%95%B0%E3%80%82%E8%BF%99%E7%A7%8D%E5%87%BD%E6%95%B0%E6%8E%A5%E5%8F%97%E4%B8%A4%E4%B8%AA%E8%AE%B0%E5%BD%95%EF%BC%8C%E5%B9%B6%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AAindication%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E4%3C/span%3E,%20%3Cspan%20class=%22number%22%3E8%3C/span%3E,%20%3Cspan%20class=%22number%22%3E1%3C/span%3E,%20%3Cspan%20class=%22number%22%3E10%3C/span%3E,%20%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20%3Cspan%20class=%22number%22%3E45%3C/span%3E,%20%3Cspan%20class=%22number%22%3E12%3C/span%3E,%20%3Cspan%20class=%22number%22%3E7%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Euse%3C/span%3E%20std::cmp::Ordering;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edesc%3C/span%3E(a:%20&amp;amp;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%20b:%20&amp;amp;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20Ordering%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20a%20&amp;lt;%20b%20&amp;#123;%20Ordering::Greater%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20a%20&amp;gt;%20b%20&amp;#123;%20Ordering::Less%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20&amp;#123;%20Ordering::Equal%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Earr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Esort_by%3C/span%3E(desc);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20arr);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%3Ccode%3Edesc%3C/code%3E%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E4%BA%86%E4%B8%80%E4%B8%AA%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%AD%E5%AE%9A%E4%B9%89%E7%9A%84%E7%B1%BB%E5%9E%8B%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eenum%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EOrdering%3C/span%3E%20&amp;#123;%20Less,%20Equal,%20Greater%20&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E7%A7%8D%E6%96%B9%E5%BC%8F%E7%94%9F%E6%95%88%EF%BC%8C%E4%BD%86%E6%9C%89%E5%87%A0%E7%82%B9%E8%AF%9F%E7%97%85%E3%80%82%3C/p%3E%3Cp%3E%E9%A6%96%E5%85%88%EF%BC%8C%3Ccode%3Edesc%3C/code%3E%E5%87%BD%E6%95%B0%E5%AE%9A%E4%B9%89%E4%BB%85%E7%94%A8%E4%BA%8E%E4%B8%80%E5%A4%84%E3%80%82%E6%A0%87%E5%87%86%E5%BA%93%E5%87%BD%E6%95%B0%3Ccode%3Esort_by%3C/code%3E%E6%8E%A5%E6%94%B6%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E5%85%A5%E5%8F%82%E3%80%82%E8%BF%99%E4%B8%AA%E5%85%A5%E5%8F%82%E9%9C%80%E8%A6%81%E6%98%AF%E4%B8%80%E4%B8%AA%E5%8C%BF%E5%90%8D%E5%87%BD%E6%95%B0%EF%BC%8C%E8%BF%99%E4%B8%AA%E5%87%BD%E6%95%B0%E4%B9%9F%E4%BB%85%E7%94%A8%E4%BA%8E%E4%B8%80%E5%A4%84%E3%80%82%3C/p%3E%3Cp%3E%E5%8F%A6%E5%A4%96%EF%BC%8C%E8%99%BD%E7%84%B6%E7%B1%BB%E5%9E%8B%E8%A7%84%E8%8C%83%E5%AF%B9%E4%BA%8E%E5%8F%98%E9%87%8F%E5%A3%B0%E6%98%8E%E6%98%AF%E5%8F%AF%E9%80%89%E7%9A%84%EF%BC%8C%E4%BD%86%E5%AF%B9%E4%BA%8E%E5%8F%82%E6%95%B0%E5%92%8C%E5%87%BD%E6%95%B0%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC%E6%98%AF%E5%BF%85%E9%A1%BB%E7%9A%84%E3%80%82%E8%BF%99%E4%BA%9B%E8%A7%84%E8%8C%83%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%83%8F%E5%87%BD%E6%95%B0%E5%90%8D%E4%B8%80%E6%A0%B7%EF%BC%8C%E6%96%B9%E4%BE%BF%E5%9C%B0%E5%9C%A8%E5%85%B6%E5%AE%83%E8%AF%AD%E5%8F%A5%E6%88%96%E7%A8%8B%E5%BA%8F%E8%B0%83%E7%94%A8%E3%80%82%E4%BD%86%E5%BD%93%E4%BD%A0%E9%9C%80%E8%A6%81%E5%86%99%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E4%BB%85%E5%9C%A8%E5%AE%83%E5%A3%B0%E6%98%8E%E7%9A%84%E5%9C%B0%E6%96%B9%E8%B0%83%E7%94%A8%EF%BC%8C%E8%BF%99%E7%A7%8D%E8%A7%84%E8%8C%83%E5%87%A0%E4%B9%8E%E6%98%AF%E5%8C%BF%E5%90%8D%E7%9A%84%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%A3%B0%E6%98%8E%E5%92%8C%E8%B0%83%E7%94%A8%E4%B8%80%E4%B8%AA%E8%A1%8C%E5%86%85%E5%8C%BF%E5%90%8D%E7%9A%84%E3%80%81%E7%94%B1%E5%8F%82%E6%95%B0%E5%92%8C%E8%BF%94%E5%9B%9E%E5%80%BC%E6%8E%A8%E6%96%AD%E7%9A%84%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%87%BD%E6%95%B0%EF%BC%8C%E5%B0%86%E4%BC%9A%E6%98%AF%E4%B8%80%E4%B8%AA%E4%BE%BF%E5%88%A9%E7%9A%84%E7%89%B9%E6%80%A7%E3%80%82%3C/p%3E%3Cp%3E%E5%8F%A6%E4%B8%80%E4%B8%AA%E8%AF%9F%E7%97%85%E6%98%AF%E9%9C%80%E8%A6%81%E7%BB%99%E5%87%BD%E6%95%B0%E4%BD%93%E8%8A%B1%E6%8B%AC%E5%8F%B7%E9%97%AD%E5%90%88%E3%80%82%E9%80%9A%E5%B8%B8%E5%87%BD%E6%95%B0%E4%BC%9A%E5%8C%85%E5%90%AB%E5%87%A0%E6%9D%A1%E8%AF%AD%E5%8F%A5%EF%BC%8C%E5%9B%A0%E6%AD%A4%E4%B8%8D%E6%98%AF%E6%89%80%E6%9C%89%E5%8C%BF%E5%90%8D%E7%9A%84%E5%B8%A6%E4%B8%8A%E8%8A%B1%E6%8B%AC%E5%8F%B7%E9%97%AD%E5%90%88%E3%80%82%E7%9B%B8%E5%8F%8D%EF%BC%8C%E5%8C%BF%E5%90%8D%E5%87%BD%E6%95%B0%E9%80%9A%E5%B8%B8%E5%8F%AA%E6%9C%89%E4%B8%80%E6%9D%A1%E5%8D%95%E4%B8%80%E8%A1%A8%E8%BE%BE%E5%BC%8F%EF%BC%8C%E5%8F%AF%E4%BB%A5%E4%B8%8D%E7%94%A8%E5%86%99%E9%97%AD%E5%90%88%E3%80%82%3C/p%3E%3Ch2%20id=%22Capturing-the-Environment%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Capturing-the-Environment%22%3E%C2%B6%3C/a%3ECapturing%20the%20Environment%3C/h2%3E%3Cp%3E%E6%9C%AC%E7%AB%A0%E6%88%91%E4%BB%AC%E6%89%80%E9%99%88%E8%BF%B0%E7%9A%84%E6%89%80%E6%9C%89%E5%86%85%E5%AE%B9%EF%BC%8C%E5%AF%B9%E4%BA%8E%E5%85%B6%E5%AE%83%E5%A4%A7%E5%A4%9A%E6%95%B0%E8%AF%AD%E8%A8%80%E4%B9%9F%E6%98%AF%E9%80%82%E7%94%A8%E7%9A%84%EF%BC%8C%E5%8C%85%E6%8B%ACC%E8%AF%AD%E8%A8%80%E3%80%82%E4%BD%86Rust%E5%87%BD%E6%95%B0%E6%9C%89%E4%B8%80%E4%B8%AA%E9%A2%9D%E5%A4%96%E7%9A%84%E4%B8%8D%E5%AF%BB%E5%B8%B8%E9%99%90%E5%88%B6%EF%BC%9A%E5%AE%83%E4%B8%8D%E8%83%BD%E8%AE%BF%E9%97%AE%E4%BB%BB%E4%BD%95%E5%A4%96%E9%83%A8%E5%A3%B0%E6%98%8E%E7%9A%84%E5%8F%98%E9%87%8F%E3%80%82%E4%BD%A0%E5%8F%AF%E4%BB%A5%E8%AE%BF%E9%97%AE%3Ccode%3Estatic%3C/code%3E%E7%9A%84%EF%BC%8C%E4%BD%A0%E5%8F%AF%E4%BB%A5%E8%AE%BF%E9%97%AE%3Ccode%3Econstants%3C/code%3E%E7%9A%84%EF%BC%8C%E4%BD%86%E4%B8%8D%E8%83%BD%E8%AE%BF%E9%97%AE%E6%A0%88%E5%88%86%E9%85%8D%E7%9A%84%E5%8F%98%E9%87%8F(%E4%B9%9F%E5%B0%B1%E6%98%AF%E7%94%A8%3Ccode%3Elet%3C/code%3E%E5%A3%B0%E6%98%8E%E7%9A%84%E5%8F%98%E9%87%8F)%E3%80%82%E4%BE%8B%E5%A6%82%EF%BC%8C%E4%B8%8B%E9%9D%A2%E4%BE%8B%E5%AD%90%E6%98%AF%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Etwo%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E2%3C/span%3E.;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eprint_double%3C/span%3E(x:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20x%20*%20two);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Eprint_double%3C/span%3E(%3Cspan%20class=%22number%22%3E17.2%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BC%96%E8%AF%91%E5%87%BA%E9%94%99%EF%BC%9A%E2%80%9Ccan%E2%80%99t%20capture%20dynamic%20environment%20in%20an%20fn%20item.%E2%80%9D%3C/p%3E%3Cp%3E%E2%80%9Cdynamic%20environment%E2%80%9D%E6%84%8F%E5%91%B3%E7%9D%80%E4%B8%80%E7%B3%BB%E5%88%97%E5%8F%98%E9%87%8F%E5%9C%A8%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E6%97%B6%E6%89%8D%E7%94%9F%E6%95%88%E3%80%82%E6%89%80%E4%BB%A5%EF%BC%8C%E5%AE%83%E6%98%AF%E2%80%9Cdynamic%E2%80%9D%E7%9A%84%EF%BC%8C%E8%BF%99%E4%BA%9B%E5%8F%98%E9%87%8F%E6%A0%B8%E8%83%BD%E5%9C%A8%E6%9F%90%E4%BA%9B%E8%AF%AD%E5%8F%A5%E7%94%9F%E6%95%88%EF%BC%8C%E5%9C%A8%E5%85%B6%E5%AE%83%E8%AF%AD%E5%8F%A5%E5%A4%B1%E6%95%88%E3%80%82%E2%80%9Ccapture%20the%20environment%E2%80%9D%E6%84%8F%E5%91%B3%E7%9D%80%E8%83%BD%E5%A4%9F%E8%AE%BF%E9%97%AE%E8%BF%99%E4%BA%9B%E5%8F%98%E9%87%8F%E3%80%82%3C/p%3E%3Cp%3E%E7%9B%B8%E5%8F%8D%EF%BC%8C%E4%B8%8B%E9%9D%A2%E6%98%AF%E6%9C%89%E6%95%88%E7%9A%84%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Econst%3C/span%3E%20TWO:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E2%3C/span%3E.;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eprint_double%3C/span%3E(x:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20x%20*%20TWO);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Eprint_double%3C/span%3E(%3Cspan%20class=%22number%22%3E17.2%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%88%96%E8%80%85%E8%BF%99%E6%A0%B7%E5%86%99%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estatic%3C/span%3E%20TWO:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E2%3C/span%3E.;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eprint_double%3C/span%3E(x:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20x%20*%20TWO);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Eprint_double%3C/span%3E(%3Cspan%20class=%22number%22%3E17.2%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E7%A7%8D%E9%99%90%E5%88%B6%E6%9C%89%E4%B8%80%E4%B8%AA%E5%BE%88%E5%A5%BD%E7%9A%84%E7%90%86%E7%94%B1%EF%BC%9A%E5%A4%96%E9%83%A8%E5%8F%98%E9%87%8F%E5%8F%AF%E4%BB%A5%E6%9C%89%E6%95%88%E5%9C%B0%E8%BF%9B%E5%85%A5%E5%87%BD%E6%95%B0%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%8E%A5%E5%8F%A3%EF%BC%8C%E4%BD%86%E6%98%AF%E4%BB%8E%E5%87%BD%E6%95%B0%E7%AD%BE%E5%90%8D%E4%B8%AD%E7%9C%8B%E4%B8%8D%E5%87%BA%E6%9D%A5%EF%BC%8C%E5%9B%A0%E6%AD%A4%E5%AE%83%E5%AF%B9%E7%90%86%E8%A7%A3%E4%BB%A3%E7%A0%81%E4%BA%A7%E7%94%9F%E8%AF%AF%E5%AF%BC%E3%80%82%3C/p%3E%3Cp%3E%E4%BD%86%E5%BD%93%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E4%BB%85%E8%83%BD%E5%9C%A8%E5%AE%83%E5%AE%9A%E4%B9%89%E7%9A%84%E5%9C%B0%E6%96%B9%E8%B0%83%E7%94%A8%EF%BC%8C%E8%AE%BF%E9%97%AE%E5%A4%96%E9%83%A8%E5%8F%98%E9%87%8F%E5%B9%B6%E4%B8%8D%E8%83%BD%E9%99%8D%E4%BD%8E%E7%90%86%E8%A7%A3%E9%9A%BE%E5%BA%A6%EF%BC%8C%E5%9B%A0%E4%B8%BA%E8%BF%99%E4%BA%9B%E5%A4%96%E9%83%A8%E5%8F%98%E9%87%8F%E5%9C%A8%E5%A3%B0%E6%98%8E%E8%AF%AD%E5%8F%A5%E5%B7%B2%E7%BB%8F%E7%94%9F%E6%95%88%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E6%88%91%E4%BB%AC%E7%89%B9%E6%80%A7%E7%9A%84%E9%9C%80%E6%B1%82%E6%98%AF%EF%BC%9A%E4%B8%80%E4%B8%AA%E8%A1%8C%E5%86%85%E5%8C%BF%E5%90%8D%E5%87%BD%E6%95%B0%EF%BC%8C%E5%B8%A6%E7%B1%BB%E5%9E%8B%E6%8E%A8%E6%96%AD%EF%BC%9B%E4%B8%80%E4%B8%AA%E5%8D%95%E4%B8%80%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%BD%9C%E4%B8%BA%E5%87%BD%E6%95%B0%E4%BD%93%EF%BC%9B%E5%8F%AF%E4%BB%A5%E6%8D%95%E8%8E%B7%E4%BB%BB%E4%BD%95%E6%9C%89%E6%95%88%E5%8F%98%E9%87%8F%E3%80%82%3C/p%3E%3Ch2%20id=%22Closures%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Closures%22%3E%C2%B6%3C/a%3EClosures%3C/h2%3E%3Cp%3E%E9%97%AD%E5%8C%85%EF%BC%8C%E8%AF%B4%E7%99%BD%E4%BA%86%E5%B0%B1%E6%98%AF%E5%BC%95%E7%94%A8%E4%BA%86%E8%87%AA%E7%94%B1%E5%8F%98%E9%87%8F%E7%9A%84%E5%87%BD%E6%95%B0%E3%80%82%E8%BF%99%E4%B8%AA%E8%A2%AB%E5%BC%95%E7%94%A8%E7%9A%84%E8%87%AA%E7%94%B1%E5%8F%98%E9%87%8F%E5%B0%86%E5%92%8C%E8%BF%99%E4%B8%AA%E5%87%BD%E6%95%B0%E4%B8%80%E5%90%8C%E5%AD%98%E5%9C%A8%EF%BC%8C%E5%8D%B3%E4%BD%BF%E7%A6%BB%E5%BC%80%E4%BA%86%E5%88%9B%E9%80%A0%E5%AE%83%E7%9A%84%E7%8E%AF%E5%A2%83%E4%B9%9F%E4%B8%8D%E4%BE%8B%E5%A4%96%E3%80%82%3C/p%3E%3Cp%3E%E9%97%AD%E5%8C%85%E7%9A%84%E8%B0%83%E7%94%A8%E5%87%BA%E7%8E%B0%E5%9C%A8%E5%AE%83%E5%AE%9A%E4%B9%89%E7%9A%84%E5%9C%B0%E6%96%B9%E3%80%82%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E4%BD%A0%E4%B9%9F%E5%8F%AF%E4%BB%A5%E5%AE%9A%E4%B9%89%E4%B8%80%E4%B8%AA%E9%97%AD%E5%8C%85%EF%BC%8C%E5%B0%BD%E7%AE%A1%E7%B1%BB%E5%9E%8B%E8%A7%84%E8%8C%83%E5%8F%AF%E8%A1%8C%EF%BC%8C%E5%AE%9E%E9%99%85%E4%B8%8A%E5%85%B8%E5%9E%8B%E4%BD%BF%E7%94%A8%E9%97%AD%E5%8C%85%E7%9A%84%E5%9C%BA%E6%99%AF%E5%B9%B6%E4%B8%8D%E5%A4%9A%E3%80%82%E4%B8%8B%E9%9D%A2%E6%98%AF%E4%BD%BF%E7%94%A8%E9%97%AD%E5%8C%85%E5%AE%9E%E7%8E%B0%E6%8E%92%E5%BA%8F%E7%9A%84%E4%B8%80%E7%A7%8D%E6%96%B9%E5%BC%8F%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E4%3C/span%3E,%20%3Cspan%20class=%22number%22%3E8%3C/span%3E,%20%3Cspan%20class=%22number%22%3E1%3C/span%3E,%20%3Cspan%20class=%22number%22%3E10%3C/span%3E,%20%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20%3Cspan%20class=%22number%22%3E45%3C/span%3E,%20%3Cspan%20class=%22number%22%3E12%3C/span%3E,%20%3Cspan%20class=%22number%22%3E7%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Euse%3C/span%3E%20std::cmp::Ordering;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Edesc%3C/span%3E%20=%20|a:%20&amp;amp;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%20b:%20&amp;amp;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E|%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20Ordering%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20a%20&amp;lt;%20b%20&amp;#123;%20Ordering::Greater%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20a%20&amp;gt;%20b%20&amp;#123;%20Ordering::Less%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20&amp;#123;%20Ordering::Equal%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Earr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Esort_by%3C/span%3E(desc);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20arr);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%B7%9F%E5%89%8D%E9%9D%A2%E4%B8%8D%E5%90%8C%E7%9A%84%E6%98%AF%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E4%BD%BF%E7%94%A8%E4%BA%86%3Ccode%3Elet%3C/code%3E%E5%85%B3%E9%94%AE%E5%AD%97%E4%BB%A3%E6%9B%BF%3Ccode%3Efn%3C/code%3E%E3%80%82%3C/li%3E%3Cli%3E%E9%97%AD%E5%8C%85%E5%90%8D%E5%90%8E%E9%9D%A2%E5%B8%A6%E6%9C%89%3Ccode%3E=%3C/code%3E%E5%8F%B7%E3%80%82%3C/li%3E%3Cli%3E%E5%87%BD%E6%95%B0%E7%9A%84%E5%8F%82%E6%95%B0%E7%94%B1%3Ccode%3E(%3C/code%3E%E5%92%8C%3Ccode%3E)%3C/code%3E%EF%BC%8C%E5%9C%A8%E9%97%AD%E5%8C%85%E4%B8%AD%E5%8F%98%E4%B8%BA%3Ccode%3E|%3C/code%3E(%E7%AE%A1%E9%81%93)%E6%A0%87%E5%BF%97%E3%80%82%3C/li%3E%3Cli%3E%E9%97%AD%E5%8C%85%E5%A3%B0%E6%98%8E%E5%B8%A6%E6%9C%89%E5%88%86%E5%8F%B7%3Ccode%3E;%3C/code%3E%E3%80%82%3C/li%3E%3C/ul%3E%3Cp%3E%E8%87%B3%E6%AD%A4%EF%BC%8C%E6%88%91%E4%BB%AC%E8%AF%B4%E8%BF%87%EF%BC%8C%E9%97%AD%E5%8C%85%E5%A3%B0%E6%98%8E%E5%92%8C%E8%B0%83%E7%94%A8%E9%83%BD%E5%9C%A8%E5%90%8C%E4%B8%80%E4%B8%AA%E5%9C%B0%E6%96%B9%EF%BC%8C%E7%B1%BB%E5%9E%8B%E5%92%8C%E5%A4%A7%E6%8B%AC%E5%8F%B7(braces)%E6%98%AF%E5%8F%AF%E9%80%89%E7%9A%84%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E4%B8%8A%E9%9D%A2%E5%8F%AF%E4%BB%A5%E7%AE%80%E5%8C%96%E4%B8%80%E4%B8%8B%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E4%3C/span%3E,%20%3Cspan%20class=%22number%22%3E8%3C/span%3E,%20%3Cspan%20class=%22number%22%3E1%3C/span%3E,%20%3Cspan%20class=%22number%22%3E20%3C/span%3E,%20%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20%3Cspan%20class=%22number%22%3E45%3C/span%3E,%20%3Cspan%20class=%22number%22%3E12%3C/span%3E,%20%3Cspan%20class=%22number%22%3E7%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Euse%3C/span%3E%20std::cmp::Ordering;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Earr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Esort_by%3C/span%3E(|a,%20b|%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20a%20&amp;lt;%20b%20&amp;#123;%20Ordering::Greater%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20a%20&amp;gt;%20b%20&amp;#123;%20Ordering::Less%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20&amp;#123;%20Ordering::%20Equal%20&amp;#125;);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20arr);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%9C%89%E5%BE%88%E5%A4%9A%E7%AE%80%E6%B4%81%E7%9A%84%E5%86%99%E6%B3%95%E3%80%82%E6%A0%87%E5%87%86%E5%BA%93%E6%97%A9%E4%BB%A5%E5%8C%85%E5%90%AB%E6%9C%89%3Ccode%3Ecmp%3C/code%3E%E5%87%BD%E6%95%B0(&amp;quot;compare&amp;quot;%E7%9A%84%E7%AE%80%E5%86%99)%EF%BC%9B%E8%AF%A5%E5%87%BD%E6%95%B0%E6%A0%B9%E6%8D%AE%E4%B8%A4%E4%B8%AA%E5%8F%82%E6%95%B0%E6%AF%94%E8%BE%83%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%3Ccode%3EOrdering%3C/code%3E%E5%80%BC%E3%80%82%E4%B8%8B%E9%9D%A2%E5%86%99%E6%B3%95%E6%98%AF%E7%AD%89%E4%BB%B7%E7%9A%84%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3Earr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Esort%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Earr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Esort_by%3C/span%3E(|a,%20b|%20a.%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecmp%3C/span%3E(b));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E8%A6%81%E6%83%B3%E5%BE%97%E5%88%B0%E4%B8%80%E4%B8%AA%E5%8F%8D%E8%BD%AC%E7%9A%84%E9%A1%BA%E5%BA%8F%EF%BC%8C%E4%BD%A0%E5%8F%AF%E4%BB%A5%E7%94%A8%E4%B8%8B%E9%9D%A2%E7%9A%84%E6%96%B9%E5%BC%8F%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3Earr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Esort_by%3C/span%3E(|a,%20b|%20(&amp;amp;-*a).%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecmp%3C/span%3E(&amp;amp;-*b));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Earr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Esort_by%3C/span%3E(|a,%20b|%20b.%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecmp%3C/span%3E(a));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E4%3C/span%3E,%20%3Cspan%20class=%22number%22%3E8%3C/span%3E,%20%3Cspan%20class=%22number%22%3E1%3C/span%3E,%20%3Cspan%20class=%22number%22%3E10%3C/span%3E,%20%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20%3Cspan%20class=%22number%22%3E45%3C/span%3E,%20%3Cspan%20class=%22number%22%3E12%3C/span%3E,%20%3Cspan%20class=%22number%22%3E7%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Earr.%3Cspan%20class=%22title%20function_%20invoke__%22%3Esort_by%3C/span%3E(|a,%20b|%20b.%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecmp%3C/span%3E(a));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20arr);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%90%8C%E6%97%B6%E4%B9%9F%E5%88%A0%E9%99%A4%E4%BA%86%3Ccode%3Euse%3C/code%3E%E6%8C%87%E4%BB%A4%EF%BC%8C%E5%9B%A0%E4%B8%BA%E8%BF%99%E9%87%8C%E4%B8%8D%E5%86%8D%E9%9C%80%E8%A6%81%E3%80%82%3C/p%3E%3Ch2%20id=%22Other-Examples%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Other-Examples%22%3E%C2%B6%3C/a%3EOther%20Examples%3C/h2%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E6%98%AF%E4%BB%A56%E7%A7%8D%E6%96%B9%E5%BC%8F%E8%B0%83%E7%94%A8%E9%97%AD%E5%8C%85%E7%9A%84%E4%BE%8B%E5%AD%90%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Efactor%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E2%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Emultiply%3C/span%3E%20=%20|a|%20a%20*%20factor;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Emultiply%3C/span%3E(%3Cspan%20class=%22number%22%3E13%3C/span%3E));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Emultiply_ref%3C/span%3E:%20&amp;amp;(%3Cspan%20class=%22title%20function_%20invoke__%22%3EFn%3C/span%3E(%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20=%20&amp;amp;%20multiply;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22string%22%3E&amp;quot;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E(*multiply_ref)(%3Cspan%20class=%22number%22%3E13%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Emultiply_ref%3C/span%3E(%3Cspan%20class=%22number%22%3E13%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E(|a|%20a%20*%20factor)(%3Cspan%20class=%22number%22%3E13%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E(|a:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E|%20a%20*%20factor)(%3Cspan%20class=%22number%22%3E13%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E|a|%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20&amp;#123;%20a%20*%20factor%20&amp;#125;(%3Cspan%20class=%22number%22%3E13%3C/span%3E));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%B0%86%E4%BC%9A%E6%89%93%E5%8D%B0%E8%BE%93%E5%87%BA%EF%BC%9A%E2%80%9C%3Ccode%3E26%2026%2026%2026%2026%2026%3C/code%3E%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E8%AF%A5%E7%A8%8B%E5%BA%8F%E6%8F%90%E4%BE%9B6%E7%A7%8D%E4%B8%8D%E5%90%8C%E9%A3%8E%E6%A0%BC%E7%9A%84%E9%97%AD%E5%8C%85%E8%B0%83%E7%94%A8%E3%80%82%E6%AF%8F%E4%B8%AA%E8%B0%83%E7%94%A8%E9%83%BD%E6%8E%A5%E6%94%B6%E4%B8%80%E4%B8%AA%3Ccode%3Ei32%3C/code%3E%E7%9A%84%E5%91%BD%E5%90%8D%E5%8F%82%E6%95%B0%3Ccode%3Ea%3C/code%3E%EF%BC%9B%E7%94%B1%E5%8F%98%E9%87%8F%3Ccode%3Efactor%3C/code%3E%E4%BD%9C%E4%B9%98%E7%A7%AF%EF%BC%9B%E8%BF%99%E9%87%8C%E7%9A%84%E5%85%A5%E5%8F%82%E6%80%BB%E6%98%AF13%EF%BC%8C%E6%89%80%E4%BB%A5%E7%BB%93%E6%9E%9C%E6%80%BB%E6%98%AF26%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E7%AC%AC%E4%BA%8C%E8%A1%8C%EF%BC%8C%E5%A3%B0%E6%98%8E%E4%BA%86%E4%B8%80%E4%B8%AA%E9%97%AD%E5%8C%85%EF%BC%8C%E5%AE%83%E6%A0%B9%E6%8D%AE%E5%8F%82%E6%95%B0%3Ccode%3Ea%3C/code%3E%E5%92%8C%E8%BF%94%E5%9B%9E%E5%80%BC%E8%BF%9B%E8%A1%8C%E7%B1%BB%E5%9E%8B%E6%8E%A8%E6%96%AD%E3%80%82%E9%97%AD%E5%8C%85%E5%86%85%E8%AE%BF%E9%97%AE%E5%86%85%E9%83%A8%E5%8F%98%E9%87%8F%3Ccode%3Efactor%3C/code%3E%EF%BC%8C%E5%8D%B3%E6%8D%95%E8%8E%B7%E4%BA%86%E8%87%AA%E7%94%B1%E5%8F%98%E9%87%8F%E3%80%82%E4%BB%A5%E5%8F%8A%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BA%86%E5%8F%98%E9%87%8F%3Ccode%3Emultiply%3C/code%3E%EF%BC%8C%E5%AE%83%E7%9A%84%E7%B1%BB%E5%9E%8B%E7%94%B1%E6%8E%A8%E6%96%AD%E5%BE%97%E5%87%BA%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E7%AC%AC%E4%B8%89%E8%A1%8C%EF%BC%8C%E9%97%AD%E5%8C%85%E6%8C%87%E6%B4%BE%E5%88%B0%3Ccode%3Emultiply%3C/code%3E%E5%8F%98%E9%87%8F%E7%9A%84%E8%B0%83%E7%94%A8%E5%92%8C%E5%87%BD%E6%95%B0%E7%B1%BB%E4%BC%BC%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E7%AC%AC%E5%9B%9B%E8%A1%8C%EF%BC%8C%E5%A3%B0%E6%98%8E%E7%9A%84%E9%97%AD%E5%8C%85%E7%9A%84%E5%9C%B0%E5%9D%80%E8%A2%AB%E7%94%A8%E4%BA%8E%E5%88%9D%E5%A7%8B%E5%8C%96%3Ccode%3Emultiply_ref%3C/code%3E%E5%8F%98%E9%87%8F%E3%80%82%E8%AF%A5%E5%8F%98%E9%87%8F%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%8F%AF%E4%BB%A5%E8%A2%AB%E6%8E%A8%E6%96%AD%EF%BC%8C%E4%BD%86%E5%B7%B2%E7%BB%8F%E8%A2%AB%E6%98%8E%E7%A1%AE%E6%8C%87%E5%AE%9A%E3%80%82%E8%BF%99%E9%87%8C%E7%9A%84%3Ccode%3EFn%3C/code%3E%E8%A1%A8%E7%A4%BA%E5%AE%83%E6%98%AF%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E7%B1%BB%E5%9E%8B%E3%80%82%E6%AF%8F%E4%B8%AA%E5%87%BD%E6%95%B0%E9%83%BD%E6%9C%89%E4%B8%80%E4%B8%AA%E7%B1%BB%E5%9E%8B%EF%BC%8C%E5%AE%83%E6%9C%89%E5%AE%83%E7%9A%84%E5%8F%82%E6%95%B0%E5%92%8C%E8%BF%94%E5%9B%9E%E5%80%BC%E7%A1%AE%E5%AE%9A%E3%80%82%E8%A1%A8%E8%BE%BE%E5%BC%8F%3Ccode%3EFn(i32)%20-&amp;gt;%20i32%3C/code%3E%E8%A1%A8%E7%A4%BA%E2%80%9C%E8%AF%A5%E5%87%BD%E6%95%B0%E7%9A%84%E7%B1%BB%E5%9E%8B%E6%98%AF%EF%BC%9A%E6%8E%A5%E6%94%B6%E4%B8%80%E4%B8%AA%3Ccode%3Ei32%3C/code%3E%E5%8F%82%E6%95%B0%EF%BC%8C%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%3Ccode%3Ei32%3C/code%3E%E2%80%9D%E3%80%82%E8%AF%A5%E7%B1%BB%E5%9E%8B%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8F%88%E7%AC%A6%E5%8F%B7%3Ccode%3E&amp;amp;%3C/code%3E%E5%A4%84%E7%90%86%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E6%98%AF%E4%B8%80%E4%B8%AA%E2%80%9Creference%20to%20a%20function%E2%80%9D%EF%BC%8C%E4%B8%8D%E6%98%AF%E2%80%9Ca%20function%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E7%AC%AC%E4%B8%83%E8%A1%8C%EF%BC%8C%E5%87%BD%E6%95%B0%E7%9A%84%E5%BC%95%E7%94%A8%E8%A2%AB%E5%8F%8D%E5%90%91%E5%BC%95%E7%94%A8%EF%BC%8C%E8%8E%B7%E5%BE%97%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%EF%BC%8C%E4%BB%A5%E5%8F%8A%E8%B0%83%E7%94%A8%E8%BF%99%E4%B8%AA%E5%87%BD%E6%95%B0%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E7%AC%AC%E5%85%AB%E8%A1%8C%EF%BC%8C%E5%87%BD%E6%95%B0%E4%B8%8D%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%BC%95%E7%94%A8%E8%A2%AB%E8%B0%83%E7%94%A8%EF%BC%8C%E5%9B%A0%E4%B8%BA%E8%AF%A5%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E4%BC%9A%E9%9A%90%E5%BC%8F%E5%9C%B0%E5%8F%8D%E5%BC%95%E7%94%A8%E5%A4%84%E7%90%86%E3%80%82%3C/p%3E%3Cp%3E%E6%9C%80%E5%90%8E%E4%B8%89%E6%9D%A1%E8%AF%AD%E5%8F%A5%EF%BC%8C%E5%A3%B0%E6%98%8E%E4%BA%86%E5%8C%BF%E5%90%8D%E9%97%AD%E5%8C%85%E5%B9%B6%E8%BF%9B%E8%A1%8C%E8%B0%83%E7%94%A8%E3%80%82%E7%AC%AC%E4%B8%80%E6%9D%A1%E8%AF%AD%E5%8F%A5%E5%8F%AF%E4%BB%A5%E6%8E%A8%E6%96%AD%E5%87%BA%E5%8F%82%E6%95%B0%E7%B1%BB%E5%9E%8B%E5%92%8C%E8%BF%94%E5%9B%9E%E7%B1%BB%E5%9E%8B%EF%BC%9B%E7%AC%AC%E4%BA%8C%E6%9D%A1%E5%88%B6%E5%AE%9A%E4%BA%86%E5%8F%82%E6%95%B0%E7%B1%BB%E5%9E%8B%E5%B9%B6%E6%8E%A8%E6%96%AD%E8%BF%94%E5%9B%9E%E7%B1%BB%E5%9E%8B%EF%BC%9B%E7%AC%AC%E4%B8%89%E6%9D%A1%E6%8C%87%E5%AE%9A%E4%BA%86%E8%BF%94%E5%9B%9E%E7%B1%BB%E5%9E%8B%EF%BC%8C%E6%8E%A8%E6%96%AD%E5%87%BA%E5%8F%82%E6%95%B0%E7%B1%BB%E5%9E%8B%E3%80%82%3C/p%3E%3Cp%3E%E6%B3%A8%E6%84%8F%E5%8F%82%E6%95%B013%E8%A2%AB%E4%BC%A0%E9%80%92%E5%88%B0%E9%97%AD%E5%8C%85%E6%80%BB%E6%98%AF%E7%94%A8%E5%B0%8F%E6%8B%AC%E5%8F%B7%E6%8B%AC%E4%BD%8F%E3%80%82%E4%B8%BA%E4%BA%86%E9%81%BF%E5%85%8D%E8%A1%A8%E8%BE%BE%E5%BC%8F%3Ccode%3E(13)%3C/code%3E%E4%B8%8E%E5%89%8D%E9%9D%A2%E9%83%A8%E5%88%86%E7%9A%84%E9%97%AD%E5%8C%85%E5%87%BA%E7%8E%B0%E8%BF%B7%E6%83%91%EF%BC%8C%E6%9F%90%E4%BA%9B%E6%83%85%E5%86%B5%E4%B8%8B%E9%97%AD%E5%8C%85%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%B9%9F%E9%9C%80%E8%A6%81%E7%94%A8%E5%B0%8F%E6%8B%AC%E5%8F%B7%E6%8B%AC%E8%B5%B7%E6%9D%A5%E3%80%82%E4%B8%8E%E6%AD%A4%EF%BC%8C%E5%9C%A8%E6%9C%80%E5%90%8E%E4%B8%80%E6%9D%A1%E8%AF%AD%E5%8F%A5%EF%BC%8C%E9%97%AD%E5%8C%85%E7%9A%84%E8%AF%AD%E5%8F%A5%E4%BD%93%EF%BC%8C%E8%A6%81%E4%B8%8E%E8%BF%94%E5%9B%9E%E7%B1%BB%E5%9E%8B%E8%A7%84%E8%8C%83%E5%8C%BA%E5%88%AB%E5%BC%80%E6%9D%A5%EF%BC%8C%E9%9C%80%E8%A6%81%E7%94%A8%E8%8A%B1%E6%8B%AC%E5%8F%B7(braces)%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E9%97%AD%E5%8C%85%E5%8C%85%E5%90%AB%E5%87%A0%E4%B8%AA%E8%AF%AD%E5%8F%A5%E6%97%B6%EF%BC%8C%E8%8A%B1%E6%8B%AC%E5%8F%B7%E6%98%AF%E5%BF%85%E9%A1%BB%E7%9A%84%EF%BC%8C%E4%BE%8B%E5%A6%82%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E(|v:%20&amp;amp;%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E&amp;gt;|%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Esum%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E0%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Esum%20+=%20v[i];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Esum%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;)(&amp;amp;%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22number%22%3E11%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E,%20%3Cspan%20class=%22number%22%3E34%3C/span%3E]));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E9%87%8C%E5%B0%86%E6%89%93%E5%8D%B0%E8%BE%93%E5%87%BA%E2%80%9C67%E2%80%9D%EF%BC%8C%E5%8D%B3%E5%90%91%E9%87%8F%E5%85%83%E7%B4%A0%E6%B1%82%E5%92%8C%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E9%87%8C%E9%9C%80%E8%A6%81%E5%88%B6%E5%AE%9A%E5%8F%82%E6%95%B0%E7%9A%84%E7%B1%BB%E5%9E%8B%EF%BC%8C%E4%B8%8D%E7%84%B6%E7%BC%96%E8%AF%91%E5%99%A8%E6%97%A0%E6%B3%95%E6%8E%A8%E6%96%AD%EF%BC%8C%E4%BB%A5%E5%8F%8A%E6%8A%9B%E5%87%BA%E4%B8%80%E4%B8%AA%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF%E2%80%9C%3Ccode%3Ethe%20type%20of%20this%20value%20must%20be%20known%20in%20this%20context%3C/code%3E%E2%80%9D%EF%BC%8C%E5%AE%9A%E4%B9%89%E5%9C%A8%E8%A1%A8%E8%BE%BE%E5%BC%8F%3Ccode%3Ev.len()%3C/code%3E%E4%B8%8A%E3%80%82%3C/p%3E" type="image"/>
    
    
    <category term="learning" scheme="https://galudisu.info/categories/learning/"/>
    
    
    <category term="rust" scheme="https://galudisu.info/tags/rust/"/>
    
  </entry>
  
  <entry>
    <title>rust基础入门[12] - Data Implementation</title>
    <link href="https://galudisu.info/2023/01/12/rust/beginning/chapter12_Data%20Implementation/"/>
    <id>https://galudisu.info/2023/01/12/rust/beginning/chapter12_Data%20Implementation/</id>
    <published>2023-01-12T07:50:46.000Z</published>
    <updated>2025-04-27T11:59:08.282Z</updated>
    
    <content type="html"><![CDATA[<p>本章覆盖有：</p><ul><li>如何知道栈空间分配的各种类型的对象的字节数</li><li>如何在外部模块缩减声明函数访问的路径</li><li>原生对象类型存储了多少个bit</li><li>什么时候一个对象会被存储在内存</li><li>为什么填充(padding)会增加某些对象的大小</li><li>Vector是如何实现的</li></ul><span id="more"></span><h2 id="Discovering-the-Size-of-Objects"><a class="header-anchor" href="#Discovering-the-Size-of-Objects">¶</a>Discovering the Size of Objects</h2><p>给定一个源文件，以及源代码按照Rust语言规范，Rust编译器任意将其生成目标机器码。</p><p>因此，对于一个变量，它没有定义会使用多少bit内存，也没有定义在内存哪个位置分配。编译器甚至将变量从内存中移除，只要它不再被使用，或被驻留在寄存器中。</p><p>下面看一个典型的Rust程序长度的实现。</p><p>Rust有一些可用特性：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, std::mem::size_of::&lt;<span class="type">i32</span>&gt;());</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, std::mem::<span class="title function_ invoke__">size_of_val</span>(&amp;<span class="number">12</span>));</span><br></pre></td></tr></table></figure><p>结果将输出： “4 4”。</p><p>第一条语句，编译器引入了标准库模块<code>std</code>，然后跟着子模块<code>mem</code>(“memory”的缩写)，接着使用它的泛型函数<code>size_of</code>。</p><p>该泛型函数接受了类型参数<code>i32</code>，然后编译成对应的具体函数。该函数返回类型占用的字节数(也说“十进制的bit”)。该函数在行内调用，因此生成的代码仅是一个常数。实际上，一个32位占4个字节。</p><p>第二条语句，编译器进入同样的类库模块，以及访问了泛型函数<code>size_of_val</code>(顾名思义，值的大小)。这里类型参数由具体调用的参数推断确定。</p><p>当具体的生成的函数<code>size_of_val</code>被调用，会传递一个不可变的对象引用参数。然后返回对象字节大小。</p><h2 id="The-use-Directive"><a class="header-anchor" href="#The-use-Directive">¶</a>The <code>use</code> Directive</h2><p>在一段代码中如果要多处指定标准库函数，可以方便地使用<code>use</code>指令导入到当前范围。</p><p>上一段例子可以复写为：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::mem;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, mem::size_of::&lt;<span class="type">i32</span>&gt;());</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, mem::<span class="title function_ invoke__">size_of_val</span>(&amp;<span class="number">12</span>));</span><br></pre></td></tr></table></figure><p>或写成这样：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::mem::size_of;</span><br><span class="line"><span class="keyword">use</span> std::mem::size_of_val;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, size_of::&lt;<span class="type">i32</span>&gt;());</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, <span class="title function_ invoke__">size_of_val</span>(&amp;<span class="number">12</span>));</span><br></pre></td></tr></table></figure><p>Rust关键字<code>use</code>的用法和C++的<code>using</code>关键字类似。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::mem::*;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, size_of::&lt;<span class="type">i32</span>&gt;());</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, <span class="title function_ invoke__">size_of_val</span>(&amp;<span class="number">12</span>));</span><br></pre></td></tr></table></figure><p>星号这里作为一个统配导入处理。</p><h2 id="The-Sizes-of-the-Primitive-Types"><a class="header-anchor" href="#The-Sizes-of-the-Primitive-Types">¶</a>The Sizes of the Primitive Types</h2><p>现在可以想象下原生类型对象的大小：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::mem::*;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125;&quot;</span>,</span><br><span class="line">size_of::&lt;<span class="type">i8</span>&gt;(),</span><br><span class="line">size_of::&lt;<span class="type">u8</span>&gt;(),</span><br><span class="line">size_of::&lt;<span class="type">i16</span>&gt;(),</span><br><span class="line">size_of::&lt;<span class="type">u16</span>&gt;(),</span><br><span class="line">size_of::&lt;<span class="type">i32</span>&gt;(),</span><br><span class="line">size_of::&lt;<span class="type">u32</span>&gt;(),</span><br><span class="line">size_of::&lt;<span class="type">i64</span>&gt;(),</span><br><span class="line">size_of::&lt;<span class="type">u64</span>&gt;(),</span><br><span class="line">size_of::&lt;<span class="type">f32</span>&gt;(),</span><br><span class="line">size_of::&lt;<span class="type">f64</span>&gt;(),</span><br><span class="line">size_of::&lt;<span class="type">bool</span>&gt;(),</span><br><span class="line">size_of::&lt;<span class="type">char</span>&gt;());</span><br></pre></td></tr></table></figure><p>在任何计算机，会打印输出：<code>1 1 2 2 4 4 8 8 4 8 1 4</code>。</p><p>某些其它类型数据的大小，由编译器所在的硬件设备平台所决定：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::mem::*;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125;&quot;</span>,</span><br><span class="line">size_of::&lt;<span class="type">isize</span>&gt;(),</span><br><span class="line">size_of::&lt;<span class="type">usize</span>&gt;(),</span><br><span class="line">size_of::&lt;&amp;<span class="type">i8</span>&gt;(),</span><br><span class="line">size_of::&lt;&amp;<span class="type">u32</span>&gt;());</span><br></pre></td></tr></table></figure><p>在一个64位系统，打印输出：<code>8 8 8 8</code>，而在32位系统，打印：<code>4 4 4 4</code>。</p><p>后两个打印的是一个引用值。独立于所引用的对象，一个引用(又名“指针”)拥有内存地址大小。</p><h2 id="The-Representation-of-Primitive-Types"><a class="header-anchor" href="#The-Representation-of-Primitive-Types">¶</a>The Representation of Primitive Types</h2><p>Rust不鼓励访问内部对象的表述，同时也难于做到。但有一个技巧可以做到这点。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">as_bytes</span>&lt;T&gt;(o: &amp;T) <span class="punctuation">-&gt;</span> &amp;[<span class="type">u8</span>] &#123;</span><br><span class="line"><span class="keyword">unsafe</span> &#123;</span><br><span class="line">std::slice::<span class="title function_ invoke__">from_raw_parts</span>(</span><br><span class="line">o <span class="keyword">as</span> *<span class="keyword">const</span> _ <span class="keyword">as</span> * <span class="keyword">const</span> <span class="type">u8</span>,</span><br><span class="line">std::mem::size_of::&lt;T&gt;())</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, <span class="title function_ invoke__">as_bytes</span>(&amp;<span class="number">1i8</span>));</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, <span class="title function_ invoke__">as_bytes</span>(&amp;<span class="number">2i16</span>));</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, <span class="title function_ invoke__">as_bytes</span>(&amp;<span class="number">3i32</span>));</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, <span class="title function_ invoke__">as_bytes</span>(&amp;(<span class="number">4i64</span> + <span class="number">5</span> * <span class="number">256</span> + <span class="number">6</span> * <span class="number">256</span> * <span class="number">256</span>)));</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, <span class="title function_ invoke__">as_bytes</span>(&amp;<span class="string">&#x27;A&#x27;</span>));</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, <span class="title function_ invoke__">as_bytes</span>(&amp;<span class="literal">true</span>));</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, <span class="title function_ invoke__">as_bytes</span>(&amp;&amp;<span class="number">1i8</span>));</span><br></pre></td></tr></table></figure><p>在x86_64架构系统中，可能会打印：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[1]</span><br><span class="line">[2, 0]</span><br><span class="line">[3, 0, 0, 0]</span><br><span class="line">[4, 5, 6, 0, 0, 0, 0, 0]</span><br><span class="line">[65, 0, 0, 0]</span><br><span class="line">[1]</span><br><span class="line">[129, 165, 54, 102, 23, 86, 0, 0]</span><br></pre></td></tr></table></figure><p>泛型函数<code>as_bytes</code>使用了某些我们没见过的Rust结构，这里不解析，目前的知识还不足以理解它的用法。简单来说，它接受一个任意类型的参数引用，并返回该所引用的对象的字节序列表述。打印任意对象的字节序列后发现，这些对象序列被存储在内存中。</p><p>首先，一个<code>i8</code>的值1存储一个字节，在其他任何硬件架构也是一样。</p><p>然后，一个<code>i16</code>的值2存储两个字节，第一个字节是2，第二个字节是0。除目前任何32位或64位处理器都一样，但仅限于“低位优先(little-endian)”硬件架构，会将多字节的数放在低位。相反，“大头优先(big-endian)”的存储顺序方式的硬件架构会打印<code>[0, 2]</code>。</p><p>类似地行为出现在接下来的打印行。</p><p>注意，一个<code>char</code>作为32位数字存储，包含Unicode码。<code>bool</code>作为单个字节存储，即1位<code>true</code>，0位<code>false</code>。</p><p>最后，最后一条语句打印一个<code>i8</code>数字的地址。在64位处理器，该地址包含8个字节。</p><h2 id="Location-of-Bytes-in-Memory"><a class="header-anchor" href="#Location-of-Bytes-in-Memory">¶</a>Location of Bytes in Memory</h2><p>你也可以发现任何对象的虚拟内存的位置，即它的地址：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">b1</span> = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">b2</span> = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">b3</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125; &#123;&#125;&quot;</span>,</span><br><span class="line">&amp;b1 <span class="keyword">as</span> *<span class="keyword">const</span> <span class="type">bool</span> <span class="keyword">as</span> <span class="type">usize</span>,</span><br><span class="line">&amp;b2 <span class="keyword">as</span> *<span class="keyword">const</span> <span class="type">bool</span> <span class="keyword">as</span> <span class="type">usize</span>,</span><br><span class="line">&amp;b3 <span class="keyword">as</span> *<span class="keyword">const</span> <span class="type">bool</span> <span class="keyword">as</span> <span class="type">usize</span>)</span><br></pre></td></tr></table></figure><p>在64位系统，将会输出三个巨大的数，像<code>140727116566237 140727116566238 140727116566239</code>。相反，在32位系统，输出三个小于5百万的数。</p><p>下面是这三个对象的地址表述：</p><table><thead><tr><th style="text-align:left">Absolute address</th><th style="text-align:left">Binary value</th><th style="text-align:left">Variable name</th><th style="text-align:right">Type</th></tr></thead><tbody><tr><td style="text-align:left"><code>140727116566237</code></td><td style="text-align:left"><code>0000_0000</code></td><td style="text-align:left"><code>b3</code></td><td style="text-align:right"><code>bool</code></td></tr><tr><td style="text-align:left"><code>140727116566238</code></td><td style="text-align:left"><code>0000_0001</code></td><td style="text-align:left"><code>b2</code></td><td style="text-align:right"><code>bool</code></td></tr><tr><td style="text-align:left"><code>140727116566239</code></td><td style="text-align:left"><code>0000_0001</code></td><td style="text-align:left"><code>b1</code></td><td style="text-align:right"><code>bool</code></td></tr></tbody></table><p>三个对象中每个对象仅占一个字节。最先打印的数是变量<code>b1</code>的地址；变量<code>b2</code>的地址；变量<code>b3</code>的地址。如其所示，这三个数是连续的，意味着这三个数被连续地分配在虚拟内存地址上。</p><p>你会发现三个地址按照降序排列，意味着对象的分配，以越来越低位的方式。这些对象分配在栈上，因此看到栈从低位增长。</p><p>第一个数包含<code>true</code>值，由1字节表示。它由一个7位全为0的以及1位为1的值表示。类似地，第二个值也一样。第三个值<code>false</code>，则由全为0的8位值表示。</p><p>几乎所有现代处理器要求基础数据要有特定的内存位置，因此Rust放置这些对象在内存，以方便实现处理器的访问。</p><p>典型地对齐规则是：“每个原生类型的对象，必须要有一个地址，该地址是它自身大小的倍数”。</p><p>因此，占一个字节的对象，可能会放置在任何地方，占两个字节的对象，仅可以放置在偶数位地址，占四个字节的对象，仅可以放置在以4为倍数的地址，以及占8个字节的对象，仅可以放置在以8位倍数的地址。</p><p>另外，大对象通常有一个16倍的地址。</p><p>因此，这种对齐规则会创建无用的空间，称之为“填充(padding)”。</p><h2 id="Sizes-of-Composite-Data-Types"><a class="header-anchor" href="#Sizes-of-Composite-Data-Types">¶</a>Sizes of Composite Data Types</h2><p>当有一个组合对象序列时，出现结构填充(padding)的效果：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> <span class="title class_">E1</span> &#123; E1a, E1b &#125;;</span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">E2</span> &#123; E2a, <span class="title function_ invoke__">E2b</span>(<span class="type">f64</span>) &#125;;</span><br><span class="line"><span class="keyword">use</span> std::mem::*;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125;&quot;</span>,</span><br><span class="line"><span class="title function_ invoke__">size_of_val</span>(&amp;[<span class="number">0i16</span>; <span class="number">80</span>]),</span><br><span class="line"><span class="title function_ invoke__">size_of_val</span>(&amp;(<span class="number">0i16</span>, <span class="number">0i64</span>)),</span><br><span class="line"><span class="title function_ invoke__">size_of_val</span>(&amp;[(<span class="number">0i16</span>, <span class="number">0i64</span>); <span class="number">100</span>]),</span><br><span class="line"><span class="title function_ invoke__">size_of_val</span>(&amp;E1::E1a),</span><br><span class="line"><span class="title function_ invoke__">size_of_val</span>(&amp;E2::E2a),</span><br><span class="line"><span class="title function_ invoke__">size_of_val</span>(&amp;<span class="built_in">vec!</span>[(<span class="number">0i16</span>, <span class="number">0i64</span>); <span class="number">100</span>]));</span><br></pre></td></tr></table></figure><p>结果打印输出：“<code>160 16 1600 1 16 24</code>”。</p><p>这意味着：</p><ul><li>一个80长度的16位数组占160字节，即是 <code>80 * 2</code>，这里没有出现浪费；</li><li>一个由16位和64位数组成的tuple占16个字节，如果两个数将占8个字节，则额外增加6个字节padding。</li><li>一个100长度的16位tuple占1600字节，数组之间不会有padding，但数组条目之间的padding会随数组长度增加；</li><li>一个不带数据的字段的enum，总是仅占一个字节；</li><li>一个带有8字节数据字段的enum，占16个字节，即使当前值没有数据，它有7字节的padding。</li><li>一个100长度的16位tuple的Vector，看起来占24字节，但由于当前测量方式遗漏了一部分。</li></ul><p>所以，接下来仅看Vector的情况。</p><p>存放于栈空间的数据，在编译期必须知道其大小，因此数组可以完全地分配在栈空间上，而对于固定大小的vector来说，仅将header放在栈空间，剩余的数据必须放在堆空间。</p><h2 id="Vector-Allocation"><a class="header-anchor" href="#Vector-Allocation">¶</a>Vector Allocation</h2><p>我们看到向量必须实现两种结构：header固定大小的栈分配，buffer变量长度的堆分配。</p><p>理论上有很多方式实现一个向量数据结构。</p><p>一种方式是在头中保留指向缓冲区的指针。</p><p>这种方式的缺点是，每次获取一个数组长度时，需要一个间接的方式。数组的长度经常在显式地或隐式地用到，所以最好的方式是将信息保留在header中。</p><p>一个幼稚的实现缓冲的方式是令其足够大。例如，如果是一个9个i32条目的向量，在堆中分配一个<code>9 * 4</code>字节的缓冲区。</p><p>当有新的条目<code>pushed</code>进来时，缓冲区的大小必须重新分配，以及堆的分配和回收是很耗费资源的。而且，还需要将旧缓冲区内容拷贝到新缓冲区。</p><p>如果一个空的向量，以1000次的<code>push</code>方法来构造成为一个1000条目的向量，将会有1000次的堆空间分配，999次的堆回收，以及<code>1000 * 999 / 2 == 499_500</code>次的条目拷贝。</p><p>为了证实这个糟糕的性能，可能会有一个大的缓冲区被分配，仅当该缓冲区空间不够触发再分配。</p><p>因此有必要跟踪分配的缓冲区的地址数目，以及该缓冲区被使用的数据。</p><p>分配的缓冲区的地址数目通常叫容量(<code>capacity</code>)，它也是访问这个数据的函数名。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">v</span> = <span class="built_in">vec!</span>[<span class="number">0</span>; <span class="number">0</span>];</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>, v.<span class="title function_ invoke__">len</span>(), v.<span class="title function_ invoke__">capacity</span>());</span><br><span class="line">v.<span class="title function_ invoke__">push</span>(<span class="number">11</span>);</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>, v.<span class="title function_ invoke__">len</span>(), v.<span class="title function_ invoke__">capacity</span>());</span><br><span class="line">v.<span class="title function_ invoke__">push</span>(<span class="number">22</span>);</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>, v.<span class="title function_ invoke__">len</span>(), v.<span class="title function_ invoke__">capacity</span>());</span><br><span class="line">v.<span class="title function_ invoke__">push</span>(<span class="number">33</span>);</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>, v.<span class="title function_ invoke__">len</span>(), v.<span class="title function_ invoke__">capacity</span>());</span><br><span class="line">v.<span class="title function_ invoke__">push</span>(<span class="number">44</span>);</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>, v.<span class="title function_ invoke__">len</span>(), v.<span class="title function_ invoke__">capacity</span>());</span><br><span class="line">v.<span class="title function_ invoke__">push</span>(<span class="number">55</span>);</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>, v.<span class="title function_ invoke__">len</span>(), v.<span class="title function_ invoke__">capacity</span>());</span><br></pre></td></tr></table></figure><p>结果将输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">0 0</span><br><span class="line">1 4</span><br><span class="line">2 4</span><br><span class="line">3 4</span><br><span class="line">4 4</span><br><span class="line">5 8</span><br></pre></td></tr></table></figure><p>当一个空向量被创建，它包含0个条目，所以没有分配任何堆缓冲区，所以它的容量是0。</p><p>当添加第一个记录时，向量对象被分配在一个缓冲区容量32位(16字节缓冲区)的堆空间，因此它的容量是4，由于它包含一条记录，因此它的长度是1。</p><p>当其它三个条目被添加到向量，不再需要分配内存，因为预分配的缓冲区已经足够大容纳。</p><p>但当第5条记录被添加到向量，需要再重新分配一个大的缓冲区。新的缓冲区的容量为8。</p><p>因此，<code>vec</code>对象存储了三个子对象在栈空间：一个是指向堆缓冲区的指针，它是一个内存地址；一个是缓冲区的容量(capacity)大小，它是一个<code>usize</code>；一个是vector的条目的长度，它是一个<code>usize</code>值，小于或等于容量(capacity)大小。</p><p>基于这个原因，任何vector的header在64位系统占<code>3 * 8 == 24</code>字节，在32位系统占<code>3 * 4 == 12</code>字节。</p><p>让我们看看，如果添加一千个条目到一个32位的vector会发生什么：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">v</span> = <span class="built_in">vec!</span>[<span class="number">0</span>; <span class="number">0</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">prev_capacity</span> = std::<span class="type">usize</span>::MAX;</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">0</span>..<span class="number">1_000</span> &#123;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">cap</span> = v.<span class="title function_ invoke__">capacity</span>();</span><br><span class="line"><span class="keyword">if</span> cap != prev_capacity &#123;</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125; &#123;&#125;&quot;</span>, i, v.<span class="title function_ invoke__">len</span>(), cap);</span><br><span class="line">prev_capacity = cap;</span><br><span class="line">&#125;</span><br><span class="line">v.<span class="title function_ invoke__">push</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可能的输出结果是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">0 0 0</span><br><span class="line">1 1 4</span><br><span class="line">5 5 8</span><br><span class="line">9 9 16</span><br><span class="line">17 17 32</span><br><span class="line">33 33 64</span><br><span class="line">65 65 128</span><br><span class="line">129 129 256</span><br><span class="line">257 257 512</span><br><span class="line">513 513 1024</span><br></pre></td></tr></table></figure><p>对于其它类型的vector，输出结果也一样。</p><p>变量<code>cap</code>存储了当前向量的容量；变量<code>prev_capacity</code>存储上一份的容量，它初始化了一个巨大的值。</p><p>对于每次迭代，在向vector添加记录之前，会检测容量是否改变。每次capacity的改变，都会打印当前容量和插入记录。</p><p>这里显示了容量的大小总是2的次方。这里发生了9次分配，8次再分配，以及<code>4 + 8 + 16 + 32 + 64 + 128 + 256 + 512 == 1020</code>次拷贝，所以真实的算法比开头描述的幼稚那个版本要高效得多。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本章覆盖有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如何知道栈空间分配的各种类型的对象的字节数&lt;/li&gt;
&lt;li&gt;如何在外部模块缩减声明函数访问的路径&lt;/li&gt;
&lt;li&gt;原生对象类型存储了多少个bit&lt;/li&gt;
&lt;li&gt;什么时候一个对象会被存储在内存&lt;/li&gt;
&lt;li&gt;为什么填充(padding)会增加某些对象的大小&lt;/li&gt;
&lt;li&gt;Vector是如何实现的&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    <content src="https://galudisu.info/%3Cp%3E%E6%9C%AC%E7%AB%A0%E8%A6%86%E7%9B%96%E6%9C%89%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E5%A6%82%E4%BD%95%E7%9F%A5%E9%81%93%E6%A0%88%E7%A9%BA%E9%97%B4%E5%88%86%E9%85%8D%E7%9A%84%E5%90%84%E7%A7%8D%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%AD%97%E8%8A%82%E6%95%B0%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E5%9C%A8%E5%A4%96%E9%83%A8%E6%A8%A1%E5%9D%97%E7%BC%A9%E5%87%8F%E5%A3%B0%E6%98%8E%E5%87%BD%E6%95%B0%E8%AE%BF%E9%97%AE%E7%9A%84%E8%B7%AF%E5%BE%84%3C/li%3E%3Cli%3E%E5%8E%9F%E7%94%9F%E5%AF%B9%E8%B1%A1%E7%B1%BB%E5%9E%8B%E5%AD%98%E5%82%A8%E4%BA%86%E5%A4%9A%E5%B0%91%E4%B8%AAbit%3C/li%3E%3Cli%3E%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E4%BC%9A%E8%A2%AB%E5%AD%98%E5%82%A8%E5%9C%A8%E5%86%85%E5%AD%98%3C/li%3E%3Cli%3E%E4%B8%BA%E4%BB%80%E4%B9%88%E5%A1%AB%E5%85%85(padding)%E4%BC%9A%E5%A2%9E%E5%8A%A0%E6%9F%90%E4%BA%9B%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%A4%A7%E5%B0%8F%3C/li%3E%3Cli%3EVector%E6%98%AF%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%9A%84%3C/li%3E%3C/ul%3E%3Cspan%20id=%22more%22%3E%3C/span%3E%3Ch2%20id=%22Discovering-the-Size-of-Objects%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Discovering-the-Size-of-Objects%22%3E%C2%B6%3C/a%3EDiscovering%20the%20Size%20of%20Objects%3C/h2%3E%3Cp%3E%E7%BB%99%E5%AE%9A%E4%B8%80%E4%B8%AA%E6%BA%90%E6%96%87%E4%BB%B6%EF%BC%8C%E4%BB%A5%E5%8F%8A%E6%BA%90%E4%BB%A3%E7%A0%81%E6%8C%89%E7%85%A7Rust%E8%AF%AD%E8%A8%80%E8%A7%84%E8%8C%83%EF%BC%8CRust%E7%BC%96%E8%AF%91%E5%99%A8%E4%BB%BB%E6%84%8F%E5%B0%86%E5%85%B6%E7%94%9F%E6%88%90%E7%9B%AE%E6%A0%87%E6%9C%BA%E5%99%A8%E7%A0%81%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%AF%B9%E4%BA%8E%E4%B8%80%E4%B8%AA%E5%8F%98%E9%87%8F%EF%BC%8C%E5%AE%83%E6%B2%A1%E6%9C%89%E5%AE%9A%E4%B9%89%E4%BC%9A%E4%BD%BF%E7%94%A8%E5%A4%9A%E5%B0%91bit%E5%86%85%E5%AD%98%EF%BC%8C%E4%B9%9F%E6%B2%A1%E6%9C%89%E5%AE%9A%E4%B9%89%E5%9C%A8%E5%86%85%E5%AD%98%E5%93%AA%E4%B8%AA%E4%BD%8D%E7%BD%AE%E5%88%86%E9%85%8D%E3%80%82%E7%BC%96%E8%AF%91%E5%99%A8%E7%94%9A%E8%87%B3%E5%B0%86%E5%8F%98%E9%87%8F%E4%BB%8E%E5%86%85%E5%AD%98%E4%B8%AD%E7%A7%BB%E9%99%A4%EF%BC%8C%E5%8F%AA%E8%A6%81%E5%AE%83%E4%B8%8D%E5%86%8D%E8%A2%AB%E4%BD%BF%E7%94%A8%EF%BC%8C%E6%88%96%E8%A2%AB%E9%A9%BB%E7%95%99%E5%9C%A8%E5%AF%84%E5%AD%98%E5%99%A8%E4%B8%AD%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E7%9C%8B%E4%B8%80%E4%B8%AA%E5%85%B8%E5%9E%8B%E7%9A%84Rust%E7%A8%8B%E5%BA%8F%E9%95%BF%E5%BA%A6%E7%9A%84%E5%AE%9E%E7%8E%B0%E3%80%82%3C/p%3E%3Cp%3ERust%E6%9C%89%E4%B8%80%E4%BA%9B%E5%8F%AF%E7%94%A8%E7%89%B9%E6%80%A7%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20std::mem::size_of::&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E&amp;gt;());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20std::mem::%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;%3Cspan%20class=%22number%22%3E12%3C/span%3E));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E8%BE%93%E5%87%BA%EF%BC%9A%20%E2%80%9C4%204%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%B8%80%E6%9D%A1%E8%AF%AD%E5%8F%A5%EF%BC%8C%E7%BC%96%E8%AF%91%E5%99%A8%E5%BC%95%E5%85%A5%E4%BA%86%E6%A0%87%E5%87%86%E5%BA%93%E6%A8%A1%E5%9D%97%3Ccode%3Estd%3C/code%3E%EF%BC%8C%E7%84%B6%E5%90%8E%E8%B7%9F%E7%9D%80%E5%AD%90%E6%A8%A1%E5%9D%97%3Ccode%3Emem%3C/code%3E(%E2%80%9Cmemory%E2%80%9D%E7%9A%84%E7%BC%A9%E5%86%99)%EF%BC%8C%E6%8E%A5%E7%9D%80%E4%BD%BF%E7%94%A8%E5%AE%83%E7%9A%84%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%3Ccode%3Esize_of%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E8%AF%A5%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%E6%8E%A5%E5%8F%97%E4%BA%86%E7%B1%BB%E5%9E%8B%E5%8F%82%E6%95%B0%3Ccode%3Ei32%3C/code%3E%EF%BC%8C%E7%84%B6%E5%90%8E%E7%BC%96%E8%AF%91%E6%88%90%E5%AF%B9%E5%BA%94%E7%9A%84%E5%85%B7%E4%BD%93%E5%87%BD%E6%95%B0%E3%80%82%E8%AF%A5%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E7%B1%BB%E5%9E%8B%E5%8D%A0%E7%94%A8%E7%9A%84%E5%AD%97%E8%8A%82%E6%95%B0(%E4%B9%9F%E8%AF%B4%E2%80%9C%E5%8D%81%E8%BF%9B%E5%88%B6%E7%9A%84bit%E2%80%9D)%E3%80%82%E8%AF%A5%E5%87%BD%E6%95%B0%E5%9C%A8%E8%A1%8C%E5%86%85%E8%B0%83%E7%94%A8%EF%BC%8C%E5%9B%A0%E6%AD%A4%E7%94%9F%E6%88%90%E7%9A%84%E4%BB%A3%E7%A0%81%E4%BB%85%E6%98%AF%E4%B8%80%E4%B8%AA%E5%B8%B8%E6%95%B0%E3%80%82%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E4%B8%80%E4%B8%AA32%E4%BD%8D%E5%8D%A04%E4%B8%AA%E5%AD%97%E8%8A%82%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%BA%8C%E6%9D%A1%E8%AF%AD%E5%8F%A5%EF%BC%8C%E7%BC%96%E8%AF%91%E5%99%A8%E8%BF%9B%E5%85%A5%E5%90%8C%E6%A0%B7%E7%9A%84%E7%B1%BB%E5%BA%93%E6%A8%A1%E5%9D%97%EF%BC%8C%E4%BB%A5%E5%8F%8A%E8%AE%BF%E9%97%AE%E4%BA%86%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%3Ccode%3Esize_of_val%3C/code%3E(%E9%A1%BE%E5%90%8D%E6%80%9D%E4%B9%89%EF%BC%8C%E5%80%BC%E7%9A%84%E5%A4%A7%E5%B0%8F)%E3%80%82%E8%BF%99%E9%87%8C%E7%B1%BB%E5%9E%8B%E5%8F%82%E6%95%B0%E7%94%B1%E5%85%B7%E4%BD%93%E8%B0%83%E7%94%A8%E7%9A%84%E5%8F%82%E6%95%B0%E6%8E%A8%E6%96%AD%E7%A1%AE%E5%AE%9A%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E5%85%B7%E4%BD%93%E7%9A%84%E7%94%9F%E6%88%90%E7%9A%84%E5%87%BD%E6%95%B0%3Ccode%3Esize_of_val%3C/code%3E%E8%A2%AB%E8%B0%83%E7%94%A8%EF%BC%8C%E4%BC%9A%E4%BC%A0%E9%80%92%E4%B8%80%E4%B8%AA%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%BC%95%E7%94%A8%E5%8F%82%E6%95%B0%E3%80%82%E7%84%B6%E5%90%8E%E8%BF%94%E5%9B%9E%E5%AF%B9%E8%B1%A1%E5%AD%97%E8%8A%82%E5%A4%A7%E5%B0%8F%E3%80%82%3C/p%3E%3Ch2%20id=%22The-use-Directive%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#The-use-Directive%22%3E%C2%B6%3C/a%3EThe%20%3Ccode%3Euse%3C/code%3E%20Directive%3C/h2%3E%3Cp%3E%E5%9C%A8%E4%B8%80%E6%AE%B5%E4%BB%A3%E7%A0%81%E4%B8%AD%E5%A6%82%E6%9E%9C%E8%A6%81%E5%A4%9A%E5%A4%84%E6%8C%87%E5%AE%9A%E6%A0%87%E5%87%86%E5%BA%93%E5%87%BD%E6%95%B0%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%96%B9%E4%BE%BF%E5%9C%B0%E4%BD%BF%E7%94%A8%3Ccode%3Euse%3C/code%3E%E6%8C%87%E4%BB%A4%E5%AF%BC%E5%85%A5%E5%88%B0%E5%BD%93%E5%89%8D%E8%8C%83%E5%9B%B4%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8A%E4%B8%80%E6%AE%B5%E4%BE%8B%E5%AD%90%E5%8F%AF%E4%BB%A5%E5%A4%8D%E5%86%99%E4%B8%BA%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Euse%3C/span%3E%20std::mem;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20mem::size_of::&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E&amp;gt;());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20mem::%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;%3Cspan%20class=%22number%22%3E12%3C/span%3E));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%88%96%E5%86%99%E6%88%90%E8%BF%99%E6%A0%B7%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Euse%3C/span%3E%20std::mem::size_of;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Euse%3C/span%3E%20std::mem::size_of_val;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20size_of::&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E&amp;gt;());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;%3Cspan%20class=%22number%22%3E12%3C/span%3E));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3ERust%E5%85%B3%E9%94%AE%E5%AD%97%3Ccode%3Euse%3C/code%3E%E7%9A%84%E7%94%A8%E6%B3%95%E5%92%8CC++%E7%9A%84%3Ccode%3Eusing%3C/code%3E%E5%85%B3%E9%94%AE%E5%AD%97%E7%B1%BB%E4%BC%BC%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Euse%3C/span%3E%20std::mem::*;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20size_of::&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E&amp;gt;());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;%3Cspan%20class=%22number%22%3E12%3C/span%3E));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%98%9F%E5%8F%B7%E8%BF%99%E9%87%8C%E4%BD%9C%E4%B8%BA%E4%B8%80%E4%B8%AA%E7%BB%9F%E9%85%8D%E5%AF%BC%E5%85%A5%E5%A4%84%E7%90%86%E3%80%82%3C/p%3E%3Ch2%20id=%22The-Sizes-of-the-Primitive-Types%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#The-Sizes-of-the-Primitive-Types%22%3E%C2%B6%3C/a%3EThe%20Sizes%20of%20the%20Primitive%20Types%3C/h2%3E%3Cp%3E%E7%8E%B0%E5%9C%A8%E5%8F%AF%E4%BB%A5%E6%83%B3%E8%B1%A1%E4%B8%8B%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%9E%8B%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%A4%A7%E5%B0%8F%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Euse%3C/span%3E%20std::mem::*;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Esize_of::&amp;lt;%3Cspan%20class=%22type%22%3Ei8%3C/span%3E&amp;gt;(),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Esize_of::&amp;lt;%3Cspan%20class=%22type%22%3Eu8%3C/span%3E&amp;gt;(),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Esize_of::&amp;lt;%3Cspan%20class=%22type%22%3Ei16%3C/span%3E&amp;gt;(),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Esize_of::&amp;lt;%3Cspan%20class=%22type%22%3Eu16%3C/span%3E&amp;gt;(),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Esize_of::&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E&amp;gt;(),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Esize_of::&amp;lt;%3Cspan%20class=%22type%22%3Eu32%3C/span%3E&amp;gt;(),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Esize_of::&amp;lt;%3Cspan%20class=%22type%22%3Ei64%3C/span%3E&amp;gt;(),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Esize_of::&amp;lt;%3Cspan%20class=%22type%22%3Eu64%3C/span%3E&amp;gt;(),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Esize_of::&amp;lt;%3Cspan%20class=%22type%22%3Ef32%3C/span%3E&amp;gt;(),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Esize_of::&amp;lt;%3Cspan%20class=%22type%22%3Ef64%3C/span%3E&amp;gt;(),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Esize_of::&amp;lt;%3Cspan%20class=%22type%22%3Ebool%3C/span%3E&amp;gt;(),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Esize_of::&amp;lt;%3Cspan%20class=%22type%22%3Echar%3C/span%3E&amp;gt;());%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%9C%A8%E4%BB%BB%E4%BD%95%E8%AE%A1%E7%AE%97%E6%9C%BA%EF%BC%8C%E4%BC%9A%E6%89%93%E5%8D%B0%E8%BE%93%E5%87%BA%EF%BC%9A%3Ccode%3E1%201%202%202%204%204%208%208%204%208%201%204%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E6%9F%90%E4%BA%9B%E5%85%B6%E5%AE%83%E7%B1%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E7%9A%84%E5%A4%A7%E5%B0%8F%EF%BC%8C%E7%94%B1%E7%BC%96%E8%AF%91%E5%99%A8%E6%89%80%E5%9C%A8%E7%9A%84%E7%A1%AC%E4%BB%B6%E8%AE%BE%E5%A4%87%E5%B9%B3%E5%8F%B0%E6%89%80%E5%86%B3%E5%AE%9A%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Euse%3C/span%3E%20std::mem::*;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Esize_of::&amp;lt;%3Cspan%20class=%22type%22%3Eisize%3C/span%3E&amp;gt;(),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Esize_of::&amp;lt;%3Cspan%20class=%22type%22%3Eusize%3C/span%3E&amp;gt;(),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Esize_of::&amp;lt;&amp;amp;%3Cspan%20class=%22type%22%3Ei8%3C/span%3E&amp;gt;(),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Esize_of::&amp;lt;&amp;amp;%3Cspan%20class=%22type%22%3Eu32%3C/span%3E&amp;gt;());%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%9C%A8%E4%B8%80%E4%B8%AA64%E4%BD%8D%E7%B3%BB%E7%BB%9F%EF%BC%8C%E6%89%93%E5%8D%B0%E8%BE%93%E5%87%BA%EF%BC%9A%3Ccode%3E8%208%208%208%3C/code%3E%EF%BC%8C%E8%80%8C%E5%9C%A832%E4%BD%8D%E7%B3%BB%E7%BB%9F%EF%BC%8C%E6%89%93%E5%8D%B0%EF%BC%9A%3Ccode%3E4%204%204%204%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E5%90%8E%E4%B8%A4%E4%B8%AA%E6%89%93%E5%8D%B0%E7%9A%84%E6%98%AF%E4%B8%80%E4%B8%AA%E5%BC%95%E7%94%A8%E5%80%BC%E3%80%82%E7%8B%AC%E7%AB%8B%E4%BA%8E%E6%89%80%E5%BC%95%E7%94%A8%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E4%B8%80%E4%B8%AA%E5%BC%95%E7%94%A8(%E5%8F%88%E5%90%8D%E2%80%9C%E6%8C%87%E9%92%88%E2%80%9D)%E6%8B%A5%E6%9C%89%E5%86%85%E5%AD%98%E5%9C%B0%E5%9D%80%E5%A4%A7%E5%B0%8F%E3%80%82%3C/p%3E%3Ch2%20id=%22The-Representation-of-Primitive-Types%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#The-Representation-of-Primitive-Types%22%3E%C2%B6%3C/a%3EThe%20Representation%20of%20Primitive%20Types%3C/h2%3E%3Cp%3ERust%E4%B8%8D%E9%BC%93%E5%8A%B1%E8%AE%BF%E9%97%AE%E5%86%85%E9%83%A8%E5%AF%B9%E8%B1%A1%E7%9A%84%E8%A1%A8%E8%BF%B0%EF%BC%8C%E5%90%8C%E6%97%B6%E4%B9%9F%E9%9A%BE%E4%BA%8E%E5%81%9A%E5%88%B0%E3%80%82%E4%BD%86%E6%9C%89%E4%B8%80%E4%B8%AA%E6%8A%80%E5%B7%A7%E5%8F%AF%E4%BB%A5%E5%81%9A%E5%88%B0%E8%BF%99%E7%82%B9%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eas_bytes%3C/span%3E&amp;lt;T&amp;gt;(o:%20&amp;amp;T)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20&amp;amp;[%3Cspan%20class=%22type%22%3Eu8%3C/span%3E]%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eunsafe%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Estd::slice::%3Cspan%20class=%22title%20function_%20invoke__%22%3Efrom_raw_parts%3C/span%3E(%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eo%20%3Cspan%20class=%22keyword%22%3Eas%3C/span%3E%20*%3Cspan%20class=%22keyword%22%3Econst%3C/span%3E%20_%20%3Cspan%20class=%22keyword%22%3Eas%3C/span%3E%20*%20%3Cspan%20class=%22keyword%22%3Econst%3C/span%3E%20%3Cspan%20class=%22type%22%3Eu8%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Estd::mem::size_of::&amp;lt;T&amp;gt;())%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eas_bytes%3C/span%3E(&amp;amp;%3Cspan%20class=%22number%22%3E1i8%3C/span%3E));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eas_bytes%3C/span%3E(&amp;amp;%3Cspan%20class=%22number%22%3E2i16%3C/span%3E));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eas_bytes%3C/span%3E(&amp;amp;%3Cspan%20class=%22number%22%3E3i32%3C/span%3E));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eas_bytes%3C/span%3E(&amp;amp;(%3Cspan%20class=%22number%22%3E4i64%3C/span%3E%20+%20%3Cspan%20class=%22number%22%3E5%3C/span%3E%20*%20%3Cspan%20class=%22number%22%3E256%3C/span%3E%20+%20%3Cspan%20class=%22number%22%3E6%3C/span%3E%20*%20%3Cspan%20class=%22number%22%3E256%3C/span%3E%20*%20%3Cspan%20class=%22number%22%3E256%3C/span%3E)));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eas_bytes%3C/span%3E(&amp;amp;%3Cspan%20class=%22string%22%3E&amp;#x27;A&amp;#x27;%3C/span%3E));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eas_bytes%3C/span%3E(&amp;amp;%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E));%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eas_bytes%3C/span%3E(&amp;amp;&amp;amp;%3Cspan%20class=%22number%22%3E1i8%3C/span%3E));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%9C%A8x86_64%E6%9E%B6%E6%9E%84%E7%B3%BB%E7%BB%9F%E4%B8%AD%EF%BC%8C%E5%8F%AF%E8%83%BD%E4%BC%9A%E6%89%93%E5%8D%B0%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20plaintext%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E[1]%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E[2,%200]%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E[3,%200,%200,%200]%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E[4,%205,%206,%200,%200,%200,%200,%200]%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E[65,%200,%200,%200]%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E[1]%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E[129,%20165,%2054,%20102,%2023,%2086,%200,%200]%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%3Ccode%3Eas_bytes%3C/code%3E%E4%BD%BF%E7%94%A8%E4%BA%86%E6%9F%90%E4%BA%9B%E6%88%91%E4%BB%AC%E6%B2%A1%E8%A7%81%E8%BF%87%E7%9A%84Rust%E7%BB%93%E6%9E%84%EF%BC%8C%E8%BF%99%E9%87%8C%E4%B8%8D%E8%A7%A3%E6%9E%90%EF%BC%8C%E7%9B%AE%E5%89%8D%E7%9A%84%E7%9F%A5%E8%AF%86%E8%BF%98%E4%B8%8D%E8%B6%B3%E4%BB%A5%E7%90%86%E8%A7%A3%E5%AE%83%E7%9A%84%E7%94%A8%E6%B3%95%E3%80%82%E7%AE%80%E5%8D%95%E6%9D%A5%E8%AF%B4%EF%BC%8C%E5%AE%83%E6%8E%A5%E5%8F%97%E4%B8%80%E4%B8%AA%E4%BB%BB%E6%84%8F%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%8F%82%E6%95%B0%E5%BC%95%E7%94%A8%EF%BC%8C%E5%B9%B6%E8%BF%94%E5%9B%9E%E8%AF%A5%E6%89%80%E5%BC%95%E7%94%A8%E7%9A%84%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%AD%97%E8%8A%82%E5%BA%8F%E5%88%97%E8%A1%A8%E8%BF%B0%E3%80%82%E6%89%93%E5%8D%B0%E4%BB%BB%E6%84%8F%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%AD%97%E8%8A%82%E5%BA%8F%E5%88%97%E5%90%8E%E5%8F%91%E7%8E%B0%EF%BC%8C%E8%BF%99%E4%BA%9B%E5%AF%B9%E8%B1%A1%E5%BA%8F%E5%88%97%E8%A2%AB%E5%AD%98%E5%82%A8%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E3%80%82%3C/p%3E%3Cp%3E%E9%A6%96%E5%85%88%EF%BC%8C%E4%B8%80%E4%B8%AA%3Ccode%3Ei8%3C/code%3E%E7%9A%84%E5%80%BC1%E5%AD%98%E5%82%A8%E4%B8%80%E4%B8%AA%E5%AD%97%E8%8A%82%EF%BC%8C%E5%9C%A8%E5%85%B6%E4%BB%96%E4%BB%BB%E4%BD%95%E7%A1%AC%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B9%9F%E6%98%AF%E4%B8%80%E6%A0%B7%E3%80%82%3C/p%3E%3Cp%3E%E7%84%B6%E5%90%8E%EF%BC%8C%E4%B8%80%E4%B8%AA%3Ccode%3Ei16%3C/code%3E%E7%9A%84%E5%80%BC2%E5%AD%98%E5%82%A8%E4%B8%A4%E4%B8%AA%E5%AD%97%E8%8A%82%EF%BC%8C%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%AD%97%E8%8A%82%E6%98%AF2%EF%BC%8C%E7%AC%AC%E4%BA%8C%E4%B8%AA%E5%AD%97%E8%8A%82%E6%98%AF0%E3%80%82%E9%99%A4%E7%9B%AE%E5%89%8D%E4%BB%BB%E4%BD%9532%E4%BD%8D%E6%88%9664%E4%BD%8D%E5%A4%84%E7%90%86%E5%99%A8%E9%83%BD%E4%B8%80%E6%A0%B7%EF%BC%8C%E4%BD%86%E4%BB%85%E9%99%90%E4%BA%8E%E2%80%9C%E4%BD%8E%E4%BD%8D%E4%BC%98%E5%85%88(little-endian)%E2%80%9D%E7%A1%AC%E4%BB%B6%E6%9E%B6%E6%9E%84%EF%BC%8C%E4%BC%9A%E5%B0%86%E5%A4%9A%E5%AD%97%E8%8A%82%E7%9A%84%E6%95%B0%E6%94%BE%E5%9C%A8%E4%BD%8E%E4%BD%8D%E3%80%82%E7%9B%B8%E5%8F%8D%EF%BC%8C%E2%80%9C%E5%A4%A7%E5%A4%B4%E4%BC%98%E5%85%88(big-endian)%E2%80%9D%E7%9A%84%E5%AD%98%E5%82%A8%E9%A1%BA%E5%BA%8F%E6%96%B9%E5%BC%8F%E7%9A%84%E7%A1%AC%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%BC%9A%E6%89%93%E5%8D%B0%3Ccode%3E[0,%202]%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E7%B1%BB%E4%BC%BC%E5%9C%B0%E8%A1%8C%E4%B8%BA%E5%87%BA%E7%8E%B0%E5%9C%A8%E6%8E%A5%E4%B8%8B%E6%9D%A5%E7%9A%84%E6%89%93%E5%8D%B0%E8%A1%8C%E3%80%82%3C/p%3E%3Cp%3E%E6%B3%A8%E6%84%8F%EF%BC%8C%E4%B8%80%E4%B8%AA%3Ccode%3Echar%3C/code%3E%E4%BD%9C%E4%B8%BA32%E4%BD%8D%E6%95%B0%E5%AD%97%E5%AD%98%E5%82%A8%EF%BC%8C%E5%8C%85%E5%90%ABUnicode%E7%A0%81%E3%80%82%3Ccode%3Ebool%3C/code%3E%E4%BD%9C%E4%B8%BA%E5%8D%95%E4%B8%AA%E5%AD%97%E8%8A%82%E5%AD%98%E5%82%A8%EF%BC%8C%E5%8D%B31%E4%BD%8D%3Ccode%3Etrue%3C/code%3E%EF%BC%8C0%E4%BD%8D%3Ccode%3Efalse%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E6%9C%80%E5%90%8E%EF%BC%8C%E6%9C%80%E5%90%8E%E4%B8%80%E6%9D%A1%E8%AF%AD%E5%8F%A5%E6%89%93%E5%8D%B0%E4%B8%80%E4%B8%AA%3Ccode%3Ei8%3C/code%3E%E6%95%B0%E5%AD%97%E7%9A%84%E5%9C%B0%E5%9D%80%E3%80%82%E5%9C%A864%E4%BD%8D%E5%A4%84%E7%90%86%E5%99%A8%EF%BC%8C%E8%AF%A5%E5%9C%B0%E5%9D%80%E5%8C%85%E5%90%AB8%E4%B8%AA%E5%AD%97%E8%8A%82%E3%80%82%3C/p%3E%3Ch2%20id=%22Location-of-Bytes-in-Memory%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Location-of-Bytes-in-Memory%22%3E%C2%B6%3C/a%3ELocation%20of%20Bytes%20in%20Memory%3C/h2%3E%3Cp%3E%E4%BD%A0%E4%B9%9F%E5%8F%AF%E4%BB%A5%E5%8F%91%E7%8E%B0%E4%BB%BB%E4%BD%95%E5%AF%B9%E8%B1%A1%E7%9A%84%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E7%9A%84%E4%BD%8D%E7%BD%AE%EF%BC%8C%E5%8D%B3%E5%AE%83%E7%9A%84%E5%9C%B0%E5%9D%80%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eb1%3C/span%3E%20=%20%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eb2%3C/span%3E%20=%20%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eb3%3C/span%3E%20=%20%3Cspan%20class=%22literal%22%3Efalse%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;amp;b1%20%3Cspan%20class=%22keyword%22%3Eas%3C/span%3E%20*%3Cspan%20class=%22keyword%22%3Econst%3C/span%3E%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eas%3C/span%3E%20%3Cspan%20class=%22type%22%3Eusize%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;amp;b2%20%3Cspan%20class=%22keyword%22%3Eas%3C/span%3E%20*%3Cspan%20class=%22keyword%22%3Econst%3C/span%3E%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eas%3C/span%3E%20%3Cspan%20class=%22type%22%3Eusize%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;amp;b3%20%3Cspan%20class=%22keyword%22%3Eas%3C/span%3E%20*%3Cspan%20class=%22keyword%22%3Econst%3C/span%3E%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eas%3C/span%3E%20%3Cspan%20class=%22type%22%3Eusize%3C/span%3E)%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%9C%A864%E4%BD%8D%E7%B3%BB%E7%BB%9F%EF%BC%8C%E5%B0%86%E4%BC%9A%E8%BE%93%E5%87%BA%E4%B8%89%E4%B8%AA%E5%B7%A8%E5%A4%A7%E7%9A%84%E6%95%B0%EF%BC%8C%E5%83%8F%3Ccode%3E140727116566237%20140727116566238%20140727116566239%3C/code%3E%E3%80%82%E7%9B%B8%E5%8F%8D%EF%BC%8C%E5%9C%A832%E4%BD%8D%E7%B3%BB%E7%BB%9F%EF%BC%8C%E8%BE%93%E5%87%BA%E4%B8%89%E4%B8%AA%E5%B0%8F%E4%BA%8E5%E7%99%BE%E4%B8%87%E7%9A%84%E6%95%B0%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E6%98%AF%E8%BF%99%E4%B8%89%E4%B8%AA%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%9C%B0%E5%9D%80%E8%A1%A8%E8%BF%B0%EF%BC%9A%3C/p%3E%3Ctable%3E%3Cthead%3E%3Ctr%3E%3Cth%20style=%22text-align:left%22%3EAbsolute%20address%3C/th%3E%3Cth%20style=%22text-align:left%22%3EBinary%20value%3C/th%3E%3Cth%20style=%22text-align:left%22%3EVariable%20name%3C/th%3E%3Cth%20style=%22text-align:right%22%3EType%3C/th%3E%3C/tr%3E%3C/thead%3E%3Ctbody%3E%3Ctr%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3E140727116566237%3C/code%3E%3C/td%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3E0000_0000%3C/code%3E%3C/td%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3Eb3%3C/code%3E%3C/td%3E%3Ctd%20style=%22text-align:right%22%3E%3Ccode%3Ebool%3C/code%3E%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3E140727116566238%3C/code%3E%3C/td%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3E0000_0001%3C/code%3E%3C/td%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3Eb2%3C/code%3E%3C/td%3E%3Ctd%20style=%22text-align:right%22%3E%3Ccode%3Ebool%3C/code%3E%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3E140727116566239%3C/code%3E%3C/td%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3E0000_0001%3C/code%3E%3C/td%3E%3Ctd%20style=%22text-align:left%22%3E%3Ccode%3Eb1%3C/code%3E%3C/td%3E%3Ctd%20style=%22text-align:right%22%3E%3Ccode%3Ebool%3C/code%3E%3C/td%3E%3C/tr%3E%3C/tbody%3E%3C/table%3E%3Cp%3E%E4%B8%89%E4%B8%AA%E5%AF%B9%E8%B1%A1%E4%B8%AD%E6%AF%8F%E4%B8%AA%E5%AF%B9%E8%B1%A1%E4%BB%85%E5%8D%A0%E4%B8%80%E4%B8%AA%E5%AD%97%E8%8A%82%E3%80%82%E6%9C%80%E5%85%88%E6%89%93%E5%8D%B0%E7%9A%84%E6%95%B0%E6%98%AF%E5%8F%98%E9%87%8F%3Ccode%3Eb1%3C/code%3E%E7%9A%84%E5%9C%B0%E5%9D%80%EF%BC%9B%E5%8F%98%E9%87%8F%3Ccode%3Eb2%3C/code%3E%E7%9A%84%E5%9C%B0%E5%9D%80%EF%BC%9B%E5%8F%98%E9%87%8F%3Ccode%3Eb3%3C/code%3E%E7%9A%84%E5%9C%B0%E5%9D%80%E3%80%82%E5%A6%82%E5%85%B6%E6%89%80%E7%A4%BA%EF%BC%8C%E8%BF%99%E4%B8%89%E4%B8%AA%E6%95%B0%E6%98%AF%E8%BF%9E%E7%BB%AD%E7%9A%84%EF%BC%8C%E6%84%8F%E5%91%B3%E7%9D%80%E8%BF%99%E4%B8%89%E4%B8%AA%E6%95%B0%E8%A2%AB%E8%BF%9E%E7%BB%AD%E5%9C%B0%E5%88%86%E9%85%8D%E5%9C%A8%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E5%9C%B0%E5%9D%80%E4%B8%8A%E3%80%82%3C/p%3E%3Cp%3E%E4%BD%A0%E4%BC%9A%E5%8F%91%E7%8E%B0%E4%B8%89%E4%B8%AA%E5%9C%B0%E5%9D%80%E6%8C%89%E7%85%A7%E9%99%8D%E5%BA%8F%E6%8E%92%E5%88%97%EF%BC%8C%E6%84%8F%E5%91%B3%E7%9D%80%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%88%86%E9%85%8D%EF%BC%8C%E4%BB%A5%E8%B6%8A%E6%9D%A5%E8%B6%8A%E4%BD%8E%E4%BD%8D%E7%9A%84%E6%96%B9%E5%BC%8F%E3%80%82%E8%BF%99%E4%BA%9B%E5%AF%B9%E8%B1%A1%E5%88%86%E9%85%8D%E5%9C%A8%E6%A0%88%E4%B8%8A%EF%BC%8C%E5%9B%A0%E6%AD%A4%E7%9C%8B%E5%88%B0%E6%A0%88%E4%BB%8E%E4%BD%8E%E4%BD%8D%E5%A2%9E%E9%95%BF%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%95%B0%E5%8C%85%E5%90%AB%3Ccode%3Etrue%3C/code%3E%E5%80%BC%EF%BC%8C%E7%94%B11%E5%AD%97%E8%8A%82%E8%A1%A8%E7%A4%BA%E3%80%82%E5%AE%83%E7%94%B1%E4%B8%80%E4%B8%AA7%E4%BD%8D%E5%85%A8%E4%B8%BA0%E7%9A%84%E4%BB%A5%E5%8F%8A1%E4%BD%8D%E4%B8%BA1%E7%9A%84%E5%80%BC%E8%A1%A8%E7%A4%BA%E3%80%82%E7%B1%BB%E4%BC%BC%E5%9C%B0%EF%BC%8C%E7%AC%AC%E4%BA%8C%E4%B8%AA%E5%80%BC%E4%B9%9F%E4%B8%80%E6%A0%B7%E3%80%82%E7%AC%AC%E4%B8%89%E4%B8%AA%E5%80%BC%3Ccode%3Efalse%3C/code%3E%EF%BC%8C%E5%88%99%E7%94%B1%E5%85%A8%E4%B8%BA0%E7%9A%848%E4%BD%8D%E5%80%BC%E8%A1%A8%E7%A4%BA%E3%80%82%3C/p%3E%3Cp%3E%E5%87%A0%E4%B9%8E%E6%89%80%E6%9C%89%E7%8E%B0%E4%BB%A3%E5%A4%84%E7%90%86%E5%99%A8%E8%A6%81%E6%B1%82%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E8%A6%81%E6%9C%89%E7%89%B9%E5%AE%9A%E7%9A%84%E5%86%85%E5%AD%98%E4%BD%8D%E7%BD%AE%EF%BC%8C%E5%9B%A0%E6%AD%A4Rust%E6%94%BE%E7%BD%AE%E8%BF%99%E4%BA%9B%E5%AF%B9%E8%B1%A1%E5%9C%A8%E5%86%85%E5%AD%98%EF%BC%8C%E4%BB%A5%E6%96%B9%E4%BE%BF%E5%AE%9E%E7%8E%B0%E5%A4%84%E7%90%86%E5%99%A8%E7%9A%84%E8%AE%BF%E9%97%AE%E3%80%82%3C/p%3E%3Cp%3E%E5%85%B8%E5%9E%8B%E5%9C%B0%E5%AF%B9%E9%BD%90%E8%A7%84%E5%88%99%E6%98%AF%EF%BC%9A%E2%80%9C%E6%AF%8F%E4%B8%AA%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%BF%85%E9%A1%BB%E8%A6%81%E6%9C%89%E4%B8%80%E4%B8%AA%E5%9C%B0%E5%9D%80%EF%BC%8C%E8%AF%A5%E5%9C%B0%E5%9D%80%E6%98%AF%E5%AE%83%E8%87%AA%E8%BA%AB%E5%A4%A7%E5%B0%8F%E7%9A%84%E5%80%8D%E6%95%B0%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%8D%A0%E4%B8%80%E4%B8%AA%E5%AD%97%E8%8A%82%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%8F%AF%E8%83%BD%E4%BC%9A%E6%94%BE%E7%BD%AE%E5%9C%A8%E4%BB%BB%E4%BD%95%E5%9C%B0%E6%96%B9%EF%BC%8C%E5%8D%A0%E4%B8%A4%E4%B8%AA%E5%AD%97%E8%8A%82%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E4%BB%85%E5%8F%AF%E4%BB%A5%E6%94%BE%E7%BD%AE%E5%9C%A8%E5%81%B6%E6%95%B0%E4%BD%8D%E5%9C%B0%E5%9D%80%EF%BC%8C%E5%8D%A0%E5%9B%9B%E4%B8%AA%E5%AD%97%E8%8A%82%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E4%BB%85%E5%8F%AF%E4%BB%A5%E6%94%BE%E7%BD%AE%E5%9C%A8%E4%BB%A54%E4%B8%BA%E5%80%8D%E6%95%B0%E7%9A%84%E5%9C%B0%E5%9D%80%EF%BC%8C%E4%BB%A5%E5%8F%8A%E5%8D%A08%E4%B8%AA%E5%AD%97%E8%8A%82%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E4%BB%85%E5%8F%AF%E4%BB%A5%E6%94%BE%E7%BD%AE%E5%9C%A8%E4%BB%A58%E4%BD%8D%E5%80%8D%E6%95%B0%E7%9A%84%E5%9C%B0%E5%9D%80%E3%80%82%3C/p%3E%3Cp%3E%E5%8F%A6%E5%A4%96%EF%BC%8C%E5%A4%A7%E5%AF%B9%E8%B1%A1%E9%80%9A%E5%B8%B8%E6%9C%89%E4%B8%80%E4%B8%AA16%E5%80%8D%E7%9A%84%E5%9C%B0%E5%9D%80%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E8%BF%99%E7%A7%8D%E5%AF%B9%E9%BD%90%E8%A7%84%E5%88%99%E4%BC%9A%E5%88%9B%E5%BB%BA%E6%97%A0%E7%94%A8%E7%9A%84%E7%A9%BA%E9%97%B4%EF%BC%8C%E7%A7%B0%E4%B9%8B%E4%B8%BA%E2%80%9C%E5%A1%AB%E5%85%85(padding)%E2%80%9D%E3%80%82%3C/p%3E%3Ch2%20id=%22Sizes-of-Composite-Data-Types%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Sizes-of-Composite-Data-Types%22%3E%C2%B6%3C/a%3ESizes%20of%20Composite%20Data%20Types%3C/h2%3E%3Cp%3E%E5%BD%93%E6%9C%89%E4%B8%80%E4%B8%AA%E7%BB%84%E5%90%88%E5%AF%B9%E8%B1%A1%E5%BA%8F%E5%88%97%E6%97%B6%EF%BC%8C%E5%87%BA%E7%8E%B0%E7%BB%93%E6%9E%84%E5%A1%AB%E5%85%85(padding)%E7%9A%84%E6%95%88%E6%9E%9C%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eenum%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EE1%3C/span%3E%20&amp;#123;%20E1a,%20E1b%20&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eenum%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EE2%3C/span%3E%20&amp;#123;%20E2a,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3EE2b%3C/span%3E(%3Cspan%20class=%22type%22%3Ef64%3C/span%3E)%20&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Euse%3C/span%3E%20std::mem::*;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;[%3Cspan%20class=%22number%22%3E0i16%3C/span%3E;%20%3Cspan%20class=%22number%22%3E80%3C/span%3E]),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;(%3Cspan%20class=%22number%22%3E0i16%3C/span%3E,%20%3Cspan%20class=%22number%22%3E0i64%3C/span%3E)),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;[(%3Cspan%20class=%22number%22%3E0i16%3C/span%3E,%20%3Cspan%20class=%22number%22%3E0i64%3C/span%3E);%20%3Cspan%20class=%22number%22%3E100%3C/span%3E]),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;E1::E1a),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;E2::E2a),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Esize_of_val%3C/span%3E(&amp;amp;%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[(%3Cspan%20class=%22number%22%3E0i16%3C/span%3E,%20%3Cspan%20class=%22number%22%3E0i64%3C/span%3E);%20%3Cspan%20class=%22number%22%3E100%3C/span%3E]));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E6%89%93%E5%8D%B0%E8%BE%93%E5%87%BA%EF%BC%9A%E2%80%9C%3Ccode%3E160%2016%201600%201%2016%2024%3C/code%3E%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E6%84%8F%E5%91%B3%E7%9D%80%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E4%B8%80%E4%B8%AA80%E9%95%BF%E5%BA%A6%E7%9A%8416%E4%BD%8D%E6%95%B0%E7%BB%84%E5%8D%A0160%E5%AD%97%E8%8A%82%EF%BC%8C%E5%8D%B3%E6%98%AF%20%3Ccode%3E80%20*%202%3C/code%3E%EF%BC%8C%E8%BF%99%E9%87%8C%E6%B2%A1%E6%9C%89%E5%87%BA%E7%8E%B0%E6%B5%AA%E8%B4%B9%EF%BC%9B%3C/li%3E%3Cli%3E%E4%B8%80%E4%B8%AA%E7%94%B116%E4%BD%8D%E5%92%8C64%E4%BD%8D%E6%95%B0%E7%BB%84%E6%88%90%E7%9A%84tuple%E5%8D%A016%E4%B8%AA%E5%AD%97%E8%8A%82%EF%BC%8C%E5%A6%82%E6%9E%9C%E4%B8%A4%E4%B8%AA%E6%95%B0%E5%B0%86%E5%8D%A08%E4%B8%AA%E5%AD%97%E8%8A%82%EF%BC%8C%E5%88%99%E9%A2%9D%E5%A4%96%E5%A2%9E%E5%8A%A06%E4%B8%AA%E5%AD%97%E8%8A%82padding%E3%80%82%3C/li%3E%3Cli%3E%E4%B8%80%E4%B8%AA100%E9%95%BF%E5%BA%A6%E7%9A%8416%E4%BD%8Dtuple%E5%8D%A01600%E5%AD%97%E8%8A%82%EF%BC%8C%E6%95%B0%E7%BB%84%E4%B9%8B%E9%97%B4%E4%B8%8D%E4%BC%9A%E6%9C%89padding%EF%BC%8C%E4%BD%86%E6%95%B0%E7%BB%84%E6%9D%A1%E7%9B%AE%E4%B9%8B%E9%97%B4%E7%9A%84padding%E4%BC%9A%E9%9A%8F%E6%95%B0%E7%BB%84%E9%95%BF%E5%BA%A6%E5%A2%9E%E5%8A%A0%EF%BC%9B%3C/li%3E%3Cli%3E%E4%B8%80%E4%B8%AA%E4%B8%8D%E5%B8%A6%E6%95%B0%E6%8D%AE%E7%9A%84%E5%AD%97%E6%AE%B5%E7%9A%84enum%EF%BC%8C%E6%80%BB%E6%98%AF%E4%BB%85%E5%8D%A0%E4%B8%80%E4%B8%AA%E5%AD%97%E8%8A%82%EF%BC%9B%3C/li%3E%3Cli%3E%E4%B8%80%E4%B8%AA%E5%B8%A6%E6%9C%898%E5%AD%97%E8%8A%82%E6%95%B0%E6%8D%AE%E5%AD%97%E6%AE%B5%E7%9A%84enum%EF%BC%8C%E5%8D%A016%E4%B8%AA%E5%AD%97%E8%8A%82%EF%BC%8C%E5%8D%B3%E4%BD%BF%E5%BD%93%E5%89%8D%E5%80%BC%E6%B2%A1%E6%9C%89%E6%95%B0%E6%8D%AE%EF%BC%8C%E5%AE%83%E6%9C%897%E5%AD%97%E8%8A%82%E7%9A%84padding%E3%80%82%3C/li%3E%3Cli%3E%E4%B8%80%E4%B8%AA100%E9%95%BF%E5%BA%A6%E7%9A%8416%E4%BD%8Dtuple%E7%9A%84Vector%EF%BC%8C%E7%9C%8B%E8%B5%B7%E6%9D%A5%E5%8D%A024%E5%AD%97%E8%8A%82%EF%BC%8C%E4%BD%86%E7%94%B1%E4%BA%8E%E5%BD%93%E5%89%8D%E6%B5%8B%E9%87%8F%E6%96%B9%E5%BC%8F%E9%81%97%E6%BC%8F%E4%BA%86%E4%B8%80%E9%83%A8%E5%88%86%E3%80%82%3C/li%3E%3C/ul%3E%3Cp%3E%E6%89%80%E4%BB%A5%EF%BC%8C%E6%8E%A5%E4%B8%8B%E6%9D%A5%E4%BB%85%E7%9C%8BVector%E7%9A%84%E6%83%85%E5%86%B5%E3%80%82%3C/p%3E%3Cp%3E%E5%AD%98%E6%94%BE%E4%BA%8E%E6%A0%88%E7%A9%BA%E9%97%B4%E7%9A%84%E6%95%B0%E6%8D%AE%EF%BC%8C%E5%9C%A8%E7%BC%96%E8%AF%91%E6%9C%9F%E5%BF%85%E9%A1%BB%E7%9F%A5%E9%81%93%E5%85%B6%E5%A4%A7%E5%B0%8F%EF%BC%8C%E5%9B%A0%E6%AD%A4%E6%95%B0%E7%BB%84%E5%8F%AF%E4%BB%A5%E5%AE%8C%E5%85%A8%E5%9C%B0%E5%88%86%E9%85%8D%E5%9C%A8%E6%A0%88%E7%A9%BA%E9%97%B4%E4%B8%8A%EF%BC%8C%E8%80%8C%E5%AF%B9%E4%BA%8E%E5%9B%BA%E5%AE%9A%E5%A4%A7%E5%B0%8F%E7%9A%84vector%E6%9D%A5%E8%AF%B4%EF%BC%8C%E4%BB%85%E5%B0%86header%E6%94%BE%E5%9C%A8%E6%A0%88%E7%A9%BA%E9%97%B4%EF%BC%8C%E5%89%A9%E4%BD%99%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BF%85%E9%A1%BB%E6%94%BE%E5%9C%A8%E5%A0%86%E7%A9%BA%E9%97%B4%E3%80%82%3C/p%3E%3Ch2%20id=%22Vector-Allocation%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Vector-Allocation%22%3E%C2%B6%3C/a%3EVector%20Allocation%3C/h2%3E%3Cp%3E%E6%88%91%E4%BB%AC%E7%9C%8B%E5%88%B0%E5%90%91%E9%87%8F%E5%BF%85%E9%A1%BB%E5%AE%9E%E7%8E%B0%E4%B8%A4%E7%A7%8D%E7%BB%93%E6%9E%84%EF%BC%9Aheader%E5%9B%BA%E5%AE%9A%E5%A4%A7%E5%B0%8F%E7%9A%84%E6%A0%88%E5%88%86%E9%85%8D%EF%BC%8Cbuffer%E5%8F%98%E9%87%8F%E9%95%BF%E5%BA%A6%E7%9A%84%E5%A0%86%E5%88%86%E9%85%8D%E3%80%82%3C/p%3E%3Cp%3E%E7%90%86%E8%AE%BA%E4%B8%8A%E6%9C%89%E5%BE%88%E5%A4%9A%E6%96%B9%E5%BC%8F%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E5%90%91%E9%87%8F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%80%E7%A7%8D%E6%96%B9%E5%BC%8F%E6%98%AF%E5%9C%A8%E5%A4%B4%E4%B8%AD%E4%BF%9D%E7%95%99%E6%8C%87%E5%90%91%E7%BC%93%E5%86%B2%E5%8C%BA%E7%9A%84%E6%8C%87%E9%92%88%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E7%A7%8D%E6%96%B9%E5%BC%8F%E7%9A%84%E7%BC%BA%E7%82%B9%E6%98%AF%EF%BC%8C%E6%AF%8F%E6%AC%A1%E8%8E%B7%E5%8F%96%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%E9%95%BF%E5%BA%A6%E6%97%B6%EF%BC%8C%E9%9C%80%E8%A6%81%E4%B8%80%E4%B8%AA%E9%97%B4%E6%8E%A5%E7%9A%84%E6%96%B9%E5%BC%8F%E3%80%82%E6%95%B0%E7%BB%84%E7%9A%84%E9%95%BF%E5%BA%A6%E7%BB%8F%E5%B8%B8%E5%9C%A8%E6%98%BE%E5%BC%8F%E5%9C%B0%E6%88%96%E9%9A%90%E5%BC%8F%E5%9C%B0%E7%94%A8%E5%88%B0%EF%BC%8C%E6%89%80%E4%BB%A5%E6%9C%80%E5%A5%BD%E7%9A%84%E6%96%B9%E5%BC%8F%E6%98%AF%E5%B0%86%E4%BF%A1%E6%81%AF%E4%BF%9D%E7%95%99%E5%9C%A8header%E4%B8%AD%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%80%E4%B8%AA%E5%B9%BC%E7%A8%9A%E7%9A%84%E5%AE%9E%E7%8E%B0%E7%BC%93%E5%86%B2%E7%9A%84%E6%96%B9%E5%BC%8F%E6%98%AF%E4%BB%A4%E5%85%B6%E8%B6%B3%E5%A4%9F%E5%A4%A7%E3%80%82%E4%BE%8B%E5%A6%82%EF%BC%8C%E5%A6%82%E6%9E%9C%E6%98%AF%E4%B8%80%E4%B8%AA9%E4%B8%AAi32%E6%9D%A1%E7%9B%AE%E7%9A%84%E5%90%91%E9%87%8F%EF%BC%8C%E5%9C%A8%E5%A0%86%E4%B8%AD%E5%88%86%E9%85%8D%E4%B8%80%E4%B8%AA%3Ccode%3E9%20*%204%3C/code%3E%E5%AD%97%E8%8A%82%E7%9A%84%E7%BC%93%E5%86%B2%E5%8C%BA%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E6%9C%89%E6%96%B0%E7%9A%84%E6%9D%A1%E7%9B%AE%3Ccode%3Epushed%3C/codep%3E%3Cp%3E%E5%A6%82%E6%9E%9C%E4%B8%80%E4%B8%AA%E7%A9%BA%E7%9A%84%E5%90%91%E9%87%8F%EF%BC%8C%E4%BB%A51000%E6%AC%A1%E7%9A%84%3Ccode%3Epush%3C/code%3E%E6%96%B9%E6%B3%95%E6%9D%A5%E6%9E%84%E9%80%A0%E6%88%90%E4%B8%BA%E4%B8%80%E4%B8%AA1000%E6%9D%A1%E7%9B%AE%E7%9A%84%E5%90%91%E9%87%8F%EF%BC%8C%E5%B0%86%E4%BC%9A%E6%9C%891000%E6%AC%A1%E7%9A%84%E5%A0%86%E7%A9%BA%E9%97%B4%E5%88%86%E9%85%8D%EF%BC%8C999%E6%AC%A1%E7%9A%84%E5%A0%86%E5%9B%9E%E6%94%B6%EF%BC%8C%E4%BB%A5%E5%8F%8A%3Ccode%3E1000%20*%20999%20/%202%20==%20499_500%3C/code%3E%E6%AC%A1%E7%9A%84%E6%9D%A1%E7%9B%AE%E6%8B%B7%E8%B4%9D%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%BA%E4%BA%86%E8%AF%81%E5%AE%9E%E8%BF%99%E4%B8%AA%E7%B3%9F%E7%B3%95%E7%9A%84%E6%80%A7%E8%83%BD%EF%BC%8C%E5%8F%AF%E8%83%BD%E4%BC%9A%E6%9C%89%E4%B8%80%E4%B8%AA%E5%A4%A7%E7%9A%84%E7%BC%93%E5%86%B2%E5%8C%BA%E8%A2%AB%E5%88%86%E9%85%8D%EF%BC%8C%E4%BB%85%E5%BD%93%E8%AF%A5%E7%BC%93%E5%86%B2%E5%8C%BA%E7%A9%BA%E9%97%B4%E4%B8%8D%E5%A4%9F%E8%A7%A6%E5%8F%91%E5%86%8D%E5%88%86%E9%85%8D%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%E6%9C%89%E5%BF%85%E8%A6%81%E8%B7%9F%E8%B8%AA%E5%88%86%E9%85%8D%E7%9A%84%E7%BC%93%E5%86%B2%E5%8C%BA%E7%9A%84%E5%9C%B0%E5%9D%80%E6%95%B0%E7%9B%AE%EF%BC%8C%E4%BB%A5%E5%8F%8A%E8%AF%A5%E7%BC%93%E5%86%B2%E5%8C%BA%E8%A2%AB%E4%BD%BF%E7%94%A8%E7%9A%84%E6%95%B0%E6%8D%AE%E3%80%82%3C/p%3E%3Cp%3E%E5%88%86%E9%85%8D%E7%9A%84%E7%BC%93%E5%86%B2%E5%8C%BA%E7%9A%84%E5%9C%B0%E5%9D%80%E6%95%B0%E7%9B%AE%E9%80%9A%E5%B8%B8%E5%8F%AB%E5%AE%B9%E9%87%8F(%3Ccode%3Ecapacity%3C/code%3E)%EF%BC%8C%E5%AE%83%E4%B9%9F%E6%98%AF%E8%AE%BF%E9%97%AE%E8%BF%99%E4%B8%AA%E6%95%B0%E6%8D%AE%E7%9A%84%E5%87%BD%E6%95%B0%E5%90%8D%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ev%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22number%22%3E0%3C/span%3E;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E(),%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecapacity%3C/span%3E());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(%3Cspan%20class=%22number%22%3E11%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E(),%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecapacity%3C/span%3E());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(%3Cspan%20class=%22number%22%3E22%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E(),%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecapacity%3C/span%3E());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(%3Cspan%20class=%22number%22%3E33%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E(),%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecapacity%3C/span%3E());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(%3Cspan%20class=%22number%22%3E44%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E(),%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecapacity%3C/span%3E());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(%3Cspan%20class=%22number%22%3E55%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E(),%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecapacity%3C/span%3E());%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E8%BE%93%E5%87%BA%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20plaintext%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E0%200%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E1%204%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%204%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%204%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%204%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%208%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%BD%93%E4%B8%80%E4%B8%AA%E7%A9%BA%E5%90%91%E9%87%8F%E8%A2%AB%E5%88%9B%E5%BB%BA%EF%BC%8C%E5%AE%83%E5%8C%85%E5%90%AB0%E4%B8%AA%E6%9D%A1%E7%9B%AE%EF%BC%8C%E6%89%80%E4%BB%A5%E6%B2%A1%E6%9C%89%E5%88%86%E9%85%8D%E4%BB%BB%E4%BD%95%E5%A0%86%E7%BC%93%E5%86%B2%E5%8C%BA%EF%BC%8C%E6%89%80%E4%BB%A5%E5%AE%83%E7%9A%84%E5%AE%B9%E9%87%8F%E6%98%AF0%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E6%B7%BB%E5%8A%A0%E7%AC%AC%E4%B8%80%E4%B8%AA%E8%AE%B0%E5%BD%95%E6%97%B6%EF%BC%8C%E5%90%91%E9%87%8F%E5%AF%B9%E8%B1%A1%E8%A2%AB%E5%88%86%E9%85%8D%E5%9C%A8%E4%B8%80%E4%B8%AA%E7%BC%93%E5%86%B2%E5%8C%BA%E5%AE%B9%E9%87%8F32%E4%BD%8D(16%E5%AD%97%E8%8A%82%E7%BC%93%E5%86%B2%E5%8C%BA)%E7%9A%84%E5%A0%86%E7%A9%BA%E9%97%B4%EF%BC%8C%E5%9B%A0%E6%AD%A4%E5%AE%83%E7%9A%84%E5%AE%B9%E9%87%8F%E6%98%AF4%EF%BC%8C%E7%94%B1%E4%BA%8E%E5%AE%83%E5%8C%85%E5%90%AB%E4%B8%80%E6%9D%A1%E8%AE%B0%E5%BD%95%EF%BC%8C%E5%9B%A0%E6%AD%A4%E5%AE%83%E7%9A%84%E9%95%BF%E5%BA%A6%E6%98%AF1%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E5%85%B6%E5%AE%83%E4%B8%89%E4%B8%AA%E6%9D%A1%E7%9B%AE%E8%A2%AB%E6%B7%BB%E5%8A%A0%E5%88%B0%E5%90%91%E9%87%8F%EF%BC%8C%E4%B8%8D%E5%86%8D%E9%9C%80%E8%A6%81%E5%88%86%E9%85%8D%E5%86%85%E5%AD%98%EF%BC%8C%E5%9B%A0%E4%B8%BA%E9%A2%84%E5%88%86%E9%85%8D%E7%9A%84%E7%BC%93%E5%86%B2%E5%8C%BA%E5%B7%B2%E7%BB%8F%E8%B6%B3%E5%A4%9F%E5%A4%A7%E5%AE%B9%E7%BA%B3%E3%80%82%3C/p%3E%3Cp%3E%E4%BD%86%E5%BD%93%E7%AC%AC5%E6%9D%A1%E8%AE%B0%E5%BD%95%E8%A2%AB%E6%B7%BB%E5%8A%A0%E5%88%B0%E5%90%91%E9%87%8F%EF%BC%8C%E9%9C%80%E8%A6%81%E5%86%8D%E9%87%8D%E6%96%B0%E5%88%86%E9%85%8D%E4%B8%80%E4%B8%AA%E5%A4%A7%E7%9A%84%E7%BC%93%E5%86%B2%E5%8C%BA%E3%80%82%E6%96%B0%E7%9A%84%E7%BC%93%E5%86%B2%E5%8C%BA%E7%9A%84%E5%AE%B9%E9%87%8F%E4%B8%BA8%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%3Ccode%3Evec%3C/code%3E%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E4%BA%86%E4%B8%89%E4%B8%AA%E5%AD%90%E5%AF%B9%E8%B1%A1%E5%9C%A8%E6%A0%88%E7%A9%BA%E9%97%B4%EF%BC%9A%E4%B8%80%E4%B8%AA%E6%98%AF%E6%8C%87%E5%90%91%E5%A0%86%E7%BC%93%E5%86%B2%E5%8C%BA%E7%9A%84%E6%8C%87%E9%92%88%EF%BC%8C%E5%AE%83%E6%98%AF%E4%B8%80%E4%B8%AA%E5%86%85%E5%AD%98%E5%9C%B0%E5%9D%80%EF%BC%9B%E4%B8%80%E4%B8%AA%E6%98%AF%E7%BC%93%E5%86%B2%E5%8C%BA%E7%9A%84%E5%AE%B9%E9%87%8F(capacity)%E5%A4%A7%E5%B0%8F%EF%BC%8C%E5%AE%83%E6%98%AF%E4%B8%80%E4%B8%AA%3Ccode%3Eusize%3C/code%3E%EF%BC%9B%E4%B8%80%E4%B8%AA%E6%98%AFvector%E7%9A%84%E6%9D%A1%E7%9B%AE%E7%9A%84%E9%95%BF%E5%BA%A6%EF%BC%8C%E5%AE%83%E6%98%AF%E4%B8%80%E4%B8%AA%3Ccode%3Eusize%3C/code%3E%E5%80%BC%EF%BC%8C%E5%B0%8F%E4%BA%8E%E6%88%96%E7%AD%89%E4%BA%8E%E5%AE%B9%E9%87%8F(capacity)%E5%A4%A7%E5%B0%8F%E3%80%82%3C/p%3E%3Cp%3E%E5%9F%BA%E4%BA%8E%E8%BF%99%E4%B8%AA%E5%8E%9F%E5%9B%A0%EF%BC%8C%E4%BB%BB%E4%BD%95vector%E7%9A%84header%E5%9C%A864%E4%BD%8D%E7%B3%BB%E7%BB%9F%E5%8D%A0%3Ccode%3E3%20*%208%20==%2024%3C/code%3E%E5%AD%97%E8%8A%82%EF%BC%8C%E5%9C%A832%E4%BD%8D%E7%B3%BB%E7%BB%9F%E5%8D%A0%3Ccode%3E3%20*%204%20==%2012%3C/code%3E%E5%AD%97%E8%8A%82%E3%80%82%3C/p%3E%3Cp%3E%E8%AE%A9%E6%88%91%E4%BB%AC%E7%9C%8B%E7%9C%8B%EF%BC%8C%E5%A6%82%E6%9E%9C%E6%B7%BB%E5%8A%A0%E4%B8%80%E5%8D%83%E4%B8%AA%E6%9D%A1%E7%9B%AE%E5%88%B0%E4%B8%80%E4%B8%AA32%E4%BD%8D%E7%9A%84vector%E4%BC%9A%E5%8F%91%E7%94%9F%E4%BB%80%E4%B9%88%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ev%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22number%22%3E0%3C/span%3E;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Eprev_capacity%3C/span%3E%20=%20std::%3Cspan%20class=%22type%22%3Eusize%3C/span%3E::MAX;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..%3Cspan%20class=%22number%22%3E1_000%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ecap%3C/span%3E%20=%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecapacity%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20cap%20!=%20prev_capacity%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20i,%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E(),%20cap);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eprev_capacity%20=%20cap;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ev.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epush%3C/span%3E(%3Cspan%20class=%22number%22%3E1%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%8F%AF%E8%83%BD%E7%9A%84%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C%E6%98%AF%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20plaintext%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E0%200%200%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E1%201%204%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%205%208%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%209%2016%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%2017%2032%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E33%2033%2064%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E65%2065%20128%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E129%20129%20256%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E257%20257%20512%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E513%20513%201024%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%AF%B9%E4%BA%8E%E5%85%B6%E5%AE%83%E7%B1%BB%E5%9E%8B%E7%9A%84vector%EF%BC%8C%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C%E4%B9%9F%E4%B8%80%E6%A0%B7%E3%80%82%3C/p%3E%3Cp%3E%E5%8F%98%E9%87%8F%3Ccode%3Ecap%3C/code%3E%E5%AD%98%E5%82%A8%E4%BA%86%E5%BD%93%E5%89%8D%E5%90%91%E9%87%8F%E7%9A%84%E5%AE%B9%E9%87%8F%EF%BC%9B%E5%8F%98%E9%87%8F%3Ccode%3Eprev_capacity%3C/code%3E%E5%AD%98%E5%82%A8%E4%B8%8A%E4%B8%80%E4%BB%BD%E7%9A%84%E5%AE%B9%E9%87%8F%EF%BC%8C%E5%AE%83%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BA%86%E4%B8%80%E4%B8%AA%E5%B7%A8%E5%A4%A7%E7%9A%84%E5%80%BC%E3%80%82%3C/p%3E%3Cp%3E%E5%AF%B9%E4%BA%8E%E6%AF%8F%E6%AC%A1%E8%BF%AD%E4%BB%A3%EF%BC%8C%E5%9C%A8%E5%90%91vector%E6%B7%BB%E5%8A%A0%E8%AE%B0%E5%BD%95%E4%B9%8B%E5%89%8D%EF%BC%8C%E4%BC%9A%E6%A3%80%E6%B5%8B%E5%AE%B9%E9%87%8F%E6%98%AF%E5%90%A6%E6%94%B9%E5%8F%98%E3%80%82%E6%AF%8F%E6%AC%A1capacity%E7%9A%84%E6%94%B9%E5%8F%98%EF%BC%8C%E9%83%BD%E4%BC%9A%E6%89%93%E5%8D%B0%E5%BD%93%E5%89%8D%E5%AE%B9%E9%87%8F%E5%92%8C%E6%8F%92%E5%85%A5%E8%AE%B0%E5%BD%95%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E9%87%8C%E6%98%BE%E7%A4%BA%E4%BA%86%E5%AE%B9%E9%87%8F%E7%9A%84%E5%A4%A7%E5%B0%8F%E6%80%BB%E6%98%AF2%E7%9A%84%E6%AC%A1%E6%96%B9%E3%80%82%E8%BF%99%E9%87%8C%E5%8F%91%E7%94%9F%E4%BA%869%E6%AC%A1%E5%88%86%E9%85%8D%EF%BC%8C8%E6%AC%A1%E5%86%8D%E5%88%86%E9%85%8D%EF%BC%8C%E4%BB%A5%E5%8F%8A%3Ccode%3E4%20+%208%20+%2016%20+%2032%20+%2064%20+%20128%20+%20256%20+%20512%20==%201020%3C/code%3E%E6%AC%A1%E6%8B%B7%E8%B4%9D%EF%BC%8C%E6%89%80%E4%BB%A5%E7%9C%9F%E5%AE%9E%E7%9A%84%E7%AE%97%E6%B3%95%E6%AF%94%E5%BC%80%E5%A4%B4%E6%8F%8F%E8%BF%B0%E7%9A%84%E5%B9%BC%E7%A8%9A%E9%82%A3%E4%B8%AA%E7%89%88%E6%9C%AC%E8%A6%81%E9%AB%98%E6%95%88%E5%BE%97%E5%A4%9A%E3%80%82%3C/p%3E" type="image"/>
    
    
    <category term="learning" scheme="https://galudisu.info/categories/learning/"/>
    
    
    <category term="rust" scheme="https://galudisu.info/tags/rust/"/>
    
  </entry>
  
  <entry>
    <title>rust基础入门[11] - Allocating Memory</title>
    <link href="https://galudisu.info/2023/01/11/rust/beginning/chapter11_Allocating%20Memory/"/>
    <id>https://galudisu.info/2023/01/11/rust/beginning/chapter11_Allocating%20Memory/</id>
    <published>2023-01-11T07:50:46.000Z</published>
    <updated>2025-04-27T11:59:08.282Z</updated>
    
    <content type="html"><![CDATA[<p>本章覆盖有：</p><ul><li>各种各样的内存分配，性能特性，局限性</li><li>如何给一个对象指定那种内存分配</li><li>引用和Box的区别</li></ul><span id="more"></span><h2 id="The-Various-Kinds-of-Allocation"><a class="header-anchor" href="#The-Various-Kinds-of-Allocation">¶</a>The Various Kinds of Allocation</h2><p>要理解Rust语言，也可以说其它系统语言，例如C语言，对于理解内存分配是重要的，例如静态分配(static allocation)，栈分配(stack allocation)，堆分配(heap allocation)。</p><p>本章完全致力于该类问题。另外，我们将看到四种内存分配：</p><ul><li>In processor registers</li><li>Static</li><li>In the stack</li><li>In the heap</li></ul><p>在C或C<ins>语言，静态分配指的是全局变量和使用<code>static</code>关键字声明的变量；栈分配是所有non-static本地变量，以及函数参数；堆分配则是调用了C语言标准库<code>malloc</code>函数的，或C</ins>操作符的。</p><h2 id="Linear-Addressing"><a class="header-anchor" href="#Linear-Addressing">¶</a>Linear Addressing</h2><p>任何计算机硬件，有一块可读和可写内存，即RAM，它由一系列长字节构成，由它们的地址访问。内存第一个字节位置为0，最后一个字节的位置等于内存长度减一。</p><p>为了简明起见，目前有两种类型的计算机：</p><pre><code>- 同一时刻单一线程，该进程直接使用物理内存地址。这称为“实时内存系统(real-memory systems)”。- 多道程序操作系统，为每个进程提供一个虚拟地址空间。这类称为“虚拟内存系统(virtual-memory systems)”</code></pre><p>对于第一种计算机类型，现在仅作为控制器使用，没有实质上的操作系统(所以这类也称为“裸机bare-metal system”)，或者是一个系统驻留在系统的一小块，这种内存操作系统的地址跟应用程序的差不多大。</p><p>对于第二种计算机类型，访问内存的能力由操作系统控制，它运行在一个privileged mode(即权限模式，也称为protected mode，或kernel mode)，它将内存的一部分分配给各个正在运行的进程。</p><p>至此，在多道程序操作系统，进程“看见”的内存跟操作系统“看见”的内存不一样。操作系统是一个shell，或称为壳。操作系统给予进程权限访问的内存有200多个字节，操作系统满足这种需求由该驻留的进程实现。也就是说，一段机器地址300到499的内存，操作系统和这个分配了200字节的进程通信，但不是和内存的开始地址300通信。实质上每个进程有一个特定的地址空间，称为“virtual”，操作系统对物理内存的映射，称为“real”。</p><p>实际上，当一个进程访问操作系统的内存，操作系统只是保留该进程内存空间的一部分，不会有真实内存提供给该进程。因此，对于非常大的内存部分，这个分配也非常快。</p><p>只要进程尝试访问内存，即使是初始化为0，操作系统意识到进程是访问虚拟内存片段以及没有映射真实内存，立即为虚拟内存响应真实内存片段。</p><p>因此，进程的处理没有直接作用在真实的内存上，而是作用在操作系统提供的虚拟内存上，虚拟内存(虚拟存储)包含对真实地址的映射。</p><p>实际上，通常一个单一进程的虚拟内存甚至大于计算机的整个实时内存。例如，计算机可以有一个10亿字节的物理内存，对于该计算机上跑4个进程，每个进程可以有30亿字节的虚拟内存空间。如果所有的虚拟内存映射到真实内存，要处理这种情况，要求有12亿字节的内存。相反，虚拟内存的大部分字节没有被映射到真实内存；仅实际上被用于进程的字节才被映射到真实内存。只要进程开始使用它们的内存地址空间片段，以及没有被映射到真实内存时，操作系统为该虚拟内存片段响应真实的内存。</p><p>因此，每次当一个进程访问地址，不论是读或写，如果该地址属于一个虚拟内存片段(实际上叫做“页”)被驻留并映射真实内存的对应片段，进程立即访问这个真实内存；相反，如果这个驻留的页没有被映射，在允许访问之前，操作系统踢掉(kicks in)这个页，机制上叫做“page fault”，通过这种机制，操作系统分配一个真实内存页并将其映射到包含访问地址的虚拟内存页上；若是访问地址不属于进程内存空间部分上的驻留页，会出现地址错误(通常称为“segmentation fault”)。通常，地址错误导致进程的立即中止。</p><p>当然，如果程序使用内存太过随意，操作系统需要花费大量时间来做mapping，导致处理的巨大下降，甚至会由于内存不足而中断。</p><p>因此，在现代计算机中，都是单进程和多进程集于一身，每个进程“看到”它自己的内存像字节数组一样。一种是真实内存，一种是虚拟内存，但无论它是一个连续地址空间(contiguours address space)，或通常所说的“线性地址(linear addressing)”。区别于旧的计算机系统，现在计算机使用了一个“分段(segmented)”地址空间，编程者使用起来更麻烦。</p><p>所有这些都是为了曾清，在一个虚拟内存系统中，操作系统对内存分配管理的操作，是由虚拟内存到真实内存的映射。尽管现在还没有讨论跟多关于内存的分配，我们这里将内存分配定义为：由进程“发现”了驻留内存的一个片段，并关联这个片段到一个对象的操作。</p><h2 id="Static-Allocation"><a class="header-anchor" href="#Static-Allocation">¶</a>Static Allocation</h2><p>尽管，有各种各样的内存分配机制。</p><p>最简单的内存分配机制是静态分配(static allocation)。根据这种机制，编译器决定了程序的每个对象需要多少个字节，以及安全地从地址空间获取相应的字节序列。因此，每个变量的地址在编译期确定。下面是一些例子：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> _A: <span class="type">u32</span> = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">static</span> _B: <span class="type">i32</span> = -<span class="number">1_000_000</span>;</span><br><span class="line"><span class="keyword">static</span> _C: <span class="type">f64</span> = <span class="number">5.7e10</span>;</span><br><span class="line"><span class="keyword">static</span> _D: <span class="type">u8</span> = <span class="number">200</span>;</span><br></pre></td></tr></table></figure><p><code>static</code>关键字类似于<code>let</code>，都用于声明一个变量，选择性地初始化。</p><p><code>static</code>和<code>let</code>的不同在于：</p><ul><li><code>static</code>使用了静态分配，<code>let</code>使用了栈分配。</li><li><code>static</code>要求显式指定变量的类型，在<code>let</code>中不是必须的。</li><li>常规代码不能改变一个静态变量的值，即使用了<code>mut</code>指定。因此，基于安全考虑，Rust中的静态变量通常是immutable的。</li><li>代码风格上要求静态变量的命名仅能包含大写字母，以及用下划线划分。违反这个规则，编译器会报一个警告。</li></ul><p>上面四点，这里我们仅看第一个，分配的方式。</p><p><code>_A</code>和<code>_B</code>变量带有4个字节，<code>_C</code>8个字节，<code>_D</code>带有1个字节。如果进程的开始地址是0，编译器会给<code>_A</code>分配地址0，<code>_B</code>地址是4，<code>_C</code>地址是8，<code>_D</code>地址是16，总共在编译期分配了17个字节。</p><p>当程序开始执行，进程向操作系统访问使用17个字节的内存。然后，在执行期间，不会有更多的内存请求被处理。当进程结束，进程的所有内存会自动释放给操作系统。</p><p>静态分配的缺陷是不能创建递归函数。进一步讲，如果一个函数的参数和本地变量是静态指派的，它们只有一份拷贝，当递归函数调用自身，它不能为这些参数和本地变量提供另一份拷贝。</p><p>静态分配的另一个缺陷是所有字程序的所有变量被分配在程序的开始，如果程序包含很多变量，但实际执行仅使用了一小部分，大多数变量作了无用的分配，造成该程序的内存饥渴。</p><p>典型地，<code>static</code>变量的修改是不安全的(unsafe)。</p><p>因此，在Rust中，<code>static</code>使用得不是特别多。</p><p>然后，静态分配被广泛用于其他两种数据：所有可执行二进制代码(executable binary code)，以及所有字符串字面量。</p><h2 id="Stack-Allocation"><a class="header-anchor" href="#Stack-Allocation">¶</a>Stack Allocation</h2><p>由于静态分配的不足，Rust将对象指派到“stack”里面，每次使用<code>let</code>关键字声明变量，每次一个参数被传递给一个函数调用。这里所谓的“stack”是每个进程地址空间的片段。</p><p>实际上，每个线程也有一个stack，而不是每个进程都有一个stack。如果操作系统支持线程，则每个程序运行，一个进程被创建，一个线程会被创建并在该进程内部运行。之后，在同一个进程内部，可以创建和启动其它线程。每一次一个线程被创建(包含进程的主线程)，会请求操作系分配一份地址空间片段，它是线程的stack。在真实内存系统(裸机)中，仅会有一个stack被创建用于执行程序。</p><p>每个线程保留栈末端的地址。典型地，值较高的一端被认为是堆栈的底部，值较低的一端被认为是堆栈的顶部。</p><p>让我们看如下代码，类似前面那个，但使用了栈分配而不是静态分配：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">_a</span>: <span class="type">u32</span> = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_b</span>: <span class="type">i32</span> = -<span class="number">1_000_000</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_c</span>: <span class="type">f64</span> = <span class="number">5.7e10</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_d</span>: <span class="type">u8</span> = <span class="number">200</span>;</span><br></pre></td></tr></table></figure><p>该段代码仅有一个线程。现在假设这个线程有一个仅100个字节的stack，地址范围在<code>[500, 600)</code>。当程序运行，这4个变量从栈的底部开始分配，即从600开始。</p><p>因此，如图11-1所示，变量<code>_a</code>会占领地址596-599地址4个字节，变量<code>_b</code>会占领地址592-595地址4个字节，变量<code>_c</code>会占领地址584-591地址8个字节，变量<code>_d</code>会仅占领地址583。</p><p><img src="/img/rust/beginning/chap11/Figure_11_1.png" alt="Figure 11-1"></p><p>然后，如果你需要标识一个对象的地址，你必须总是使用最低位地址。因此，我们说<code>_a</code>的地址是596，<code>_b</code>的地址是592，<code>_c</code>的地址是584，<code>_d</code>的地址是583。</p><p>单词“stack”引用中国盆碟的字面理解，我们不可能在stack的中间插入一个碟(dish)，又或者从中间移除一个碟。仅能在stack的顶层添加一个碟，又或者在stack不为空，从顶层移除一个碟。</p><p>类似地，栈分配的特性是，你仅能在栈的顶部添加、或删除元素。</p><p>栈分配(allocation)或回收(deallocation，释放；再分配)是非常高效的，因为它们由地址最后一个元素的添加或删除构成，该地址为stack的顶部。这个地址称为“栈指示器，栈点，指针 stack pointer”，它一直保存在处理器寄存器中，直到出现上下文切换，才将控制交由另一个线程。</p><p>stack的局限仅在于，栈顶的地址分配和回收。进一步讲，当一个对象被添加到stack，这个对象可以进行读和写，即使有其它对象被添加，只是读写操作不会增加或减少该对象的大小。</p><p>当一个函数调用，会给它的所有参数和所有本地变量分配足够的地址栈空间。这种分配通过这些对象大小总数的栈指针递减的方式处理，当执行的函数中止后，这个栈空间被回收，并以同样的值增加栈指针。因此，当一个函数返回，在函数调用之前栈指针被用来储存该值。</p><p>然而，一个函数在一段程序中可能从很多个栈点被调用，这种栈点可能有不同的大小。因此，任何函数的参数和本地变量会根据函数的调用情况分配在不同的位置。下面是一个例子：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">f1</span>(x1: <span class="type">i32</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">y1</span> = <span class="number">2</span> + x1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">f2</span>(x2: <span class="type">i32</span>) &#123;</span><br><span class="line"><span class="title function_ invoke__">f1</span>(x2 + <span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">k</span> = <span class="number">20</span>;</span><br><span class="line"><span class="title function_ invoke__">f1</span>(k + <span class="number">4</span>);</span><br><span class="line"><span class="title function_ invoke__">f2</span>(<span class="number">30</span>);</span><br></pre></td></tr></table></figure><p>让我们顺着这段代码的执行。看看下面表格的每个步骤对栈地址的描述：</p><table><thead><tr><th style="text-align:center">Operation</th><th style="text-align:center">1      2      3      4</th><th style="text-align:center">Description</th></tr></thead><tbody><tr><td style="text-align:center">k   -&gt;</td><td style="text-align:center">20</td><td style="text-align:center"><code>main</code>入口调用，将本地变量<code>k</code>的值20添加到栈</td></tr><tr><td style="text-align:center">x1  -&gt;</td><td style="text-align:center">20     24</td><td style="text-align:center"><code>f1</code>方法被调用，将参数<code>x1</code>的值24添加到栈</td></tr><tr><td style="text-align:center">y1  -&gt;</td><td style="text-align:center">20     24     26</td><td style="text-align:center"><code>f1</code>执行，将本地变量<code>y1</code>的值26添加到栈</td></tr><tr><td style="text-align:center">&lt;-  y1</td><td style="text-align:center">20     24</td><td style="text-align:center"><code>f1</code>结束，将它的本地变量<code>y1</code>的值26从栈中移除</td></tr><tr><td style="text-align:center">&lt;-  x1</td><td style="text-align:center">20</td><td style="text-align:center"><code>f1</code>结束，将它的参数<code>x1</code>的值24从栈中移除</td></tr><tr><td style="text-align:center">x2  -&gt;</td><td style="text-align:center">20     30</td><td style="text-align:center"><code>f2</code>方法被调用，将参数<code>x2</code>的值30添加到栈</td></tr><tr><td style="text-align:center">x1  -&gt;</td><td style="text-align:center">20     30     37</td><td style="text-align:center"><code>f1</code>方法被调用，将参数<code>x1</code>的值37添加到栈</td></tr><tr><td style="text-align:center">y1  -&gt;</td><td style="text-align:center">20     30     37     39</td><td style="text-align:center"><code>f1</code>执行，将本地变量<code>y1</code>的值39添加到栈</td></tr><tr><td style="text-align:center">&lt;-  y1</td><td style="text-align:center">20     30     37</td><td style="text-align:center"><code>f1</code>结束，将它的本地变量<code>y1</code>的值39从栈中移除</td></tr><tr><td style="text-align:center">&lt;-  x1</td><td style="text-align:center">20     30</td><td style="text-align:center"><code>f1</code>结束，将它的参数<code>x1</code>的值37从栈中移除</td></tr><tr><td style="text-align:center">&lt;-  x2</td><td style="text-align:center">20</td><td style="text-align:center"><code>f2</code>结束，将它的参数<code>x2</code>的值30从栈中移除</td></tr><tr><td style="text-align:center">&lt;-  k</td><td style="text-align:center"></td><td style="text-align:center"><code>main</code>方法结束，将本地变量<code>k</code>的值20从栈中移除</td></tr></tbody></table><p>实际上，不论函数在哪里调用，栈上添加数据，不论函数在哪里结束，这份数据从栈上移除。这里函数<code>f1</code>被调用了两次，这里<code>f1</code>生成的机器码不会已绝对地址作为它参数和本地变量的参考。相反，它使用的地址关联这个“栈点(stack pointer)”。初始化时，这个栈点包含这个栈地址的底部。在机器码中，栈分配的变量的地址被关联这个站点(stack pointer)。让我们再复述上面这个例子。</p><p>下表展示了，每个操作，该栈点所指向的绝对地址，SP表示“stack pointer”：</p><table><thead><tr><th style="text-align:center">Operation</th><th style="text-align:center">1      2      3      4</th><th style="text-align:left">Stack pointer</th><th>x1</th><th style="text-align:right">y1</th></tr></thead><tbody><tr><td style="text-align:center">k   -&gt;</td><td style="text-align:center">20</td><td style="text-align:left">base</td><td></td><td style="text-align:right"></td></tr><tr><td style="text-align:center">x1  -&gt;</td><td style="text-align:center">20     24</td><td style="text-align:left">base - 4</td><td></td><td style="text-align:right"></td></tr><tr><td style="text-align:center">y1  -&gt;</td><td style="text-align:center">20     24     26</td><td style="text-align:left">base - 12</td><td>SP + 4</td><td style="text-align:right">SP</td></tr><tr><td style="text-align:center">&lt;-  y1</td><td style="text-align:center">20     24</td><td style="text-align:left">base - 12</td><td>SP + 4</td><td style="text-align:right">SP</td></tr><tr><td style="text-align:center">&lt;-  x1</td><td style="text-align:center">20</td><td style="text-align:left">base - 12</td><td></td><td style="text-align:right"></td></tr><tr><td style="text-align:center">x2  -&gt;</td><td style="text-align:center">20     30</td><td style="text-align:left">base - 4</td><td></td><td style="text-align:right"></td></tr><tr><td style="text-align:center">x1  -&gt;</td><td style="text-align:center">20     30     37</td><td style="text-align:left">base - 8</td><td></td><td style="text-align:right"></td></tr><tr><td style="text-align:center">y1  -&gt;</td><td style="text-align:center">20     30     37     39</td><td style="text-align:left">base - 16</td><td>SP + 4</td><td style="text-align:right">SP</td></tr><tr><td style="text-align:center">&lt;-  y1</td><td style="text-align:center">20     30     37</td><td style="text-align:left">base - 16</td><td>SP + 4</td><td style="text-align:right">SP</td></tr><tr><td style="text-align:center">&lt;-  x1</td><td style="text-align:center">20     30</td><td style="text-align:left">base - 8</td><td></td><td style="text-align:right"></td></tr><tr><td style="text-align:center">&lt;-  x2</td><td style="text-align:center">20</td><td style="text-align:left">base - 4</td><td></td><td style="text-align:right"></td></tr><tr><td style="text-align:center">&lt;-  k</td><td style="text-align:center"></td><td style="text-align:left">base</td><td></td><td style="text-align:right"></td></tr></tbody></table><p>在程序的开始，SP值位于栈底部地址，栈的内容未被定义，以及变量<code>x1</code>和<code>y1</code>目前未被定义。</p><p>当系统调用主函数时，SP变成了<code>base - 4</code>，因为<code>main</code>函数没有参数，仅有一个本地变量<code>k</code>，它占4个字节。</p><p>当函数<code>f1</code>第一次被调用时，SP变成了<code>base - 12</code>，因为<code>f1</code>有一个参数，<code>x1</code>，以及一个本地变量<code>y1</code>，每个占4个字节。</p><p><code>y1</code>的创建和销毁没有改变SP，因为它函数调用时已经设置了适当的值。</p><p>当函数<code>f1</code>结束，SP在函数调用前被存储在值中，此时为<code>base - 4</code>。</p><p>当函数<code>f2</code>被调用，SP变成<code>base - 8</code>，以为参数<code>x2</code>增加了4个字节。</p><p>当<code>f1</code>再一次被调用，SP变成了<code>base - 16</code>，因为它按前一次的大小递减了8个字节。</p><p>当<code>f1</code>、<code>f2</code>和<code>main</code>函数结束后，SP递增，先变成<code>base - 8</code>，然后<code>base - 4</code>，然后<code>base</code>。</p><p>最后两列展示了，在函数<code>f1</code>中，参数<code>x1</code>的值总是SP - 4；以及本地变量<code>y1</code>的值总是SP自身。</p><h2 id="Limitations-of-Stack-Allocation"><a class="header-anchor" href="#Limitations-of-Stack-Allocation">¶</a>Limitations of Stack Allocation</h2><p>栈分配非常高效和方便，但有一些局限：</p><ul><li>栈的大小通常有限。它的大小由操作系统决定，并可以由某些程序压缩，但在数量级上，只有几兆的字节。</li><li>Rust仅允许在栈上分配那些编译时已经知道大小的类型，例如基本数据类型和数组，不能对诸如vector这种运行期确定大小的类型进行栈空间的分配。</li><li>不能显式地在栈上分配(allocate)或回收(deallocate)对象。任何变量的自动分配，都需要函数签名被调用实现。即使是声明在函数的内部块，也只能有该函数结束进行回收，这种行为这种行为不能被覆盖。</li></ul><p>对于第二点，我们实际上声明了本地变量<code>Vec&lt;_&gt;</code>，这个对象会被分配到这个栈上，但在背后，这个对象会在栈之外分配一些内存。</p><p>对于第一点，可以构建一个例子超出栈的容量。</p><p>注意：下面的代码最后在虚拟机执行，因为它会强制系统的重启。</p><p>下面是一个超栈容量的例子，它会触发“stack overflow”：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> SIZE: <span class="type">usize</span> = <span class="number">100_000</span>;</span><br><span class="line"><span class="keyword">const</span> N_ARRAY: <span class="type">usize</span> = <span class="number">1_000_000</span>;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">create_array</span>() <span class="punctuation">-&gt;</span> [<span class="type">u8</span>; SIZE] &#123; [<span class="number">0u8</span>; SIZE] &#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">recursive_func</span>(n: <span class="type">usize</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">a</span> = <span class="title function_ invoke__">create_array</span>();</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>, N_ARRAY - n + <span class="number">1</span>, a[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">if</span> n &gt; <span class="number">1</span> &#123; <span class="title function_ invoke__">recursive_func</span>(n - <span class="number">1</span>) &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">recursive_func</span>(N_ARRAY);</span><br></pre></td></tr></table></figure><p>这段程序很可能造成崩溃，典型地抛出类似如“Segmentation fault”的消息。事实上，它在栈上分配超过了100GB的数据。</p><p>假设目标不是一个微控制器，栈的大小应该大于100KB；因此它可以分配至少一个100KB大小的数组。然而，它不可能分配1000的数组。</p><p>下面测试这段程序。</p><p>声明<code>SIZE</code>和<code>N_ARRAY</code>和函数<code>create_array</code>和<code>recursive_func</code>之后，仅有一条语句调用了<code>recursive_func</code>函数，入参是<code>N_ARRAY</code>。</p><p>函数<code>recursive_func</code>首先声明了一个变量，并将<code>create_array</code>函数调用的结果初始化这个变量；然后打印两个数；接着，如果参数<code>n</code>大于1，调用函数自身，因此它是一个递归函数。</p><p>注意递归函数的每次调用传递了参数 - 1，直到参数<code>n</code>不大于1，最后函数结束。</p><p>如果<code>N_ARRAY</code>是3，首次调用<code>n</code>为3，第二次为2，第三次1，接着递归结束。这种情况，<code>recursive_func</code>将被调用3次。</p><p>事实上，递归函数的调用次数，等于入参的值，这里例子接近一百万。</p><p>现在，观察函数<code>create_array</code>。它简单地返回了一个100,1000字节的数组。该数组被分配到一个变量<code>a</code>，它的推断类型是<code>[u8; 100000]</code>。</p><p>当递归函数<code>recursive_func</code>被调用时变量<code>a</code>进行了内存分配，仅当函数结束进行回收。因此，每次递归调用，会产生一个<code>a</code>分配的拷贝，上一次的拷贝没有被回收。结果，这段代码在栈上对每一个十万字节，分配了一个百万数组。当然，这实际不可能做到，打印几行后，程序结束，并输出一个错误信息，如“Segmentation fault” 或 “Stack overflow”。</p><p>最后的输出信息可能会是“83 0”。</p><p>第一个数表明了递归执行了多少次，以及表示多少个数组被分配在内存。如果输出的数字是83，意味着超过8.3百万的字节被分配在栈空间上。</p><p>第二个数，表示数组的第一个元素，这里仅做一个可能的编译优化。事实上，如果变量<code>a</code>没有被读取，编译器会抛出一个告警，这个告警表示可以移除它，以提高程序性能。</p><h2 id="Heap-Allocation"><a class="header-anchor" href="#Heap-Allocation">¶</a>Heap Allocation</h2><p>可惜的是栈溢出会让程序崩溃，仍然有很多内存没被使用。堆分配带来了转机：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> SIZE: <span class="type">usize</span> = <span class="number">100_00</span>;</span><br><span class="line"><span class="keyword">const</span> N_ARRAY: <span class="type">usize</span> = <span class="number">1_000_000</span>;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">create_array</span>() <span class="punctuation">-&gt;</span> <span class="type">Box</span>&lt;[<span class="type">u8</span>; SIZE]&gt; &#123; <span class="type">Box</span>:: <span class="title function_ invoke__">new</span>([<span class="number">0u8</span>; SIZE]) &#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">recursive_func</span>(n: <span class="type">usize</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">a</span> = <span class="title function_ invoke__">create_array</span>();</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>, N_ARRAY - n + <span class="number">1</span>, a[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">if</span> n &gt; <span class="number">1</span> &#123; <span class="title function_ invoke__">recursive_func</span>(n - <span class="number">1</span>) &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">recursive_func</span>(N_ARRARY);</span><br></pre></td></tr></table></figure><p>尽管最后程序还是由于栈溢出或内存不足导致了崩溃，比起先前的程序打印了更多的行，这意味着已经成功分配了更多的内存。</p><p>对比发现，仅在第三行，将函数<code>create_array</code>的返回类型，改为了<code>Box&lt;u8; SIZE]&gt;</code>，它是个“boxed”的数组。</p><p>在Rust中，不仅可以装箱(box)数组，你可以装箱更多的对象。Rust标准包含有泛型结构类型<code>Box&lt;T&gt;</code>。类型为<code>Box&lt;T&gt;</code>的对象，是另外真实对象的一个引用，泛型<code>T</code>即为所引用的对象，它被放置在内存的“<code>堆(heap)</code>”，区别于静态区域和栈。</p><p>函数<code>crreate_array</code>的函数体是<code>Box::new([0u8; SIZE])</code>。该表达式表示一个新函数声明的调用在<code>Box</code>范围内。该函数接受一个SIZE字节数组的参数，参数全部为0.该<code>Box::new</code>函数的行为和目的，是将一个对象分配在堆(heap)，这个堆需要足够大，以容纳接收参数的拷贝，这些接收的参数从新分配的对象复制，并返回对象的地址。</p><p>因此，栈空间上占领的，仅是变量<code>a</code>的指针。实际的数组被分配在堆上。实际上<code>Box::new</code>函数将数组临时挂在栈上，一旦函数返回即对其进行回收。这样一来，stack就上可以容纳一个百万字节的数组实例了。</p><h2 id="Heap-Management"><a class="header-anchor" href="#Heap-Management">¶</a>Heap Management</h2><p>让我们看看堆内存如何管理的。</p><p>当一段程序开始，它的堆几乎为空(或非常小)。</p><p>任何时刻，堆上的每个字节可能有两种状态：“驻留，reserved”(又名，“used”)，“释放，free”(又名，“unused”)</p><p>当程序需要在堆分配一个对象，首先会搜索堆至少与要分配的对象大小相同的空闲字节序列。如果有这样一个字节序列，程序存储与该对象大小相同的一个字序列。相反，如果堆没有足够的序列，会向操作系统请求扩展堆的大小，这样一来对象就给分配好了。</p><p>当堆中的一个分配的对象不再被需要，它可以显式地回收，返回所释放的内存空间。</p><p>注意，通常一个进程的堆大小不会缩减，这是由于操作系统内存页机制决定的。</p><p>堆管理的一个严重问题是可能有碎片(fragment)。如果一个<code>f64</code>类型值为百万，被分配在一个堆中，那么这个堆必须至少大于8MB。如果内存偶数位的对象从堆中回收，便有一半百万的释放空间，将近4MB，交错有一半百万的存储空间。有许多空闲的空间，如果需要分配一个对象字节大于9MB，这些空间不够用，你需要再一次扩大堆空间。</p><p>另外，在堆内存搜索一个足够大空间的幼稚算法会很浪费。有足够聪明的搜索算法可以提升堆分配的性能，但会导致堆回收更耗费。</p><p>因此，栈分配总是比堆分配高效的多，不论是时间效率还是内存空间上。堆分配仅当最后一个对象回收时，这种行为和栈类似地情况下，才接近栈的效率。当然，这种需求在程序来说不允许这种分配模式。</p><h2 id="The-Behavior-of-Box"><a class="header-anchor" href="#The-Behavior-of-Box">¶</a>The Behavior of Box</h2><p>如我们所说，对于任何类型的<code>Box&lt;T&gt;</code>变量，只要包含该变量的函数被调用，一个指针会被指派在栈上。相反，堆分配出现在仅当<code>Box::new</code>被调用时。因此，<code>Box&lt;T&gt;</code>的分配会出现在两个地方：一是指针，二是其引用对象。</p><p>类似地，内存回收也出现在两个地方。一是包含该变量的函数中止，栈上的指针回收；二是堆空间对象的回收，堆的回收可能会比栈提前很多。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>(p: &amp;<span class="type">f64</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">a</span> = <span class="type">Box</span>::<span class="title function_ invoke__">new</span>(*p);</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">b</span> = <span class="type">Box</span>::<span class="title function_ invoke__">new</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;:?&#125;&quot;</span>, *a, *b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">c</span> = <span class="type">Box</span>::<span class="title function_ invoke__">new</span>(<span class="literal">true</span>);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot; &#123;&#125; &#123;&#125;&quot;</span>, a, c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">f</span>(&amp;<span class="number">3.4</span>);</span><br></pre></td></tr></table></figure><p>结果打印：“<code>3.4 [1, 2, 3] 3.4 true</code>”</p><p>当<code>main</code>函数被调用，类型为<code>f64</code>的值3.4，被分配在栈，并且不关联任何变量。</p><p>当函数<code>f</code>被调用，栈空间指派了4个指针，一个是参数<code>p</code>，另外三个是变量<code>a</code>，<code>b</code>和<code>c</code>。</p><p>当函数第一条语句被执行，一个<code>f64</code>的对象被指派在堆上，它的值被表达式<code>*p</code>初始化为3.4。</p><p>当函数第二条语句被执行，一个有三个值，类型为<code>i32</code>的数组被初始化并指派在堆空间，它在堆上的地址被用于初始化变量<code>b</code>。第三条语句打印了<code>a</code>和<code>b</code>引用值。变量<code>c</code>不能在这里打印，因为还没有初始化。接着，<code>b</code>的范围结束，因此<code>b</code>引用的数组地址从堆空间释放，作为其它指派使用。</p><p>最后一个动作比较重要。当<code>b</code>退出它的作用范围，它不再可用；自然地，对应堆上的引用被释放。</p><p>当函数的第四个语句被执行，一个布尔型变量被初始化并指派在堆空间，它在堆上的地址被用于初始化变量<code>c</code>。它可能会重合在先前数组释放的空地址上。第五条语句打印输出<code>a</code>和<code>c</code>的引用值。同样对于box来说，类似于简单引用，星号是可选的，可以省略。变量<code>b</code>不能在这里打印，因为它不可见。<code>a</code>和<code>c</code>的范围结束后，对应它们在堆上的引用立即被释放。同时函数结束，4个指针也从栈空间释放。</p><p>最后，<code>main</code>函数结束，未命名的3.4值对象从栈空间释放。</p><p>这里这样做看似毫无意义，但值得的是，如果几个变量都声明在同一个范围(scope)，它们会按照声明的相反顺序退出范围。在我们的例子中，<code>a</code>在<code>c</code>之前，因此<code>a</code>会在<code>c</code>之后退出。这导致了堆空间上<code>a</code>的引用的释放，会发生在<code>c</code>引用释放之后。这样做的好处是，堆的效率，等同于栈，因为堆顶的地址总是先被释放掉。</p><p>注意这里没有回收函数的调用。实际上Rust语言和它的标准库没有任何释放空间、回收内存的函数调用。这主要为了防止忘记调用它们。</p><h2 id="Similarity-with-C-and-C"><a class="header-anchor" href="#Similarity-with-C-and-C">¶</a>Similarity with C and C++</h2><p>在C和C<ins>中你可以使用堆空间。在C语言，你可以用<code>malloc</code>、<code>calloc</code>和<code>realloc</code>函数在堆空间指派一个buffer，以及用<code>free</code>函数释放指派的buffer。另外，在C</ins>语言，在堆空间可以分别用<code>new</code>和<code>new[]</code>给一个对象或一个数组对象进行分配。以及分别<code>delete</code>和<code>delete[]</code>对于<code>new</code>和<code>new[]</code>的操作进行回收。</p><p>实际上，Rust的<code>Box&lt;T&gt;</code>泛型结构类型，跟上面堆分配方式有很大出入。自2011年，标准C++出现了一个和<code>Box&lt;T&gt;</code>十分类似地类型，<code>unique_ptr&lt;T&gt;</code>类模板。就是所谓的“智能指针(smart pointer)”，它和<code>Box&lt;T&gt;</code>类似，在堆空间分配对象，退出范围后回收。</p><h2 id="Boxing-and-Unboxing"><a class="header-anchor" href="#Boxing-and-Unboxing">¶</a>Boxing and Unboxing</h2><p>因此，对于给定泛型类型<code>T</code>，<code>Box&lt;T&gt;</code>和<code>&amp;T</code>都是一类引用。让我们看它们如何交互：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">a</span> = <span class="number">7</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">a_box</span>: <span class="type">Box</span>&lt;<span class="type">i32</span>&gt;;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">a_ref</span>: &amp;<span class="type">i32</span> = &amp;a;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;;&quot;</span>, a, *a_ref);</span><br><span class="line">a_box = <span class="type">Box</span>::<span class="title function_ invoke__">new</span>(a + <span class="number">2</span>);</span><br><span class="line">a_ref = &amp;*a_box;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot; &#123;&#125; &#123;&#125; &#123;&#125;&quot;</span>, a, *a_ref, *a_box);</span><br></pre></td></tr></table></figure><p>结果输出：“7 7; 7 9 9 ”。</p><p>栈空间包含三个对象：数值7，一个由变量<code>a</code>表示；以及另外两个指针，由<code>a_box</code>和<code>a_ref</code>变量表示。指针的声明在第二行，<code>a_box</code>的初始化发生在第五行。</p><p>这里的指针变量带上类型标注，由于可以由类型推断得出，这里可以省略不写。然而，它展示了<code>a_box</code>是一个“智能(smart)”指针，<code>a_ref</code>是一个“垃圾(dumb)”指针。意味着，<code>a_box</code>会照料其引用对象的分配和回收，而<code>a_ref</code>则不会。</p><p>这里有两处<code>print</code>宏调用，星号(asterisk)可以省略。</p><p>在第五和第六行，两个指针被指派了一个值。对于<code>a_box</code>，它是一个初始化，不需要作mutable；相反，<code>a_ref</code>已经初始化，需要带<code>mut</code>进行值再分配。</p><p>第三行仅是将<code>a_ref</code>变量的值设置为<code>a</code>变量的地址。第五行有点复杂，它分配了一个<code>i32</code>对象在堆上，用表达式<code>a + 2</code>初始化这个对象，在设置<code>a_box</code>变量值为该对象的地址。</p><p>在第六行，<code>a_box</code>是一个指针，它是<code>a_ref</code>变量的一个拷贝；换句话说，垃圾指针指向了和智能指针相同的对象上。尽管委派不能简化为<code>a_ref = a_box;</code>，因为两个变量有不同的类型，即使显式地<code>a_ref = a_box as &amp;i32</code>也是不合法的。相反，使用<code>*</code>号的反引用，然后再用<code>&amp;</code>允许将一个<code>Box</code>转化为一个引用，或更好的说法是，Box允许我们获取Box对象所引用的地址。</p><p>要注意：<code>a_box = &amp;*a_ref;</code>表达式的转换仍然是不合法的。实际上，表达式<code>&amp;*a_ref</code>仍然是类型<code>&amp;i32</code>，它不能指派给一个类型<code>Box&lt;i32&gt;</code>的变量。</p><p>最后，在程序的结尾，首先是<code>a_ref</code>在其范围(scope)退出，不做任何处理；然后<code>a_box</code>再从它的范围退出，将其在堆上的引用对象进行回收；然后<code>a</code>退出其范围，不做任何处理；接着三个对象从栈上回收释放。</p><p>下面程序是类似地：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">a</span> = <span class="number">7</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">a_box</span>: <span class="type">Box</span>&lt;<span class="type">i32</span>&gt;;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">a_ref</span>: &amp;<span class="type">i32</span> = &amp;a;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;;&quot;</span>, a, a_ref);</span><br><span class="line">a_box = <span class="type">Box</span>::<span class="title function_ invoke__">new</span>(a + <span class="number">2</span>);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot; &#123;&#125; &#123;&#125; &#123;&#125;;&quot;</span>, a, a_ref, a_box);</span><br><span class="line">a_box = <span class="type">Box</span>::<span class="title function_ invoke__">new</span>(*a_ref);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot; &#123;&#125; &#123;&#125; &#123;&#125;&quot;</span>, a, a_ref, a_box);</span><br></pre></td></tr></table></figure><p>结果打印：“<code>7 7; 7 7 9; 7 7 7</code>”。</p><p>这里的<code>a_box</code>是可变的，<code>a_ref</code>是不可变的。</p><p>倒数第二条语句重新指派了box。概念上，堆上的回收，紧跟着相同类型对象的一次分配，只是值不同，行为类似于栈top的处理。</p><h2 id="Register-Allocation"><a class="header-anchor" href="#Register-Allocation">¶</a>Register Allocation</h2><p>在汇编语言(assembly language)，有时也包括C语言，会用到“寄存器分配(processor register allocation)”的概念。在Rust中没有这个概念，因为它约束于具体的计算机硬件架构。然而，代码优化器可以将栈分配的对象地址，转移到寄存器，只要程序得出的结果等价即可。因此，源码层面上出现的是栈对象的分配，在机器码层面上可能是对象在寄存器的分配。这当然依赖于目标的架构，因为寄存器越多，指派到寄存上的变量也就越多。</p><p>寄存器分配通常跟开发者无瓜葛。但如果使用源码级调试高度优化程序的内存时，你会发现寄存器分配的变量不见了。因此，当调试时，你应该告知编译器生成非优化的(non-optimized)执行代码，除非你想直接调试机器码。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本章覆盖有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;各种各样的内存分配，性能特性，局限性&lt;/li&gt;
&lt;li&gt;如何给一个对象指定那种内存分配&lt;/li&gt;
&lt;li&gt;引用和Box的区别&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    <content src="https://galudisu.info/%3Cp%3E%E6%9C%AC%E7%AB%A0%E8%A6%86%E7%9B%96%E6%9C%89%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E5%90%84%E7%A7%8D%E5%90%84%E6%A0%B7%E7%9A%84%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%EF%BC%8C%E6%80%A7%E8%83%BD%E7%89%B9%E6%80%A7%EF%BC%8C%E5%B1%80%E9%99%90%E6%80%A7%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E7%BB%99%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E6%8C%87%E5%AE%9A%E9%82%A3%E7%A7%8D%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%3C/li%3E%3Cli%3E%E5%BC%95%E7%94%A8%E5%92%8CBox%E7%9A%84%E5%8C%BA%E5%88%AB%3C/li%3E%3C/ul%3E%3Cspan%20id=%22more%22%3E%3C/span%3E%3Ch2%20id=%22The-Various-Kinds-of-Allocation%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#The-Various-Kinds-of-Allocation%22%3E%C2%B6%3C/a%3EThe%20Various%20Kinds%20of%20Allocation%3C/h2%3E%3Cp%3E%E8%A6%81%E7%90%86%E8%A7%A3Rust%E8%AF%AD%E8%A8%80%EF%BC%8C%E4%B9%9F%E5%8F%AF%E4%BB%A5%E8%AF%B4%E5%85%B6%E5%AE%83%E7%B3%BB%E7%BB%9F%E8%AF%AD%E8%A8%80%EF%BC%8C%E4%BE%8B%E5%A6%82C%E8%AF%AD%E8%A8%80%EF%BC%8C%E5%AF%B9%E4%BA%8E%E7%90%86%E8%A7%A3%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E6%98%AF%E9%87%8D%E8%A6%81%E7%9A%84%EF%BC%8C%E4%BE%8B%E5%A6%82%E9%9D%99%E6%80%81%E5%88%86%E9%85%8D(static%20allocation)%EF%BC%8C%E6%A0%88%E5%88%86%E9%85%8D(stack%20allocation)%EF%BC%8C%E5%A0%86%E5%88%86%E9%85%8D(heap%20allocation)%E3%80%82%3C/p%3E%3Cp%3E%E6%9C%AC%E7%AB%A0%E5%AE%8C%E5%85%A8%E8%87%B4%E5%8A%9B%E4%BA%8E%E8%AF%A5%E7%B1%BB%E9%97%AE%E9%A2%98%E3%80%82%E5%8F%A6%E5%A4%96%EF%BC%8C%E6%88%91%E4%BB%AC%E5%B0%86%E7%9C%8B%E5%88%B0%E5%9B%9B%E7%A7%8D%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3EIn%20processor%20registers%3C/li%3E%3Cli%3EStatic%3C/li%3E%3Cli%3EIn%20the%20stack%3C/li%3E%3Cli%3EIn%20the%20heap%3C/li%3E%3C/ul%3E%3Cp%3E%E5%9C%A8C%E6%88%96C%3Cins%3E%E8%AF%AD%E8%A8%80%EF%BC%8C%E9%9D%99%E6%80%81%E5%88%86%E9%85%8D%E6%8C%87%E7%9A%84%E6%98%AF%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F%E5%92%8C%E4%BD%BF%E7%94%A8%3Ccode%3Estatic%3C/code%3E%E5%85%B3%E9%94%AE%E5%AD%97%E5%A3%B0%E6%98%8E%E7%9A%84%E5%8F%98%E9%87%8F%EF%BC%9B%E6%A0%88%E5%88%86%E9%85%8D%E6%98%AF%E6%89%80%E6%9C%89non-static%E6%9C%AC%E5%9C%B0%E5%8F%98%E9%87%8F%EF%BC%8C%E4%BB%A5%E5%8F%8A%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%EF%BC%9B%E5%A0%86%E5%88%86%E9%85%8D%E5%88%99%E6%98%AF%E8%B0%83%E7%94%A8%E4%BA%86C%E8%AF%AD%E8%A8%80%E6%A0%87%E5%87%86%E5%BA%93%3Ccode%3Emalloc%3C/code%3E%E5%87%BD%E6%95%B0%E7%9A%84%EF%BC%8C%E6%88%96C%3C/ins%3E%E6%93%8D%E4%BD%9C%E7%AC%A6%E7%9A%84%E3%80%82%3C/p%3E%3Ch2%20id=%22Linear-Addressing%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Linear-Addressing%22%3E%C2%B6%3C/a%3ELinear%20Addressing%3C/h2%3E%3Cp%3E%E4%BB%BB%E4%BD%95%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%EF%BC%8C%E6%9C%89%E4%B8%80%E5%9D%97%E5%8F%AF%E8%AF%BB%E5%92%8C%E5%8F%AF%E5%86%99%E5%86%85%E5%AD%98%EF%BC%8C%E5%8D%B3RAM%EF%BC%8C%E5%AE%83%E7%94%B1%E4%B8%80%E7%B3%BB%E5%88%97%E9%95%BF%E5%AD%97%E8%8A%82%E6%9E%84%E6%88%90%EF%BC%8C%E7%94%B1%E5%AE%83%E4%BB%AC%E7%9A%84%E5%9C%B0%E5%9D%80%E8%AE%BF%E9%97%AE%E3%80%82%E5%86%85%E5%AD%98%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%AD%97%E8%8A%82%E4%BD%8D%E7%BD%AE%E4%B8%BA0%EF%BC%8C%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%AD%97%E8%8A%82%E7%9A%84%E4%BD%8D%E7%BD%AE%E7%AD%89%E4%BA%8E%E5%86%85%E5%AD%98%E9%95%BF%E5%BA%A6%E5%87%8F%E4%B8%80%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%BA%E4%BA%86%E7%AE%80%E6%98%8E%E8%B5%B7%E8%A7%81%EF%BC%8C%E7%9B%AE%E5%89%8D%E6%9C%89%E4%B8%A4%E7%A7%8D%E7%B1%BB%E5%9E%8B%E7%9A%84%E8%AE%A1%E7%AE%97%E6%9C%BA%EF%BC%9A%3C/p%3E%3Cpre%3E%3Ccode%3E-%20%E5%90%8C%E4%B8%80%E6%97%B6%E5%88%BB%E5%8D%95%E4%B8%80%E7%BA%BF%E7%A8%8B%EF%BC%8C%E8%AF%A5%E8%BF%9B%E7%A8%8B%E7%9B%B4%E6%8E%A5%E4%BD%BF%E7%94%A8%E7%89%A9%E7%90%86%E5%86%85%E5%AD%98%E5%9C%B0%E5%9D%80%E3%80%82%E8%BF%99%E7%A7%B0%E4%B8%BA%E2%80%9C%E5%AE%9E%E6%97%B6%E5%86%85%E5%AD%98%E7%B3%BB%E7%BB%9F(real-memory%20systems)%E2%80%9D%E3%80%82-%20%E5%A4%9A%E9%81%93%E7%A8%8B%E5%BA%8F%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%EF%BC%8C%E4%B8%BA%E6%AF%8F%E4%B8%AA%E8%BF%9B%E7%A8%8B%E6%8F%90%E4%BE%9B%E4%B8%80%E4%B8%AA%E8%99%9A%E6%8B%9F%E5%9C%B0%E5%9D%80%E7%A9%BA%E9%97%B4%E3%80%82%E8%BF%99%E7%B1%BB%E7%A7%B0%E4%B8%BA%E2%80%9C%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E7%B3%BB%E7%BB%9F(virtual-memory%20systems)%E2%80%9D%3C/code%3E%3C/pre%3E%3Cp%3E%E5%AF%B9%E4%BA%8E%E7%AC%AC%E4%B8%80%E7%A7%8D%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B1%BB%E5%9E%8B%EF%BC%8C%E7%8E%B0%E5%9C%A8%E4%BB%85%E4%BD%9C%E4%B8%BA%E6%8E%A7%E5%88%B6%E5%99%A8%E4%BD%BF%E7%94%A8%EF%BC%8C%E6%B2%A1%E6%9C%89%E5%AE%9E%E8%B4%A8%E4%B8%8A%E7%9A%84%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F(%E6%89%80%E4%BB%A5%E8%BF%99%E7%B1%BB%E4%B9%9F%E7%A7%B0%E4%B8%BA%E2%80%9C%E8%A3%B8%E6%9C%BAbare-metal%20system%E2%80%9D)%EF%BC%8C%E6%88%96%E8%80%85%E6%98%AF%E4%B8%80%E4%B8%AA%E7%B3%BB%E7%BB%9F%E9%A9%BB%E7%95%99%E5%9C%A8%E7%B3%BB%E7%BB%9F%E7%9A%84%E4%B8%80%E5%B0%8F%E5%9D%97%EF%BC%8C%E8%BF%99%E7%A7%8D%E5%86%85%E5%AD%98%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%9C%B0%E5%9D%80%E8%B7%9F%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%B7%AE%E4%B8%8D%E5%A4%9A%E5%A4%A7%E3%80%82%3C/p%3E%3Cp%3E%E5%AF%B9%E4%BA%8E%E7%AC%AC%E4%BA%8C%E7%A7%8D%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B1%BB%E5%9E%8B%EF%BC%8C%E8%AE%BF%E9%97%AE%E5%86%85%E5%AD%98%E7%9A%84%E8%83%BD%E5%8A%9B%E7%94%B1%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%8E%A7%E5%88%B6%EF%BC%8C%E5%AE%83%E8%BF%90%E8%A1%8C%E5%9C%A8%E4%B8%80%E4%B8%AAprivileged%20mode(%E5%8D%B3%E6%9D%83%E9%99%90%E6%A8%A1%E5%BC%8F%EF%BC%8C%E4%B9%9F%E7%A7%B0%E4%B8%BAprotected%20mode%EF%BC%8C%E6%88%96kernel%20mode)%EF%BC%8C%E5%AE%83%E5%B0%86%E5%86%85%E5%AD%98%E7%9A%84%E4%B8%80%E9%83%A8%E5%88%86%E5%88%86%E9%85%8D%E7%BB%99%E5%90%84%E4%B8%AA%E6%AD%A3%E5%9C%A8%E8%BF%90%E8%A1%8C%E7%9A%84%E8%BF%9B%E7%A8%8B%E3%80%82%3C/p%3E%3Cp%3E%E8%87%B3%E6%AD%A4%EF%BC%8C%E5%9C%A8%E5%A4%9A%E9%81%93%E7%A8%8B%E5%BA%8F%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%EF%BC%8C%E8%BF%9B%E7%A8%8B%E2%80%9C%E7%9C%8B%E8%A7%81%E2%80%9D%E7%9A%84%E5%86%85%E5%AD%98%E8%B7%9F%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E2%80%9C%E7%9C%8B%E8%A7%81%E2%80%9D%E7%9A%84%E5%86%85%E5%AD%98%E4%B8%8D%E4%B8%80%E6%A0%B7%E3%80%82%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%98%AF%E4%B8%80%E4%B8%AAshell%EF%BC%8C%E6%88%96%E7%A7%B0%E4%B8%BA%E5%A3%B3%E3%80%82%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BB%99%E4%BA%88%E8%BF%9B%E7%A8%8B%E6%9D%83%E9%99%90%E8%AE%BF%E9%97%AE%E7%9A%84%E5%86%85%E5%AD%98%E6%9C%89200%E5%A4%9A%E4%B8%AA%E5%AD%97%E8%8A%82%EF%BC%8C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%BB%A1%E8%B6%B3%E8%BF%99%E7%A7%8D%E9%9C%80%E6%B1%82%E7%94%B1%E8%AF%A5%E9%A9%BB%E7%95%99%E7%9A%84%E8%BF%9B%E7%A8%8B%E5%AE%9E%E7%8E%B0%E3%80%82%E4%B9%9F%E5%B0%B1%E6%98%AF%E8%AF%B4%EF%BC%8C%E4%B8%80%E6%AE%B5%E6%9C%BA%E5%99%A8%E5%9C%B0%E5%9D%80300%E5%88%B0499%E7%9A%84%E5%86%85%E5%AD%98%EF%BC%8C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%92%8C%E8%BF%99%E4%B8%AA%E5%88%86%E9%85%8D%E4%BA%86200%E5%AD%97%E8%8A%82%E7%9A%84%E8%BF%9B%E7%A8%8B%E9%80%9A%E4%BF%A1%EF%BC%8C%E4%BD%86%E4%B8%8D%E6%98%AF%E5%92%8C%E5%86%85%E5%AD%98%E7%9A%84%E5%BC%80%E5%A7%8B%E5%9C%B0%E5%9D%80300%E9%80%9A%E4%BF%A1%E3%80%82%E5%AE%9E%E8%B4%A8%E4%B8%8A%E6%AF%8F%E4%B8%AA%E8%BF%9B%E7%A8%8B%E6%9C%89%E4%B8%80%E4%B8%AA%E7%89%B9%E5%AE%9A%E7%9A%84%E5%9C%B0%E5%9D%80%E7%A9%BA%E9%97%B4%EF%BC%8C%E7%A7%B0%E4%B8%BA%E2%80%9Cvirtual%E2%80%9D%EF%BC%8C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AF%B9%E7%89%A9%E7%90%86%E5%86%85%E5%AD%98%E7%9A%84%E6%98%A0%E5%B0%84%EF%BC%8C%E7%A7%B0%E4%B8%BA%E2%80%9Creal%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E5%BD%93%E4%B8%80%E4%B8%AA%E8%BF%9B%E7%A8%8B%E8%AE%BF%E9%97%AE%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%86%85%E5%AD%98%EF%BC%8C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%8F%AA%E6%98%AF%E4%BF%9D%E7%95%99%E8%AF%A5%E8%BF%9B%E7%A8%8B%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E7%9A%84%E4%B8%80%E9%83%A8%E5%88%86%EF%BC%8C%E4%B8%8D%E4%BC%9A%E6%9C%89%E7%9C%9F%E5%AE%9E%E5%86%85%E5%AD%98%E6%8F%90%E4%BE%9B%E7%BB%99%E8%AF%A5%E8%BF%9B%E7%A8%8B%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%AF%B9%E4%BA%8E%E9%9D%9E%E5%B8%B8%E5%A4%A7%E7%9A%84%E5%86%85%E5%AD%98%E9%83%A8%E5%88%86%EF%BC%8C%E8%BF%99%E4%B8%AA%E5%88%86%E9%85%8D%E4%B9%9F%E9%9D%9E%E5%B8%B8%E5%BF%AB%E3%80%82%3C/p%3E%3Cp%3E%E5%8F%AA%E8%A6%81%E8%BF%9B%E7%A8%8B%E5%B0%9D%E8%AF%95%E8%AE%BF%E9%97%AE%E5%86%85%E5%AD%98%EF%BC%8C%E5%8D%B3%E4%BD%BF%E6%98%AF%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B8%BA0%EF%BC%8C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%84%8F%E8%AF%86%E5%88%B0%E8%BF%9B%E7%A8%8B%E6%98%AF%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E7%89%87%E6%AE%B5%E4%BB%A5%E5%8F%8A%E6%B2%A1%E6%9C%89%E6%98%A0%E5%B0%84%E7%9C%9F%E5%AE%9E%E5%86%85%E5%AD%98%EF%BC%8C%E7%AB%8B%E5%8D%B3%E4%B8%BA%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E5%93%8D%E5%BA%94%E7%9C%9F%E5%AE%9E%E5%86%85%E5%AD%98%E7%89%87%E6%AE%B5%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%A4%84%E7%90%86%E6%B2%A1%E6%9C%89%E7%9B%B4%E6%8E%A5%E4%BD%9C%E7%94%A8%E5%9C%A8%E7%9C%9F%E5%AE%9E%E7%9A%84%E5%86%85%E5%AD%98%E4%B8%8A%EF%BC%8C%E8%80%8C%E6%98%AF%E4%BD%9C%E7%94%A8%E5%9C%A8%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%8F%90%E4%BE%9B%E7%9A%84%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E4%B8%8A%EF%BC%8C%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98(%E8%99%9A%E6%8B%9F%E5%AD%98%E5%82%A8)%E5%8C%85%E5%90%AB%E5%AF%B9%E7%9C%9F%E5%AE%9E%E5%9C%B0%E5%9D%80%E7%9A%84%E6%98%A0%E5%B0%84%E3%80%82%3C/p%3E%3Cp%3E%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E9%80%9A%E5%B8%B8%E4%B8%80%E4%B8%AA%E5%8D%95%E4%B8%80%E8%BF%9B%E7%A8%8B%E7%9A%84%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E7%94%9A%E8%87%B3%E5%A4%A7%E4%BA%8E%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E6%95%B4%E4%B8%AA%E5%AE%9E%E6%97%B6%E5%86%85%E5%AD%98%E3%80%82%E4%BE%8B%E5%A6%82%EF%BC%8C%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%8F%AF%E4%BB%A5%E6%9C%89%E4%B8%80%E4%B8%AA10%E4%BA%BF%E5%AD%97%E8%8A%82%E7%9A%84%E7%89%A9%E7%90%86%E5%86%85%E5%AD%98%EF%BC%8C%E5%AF%B9%E4%BA%8E%E8%AF%A5%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%8A%E8%B7%914%E4%B8%AA%E8%BF%9B%E7%A8%8B%EF%BC%8C%E6%AF%8F%E4%B8%AA%E8%BF%9B%E7%A8%8B%E5%8F%AF%E4%BB%A5%E6%9C%8930%E4%BA%BF%E5%AD%97%E8%8A%82%E7%9A%84%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E3%80%82%E5%A6%82%E6%9E%9C%E6%89%80%E6%9C%89%E7%9A%84%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E6%98%A0%E5%B0%84%E5%88%B0%E7%9C%9F%E5%AE%9E%E5%86%85%E5%AD%98%EF%BC%8C%E8%A6%81%E5%A4%84%E7%90%86%E8%BF%99%E7%A7%8D%E6%83%85%E5%86%B5%EF%BC%8C%E8%A6%81%E6%B1%82%E6%9C%8912%E4%BA%BF%E5%AD%97%E8%8A%82%E7%9A%84%E5%86%85%E5%AD%98%E3%80%82%E7%9B%B8%E5%8F%8D%EF%BC%8C%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E7%9A%84%E5%A4%A7%E9%83%A8%E5%88%86%E5%AD%97%E8%8A%82%E6%B2%A1%E6%9C%89%E8%A2%AB%E6%98%A0%E5%B0%84%E5%88%B0%E7%9C%9F%E5%AE%9E%E5%86%85%E5%AD%98%EF%BC%9B%E4%BB%85%E5%AE%9E%E9%99%85%E4%B8%8A%E8%A2%AB%E7%94%A8%E4%BA%8E%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%AD%97%E8%8A%82%E6%89%8D%E8%A2%AB%E6%98%A0%E5%B0%84%E5%88%B0%E7%9C%9F%E5%AE%9E%E5%86%85%E5%AD%98%E3%80%82%E5%8F%AA%E8%A6%81%E8%BF%9B%E7%A8%8B%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8%E5%AE%83%E4%BB%AC%E7%9A%84%E5%86%85%E5%AD%98%E5%9C%B0%E5%9D%80%E7%A9%BA%E9%97%B4%E7%89%87%E6%AE%B5%EF%BC%8C%E4%BB%A5%E5%8F%8A%E6%B2%A1%E6%9C%89%E8%A2%AB%E6%98%A0%E5%B0%84%E5%88%B0%E7%9C%9F%E5%AE%9E%E5%86%85%E5%AD%98%E6%97%B6%EF%BC%8C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E4%B8%BA%E8%AF%A5%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E7%89%87%E6%AE%B5%E5%93%8D%E5%BA%94%E7%9C%9F%E5%AE%9E%E7%9A%84%E5%86%85%E5%AD%98%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E6%AF%8F%E6%AC%A1%E5%BD%93%E4%B8%80%E4%B8%AA%E8%BF%9B%E7%A8%8B%E8%AE%BF%E9%97%AE%E5%9C%B0%E5%9D%80%EF%BC%8C%E4%B8%8D%E8%AE%BA%E6%98%AF%E8%AF%BB%E6%88%96%E5%86%99%EF%BC%8C%E5%A6%82%E6%9E%9C%E8%AF%A5%E5%9C%B0%E5%9D%80%E5%B1%9E%E4%BA%8E%E4%B8%80%E4%B8%AA%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E7%89%87%E6%AE%B5(%E5%AE%9E%E9%99%85%E4%B8%8A%E5%8F%AB%E5%81%9A%E2%80%9C%E9%A1%B5%E2%80%9D)%E8%A2%AB%E9%A9%BB%E7%95%99%E5%B9%B6%E6%98%A0%E5%B0%84%E7%9C%9F%E5%AE%9E%E5%86%85%E5%AD%98%E7%9A%84%E5%AF%B9%E5%BA%94%E7%89%87%E6%AE%B5%EF%BC%8C%E8%BF%9B%E7%A8%8B%E7%AB%8B%E5%8D%B3%E8%AE%BF%E9%97%AE%E8%BF%99%E4%B8%AA%E7%9C%9F%E5%AE%9E%E5%86%85%E5%AD%98%EF%BC%9B%E7%9B%B8%E5%8F%8D%EF%BC%8C%E5%A6%82%E6%9E%9C%E8%BF%99%E4%B8%AA%E9%A9%BB%E7%95%99%E7%9A%84%E9%A1%B5%E6%B2%A1%E6%9C%89%E8%A2%AB%E6%98%A0%E5%B0%84%EF%BC%8C%E5%9C%A8%E5%85%81%E8%AE%B8%E8%AE%BF%E9%97%AE%E4%B9%8B%E5%89%8D%EF%BC%8C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%B8%A2%E6%8E%89(kicks%20in)%E8%BF%99%E4%B8%AA%E9%A1%B5%EF%BC%8C%E6%9C%BA%E5%88%B6%E4%B8%8A%E5%8F%AB%E5%81%9A%E2%80%9Cpage%20fault%E2%80%9D%EF%BC%8C%E9%80%9A%E8%BF%87%E8%BF%99%E7%A7%8D%E6%9C%BA%E5%88%B6%EF%BC%8C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%88%86%E9%85%8D%E4%B8%80%E4%B8%AA%E7%9C%9F%E5%AE%9E%E5%86%85%E5%AD%98%E9%A1%B5%E5%B9%B6%E5%B0%86%E5%85%B6%E6%98%A0%E5%B0%84%E5%88%B0%E5%8C%85%E5%90%AB%E8%AE%BF%E9%97%AE%E5%9C%B0%E5%9D%80%E7%9A%84%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E9%A1%B5%E4%B8%8A%EF%BC%9B%E8%8B%A5%E6%98%AF%E8%AE%BF%E9%97%AE%E5%9C%B0%E5%9D%80%E4%B8%8D%E5%B1%9E%E4%BA%8E%E8%BF%9B%E7%A8%8B%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E9%83%A8%E5%88%86%E4%B8%8A%E7%9A%84%E9%A9%BB%E7%95%99%E9%A1%B5%EF%BC%8C%E4%BC%9A%E5%87%BA%E7%8E%B0%E5%9C%B0%E5%9D%80%E9%94%99%E8%AF%AF(%E9%80%9A%E5%B8%B8%E7%A7%B0%E4%B8%BA%E2%80%9Csegmentation%20fault%E2%80%9D)%E3%80%82%E9%80%9A%E5%B8%B8%EF%BC%8C%E5%9C%B0%E5%9D%80%E9%94%99%E8%AF%AF%E5%AF%BC%E8%87%B4%E8%BF%9B%E7%A8%8B%E7%9A%84%E7%AB%8B%E5%8D%B3%E4%B8%AD%E6%AD%A2%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E7%84%B6%EF%BC%8C%E5%A6%82%E6%9E%9C%E7%A8%8B%E5%BA%8F%E4%BD%BF%E7%94%A8%E5%86%85%E5%AD%98%E5%A4%AA%E8%BF%87%E9%9A%8F%E6%84%8F%EF%BC%8C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E9%9C%80%E8%A6%81%E8%8A%B1%E8%B4%B9%E5%A4%A7%E9%87%8F%E6%97%B6%E9%97%B4%E6%9D%A5%E5%81%9Amapping%EF%BC%8C%E5%AF%BC%E8%87%B4%E5%A4%84%E7%90%86%E7%9A%84%E5%B7%A8%E5%A4%A7%E4%B8%8B%E9%99%8D%EF%BC%8C%E7%94%9A%E8%87%B3%E4%BC%9A%E7%94%B1%E4%BA%8E%E5%86%85%E5%AD%98%E4%B8%8D%E8%B6%B3%E8%80%8C%E4%B8%AD%E6%96%AD%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%9C%A8%E7%8E%B0%E4%BB%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%AD%EF%BC%8C%E9%83%BD%E6%98%AF%E5%8D%95%E8%BF%9B%E7%A8%8B%E5%92%8C%E5%A4%9A%E8%BF%9B%E7%A8%8B%E9%9B%86%E4%BA%8E%E4%B8%80%E8%BA%AB%EF%BC%8C%E6%AF%8F%E4%B8%AA%E8%BF%9B%E7%A8%8B%E2%80%9C%E7%9C%8B%E5%88%B0%E2%80%9D%E5%AE%83%E8%87%AA%E5%B7%B1%E7%9A%84%E5%86%85%E5%AD%98%E5%83%8F%E5%AD%97%E8%8A%82%E6%95%B0%E7%BB%84%E4%B8%80%E6%A0%B7%E3%80%82%E4%B8%80%E7%A7%8D%E6%98%AF%E7%9C%9F%E5%AE%9E%E5%86%85%E5%AD%98%EF%BC%8C%E4%B8%80%E7%A7%8D%E6%98%AF%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%EF%BC%8C%E4%BD%86%E6%97%A0%E8%AE%BA%E5%AE%83%E6%98%AF%E4%B8%80%E4%B8%AA%E8%BF%9E%E7%BB%AD%E5%9C%B0%E5%9D%80%E7%A9%BA%E9%97%B4(contiguours%20address%20space)%EF%BC%8C%E6%88%96%E9%80%9A%E5%B8%B8%E6%89%80%E8%AF%B4%E7%9A%84%E2%80%9C%E7%BA%BF%E6%80%A7%E5%9C%B0%E5%9D%80(linear%20addressing)%E2%80%9D%E3%80%82%E5%8C%BA%E5%88%AB%E4%BA%8E%E6%97%A7%E7%9A%84%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%EF%BC%8C%E7%8E%B0%E5%9C%A8%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%BF%E7%94%A8%E4%BA%86%E4%B8%80%E4%B8%AA%E2%80%9C%E5%88%86%E6%AE%B5(segmented)%E2%80%9D%E5%9C%B0%E5%9D%80%E7%A9%BA%E9%97%B4%EF%BC%8C%E7%BC%96%E7%A8%8B%E8%80%85%E4%BD%BF%E7%94%A8%E8%B5%B7%E6%9D%A5%E6%9B%B4%E9%BA%BB%E7%83%A6%E3%80%82%3C/p%3E%3Cp%3E%E6%89%80%E6%9C%89%E8%BF%99%E4%BA%9B%E9%83%BD%E6%98%AF%E4%B8%BA%E4%BA%86%E6%9B%BE%E6%B8%85%EF%BC%8C%E5%9C%A8%E4%B8%80%E4%B8%AA%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E7%B3%BB%E7%BB%9F%E4%B8%AD%EF%BC%8C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AF%B9%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E7%AE%A1%E7%90%86%E7%9A%84%E6%93%8D%E4%BD%9C%EF%BC%8C%E6%98%AF%E7%94%B1%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E5%88%B0%E7%9C%9F%E5%AE%9E%E5%86%85%E5%AD%98%E7%9A%84%E6%98%A0%E5%B0%84%E3%80%82%E5%B0%BD%E7%AE%A1%E7%8E%B0%E5%9C%A8%E8%BF%98%E6%B2%A1%E6%9C%89%E8%AE%A8%E8%AE%BA%E8%B7%9F%E5%A4%9A%E5%85%B3%E4%BA%8E%E5%86%85%E5%AD%98%E7%9A%84%E5%88%86%E9%85%8D%EF%BC%8C%E6%88%91%E4%BB%AC%E8%BF%99%E9%87%8C%E5%B0%86%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E5%AE%9A%E4%B9%89%E4%B8%BA%EF%BC%9A%E7%94%B1%E8%BF%9B%E7%A8%8B%E2%80%9C%E5%8F%91%E7%8E%B0%E2%80%9D%E4%BA%86%E9%A9%BB%E7%95%99%E5%86%85%E5%AD%98%E7%9A%84%E4%B8%80%E4%B8%AA%E7%89%87%E6%AE%B5%EF%BC%8C%E5%B9%B6%E5%85%B3%E8%81%94%E8%BF%99%E4%B8%AA%E7%89%87%E6%AE%B5%E5%88%B0%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%93%8D%E4%BD%9C%E3%80%82%3C/p%3E%3Ch2%20id=%22Static-Allocation%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Static-Allocation%22%3E%C2%B6%3C/a%3EStatic%20Allocation%3C/h2%3E%3Cp%3E%E5%B0%BD%E7%AE%A1%EF%BC%8C%E6%9C%89%E5%90%84%E7%A7%8D%E5%90%84%E6%A0%B7%E7%9A%84%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E6%9C%BA%E5%88%B6%E3%80%82%3C/p%3E%3Cp%3E%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E6%9C%BA%E5%88%B6%E6%98%AF%E9%9D%99%E6%80%81%E5%88%86%E9%85%8D(static%20allocation)%E3%80%82%E6%A0%B9%E6%8D%AE%E8%BF%99%E7%A7%8D%E6%9C%BA%E5%88%B6%EF%BC%8C%E7%BC%96%E8%AF%91%E5%99%A8%E5%86%B3%E5%AE%9A%E4%BA%86%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%AF%8F%E4%B8%AA%E5%AF%B9%E8%B1%A1%E9%9C%80%E8%A6%81%E5%A4%9A%E5%B0%91%E4%B8%AA%E5%AD%97%E8%8A%82%EF%BC%8C%E4%BB%A5%E5%8F%8A%E5%AE%89%E5%85%A8%E5%9C%B0%E4%BB%8E%E5%9C%B0%E5%9D%80%E7%A9%BA%E9%97%B4%E8%8E%B7%E5%8F%96%E7%9B%B8%E5%BA%94%E7%9A%84%E5%AD%97%E8%8A%82%E5%BA%8F%E5%88%97%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E6%AF%8F%E4%B8%AA%E5%8F%98%E9%87%8F%E7%9A%84%E5%9C%B0%E5%9D%80%E5%9C%A8%E7%BC%96%E8%AF%91%E6%9C%9F%E7%A1%AE%E5%AE%9A%E3%80%82%E4%B8%8B%E9%9D%A2%E6%98%AF%E4%B8%80%E4%BA%9B%E4%BE%8B%E5%AD%90%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estatic%3C/span%3E%20_A:%20%3Cspan%20class=%22type%22%3Eu32%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E3%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estatic%3C/span%3E%20_B:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20=%20-%3Cspan%20class=%22number%22%3E1_000_000%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estatic%3C/span%3E%20_C:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E5.7e10%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estatic%3C/span%3E%20_D:%20%3Cspan%20class=%22type%22%3Eu8%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E200%3C/span%3E;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%3Ccode%3Estatic%3C/code%3E%E5%85%B3%E9%94%AE%E5%AD%97%E7%B1%BB%E4%BC%BC%E4%BA%8E%3Ccode%3Elet%3C/code%3E%EF%BC%8C%E9%83%BD%E7%94%A8%E4%BA%8E%E5%A3%B0%E6%98%8E%E4%B8%80%E4%B8%AA%E5%8F%98%E9%87%8F%EF%BC%8C%E9%80%89%E6%8B%A9%E6%80%A7%E5%9C%B0%E5%88%9D%E5%A7%8B%E5%8C%96%E3%80%82%3C/p%3E%3Cp%3E%3Ccode%3Estatic%3C/code%3E%E5%92%8C%3Ccode%3Elet%3C/code%3E%E7%9A%84%E4%B8%8D%E5%90%8C%E5%9C%A8%E4%BA%8E%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%3Ccode%3Estatic%3C/code%3E%E4%BD%BF%E7%94%A8%E4%BA%86%E9%9D%99%E6%80%81%E5%88%86%E9%85%8D%EF%BC%8C%3Ccode%3Elet%3C/code%3E%E4%BD%BF%E7%94%A8%E4%BA%86%E6%A0%88%E5%88%86%E9%85%8D%E3%80%82%3C/li%3E%3Cli%3E%3Ccode%3Estatic%3C/code%3E%E8%A6%81%E6%B1%82%E6%98%BE%E5%BC%8F%E6%8C%87%E5%AE%9A%E5%8F%98%E9%87%8F%E7%9A%84%E7%B1%BB%E5%9E%8B%EF%BC%8C%E5%9C%A8%3Ccode%3Elet%3C/code%3E%E4%B8%AD%E4%B8%8D%E6%98%AF%E5%BF%85%E9%A1%BB%E7%9A%84%E3%80%82%3C/li%3E%3Cli%3E%E5%B8%B8%E8%A7%84%E4%BB%A3%E7%A0%81%E4%B8%8D%E8%83%BD%E6%94%B9%E5%8F%98%E4%B8%80%E4%B8%AA%E9%9D%99%E6%80%81%E5%8F%98%E9%87%8F%E7%9A%84%E5%80%BC%EF%BC%8C%E5%8D%B3%E4%BD%BF%E7%94%A8%E4%BA%86%3Ccode%3Emut%3C/code%3E%E6%8C%87%E5%AE%9A%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%9F%BA%E4%BA%8E%E5%AE%89%E5%85%A8%E8%80%83%E8%99%91%EF%BC%8CRust%E4%B8%AD%E7%9A%84%E9%9D%99%E6%80%81%E5%8F%98%E9%87%8F%E9%80%9A%E5%B8%B8%E6%98%AFimmutable%E7%9A%84%E3%80%82%3C/li%3E%3Cli%3E%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8A%E8%A6%81%E6%B1%82%E9%9D%99%E6%80%81%E5%8F%98%E9%87%8F%E7%9A%84%E5%91%BD%E5%90%8D%E4%BB%85%E8%83%BD%E5%8C%85%E5%90%AB%E5%A4%A7%E5%86%99%E5%AD%97%E6%AF%8D%EF%BC%8C%E4%BB%A5%E5%8F%8A%E7%94%A8%E4%B8%8B%E5%88%92%E7%BA%BF%E5%88%92%E5%88%86%E3%80%82%E8%BF%9D%E5%8F%8D%E8%BF%99%E4%B8%AA%E8%A7%84%E5%88%99%EF%BC%8C%E7%BC%96%E8%AF%91%E5%99%A8%E4%BC%9A%E6%8A%A5%E4%B8%80%E4%B8%AA%E8%AD%A6%E5%91%8A%E3%80%82%3C/li%3E%3C/ul%3E%3Cp%3E%E4%B8%8A%E9%9D%A2%E5%9B%9B%E7%82%B9%EF%BC%8C%E8%BF%99%E9%87%8C%E6%88%91%E4%BB%AC%E4%BB%85%E7%9C%8B%E7%AC%AC%E4%B8%80%E4%B8%AA%EF%BC%8C%E5%88%86%E9%85%8D%E7%9A%84%E6%96%B9%E5%BC%8F%E3%80%82%3C/p%3E%3Cp%3E%3Ccode%3E_A%3C/code%3E%E5%92%8C%3Ccode%3E_B%3C/code%3E%E5%8F%98%E9%87%8F%E5%B8%A6%E6%9C%894%E4%B8%AA%E5%AD%97%E8%8A%82%EF%BC%8C%3Ccode%3E_C%3C/code%3E8%E4%B8%AA%E5%AD%97%E8%8A%82%EF%BC%8C%3Ccode%3E_D%3C/code%3E%E5%B8%A6%E6%9C%891%E4%B8%AA%E5%AD%97%E8%8A%82%E3%80%82%E5%A6%82%E6%9E%9C%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%BC%80%E5%A7%8B%E5%9C%B0%E5%9D%80%E6%98%AF0%EF%BC%8C%E7%BC%96%E8%AF%91%E5%99%A8%E4%BC%9A%E7%BB%99%3Ccode%3E_A%3C/code%3E%E5%88%86%E9%85%8D%E5%9C%B0%E5%9D%800%EF%BC%8C%3Ccode%3E_B%3C/code%3E%E5%9C%B0%E5%9D%80%E6%98%AF4%EF%BC%8C%3Ccode%3E_C%3C/code%3E%E5%9C%B0%E5%9D%80%E6%98%AF8%EF%BC%8C%3Ccode%3E_D%3C/code%3E%E5%9C%B0%E5%9D%80%E6%98%AF16%EF%BC%8C%E6%80%BB%E5%85%B1%E5%9C%A8%E7%BC%96%E8%AF%91%E6%9C%9F%E5%88%86%E9%85%8D%E4%BA%8617%E4%B8%AA%E5%AD%97%E8%8A%82%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%A7%8B%E6%89%A7%E8%A1%8C%EF%BC%8C%E8%BF%9B%E7%A8%8B%E5%90%91%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AE%BF%E9%97%AE%E4%BD%BF%E7%94%A817%E4%B8%AA%E5%AD%97%E8%8A%82%E7%9A%84%E5%86%85%E5%AD%98%E3%80%82%E7%84%B6%E5%90%8E%EF%BC%8C%E5%9C%A8%E6%89%A7%E8%A1%8C%E6%9C%9F%E9%97%B4%EF%BC%8C%E4%B8%8D%E4%BC%9A%E6%9C%89%E6%9B%B4%E5%A4%9A%E7%9A%84%E5%86%85%E5%AD%98%E8%AF%B7%E6%B1%82%E8%A2%AB%E5%A4%84%E7%90%86%E3%80%82%E5%BD%93%E8%BF%9B%E7%A8%8B%E7%BB%93%E6%9D%9F%EF%BC%8C%E8%BF%9B%E7%A8%8B%E7%9A%84%E6%89%80%E6%9C%89%E5%86%85%E5%AD%98%E4%BC%9A%E8%87%AA%E5%8A%A8%E9%87%8A%E6%94%BE%E7%BB%99%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%82%3C/p%3E%3Cp%3E%E9%9D%99%E6%80%81%E5%88%86%E9%85%8D%E7%9A%84%E7%BC%BA%E9%99%B7%E6%98%AF%E4%B8%8D%E8%83%BD%E5%88%9B%E5%BB%BA%E9%80%92%E5%BD%92%E5%87%BD%E6%95%B0%E3%80%82%E8%BF%9B%E4%B8%80%E6%AD%A5%E8%AE%B2%EF%BC%8C%E5%A6%82%E6%9E%9C%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E7%9A%84%E5%8F%82%E6%95%B0%E5%92%8C%E6%9C%AC%E5%9C%B0%E5%8F%98%E9%87%8F%E6%98%AF%E9%9D%99%E6%80%81%E6%8C%87%E6%B4%BE%E7%9A%84%EF%BC%8C%E5%AE%83%E4%BB%AC%E5%8F%AA%E6%9C%89%E4%B8%80%E4%BB%BD%E6%8B%B7%E8%B4%9D%EF%BC%8C%E5%BD%93%E9%80%92%E5%BD%92%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E8%87%AA%E8%BA%AB%EF%BC%8C%E5%AE%83%E4%B8%8D%E8%83%BD%E4%B8%BA%E8%BF%99%E4%BA%9B%E5%8F%82%E6%95%B0%E5%92%8C%E6%9C%AC%E5%9C%B0%E5%8F%98%E9%87%8F%E6%8F%90%E4%BE%9B%E5%8F%A6%E4%B8%80%E4%BB%BD%E6%8B%B7%E8%B4%9D%E3%80%82%3C/p%3E%3Cp%3E%E9%9D%99%E6%80%81%E5%88%86%E9%85%8D%E7%9A%84%E5%8F%A6%E4%B8%80%E4%B8%AA%E7%BC%BA%E9%99%B7%E6%98%AF%E6%89%80%E6%9C%89%E5%AD%97%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%89%80%E6%9C%89%E5%8F%98%E9%87%8F%E8%A2%AB%E5%88%86%E9%85%8D%E5%9C%A8%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%BC%80%E5%A7%8B%EF%BC%8C%E5%A6%82%E6%9E%9C%E7%A8%8B%E5%BA%8F%E5%8C%85%E5%90%AB%E5%BE%88%E5%A4%9A%E5%8F%98%E9%87%8F%EF%BC%8C%E4%BD%86%E5%AE%9E%E9%99%85%E6%89%A7%E8%A1%8C%E4%BB%85%E4%BD%BF%E7%94%A8%E4%BA%86%E4%B8%80%E5%B0%8F%E9%83%A8%E5%88%86%EF%BC%8C%E5%A4%A7%E5%A4%9A%E6%95%B0%E5%8F%98%E9%87%8F%E4%BD%9C%E4%BA%86%E6%97%A0%E7%94%A8%E7%9A%84%E5%88%86%E9%85%8D%EF%BC%8C%E9%80%A0%E6%88%90%E8%AF%A5%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%86%85%E5%AD%98%E9%A5%A5%E6%B8%B4%E3%80%82%3C/p%3E%3Cp%3E%E5%85%B8%E5%9E%8B%E5%9C%B0%EF%BC%8C%3Ccode%3Estatic%3C/code%3E%E5%8F%98%E9%87%8F%E7%9A%84%E4%BF%AE%E6%94%B9%E6%98%AF%E4%B8%8D%E5%AE%89%E5%85%A8%E7%9A%84(unsafe)%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%9C%A8Rust%E4%B8%AD%EF%BC%8C%3Ccode%3Estatic%3C/code%3E%E4%BD%BF%E7%94%A8%E5%BE%97%E4%B8%8D%E6%98%AF%E7%89%B9%E5%88%AB%E5%A4%9A%E3%80%82%3C/p%3E%3Cp%3E%E7%84%B6%E5%90%8E%EF%BC%8C%E9%9D%99%E6%80%81%E5%88%86%E9%85%8D%E8%A2%AB%E5%B9%BF%E6%B3%9B%E7%94%A8%E4%BA%8E%E5%85%B6%E4%BB%96%E4%B8%A4%E7%A7%8D%E6%95%B0%E6%8D%AE%EF%BC%9A%E6%89%80%E6%9C%89%E5%8F%AF%E6%89%A7%E8%A1%8C%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%BB%A3%E7%A0%81(executable%20binary%20code)%EF%BC%8C%E4%BB%A5%E5%8F%8A%E6%89%80%E6%9C%89%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AD%97%E9%9D%A2%E9%87%8F%E3%80%82%3C/p%3E%3Ch2%20id=%22Stack-Allocation%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Stack-Allocation%22%3E%C2%B6%3C/a%3EStack%20Allocation%3C/h2%3E%3Cp%3E%E7%94%B1%E4%BA%8E%E9%9D%99%E6%80%81%E5%88%86%E9%85%8D%E7%9A%84%E4%B8%8D%E8%B6%B3%EF%BC%8CRust%E5%B0%86%E5%AF%B9%E8%B1%A1%E6%8C%87%E6%B4%BE%E5%88%B0%E2%80%9Cstack%E2%80%9D%E9%87%8C%E9%9D%A2%EF%BC%8C%E6%AF%8F%E6%AC%A1%E4%BD%BF%E7%94%A8%3Ccode%3Elet%3C/code%3E%E5%85%B3%E9%94%AE%E5%AD%97%E5%A3%B0%E6%98%8E%E5%8F%98%E9%87%8F%EF%BC%8C%E6%AF%8F%E6%AC%A1%E4%B8%80%E4%B8%AA%E5%8F%82%E6%95%B0%E8%A2%AB%E4%BC%A0%E9%80%92%E7%BB%99%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E3%80%82%E8%BF%99%E9%87%8C%E6%89%80%E8%B0%93%E7%9A%84%E2%80%9Cstack%E2%80%9D%E6%98%AF%E6%AF%8F%E4%B8%AA%E8%BF%9B%E7%A8%8B%E5%9C%B0%E5%9D%80%E7%A9%BA%E9%97%B4%E7%9A%84%E7%89%87%E6%AE%B5%E3%80%82%3C/p%3E%3Cp%3E%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E6%AF%8F%E4%B8%AA%E7%BA%BF%E7%A8%8B%E4%B9%9F%E6%9C%89%E4%B8%80%E4%B8%AAstack%EF%BC%8C%E8%80%8C%E4%B8%8D%E6%98%AF%E6%AF%8F%E4%B8%AA%E8%BF%9B%E7%A8%8B%E9%83%BD%E6%9C%89%E4%B8%80%E4%B8%AAstack%E3%80%82%E5%A6%82%E6%9E%9C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%94%AF%E6%8C%81%E7%BA%BF%E7%A8%8B%EF%BC%8C%E5%88%99%E6%AF%8F%E4%B8%AA%E7%A8%8B%E5%BA%8F%E8%BF%90%E8%A1%8C%EF%BC%8C%E4%B8%80%E4%B8%AA%E8%BF%9B%E7%A8%8B%E8%A2%AB%E5%88%9B%E5%BB%BA%EF%BC%8C%E4%B8%80%E4%B8%AA%E7%BA%BF%E7%A8%8B%E4%BC%9A%E8%A2%AB%E5%88%9B%E5%BB%BA%E5%B9%B6%E5%9C%A8%E8%AF%A5%E8%BF%9B%E7%A8%8B%E5%86%85%E9%83%A8%E8%BF%90%E8%A1%8C%E3%80%82%E4%B9%8B%E5%90%8E%EF%BC%8C%E5%9C%A8%E5%90%8C%E4%B8%80%E4%B8%AA%E8%BF%9B%E7%A8%8B%E5%86%85%E9%83%A8%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%88%9B%E5%BB%BA%E5%92%8C%E5%90%AF%E5%8A%A8%E5%85%B6%E5%AE%83%E7%BA%BF%E7%A8%8B%E3%80%82%E6%AF%8F%E4%B8%80%E6%AC%A1%E4%B8%80%E4%B8%AA%E7%BA%BF%E7%A8%8B%E8%A2%AB%E5%88%9B%E5%BB%BA(%E5%8C%85%E5%90%AB%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%B8%BB%E7%BA%BF%E7%A8%8B)%EF%BC%8C%E4%BC%9A%E8%AF%B7%E6%B1%82%E6%93%8D%E4%BD%9C%E7%B3%BB%E5%88%86%E9%85%8D%E4%B8%80%E4%BB%BD%E5%9C%B0%E5%9D%80%E7%A9%BA%E9%97%B4%E7%89%87%E6%AE%B5%EF%BC%8C%E5%AE%83%E6%98%AF%E7%BA%BF%E7%A8%8B%E7%9A%84stack%E3%80%82%E5%9C%A8%E7%9C%9F%E5%AE%9E%E5%86%85%E5%AD%98%E7%B3%BB%E7%BB%9F(%E8%A3%B8%E6%9C%BA)%E4%B8%AD%EF%BC%8C%E4%BB%85%E4%BC%9A%E6%9C%89%E4%B8%80%E4%B8%AAstack%E8%A2%AB%E5%88%9B%E5%BB%BA%E7%94%A8%E4%BA%8E%E6%89%A7%E8%A1%8C%E7%A8%8B%E5%BA%8F%E3%80%82%3C/p%3E%3Cp%3E%E6%AF%8F%E4%B8%AA%E7%BA%BF%E7%A8%8B%E4%BF%9D%E7%95%99%E6%A0%88%E6%9C%AB%E7%AB%AF%E7%9A%84%E5%9C%B0%E5%9D%80%E3%80%82%E5%85%B8%E5%9E%8B%E5%9C%B0%EF%BC%8C%E5%80%BC%E8%BE%83%E9%AB%98%E7%9A%84%E4%B8%80%E7%AB%AF%E8%A2%AB%E8%AE%A4%E4%B8%BA%E6%98%AF%E5%A0%86%E6%A0%88%E7%9A%84%E5%BA%95%E9%83%A8%EF%BC%8C%E5%80%BC%E8%BE%83%E4%BD%8E%E7%9A%84%E4%B8%80%E7%AB%AF%E8%A2%AB%E8%AE%A4%E4%B8%BA%E6%98%AF%E5%A0%86%E6%A0%88%E7%9A%84%E9%A1%B6%E9%83%A8%E3%80%82%3C/p%3E%3Cp%3E%E8%AE%A9%E6%88%91%E4%BB%AC%E7%9C%8B%E5%A6%82%E4%B8%8B%E4%BB%A3%E7%A0%81%EF%BC%8C%E7%B1%BB%E4%BC%BC%E5%89%8D%E9%9D%A2%E9%82%A3%E4%B8%AA%EF%BC%8C%E4%BD%86%E4%BD%BF%E7%94%A8%E4%BA%86%E6%A0%88%E5%88%86%E9%85%8D%E8%80%8C%E4%B8%8D%E6%98%AF%E9%9D%99%E6%80%81%E5%88%86%E9%85%8D%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_a%3C/span%3E:%20%3Cspan%20class=%22type%22%3Eu32%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E3%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_b%3C/span%3E:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20=%20-%3Cspan%20class=%22number%22%3E1_000_000%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_c%3C/span%3E:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E5.7e10%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_d%3C/span%3E:%20%3Cspan%20class=%22type%22%3Eu8%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E200%3C/span%3E;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%AF%A5%E6%AE%B5%E4%BB%A3%E7%A0%81%E4%BB%85%E6%9C%89%E4%B8%80%E4%B8%AA%E7%BA%BF%E7%A8%8B%E3%80%82%E7%8E%B0%E5%9C%A8%E5%81%87%E8%AE%BE%E8%BF%99%E4%B8%AA%E7%BA%BF%E7%A8%8B%E6%9C%89%E4%B8%80%E4%B8%AA%E4%BB%85100%E4%B8%AA%E5%AD%97%E8%8A%82%E7%9A%84stack%EF%BC%8C%E5%9C%B0%E5%9D%80%E8%8C%83%E5%9B%B4%E5%9C%A8%3Ccode%3E[500,%20600)%3C/code%3E%E3%80%82%E5%BD%93%E7%A8%8B%E5%BA%8F%E8%BF%90%E8%A1%8C%EF%BC%8C%E8%BF%994%E4%B8%AA%E5%8F%98%E9%87%8F%E4%BB%8E%E6%A0%88%E7%9A%84%E5%BA%95%E9%83%A8%E5%BC%80%E5%A7%8B%E5%88%86%E9%85%8D%EF%BC%8C%E5%8D%B3%E4%BB%8E600%E5%BC%80%E5%A7%8B%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%A6%82%E5%9B%BE11-1%E6%89%80%E7%A4%BA%EF%BC%8C%E5%8F%98%E9%87%8F%3Ccode%3E_a%3C/code%3E%E4%BC%9A%E5%8D%A0%E9%A2%86%E5%9C%B0%E5%9D%80596-599%E5%9C%B0%E5%9D%804%E4%B8%AA%E5%AD%97%E8%8A%82%EF%BC%8C%E5%8F%98%E9%87%8F%3Ccode%3E_b%3C/code%3E%E4%BC%9A%E5%8D%A0%E9%A2%86%E5%9C%B0%E5%9D%80592-595%E5%9C%B0%E5%9D%804%E4%B8%AA%E5%AD%97%E8%8A%82%EF%BC%8C%E5%8F%98%E9%87%8F%3Ccode%3E_c%3C/code%3E%E4%BC%9A%E5%8D%A0%E9%A2%86%E5%9C%B0%E5%9D%80584-591%E5%9C%B0%E5%9D%808%E4%B8%AA%E5%AD%97%E8%8A%82%EF%BC%8C%E5%8F%98%E9%87%8F%3Ccode%3E_d%3C/code%3E%E4%BC%9A%E4%BB%85%E5%8D%A0%E9%A2%86%E5%9C%B0%E5%9D%80583%E3%80%82%3C/p%3E%3Cp%3E%3Cimg%20src=%22/img/rust/beginning/chap11/Figure_11_1.png%22%20alt=%22Figure%2011-1%22%3E%3C/p%3E%3Cp%3E%E7%84%B6%E5%90%8E%EF%BC%8C%E5%A6%82%E6%9E%9C%E4%BD%A0%E9%9C%80%E8%A6%81%E6%A0%87%E8%AF%86%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%9C%B0%E5%9D%80%EF%BC%8C%E4%BD%A0%E5%BF%85%E9%A1%BB%E6%80%BB%E6%98%AF%E4%BD%BF%E7%94%A8%E6%9C%80%E4%BD%8E%E4%BD%8D%E5%9C%B0%E5%9D%80%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E6%88%91%E4%BB%AC%E8%AF%B4%3Ccode%3E_a%3C/code%3E%E7%9A%84%E5%9C%B0%E5%9D%80%E6%98%AF596%EF%BC%8C%3Ccode%3E_b%3C/code%3E%E7%9A%84%E5%9C%B0%E5%9D%80%E6%98%AF592%EF%BC%8C%3Ccode%3E_c%3C/code%3E%E7%9A%84%E5%9C%B0%E5%9D%80%E6%98%AF584%EF%BC%8C%3Ccode%3E_d%3C/code%3E%E7%9A%84%E5%9C%B0%E5%9D%80%E6%98%AF583%E3%80%82%3C/p%3E%3Cp%3E%E5%8D%95%E8%AF%8D%E2%80%9Cstack%E2%80%9D%E5%BC%95%E7%94%A8%E4%B8%AD%E5%9B%BD%E7%9B%86%E7%A2%9F%E7%9A%84%E5%AD%97%E9%9D%A2%E7%90%86%E8%A7%A3%EF%BC%8C%E6%88%91%E4%BB%AC%E4%B8%8D%E5%8F%AF%E8%83%BD%E5%9C%A8stack%E7%9A%84%E4%B8%AD%E9%97%B4%E6%8F%92%E5%85%A5%E4%B8%80%E4%B8%AA%E7%A2%9F(dish)%EF%BC%8C%E5%8F%88%E6%88%96%E8%80%85%E4%BB%8E%E4%B8%AD%E9%97%B4%E7%A7%BB%E9%99%A4%E4%B8%80%E4%B8%AA%E7%A2%9F%E3%80%82%E4%BB%85%E8%83%BD%E5%9C%A8stack%E7%9A%84%E9%A1%B6%E5%B1%82%E6%B7%BB%E5%8A%A0%E4%B8%80%E4%B8%AA%E7%A2%9F%EF%BC%8C%E5%8F%88%E6%88%96%E8%80%85%E5%9C%A8stack%E4%B8%8D%E4%B8%BA%E7%A9%BA%EF%BC%8C%E4%BB%8E%E9%A1%B6%E5%B1%82%E7%A7%BB%E9%99%A4%E4%B8%80%E4%B8%AA%E7%A2%9F%E3%80%82%3C/p%3E%3Cp%3E%E7%B1%BB%E4%BC%BC%E5%9C%B0%EF%BC%8C%E6%A0%88%E5%88%86%E9%85%8D%E7%9A%84%E7%89%B9%E6%80%A7%E6%98%AF%EF%BC%8C%E4%BD%A0%E4%BB%85%E8%83%BD%E5%9C%A8%E6%A0%88%E7%9A%84%E9%A1%B6%E9%83%A8%E6%B7%BB%E5%8A%A0%E3%80%81%E6%88%96%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0%E3%80%82%3C/p%3E%3Cp%3E%E6%A0%88%E5%88%86%E9%85%8D(allocation)%E6%88%96%E5%9B%9E%E6%94%B6(deallocation%EF%BC%8C%E9%87%8A%E6%94%BE%EF%BC%9B%E5%86%8D%E5%88%86%E9%85%8D)%E6%98%AF%E9%9D%9E%E5%B8%B8%E9%AB%98%E6%95%88%E7%9A%84%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E4%BB%AC%E7%94%B1%E5%9C%B0%E5%9D%80%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%E7%9A%84%E6%B7%BB%E5%8A%A0%E6%88%96%E5%88%A0%E9%99%A4%E6%9E%84%E6%88%90%EF%BC%8C%E8%AF%A5%E5%9C%B0%E5%9D%80%E4%B8%BAstack%E7%9A%84%E9%A1%B6%E9%83%A8%E3%80%82%E8%BF%99%E4%B8%AA%E5%9C%B0%E5%9D%80%E7%A7%B0%E4%B8%BA%E2%80%9C%E6%A0%88%E6%8C%87%E7%A4%BA%E5%99%A8%EF%BC%8C%E6%A0%88%E7%82%B9%EF%BC%8C%E6%8C%87%E9%92%88%20stack%20pointer%E2%80%9D%EF%BC%8C%E5%AE%83%E4%B8%80%E7%9B%B4%E4%BF%9D%E5%AD%98%E5%9C%A8%E5%A4%84%E7%90%86%E5%99%A8%E5%AF%84%E5%AD%98%E5%99%A8%E4%B8%AD%EF%BC%8C%E7%9B%B4%E5%88%B0%E5%87%BA%E7%8E%B0%E4%B8%8A%E4%B8%8B%E6%96%87%E5%88%87%E6%8D%A2%EF%BC%8C%E6%89%8D%E5%B0%86%E6%8E%A7%E5%88%B6%E4%BA%A4%E7%94%B1%E5%8F%A6%E4%B8%80%E4%B8%AA%E7%BA%BF%E7%A8%8B%E3%80%82%3C/p%3E%3Cp%3Estack%E7%9A%84%E5%B1%80%E9%99%90%E4%BB%85%E5%9C%A8%E4%BA%8E%EF%BC%8C%E6%A0%88%E9%A1%B6%E7%9A%84%E5%9C%B0%E5%9D%80%E5%88%86%E9%85%8D%E5%92%8C%E5%9B%9E%E6%94%B6%E3%80%82%E8%BF%9B%E4%B8%80%E6%AD%A5%E8%AE%B2%EF%BC%8C%E5%BD%93%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E8%A2%AB%E6%B7%BB%E5%8A%A0%E5%88%B0stack%EF%BC%8C%E8%BF%99%E4%B8%AA%E5%AF%B9%E8%B1%A1%E5%8F%AF%E4%BB%A5%E8%BF%9B%E8%A1%8C%E8%AF%BB%E5%92%8C%E5%86%99%EF%BC%8C%E5%8D%B3%E4%BD%BF%E6%9C%89%E5%85%B6%E5%AE%83%E5%AF%B9%E8%B1%A1%E8%A2%AB%E6%B7%BB%E5%8A%A0%EF%BC%8C%E5%8F%AA%E6%98%AF%E8%AF%BB%E5%86%99%E6%93%8D%E4%BD%9C%E4%B8%8D%E4%BC%9A%E5%A2%9E%E5%8A%A0%E6%88%96%E5%87%8F%E5%B0%91%E8%AF%A5%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%A4%A7%E5%B0%8F%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%EF%BC%8C%E4%BC%9A%E7%BB%99%E5%AE%83%E7%9A%84%E6%89%80%E6%9C%89%E5%8F%82%E6%95%B0%E5%92%8C%E6%89%80%E6%9C%89%E6%9C%AC%E5%9C%B0%E5%8F%98%E9%87%8F%E5%88%86%E9%85%8D%E8%B6%B3%E5%A4%9F%E7%9A%84%E5%9C%B0%E5%9D%80%E6%A0%88%E7%A9%BA%E9%97%B4%E3%80%82%E8%BF%99%E7%A7%8D%E5%88%86%E9%85%8D%E9%80%9A%E8%BF%87%E8%BF%99%E4%BA%9B%E5%AF%B9%E8%B1%A1%E5%A4%A7%E5%B0%8F%E6%80%BB%E6%95%B0%E7%9A%84%E6%A0%88%E6%8C%87%E9%92%88%E9%80%92%E5%87%8F%E7%9A%84%E6%96%B9%E5%BC%8F%E5%A4%84%E7%90%86%EF%BC%8C%E5%BD%93%E6%89%A7%E8%A1%8C%E7%9A%84%E5%87%BD%E6%95%B0%E4%B8%AD%E6%AD%A2%E5%90%8E%EF%BC%8C%E8%BF%99%E4%B8%AA%E6%A0%88%E7%A9%BA%E9%97%B4%E8%A2%AB%E5%9B%9E%E6%94%B6%EF%BC%8C%E5%B9%B6%E4%BB%A5%E5%90%8C%E6%A0%B7%E7%9A%84%E5%80%BC%E5%A2%9E%E5%8A%A0%E6%A0%88%E6%8C%87%E9%92%88%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%BD%93%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%EF%BC%8C%E5%9C%A8%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E4%B9%8B%E5%89%8D%E6%A0%88%E6%8C%87%E9%92%88%E8%A2%AB%E7%94%A8%E6%9D%A5%E5%82%A8%E5%AD%98%E8%AF%A5%E5%80%BC%E3%80%82%3C/p%3E%3Cp%3E%E7%84%B6%E8%80%8C%EF%BC%8C%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E5%9C%A8%E4%B8%80%E6%AE%B5%E7%A8%8B%E5%BA%8F%E4%B8%AD%E5%8F%AF%E8%83%BD%E4%BB%8E%E5%BE%88%E5%A4%9A%E4%B8%AA%E6%A0%88%E7%82%B9%E8%A2%AB%E8%B0%83%E7%94%A8%EF%BC%8C%E8%BF%99%E7%A7%8D%E6%A0%88%E7%82%B9%E5%8F%AF%E8%83%BD%E6%9C%89%E4%B8%8D%E5%90%8C%E7%9A%84%E5%A4%A7%E5%B0%8F%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E4%BB%BB%E4%BD%95%E5%87%BD%E6%95%B0%E7%9A%84%E5%8F%82%E6%95%B0%E5%92%8C%E6%9C%AC%E5%9C%B0%E5%8F%98%E9%87%8F%E4%BC%9A%E6%A0%B9%E6%8D%AE%E5%87%BD%E6%95%B0%E7%9A%84%E8%B0%83%E7%94%A8%E6%83%85%E5%86%B5%E5%88%86%E9%85%8D%E5%9C%A8%E4%B8%8D%E5%90%8C%E7%9A%84%E4%BD%8D%E7%BD%AE%E3%80%82%E4%B8%8B%E9%9D%A2%E6%98%AF%E4%B8%80%E4%B8%AA%E4%BE%8B%E5%AD%90%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef1%3C/span%3E(x1:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ey1%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E2%3C/span%3E%20+%20x1;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef2%3C/span%3E(x2:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef1%3C/span%3E(x2%20+%20%3Cspan%20class=%22number%22%3E7%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ek%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E20%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef1%3C/span%3E(k%20+%20%3Cspan%20class=%22number%22%3E4%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef2%3C/span%3E(%3Cspan%20class=%22number%22%3E30%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%AE%A9%E6%88%91%E4%BB%AC%E9%A1%BA%E7%9D%80%E8%BF%99%E6%AE%B5%E4%BB%A3%E7%A0%81%E7%9A%84%E6%89%A7%E8%A1%8C%E3%80%82%E7%9C%8B%E7%9C%8B%E4%B8%8B%E9%9D%A2%E8%A1%A8%E6%A0%BC%E7%9A%84%E6%AF%8F%E4%B8%AA%E6%AD%A5%E9%AA%A4%E5%AF%B9%E6%A0%88%E5%9C%B0%E5%9D%80%E7%9A%84%E6%8F%8F%E8%BF%B0%EF%BC%9A%3C/p%3E%3Ctable%3E%3Cthead%3E%3Ctr%3E%3Cth%20style=%22text-align:center%22%3EOperation%3C/th%3E%3Cth%20style=%22text-align:center%22%3E1%20%20%20%20%20%202%20%20%20%20%20%203%20%20%20%20%20%204%3C/th%3E%3Cth%20style=%22text-align:center%22%3EDescription%3C/th%3E%3C/tr%3E%3C/thead%3E%3Ctbody%3E%3Ctr%3E%3Ctd%20style=%22text-align:center%22%3Ek%20%20%20-&amp;gt;%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E20%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E%3Ccode%3Emain%3C/code%3E%E5%85%A5%E5%8F%A3%E8%B0%83%E7%94%A8%EF%BC%8C%E5%B0%86%E6%9C%AC%E5%9C%B0%E5%8F%98%E9%87%8F%3Ccode%3Ek%3C/code%3E%E7%9A%84%E5%80%BC20%E6%B7%BB%E5%8A%A0%E5%88%B0%E6%A0%88%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:center%22%3Ex1%20%20-&amp;gt;%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E20%20%20%20%20%2024%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E%3Ccode%3Ef1%3C/code%3E%E6%96%B9%E6%B3%95%E8%A2%AB%E8%B0%83%E7%94%A8%EF%BC%8C%E5%B0%86%E5%8F%82%E6%95%B0%3Ccode%3Ex1%3C/code%3E%E7%9A%84%E5%80%BC24%E6%B7%BB%E5%8A%A0%E5%88%B0%E6%A0%88%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:center%22%3Ey1%20%20-&amp;gt;%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E20%20%20%20%20%2024%20%20%20%20%2026%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E%3Ccode%3Ef1%3C/code%3E%E6%89%A7%E8%A1%8C%EF%BC%8C%E5%B0%86%E6%9C%AC%E5%9C%B0%E5%8F%98%E9%87%8F%3Ccode%3Ey1%3C/code%3E%E7%9A%84%E5%80%BC26%E6%B7%BB%E5%8A%A0%E5%88%B0%E6%A0%88%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:center%22%3E&amp;lt;-%20%20y1%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E20%20%20%20%20%2024%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E%3Ccode%3Ef1%3C/code%3E%E7%BB%93%E6%9D%9F%EF%BC%8C%E5%B0%86%E5%AE%83%E7%9A%84%E6%9C%AC%E5%9C%B0%E5%8F%98%E9%87%8F%3Ccode%3Ey1%3C/code%3E%E7%9A%84%E5%80%BC26%E4%BB%8E%E6%A0%88%E4%B8%AD%E7%A7%BB%E9%99%A4%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:center%22%3E&amp;lt;-%20%20x1%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E20%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E%3Ccode%3Ef1%3C/code%3E%E7%BB%93%E6%9D%9F%EF%BC%8C%E5%B0%86%E5%AE%83%E7%9A%84%E5%8F%82%E6%95%B0%3Ccode%3Ex1%3C/code%3E%E7%9A%84%E5%80%BC24%E4%BB%8E%E6%A0%88%E4%B8%AD%E7%A7%BB%E9%99%A4%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:center%22%3Ex2%20%20-&amp;gt;%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E20%20%20%20%20%2030%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E%3Ccode%3Ef2%3C/code%3E%E6%96%B9%E6%B3%95%E8%A2%AB%E8%B0%83%E7%94%A8%EF%BC%8C%E5%B0%86%E5%8F%82%E6%95%B0%3Ccode%3Ex2%3C/code%3E%E7%9A%84%E5%80%BC30%E6%B7%BB%E5%8A%A0%E5%88%B0%E6%A0%88%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:center%22%3Ex1%20%20-&amp;gt;%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E20%20%20%20%20%2030%20%20%20%20%2037%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E%3Ccode%3Ef1%3C/code%3E%E6%96%B9%E6%B3%95%E8%A2%AB%E8%B0%83%E7%94%A8%EF%BC%8C%E5%B0%86%E5%8F%82%E6%95%B0%3Ccode%3Ex1%3C/code%3E%E7%9A%84%E5%80%BC37%E6%B7%BB%E5%8A%A0%E5%88%B0%E6%A0%88%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:center%22%3Ey1%20%20-&amp;gt;%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E20%20%20%20%20%2030%20%20%20%20%2037%20%20%20%20%2039%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E%3Ccode%3Ef1%3C/code%3E%E6%89%A7%E8%A1%8C%EF%BC%8C%E5%B0%86%E6%9C%AC%E5%9C%B0%E5%8F%98%E9%87%8F%3Ccode%3Ey1%3C/code%3E%E7%9A%84%E5%80%BC39%E6%B7%BB%E5%8A%A0%E5%88%B0%E6%A0%88%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:center%22%3E&amp;lt;-%20%20y1%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E20%20%20%20%20%2030%20%20%20%20%2037%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E%3Ccode%3Ef1%3C/code%3E%E7%BB%93%E6%9D%9F%EF%BC%8C%E5%B0%86%E5%AE%83%E7%9A%84%E6%9C%AC%E5%9C%B0%E5%8F%98%E9%87%8F%3Ccode%3Ey1%3C/code%3E%E7%9A%84%E5%80%BC39%E4%BB%8E%E6%A0%88%E4%B8%AD%E7%A7%BB%E9%99%A4%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:center%22%3E&amp;lt;-%20%20x1%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E20%20%20%20%20%2030%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E%3Ccode%3Ef1%3C/code%3E%E7%BB%93%E6%9D%9F%EF%BC%8C%E5%B0%86%E5%AE%83%E7%9A%84%E5%8F%82%E6%95%B0%3Ccode%3Ex1%3C/code%3E%E7%9A%84%E5%80%BC37%E4%BB%8E%E6%A0%88%E4%B8%AD%E7%A7%BB%E9%99%A4%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:center%22%3E&amp;lt;-%20%20x2%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E20%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E%3Ccode%3Ef2%3C/code%3E%E7%BB%93%E6%9D%9F%EF%BC%8C%E5%B0%86%E5%AE%83%E7%9A%84%E5%8F%82%E6%95%B0%3Ccode%3Ex2%3C/code%3E%E7%9A%84%E5%80%BC30%E4%BB%8E%E6%A0%88%E4%B8%AD%E7%A7%BB%E9%99%A4%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:center%22%3E&amp;lt;-%20%20k%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E%3Ccode%3Emain%3C/code%3E%E6%96%B9%E6%B3%95%E7%BB%93%E6%9D%9F%EF%BC%8C%E5%B0%86%E6%9C%AC%E5%9C%B0%E5%8F%98%E9%87%8F%3Ccode%3Ek%3C/code%3E%E7%9A%84%E5%80%BC20%E4%BB%8E%E6%A0%88%E4%B8%AD%E7%A7%BB%E9%99%A4%3C/td%3E%3C/tr%3E%3C/tbody%3E%3C/table%3E%3Cp%3E%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E4%B8%8D%E8%AE%BA%E5%87%BD%E6%95%B0%E5%9C%A8%E5%93%AA%E9%87%8C%E8%B0%83%E7%94%A8%EF%BC%8C%E6%A0%88%E4%B8%8A%E6%B7%BB%E5%8A%A0%E6%95%B0%E6%8D%AE%EF%BC%8C%E4%B8%8D%E8%AE%BA%E5%87%BD%E6%95%B0%E5%9C%A8%E5%93%AA%E9%87%8C%E7%BB%93%E6%9D%9F%EF%BC%8C%E8%BF%99%E4%BB%BD%E6%95%B0%E6%8D%AE%E4%BB%8E%E6%A0%88%E4%B8%8A%E7%A7%BB%E9%99%A4%E3%80%82%E8%BF%99%E9%87%8C%E5%87%BD%E6%95%B0%3Ccode%3Ef1%3C/code%3E%E8%A2%AB%E8%B0%83%E7%94%A8%E4%BA%86%E4%B8%A4%E6%AC%A1%EF%BC%8C%E8%BF%99%E9%87%8C%3Ccode%3Ef1%3C/code%3E%E7%94%9F%E6%88%90%E7%9A%84%E6%9C%BA%E5%99%A8%E7%A0%81%E4%B8%8D%E4%BC%9A%E5%B7%B2%E7%BB%9D%E5%AF%B9%E5%9C%B0%E5%9D%80%E4%BD%9C%E4%B8%BA%E5%AE%83%E5%8F%82%E6%95%B0%E5%92%8C%E6%9C%AC%E5%9C%B0%E5%8F%98%E9%87%8F%E7%9A%84%E5%8F%82%E8%80%83%E3%80%82%E7%9B%B8%E5%8F%8D%EF%BC%8C%E5%AE%83%E4%BD%BF%E7%94%A8%E7%9A%84%E5%9C%B0%E5%9D%80%E5%85%B3%E8%81%94%E8%BF%99%E4%B8%AA%E2%80%9C%E6%A0%88%E7%82%B9(stack%20pointer)%E2%80%9D%E3%80%82%E5%88%9D%E5%A7%8B%E5%8C%96%E6%97%B6%EF%BC%8C%E8%BF%99%E4%B8%AA%E6%A0%88%E7%82%B9%E5%8C%85%E5%90%AB%E8%BF%99%E4%B8%AA%E6%A0%88%E5%9C%B0%E5%9D%80%E7%9A%84%E5%BA%95%E9%83%A8%E3%80%82%E5%9C%A8%E6%9C%BA%E5%99%A8%E7%A0%81%E4%B8%AD%EF%BC%8C%E6%A0%88%E5%88%86%E9%85%8D%E7%9A%84%E5%8F%98%E9%87%8F%E7%9A%84%E5%9C%B0%E5%9D%80%E8%A2%AB%E5%85%B3%E8%81%94%E8%BF%99%E4%B8%AA%E7%AB%99%E7%82%B9(stack%20pointer)%E3%80%82%E8%AE%A9%E6%88%91%E4%BB%AC%E5%86%8D%E5%A4%8D%E8%BF%B0%E4%B8%8A%E9%9D%A2%E8%BF%99%E4%B8%AA%E4%BE%8B%E5%AD%90%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8B%E8%A1%A8%E5%B1%95%E7%A4%BA%E4%BA%86%EF%BC%8C%E6%AF%8F%E4%B8%AA%E6%93%8D%E4%BD%9C%EF%BC%8C%E8%AF%A5%E6%A0%88%E7%82%B9%E6%89%80%E6%8C%87%E5%90%91%E7%9A%84%E7%BB%9D%E5%AF%B9%E5%9C%B0%E5%9D%80%EF%BC%8CSP%E8%A1%A8%E7%A4%BA%E2%80%9Cstack%20pointer%E2%80%9D%EF%BC%9A%3C/p%3E%3Ctable%3E%3Cthead%3E%3Ctr%3E%3Cth%20style=%22text-align:center%22%3EOperation%3C/th%3E%3Cth%20style=%22text-align:center%22%3E1%20%20%20%20%20%202%20%20%20%20%20%203%20%20%20%20%20%204%3C/th%3E%3Cth%20style=%22text-align:left%22%3EStack%20pointer%3C/th%3E%3Cth%3Ex1%3C/th%3E%3Cth%20style=%22text-align:right%22%3Ey1%3C/th%3E%3C/tr%3E%3C/thead%3E%3Ctbody%3E%3Ctr%3E%3Ctd%20style=%22text-align:center%22%3Ek%20%20%20-&amp;gt;%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E20%3C/td%3E%3Ctd%20style=%22text-align:left%22%3Ebase%3C/td%3E%3Ctd%3E%3C/td%3E%3Ctd%20style=%22text-align:right%22%3E%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:center%22%3Ex1%20%20-&amp;gt;%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E20%20%20%20%20%2024%3C/td%3E%3Ctd%20style=%22text-align:left%22%3Ebase%20-%204%3C/td%3E%3Ctd%3E%3C/td%3E%3Ctd%20style=%22text-align:right%22%3E%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:center%22%3Ey1%20%20-&amp;gt;%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E20%20%20%20%20%2024%20%20%20%20%2026%3C/td%3E%3Ctd%20style=%22text-align:left%22%3Ebase%20-%2012%3C/td%3E%3Ctd%3ESP%20+%204%3C/td%3E%3Ctd%20style=%22text-align:right%22%3ESP%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:center%22%3E&amp;lt;-%20%20y1%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E20%20%20%20%20%2024%3C/td%3E%3Ctd%20style=%22text-align:left%22%3Ebase%20-%2012%3C/td%3E%3Ctd%3ESP%20+%204%3C/td%3E%3Ctd%20style=%22text-align:right%22%3ESP%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:center%22%3E&amp;lt;-%20%20x1%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E20%3C/td%3E%3Ctd%20style=%22text-align:left%22%3Ebase%20-%2012%3C/td%3E%3Ctd%3E%3C/td%3E%3Ctd%20style=%22text-align:right%22%3E%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:center%22%3Ex2%20%20-&amp;gt;%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E20%20%20%20%20%2030%3C/td%3E%3Ctd%20style=%22text-align:left%22%3Ebase%20-%204%3C/td%3E%3Ctd%3E%3C/td%3E%3Ctd%20style=%22text-align:right%22%3E%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:center%22%3Ex1%20%20-&amp;gt;%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E20%20%20%20%20%2030%20%20%20%20%2037%3C/td%3E%3Ctd%20style=%22text-align:left%22%3Ebase%20-%208%3C/td%3E%3Ctd%3E%3C/td%3E%3Ctd%20style=%22text-align:right%22%3E%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:center%22%3Ey1%20%20-&amp;gt;%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E20%20%20%20%20%2030%20%20%20%20%2037%20%20%20%20%2039%3C/td%3E%3Ctd%20style=%22text-align:left%22%3Ebase%20-%2016%3C/td%3E%3Ctd%3ESP%20+%204%3C/td%3E%3Ctd%20style=%22text-align:right%22%3ESP%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:center%22%3E&amp;lt;-%20%20y1%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E20%20%20%20%20%2030%20%20%20%20%2037%3C/td%3E%3Ctd%20style=%22text-align:left%22%3Ebase%20-%2016%3C/td%3E%3Ctd%3ESP%20+%204%3C/td%3E%3Ctd%20style=%22text-align:right%22%3ESP%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:center%22%3E&amp;lt;-%20%20x1%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E20%20%20%20%20%2030%3C/td%3E%3Ctd%20style=%22text-align:left%22%3Ebase%20-%208%3C/td%3E%3Ctd%3E%3C/td%3E%3Ctd%20style=%22text-align:right%22%3E%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:center%22%3E&amp;lt;-%20%20x2%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E20%3C/td%3E%3Ctd%20style=%22text-align:left%22%3Ebase%20-%204%3C/td%3E%3Ctd%3E%3C/td%3E%3Ctd%20style=%22text-align:right%22%3E%3C/td%3E%3C/tr%3E%3Ctr%3E%3Ctd%20style=%22text-align:center%22%3E&amp;lt;-%20%20k%3C/td%3E%3Ctd%20style=%22text-align:center%22%3E%3C/td%3E%3Ctd%20style=%22text-align:left%22%3Ebase%3C/td%3E%3Ctd%3E%3C/td%3E%3Ctd%20style=%22text-align:right%22%3E%3C/td%3E%3C/tr%3E%3C/tbody%3E%3C/table%3E%3Cp%3E%E5%9C%A8%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%BC%80%E5%A7%8B%EF%BC%8CSP%E5%80%BC%E4%BD%8D%E4%BA%8E%E6%A0%88%E5%BA%95%E9%83%A8%E5%9C%B0%E5%9D%80%EF%BC%8C%E6%A0%88%E7%9A%84%E5%86%85%E5%AE%B9%E6%9C%AA%E8%A2%AB%E5%AE%9A%E4%B9%89%EF%BC%8C%E4%BB%A5%E5%8F%8A%E5%8F%98%E9%87%8F%3Ccode%3Ex1%3C/code%3E%E5%92%8C%3Ccode%3Ey1%3C/code%3E%E7%9B%AE%E5%89%8D%E6%9C%AA%E8%A2%AB%E5%AE%9A%E4%B9%89%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E4%B8%BB%E5%87%BD%E6%95%B0%E6%97%B6%EF%BC%8CSP%E5%8F%98%E6%88%90%E4%BA%86%3Ccode%3Ebase%20-%204%3C/code%3E%EF%BC%8C%E5%9B%A0%E4%B8%BA%3Ccode%3Emain%3C/code%3E%E5%87%BD%E6%95%B0%E6%B2%A1%E6%9C%89%E5%8F%82%E6%95%B0%EF%BC%8C%E4%BB%85%E6%9C%89%E4%B8%80%E4%B8%AA%E6%9C%AC%E5%9C%B0%E5%8F%98%E9%87%8F%3Ccode%3Ek%3C/code%3E%EF%BC%8C%E5%AE%83%E5%8D%A04%E4%B8%AA%E5%AD%97%E8%8A%82%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E5%87%BD%E6%95%B0%3Ccode%3Ef1%3C/code%3E%E7%AC%AC%E4%B8%80%E6%AC%A1%E8%A2%AB%E8%B0%83%E7%94%A8%E6%97%B6%EF%BC%8CSP%E5%8F%98%E6%88%90%E4%BA%86%3Ccode%3Ebase%20-%2012%3C/code%3E%EF%BC%8C%E5%9B%A0%E4%B8%BA%3Ccode%3Ef1%3C/code%3E%E6%9C%89%E4%B8%80%E4%B8%AA%E5%8F%82%E6%95%B0%EF%BC%8C%3Ccode%3Ex1%3C/code%3E%EF%BC%8C%E4%BB%A5%E5%8F%8A%E4%B8%80%E4%B8%AA%E6%9C%AC%E5%9C%B0%E5%8F%98%E9%87%8F%3Ccode%3Ey1%3C/code%3E%EF%BC%8C%E6%AF%8F%E4%B8%AA%E5%8D%A04%E4%B8%AA%E5%AD%97%E8%8A%82%E3%80%82%3C/p%3E%3Cp%3E%3Ccode%3Ey1%3C/code%3E%E7%9A%84%E5%88%9B%E5%BB%BA%E5%92%8C%E9%94%80%E6%AF%81%E6%B2%A1%E6%9C%89%E6%94%B9%E5%8F%98SP%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E6%97%B6%E5%B7%B2%E7%BB%8F%E8%AE%BE%E7%BD%AE%E4%BA%86%E9%80%82%E5%BD%93%E7%9A%84%E5%80%BC%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E5%87%BD%E6%95%B0%3Ccode%3Ef1%3C/code%3E%E7%BB%93%E6%9D%9F%EF%BC%8CSP%E5%9C%A8%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E5%89%8D%E8%A2%AB%E5%AD%98%E5%82%A8%E5%9C%A8%E5%80%BC%E4%B8%AD%EF%BC%8C%E6%AD%A4%E6%97%B6%E4%B8%BA%3Ccode%3Ebase%20-%204%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E5%87%BD%E6%95%B0%3Ccode%3Ef2%3C/code%3E%E8%A2%AB%E8%B0%83%E7%94%A8%EF%BC%8CSP%E5%8F%98%E6%88%90%3Ccode%3Ebase%20-%208%3C/code%3E%EF%BC%8C%E4%BB%A5%E4%B8%BA%E5%8F%82%E6%95%B0%3Ccode%3Ex2%3C/code%3E%E5%A2%9E%E5%8A%A0%E4%BA%864%E4%B8%AA%E5%AD%97%E8%8A%82%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%3Ccode%3Ef1%3C/code%3E%E5%86%8D%E4%B8%80%E6%AC%A1%E8%A2%AB%E8%B0%83%E7%94%A8%EF%BC%8CSP%E5%8F%98%E6%88%90%E4%BA%86%3Ccode%3Ebase%20-%2016%3C/code%3E%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E6%8C%89%E5%89%8D%E4%B8%80%E6%AC%A1%E7%9A%84%E5%A4%A7%E5%B0%8F%E9%80%92%E5%87%8F%E4%BA%868%E4%B8%AA%E5%AD%97%E8%8A%82%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%3Ccode%3Ef1%3C/code%3E%E3%80%81%3Ccode%3Ef2%3C/code%3E%E5%92%8C%3Ccode%3Emain%3C/code%3E%E5%87%BD%E6%95%B0%E7%BB%93%E6%9D%9F%E5%90%8E%EF%BC%8CSP%E9%80%92%E5%A2%9E%EF%BC%8C%E5%85%88%E5%8F%98%E6%88%90%3Ccode%3Ebase%20-%208%3C/code%3E%EF%BC%8C%E7%84%B6%E5%90%8E%3Ccode%3Ebase%20-%204%3C/code%3E%EF%BC%8C%E7%84%B6%E5%90%8E%3Ccode%3Ebase%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E6%9C%80%E5%90%8E%E4%B8%A4%E5%88%97%E5%B1%95%E7%A4%BA%E4%BA%86%EF%BC%8C%E5%9C%A8%E5%87%BD%E6%95%B0%3Ccode%3Ef1%3C/code%3E%E4%B8%AD%EF%BC%8C%E5%8F%82%E6%95%B0%3Ccode%3Ex1%3C/code%3E%E7%9A%84%E5%80%BC%E6%80%BB%E6%98%AFSP%20-%204%EF%BC%9B%E4%BB%A5%E5%8F%8A%E6%9C%AC%E5%9C%B0%E5%8F%98%E9%87%8F%3Ccode%3Ey1%3C/code%3E%E7%9A%84%E5%80%BC%E6%80%BB%E6%98%AFSP%E8%87%AA%E8%BA%AB%E3%80%82%3C/p%3E%3Ch2%20id=%22Limitations-of-Stack-Allocation%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Limitations-of-Stack-Allocation%22%3E%C2%B6%3C/a%3ELimitations%20of%20Stack%20Allocation%3C/h2%3E%3Cp%3E%E6%A0%88%E5%88%86%E9%85%8D%E9%9D%9E%E5%B8%B8%E9%AB%98%E6%95%88%E5%92%8C%E6%96%B9%E4%BE%BF%EF%BC%8C%E4%BD%86%E6%9C%89%E4%B8%80%E4%BA%9B%E5%B1%80%E9%99%90%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E6%A0%88%E7%9A%84%E5%A4%A7%E5%B0%8F%E9%80%9A%E5%B8%B8%E6%9C%89%E9%99%90%E3%80%82%E5%AE%83%E7%9A%84%E5%A4%A7%E5%B0%8F%E7%94%B1%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%86%B3%E5%AE%9A%EF%BC%8C%E5%B9%B6%E5%8F%AF%E4%BB%A5%E7%94%B1%E6%9F%90%E4%BA%9B%E7%A8%8B%E5%BA%8F%E5%8E%8B%E7%BC%A9%EF%BC%8C%E4%BD%86%E5%9C%A8%E6%95%B0%E9%87%8F%E7%BA%A7%E4%B8%8A%EF%BC%8C%E5%8F%AA%E6%9C%89%E5%87%A0%E5%85%86%E7%9A%84%E5%AD%97%E8%8A%82%E3%80%82%3C/li%3E%3Cli%3ERust%E4%BB%85%E5%85%81%E8%AE%B8%E5%9C%A8%E6%A0%88%E4%B8%8A%E5%88%86%E9%85%8D%E9%82%A3%E4%BA%9B%E7%BC%96%E8%AF%91%E6%97%B6%E5%B7%B2%E7%BB%8F%E7%9F%A5%E9%81%93%E5%A4%A7%E5%B0%8F%E7%9A%84%E7%B1%BB%E5%9E%8B%EF%BC%8C%E4%BE%8B%E5%A6%82%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%92%8C%E6%95%B0%E7%BB%84%EF%BC%8C%E4%B8%8D%E8%83%BD%E5%AF%B9%E8%AF%B8%E5%A6%82vector%E8%BF%99%E7%A7%8D%E8%BF%90%E8%A1%8C%E6%9C%9F%E7%A1%AE%E5%AE%9A%E5%A4%A7%E5%B0%8F%E7%9A%84%E7%B1%BB%E5%9E%8B%E8%BF%9B%E8%A1%8C%E6%A0%88%E7%A9%BA%E9%97%B4%E7%9A%84%E5%88%86%E9%85%8D%E3%80%82%3C/li%3E%3Cli%3E%E4%B8%8D%E8%83%BD%E6%98%BE%E5%BC%8F%E5%9C%B0%E5%9C%A8%E6%A0%88%E4%B8%8A%E5%88%86%E9%85%8D(allocate)%E6%88%96%E5%9B%9E%E6%94%B6(deallocate)%E5%AF%B9%E8%B1%A1%E3%80%82%E4%BB%BB%E4%BD%95%E5%8F%98%E9%87%8F%E7%9A%84%E8%87%AA%E5%8A%A8%E5%88%86%E9%85%8D%EF%BC%8C%E9%83%BD%E9%9C%80%E8%A6%81%E5%87%BD%E6%95%B0%E7%AD%BE%E5%90%8D%E8%A2%AB%E8%B0%83%E7%94%A8%E5%AE%9E%E7%8E%B0%E3%80%82%E5%8D%B3%E4%BD%BF%E6%98%AF%E5%A3%B0%E6%98%8E%E5%9C%A8%E5%87%BD%E6%95%B0%E7%9A%84%E5%86%85%E9%83%A8%E5%9D%97%EF%BC%8C%E4%B9%9F%E5%8F%AA%E8%83%BD%E6%9C%89%E8%AF%A5%E5%87%BD%E6%95%B0%E7%BB%93%E6%9D%9F%E8%BF%9B%E8%A1%8C%E5%9B%9E%E6%94%B6%EF%BC%8C%E8%BF%99%E7%A7%8D%E8%A1%8C%E4%B8%BA%E8%BF%99%E7%A7%8D%E8%A1%8C%E4%B8%BA%E4%B8%8D%E8%83%BD%E8%A2%AB%E8%A6%86%E7%9B%96%E3%80%82%3C/li%3E%3C/ul%3E%3Cp%3E%E5%AF%B9%E4%BA%8E%E7%AC%AC%E4%BA%8C%E7%82%B9%EF%BC%8C%E6%88%91%E4%BB%AC%E5%AE%9E%E9%99%85%E4%B8%8A%E5%A3%B0%E6%98%8E%E4%BA%86%E6%9C%AC%E5%9C%B0%E5%8F%98%E9%87%8F%3Ccode%3EVec&amp;lt;_&amp;gt;%3C/code%3E%EF%BC%8C%E8%BF%99%E4%B8%AA%E5%AF%B9%E8%B1%A1%E4%BC%9A%E8%A2%AB%E5%88%86%E9%85%8D%E5%88%B0%E8%BF%99%E4%B8%AA%E6%A0%88%E4%B8%8A%EF%BC%8C%E4%BD%86%E5%9C%A8%E8%83%8C%E5%90%8E%EF%BC%8C%E8%BF%99%E4%B8%AA%E5%AF%B9%E8%B1%A1%E4%BC%9A%E5%9C%A8%E6%A0%88%E4%B9%8B%E5%A4%96%E5%88%86%E9%85%8D%E4%B8%80%E4%BA%9B%E5%86%85%E5%AD%98%E3%80%82%3C/p%3E%3Cp%3E%E5%AF%B9%E4%BA%8E%E7%AC%AC%E4%B8%80%E7%82%B9%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%9E%84%E5%BB%BA%E4%B8%80%E4%B8%AA%E4%BE%8B%E5%AD%90%E8%B6%85%E5%87%BA%E6%A0%88%E7%9A%84%E5%AE%B9%E9%87%8F%E3%80%82%3C/p%3E%3Cp%3E%E6%B3%A8%E6%84%8F%EF%BC%9A%E4%B8%8B%E9%9D%A2%E7%9A%84%E4%BB%A3%E7%A0%81%E6%9C%80%E5%90%8E%E5%9C%A8%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%89%A7%E8%A1%8C%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E4%BC%9A%E5%BC%BA%E5%88%B6%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%87%8D%E5%90%AF%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E6%98%AF%E4%B8%80%E4%B8%AA%E8%B6%85%E6%A0%88%E5%AE%B9%E9%87%8F%E7%9A%84%E4%BE%8B%E5%AD%90%EF%BC%8C%E5%AE%83%E4%BC%9A%E8%A7%A6%E5%8F%91%E2%80%9Cstack%20overflow%E2%80%9D%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Econst%3C/span%3E%20SIZE:%20%3Cspan%20class=%22type%22%3Eusize%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E100_000%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Econst%3C/span%3E%20N_ARRAY:%20%3Cspan%20class=%22type%22%3Eusize%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E1_000_000%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ecreate_array%3C/span%3E()%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20[%3Cspan%20class=%22type%22%3Eu8%3C/span%3E;%20SIZE]%20&amp;#123;%20[%3Cspan%20class=%22number%22%3E0u8%3C/span%3E;%20SIZE]%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Erecursive_func%3C/span%3E(n:%20%3Cspan%20class=%22type%22%3Eusize%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecreate_array%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20N_ARRAY%20-%20n%20+%20%3Cspan%20class=%22number%22%3E1%3C/span%3E,%20a[%3Cspan%20class=%22number%22%3E0%3C/span%3E]);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20n%20&amp;gt;%20%3Cspan%20class=%22number%22%3E1%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Erecursive_func%3C/span%3E(n%20-%20%3Cspan%20class=%22number%22%3E1%3C/span%3E)%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Erecursive_func%3C/span%3E(N_ARRAY);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E6%AE%B5%E7%A8%8B%E5%BA%8F%E5%BE%88%E5%8F%AF%E8%83%BD%E9%80%A0%E6%88%90%E5%B4%A9%E6%BA%83%EF%BC%8C%E5%85%B8%E5%9E%8B%E5%9C%B0%E6%8A%9B%E5%87%BA%E7%B1%BB%E4%BC%BC%E5%A6%82%E2%80%9CSegmentation%20fault%E2%80%9D%E7%9A%84%E6%B6%88%E6%81%AF%E3%80%82%E4%BA%8B%E5%AE%9E%E4%B8%8A%EF%BC%8C%E5%AE%83%E5%9C%A8%E6%A0%88%E4%B8%8A%E5%88%86%E9%85%8D%E8%B6%85%E8%BF%87%E4%BA%86100GB%E7%9A%84%E6%95%B0%E6%8D%AE%E3%80%82%3C/p%3E%3Cp%3E%E5%81%87%E8%AE%BE%E7%9B%AE%E6%A0%87%E4%B8%8D%E6%98%AF%E4%B8%80%E4%B8%AA%E5%BE%AE%E6%8E%A7%E5%88%B6%E5%99%A8%EF%BC%8C%E6%A0%88%E7%9A%84%E5%A4%A7%E5%B0%8F%E5%BA%94%E8%AF%A5%E5%A4%A7%E4%BA%8E100KB%EF%BC%9B%E5%9B%A0%E6%AD%A4%E5%AE%83%E5%8F%AF%E4%BB%A5%E5%88%86%E9%85%8D%E8%87%B3%E5%B0%91%E4%B8%80%E4%B8%AA100KB%E5%A4%A7%E5%B0%8F%E7%9A%84%E6%95%B0%E7%BB%84%E3%80%82%E7%84%B6%E8%80%8C%EF%BC%8C%E5%AE%83%E4%B8%8D%E5%8F%AF%E8%83%BD%E5%88%86%E9%85%8D1000%E7%9A%84%E6%95%B0%E7%BB%84%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E6%B5%8B%E8%AF%95%E8%BF%99%E6%AE%B5%E7%A8%8B%E5%BA%8F%E3%80%82%3C/p%3E%3Cp%3E%E5%A3%B0%E6%98%8E%3Ccode%3ESIZE%3C/code%3E%E5%92%8C%3Ccode%3EN_ARRAY%3C/code%3E%E5%92%8C%E5%87%BD%E6%95%B0%3Ccode%3Ecreate_array%3C/code%3E%E5%92%8C%3Ccode%3Erecursive_func%3C/code%3E%E4%B9%8B%E5%90%8E%EF%BC%8C%E4%BB%85%E6%9C%89%E4%B8%80%E6%9D%A1%E8%AF%AD%E5%8F%A5%E8%B0%83%E7%94%A8%E4%BA%86%3Ccode%3Erecursive_func%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E5%85%A5%E5%8F%82%E6%98%AF%3Ccode%3EN_ARRAY%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E5%87%BD%E6%95%B0%3Ccode%3Erecursive_func%3C/code%3E%E9%A6%96%E5%85%88%E5%A3%B0%E6%98%8E%E4%BA%86%E4%B8%80%E4%B8%AA%E5%8F%98%E9%87%8F%EF%BC%8C%E5%B9%B6%E5%B0%86%3Ccode%3Ecreate_array%3C/code%3E%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E7%9A%84%E7%BB%93%E6%9E%9C%E5%88%9D%E5%A7%8B%E5%8C%96%E8%BF%99%E4%B8%AA%E5%8F%98%E9%87%8F%EF%BC%9B%E7%84%B6%E5%90%8E%E6%89%93%E5%8D%B0%E4%B8%A4%E4%B8%AA%E6%95%B0%EF%BC%9B%E6%8E%A5%E7%9D%80%EF%BC%8C%E5%A6%82%E6%9E%9C%E5%8F%82%E6%95%B0%3Ccode%3En%3C/code%3E%E5%A4%A7%E4%BA%8E1%EF%BC%8C%E8%B0%83%E7%94%A8%E5%87%BD%E6%95%B0%E8%87%AA%E8%BA%AB%EF%BC%8C%E5%9B%A0%E6%AD%A4%E5%AE%83%E6%98%AF%E4%B8%80%E4%B8%AA%E9%80%92%E5%BD%92%E5%87%BD%E6%95%B0%E3%80%82%3C/p%3E%3Cp%3E%E6%B3%A8%E6%84%8F%E9%80%92%E5%BD%92%E5%87%BD%E6%95%B0%E7%9A%84%E6%AF%8F%E6%AC%A1%E8%B0%83%E7%94%A8%E4%BC%A0%E9%80%92%E4%BA%86%E5%8F%82%E6%95%B0%20-%201%EF%BC%8C%E7%9B%B4%E5%88%B0%E5%8F%82%E6%95%B0%3Ccode%3En%3C/code%3E%E4%B8%8D%E5%A4%A7%E4%BA%8E1%EF%BC%8C%E6%9C%80%E5%90%8E%E5%87%BD%E6%95%B0%E7%BB%93%E6%9D%9F%E3%80%82%3C/p%3E%3Cp%3E%E5%A6%82%E6%9E%9C%3Ccode%3EN_ARRAY%3C/code%3E%E6%98%AF3%EF%BC%8C%E9%A6%96%E6%AC%A1%E8%B0%83%E7%94%A8%3Ccode%3En%3C/code%3E%E4%B8%BA3%EF%BC%8C%E7%AC%AC%E4%BA%8C%E6%AC%A1%E4%B8%BA2%EF%BC%8C%E7%AC%AC%E4%B8%89%E6%AC%A11%EF%BC%8C%E6%8E%A5%E7%9D%80%E9%80%92%E5%BD%92%E7%BB%93%E6%9D%9F%E3%80%82%E8%BF%99%E7%A7%8D%E6%83%85%E5%86%B5%EF%BC%8C%3Ccode%3Erecursive_func%3C/code%3E%E5%B0%86%E8%A2%AB%E8%B0%83%E7%94%A83%E6%AC%A1%E3%80%82%3C/p%3E%3Cp%3E%E4%BA%8B%E5%AE%9E%E4%B8%8A%EF%BC%8C%E9%80%92%E5%BD%92%E5%87%BD%E6%95%B0%E7%9A%84%E8%B0%83%E7%94%A8%E6%AC%A1%E6%95%B0%EF%BC%8C%E7%AD%89%E4%BA%8E%E5%85%A5%E5%8F%82%E7%9A%84%E5%80%BC%EF%BC%8C%E8%BF%99%E9%87%8C%E4%BE%8B%E5%AD%90%E6%8E%A5%E8%BF%91%E4%B8%80%E7%99%BE%E4%B8%87%E3%80%82%3C/p%3E%3Cp%3E%E7%8E%B0%E5%9C%A8%EF%BC%8C%E8%A7%82%E5%AF%9F%E5%87%BD%E6%95%B0%3Ccode%3Ecreate_array%3C/code%3E%E3%80%82%E5%AE%83%E7%AE%80%E5%8D%95%E5%9C%B0%E8%BF%94%E5%9B%9E%E4%BA%86%E4%B8%80%E4%B8%AA100,1000%E5%AD%97%E8%8A%82%E7%9A%84%E6%95%B0%E7%BB%84%E3%80%82%E8%AF%A5%E6%95%B0%E7%BB%84%E8%A2%AB%E5%88%86%E9%85%8D%E5%88%B0%E4%B8%80%E4%B8%AA%E5%8F%98%E9%87%8F%3Ccode%3Ea%3C/code%3E%EF%BC%8C%E5%AE%83%E7%9A%84%E6%8E%A8%E6%96%AD%E7%B1%BB%E5%9E%8B%E6%98%AF%3Ccode%3E[u8;%20100000]%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E9%80%92%E5%BD%92%E5%87%BD%E6%95%B0%3Ccode%3Erecursive_func%3C/code%3E%E8%A2%AB%E8%B0%83%E7%94%A8%E6%97%B6%E5%8F%98%E9%87%8F%3Ccode%3Ea%3C/code%3E%E8%BF%9B%E8%A1%8C%E4%BA%86%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%EF%BC%8C%E4%BB%85%E5%BD%93%E5%87%BD%E6%95%B0%E7%BB%93%E6%9D%9F%E8%BF%9B%E8%A1%8C%E5%9B%9E%E6%94%B6%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E6%AF%8F%E6%AC%A1%E9%80%92%E5%BD%92%E8%B0%83%E7%94%A8%EF%BC%8C%E4%BC%9A%E4%BA%A7%E7%94%9F%E4%B8%80%E4%B8%AA%3Ccode%3Ea%3C/code%3E%E5%88%86%E9%85%8D%E7%9A%84%E6%8B%B7%E8%B4%9D%EF%BC%8C%E4%B8%8A%E4%B8%80%E6%AC%A1%E7%9A%84%E6%8B%B7%E8%B4%9D%E6%B2%A1%E6%9C%89%E8%A2%AB%E5%9B%9E%E6%94%B6%E3%80%82%E7%BB%93%E6%9E%9C%EF%BC%8C%E8%BF%99%E6%AE%B5%E4%BB%A3%E7%A0%81%E5%9C%A8%E6%A0%88%E4%B8%8A%E5%AF%B9%E6%AF%8F%E4%B8%80%E4%B8%AA%E5%8D%81%E4%B8%87%E5%AD%97%E8%8A%82%EF%BC%8C%E5%88%86%E9%85%8D%E4%BA%86%E4%B8%80%E4%B8%AA%E7%99%BE%E4%B8%87%E6%95%B0%E7%BB%84%E3%80%82%E5%BD%93%E7%84%B6%EF%BC%8C%E8%BF%99%E5%AE%9E%E9%99%85%E4%B8%8D%E5%8F%AF%E8%83%BD%E5%81%9A%E5%88%B0%EF%BC%8C%E6%89%93%E5%8D%B0%E5%87%A0%E8%A1%8C%E5%90%8E%EF%BC%8C%E7%A8%8B%E5%BA%8F%E7%BB%93%E6%9D%9F%EF%BC%8C%E5%B9%B6%E8%BE%93%E5%87%BA%E4%B8%80%E4%B8%AA%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF%EF%BC%8C%E5%A6%82%E2%80%9CSegmentation%20fault%E2%80%9D%20%E6%88%96%20%E2%80%9CStack%20overflow%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E6%9C%80%E5%90%8E%E7%9A%84%E8%BE%93%E5%87%BA%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%83%BD%E4%BC%9A%E6%98%AF%E2%80%9C83%200%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%95%B0%E8%A1%A8%E6%98%8E%E4%BA%86%E9%80%92%E5%BD%92%E6%89%A7%E8%A1%8C%E4%BA%86%E5%A4%9A%E5%B0%91%E6%AC%A1%EF%BC%8C%E4%BB%A5%E5%8F%8A%E8%A1%A8%E7%A4%BA%E5%A4%9A%E5%B0%91%E4%B8%AA%E6%95%B0%E7%BB%84%E8%A2%AB%E5%88%86%E9%85%8D%E5%9C%A8%E5%86%85%E5%AD%98%E3%80%82%E5%A6%82%E6%9E%9C%E8%BE%93%E5%87%BA%E7%9A%84%E6%95%B0%E5%AD%97%E6%98%AF83%EF%BC%8C%E6%84%8F%E5%91%B3%E7%9D%80%E8%B6%85%E8%BF%878.3%E7%99%BE%E4%B8%87%E7%9A%84%E5%AD%97%E8%8A%82%E8%A2%AB%E5%88%86%E9%85%8D%E5%9C%A8%E6%A0%88%E7%A9%BA%E9%97%B4%E4%B8%8A%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%BA%8C%E4%B8%AA%E6%95%B0%EF%BC%8C%E8%A1%A8%E7%A4%BA%E6%95%B0%E7%BB%84%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%EF%BC%8C%E8%BF%99%E9%87%8C%E4%BB%85%E5%81%9A%E4%B8%80%E4%B8%AA%E5%8F%AF%E8%83%BD%E7%9A%84%E7%BC%96%E8%AF%91%E4%BC%98%E5%8C%96%E3%80%82%E4%BA%8B%E5%AE%9E%E4%B8%8A%EF%BC%8C%E5%A6%82%E6%9E%9C%E5%8F%98%E9%87%8F%3Ccode%3Ea%3C/code%3E%E6%B2%A1%E6%9C%89%E8%A2%AB%E8%AF%BB%E5%8F%96%EF%BC%8C%E7%BC%96%E8%AF%91%E5%99%A8%E4%BC%9A%E6%8A%9B%E5%87%BA%E4%B8%80%E4%B8%AA%E5%91%8A%E8%AD%A6%EF%BC%8C%E8%BF%99%E4%B8%AA%E5%91%8A%E8%AD%A6%E8%A1%A8%E7%A4%BA%E5%8F%AF%E4%BB%A5%E7%A7%BB%E9%99%A4%E5%AE%83%EF%BC%8C%E4%BB%A5%E6%8F%90%E9%AB%98%E7%A8%8B%E5%BA%8F%E6%80%A7%E8%83%BD%E3%80%82%3C/p%3E%3Ch2%20id=%22Heap-Allocation%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Heap-Allocation%22%3E%C2%B6%3C/a%3EHeap%20Allocation%3C/h2%3E%3Cp%3E%E5%8F%AF%E6%83%9C%E7%9A%84%E6%98%AF%E6%A0%88%E6%BA%A2%E5%87%BA%E4%BC%9A%E8%AE%A9%E7%A8%8B%E5%BA%8F%E5%B4%A9%E6%BA%83%EF%BC%8C%E4%BB%8D%E7%84%B6%E6%9C%89%E5%BE%88%E5%A4%9A%E5%86%85%E5%AD%98%E6%B2%A1%E8%A2%AB%E4%BD%BF%E7%94%A8%E3%80%82%E5%A0%86%E5%88%86%E9%85%8D%E5%B8%A6%E6%9D%A5%E4%BA%86%E8%BD%AC%E6%9C%BA%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Econst%3C/span%3E%20SIZE:%20%3Cspan%20class=%22type%22%3Eusize%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E100_00%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Econst%3C/span%3E%20N_ARRAY:%20%3Cspan%20class=%22type%22%3Eusize%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E1_000_000%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ecreate_array%3C/span%3E()%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3EBox%3C/span%3E&amp;lt;[%3Cspan%20class=%22type%22%3Eu8%3C/span%3E;%20SIZE]&amp;gt;%20&amp;#123;%20%3Cspan%20class=%22type%22%3EBox%3C/span%3E::%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E([%3Cspan%20class=%22number%22%3E0u8%3C/span%3E;%20SIZE])%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Erecursive_func%3C/span%3E(n:%20%3Cspan%20class=%22type%22%3Eusize%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ecreate_array%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20N_ARRAY%20-%20n%20+%20%3Cspan%20class=%22number%22%3E1%3C/span%3E,%20a[%3Cspan%20class=%22number%22%3E0%3C/span%3E]);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20n%20&amp;gt;%20%3Cspan%20class=%22number%22%3E1%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Erecursive_func%3C/span%3E(n%20-%20%3Cspan%20class=%22number%22%3E1%3C/span%3E)%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Erecursive_func%3C/span%3E(N_ARRARY);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%B0%BD%E7%AE%A1%E6%9C%80%E5%90%8E%E7%A8%8B%E5%BA%8F%E8%BF%98%E6%98%AF%E7%94%B1%E4%BA%8E%E6%A0%88%E6%BA%A2%E5%87%BA%E6%88%96%E5%86%85%E5%AD%98%E4%B8%8D%E8%B6%B3%E5%AF%BC%E8%87%B4%E4%BA%86%E5%B4%A9%E6%BA%83%EF%BC%8C%E6%AF%94%E8%B5%B7%E5%85%88%E5%89%8D%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8D%B0%E4%BA%86%E6%9B%B4%E5%A4%9A%E7%9A%84%E8%A1%8C%EF%BC%8C%E8%BF%99%E6%84%8F%E5%91%B3%E7%9D%80%E5%B7%B2%E7%BB%8F%E6%88%90%E5%8A%9F%E5%88%86%E9%85%8D%E4%BA%86%E6%9B%B4%E5%A4%9A%E7%9A%84%E5%86%85%E5%AD%98%E3%80%82%3C/p%3E%3Cp%3E%E5%AF%B9%E6%AF%94%E5%8F%91%E7%8E%B0%EF%BC%8C%E4%BB%85%E5%9C%A8%E7%AC%AC%E4%B8%89%E8%A1%8C%EF%BC%8C%E5%B0%86%E5%87%BD%E6%95%B0%3Ccode%3Ecreate_array%3C/code%3E%E7%9A%84%E8%BF%94%E5%9B%9E%E7%B1%BB%E5%9E%8B%EF%BC%8C%E6%94%B9%E4%B8%BA%E4%BA%86%3Ccode%3EBox&amp;lt;u8;%20SIZE]&amp;gt;%3C/code%3E%EF%BC%8C%E5%AE%83%E6%98%AF%E4%B8%AA%E2%80%9Cboxed%E2%80%9D%E7%9A%84%E6%95%B0%E7%BB%84%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8Rust%E4%B8%AD%EF%BC%8C%E4%B8%8D%E4%BB%85%E5%8F%AF%E4%BB%A5%E8%A3%85%E7%AE%B1(box)%E6%95%B0%E7%BB%84%EF%BC%8C%E4%BD%A0%E5%8F%AF%E4%BB%A5%E8%A3%85%E7%AE%B1%E6%9B%B4%E5%A4%9A%E7%9A%84%E5%AF%B9%E8%B1%A1%E3%80%82Rust%E6%A0%87%E5%87%86%E5%8C%85%E5%90%AB%E6%9C%89%E6%B3%9B%E5%9E%8B%E7%BB%93%E6%9E%84%E7%B1%BB%E5%9E%8B%3Ccode%3EBox&amp;lt;T&amp;gt;%3C/code%3E%E3%80%82%E7%B1%BB%E5%9E%8B%E4%B8%BA%3Ccode%3EBox&amp;lt;T&amp;gt;%3C/code%3E%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E6%98%AF%E5%8F%A6%E5%A4%96%E7%9C%9F%E5%AE%9E%E5%AF%B9%E8%B1%A1%E7%9A%84%E4%B8%80%E4%B8%AA%E5%BC%95%E7%94%A8%EF%BC%8C%E6%B3%9B%E5%9E%8B%3Ccode%3ET%3C/code%3E%E5%8D%B3%E4%B8%BA%E6%89%80%E5%BC%95%E7%94%A8%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%AE%83%E8%A2%AB%E6%94%BE%E7%BD%AE%E5%9C%A8%E5%86%85%E5%AD%98%E7%9A%84%E2%80%9C%3Ccode%3E%E5%A0%86(heap)%3C/code%3E%E2%80%9D%EF%BC%8C%E5%8C%BA%E5%88%AB%E4%BA%8E%E9%9D%99%E6%80%81%E5%8C%BA%E5%9F%9F%E5%92%8C%E6%A0%88%E3%80%82%3C/p%3E%3Cp%3E%E5%87%BD%E6%95%B0%3Ccode%3Ecrreate_array%3C/code%3E%E7%9A%84%E5%87%BD%E6%95%B0%E4%BD%93%E6%98%AF%3Ccode%3EBox::new([0u8;%20SIZE])%3C/code%3E%E3%80%82%E8%AF%A5%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%A1%A8%E7%A4%BA%E4%B8%80%E4%B8%AA%E6%96%B0%E5%87%BD%E6%95%B0%E5%A3%B0%E6%98%8E%E7%9A%84%E8%B0%83%E7%94%A8%E5%9C%A8%3Ccode%3EBox%3C/code%3E%E8%8C%83%E5%9B%B4%E5%86%85%E3%80%82%E8%AF%A5%E5%87%BD%E6%95%B0%E6%8E%A5%E5%8F%97%E4%B8%80%E4%B8%AASIZE%E5%AD%97%E8%8A%82%E6%95%B0%E7%BB%84%E7%9A%84%E5%8F%82%E6%95%B0%EF%BC%8C%E5%8F%82%E6%95%B0%E5%85%A8%E9%83%A8%E4%B8%BA0.%E8%AF%A5%3Ccode%3EBox::new%3C/code%3E%E5%87%BD%E6%95%B0%E7%9A%84%E8%A1%8C%E4%B8%BA%E5%92%8C%E7%9B%AE%E7%9A%84%EF%BC%8C%E6%98%AF%E5%B0%86%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E5%88%86%E9%85%8D%E5%9C%A8%E5%A0%86(heap)%EF%BC%8C%E8%BF%99%E4%B8%AA%E5%A0%86%E9%9C%80%E8%A6%81%E8%B6%B3%E5%A4%9F%E5%A4%A7%EF%BC%8C%E4%BB%A5%E5%AE%B9%E7%BA%B3%E6%8E%A5%E6%94%B6%E5%8F%82%E6%95%B0%E7%9A%84%E6%8B%B7%E8%B4%9D%EF%BC%8C%E8%BF%99%E4%BA%9B%E6%8E%A5%E6%94%B6%E7%9A%84%E5%8F%82%E6%95%B0%E4%BB%8E%E6%96%B0%E5%88%86%E9%85%8D%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%A4%8D%E5%88%B6%EF%BC%8C%E5%B9%B6%E8%BF%94%E5%9B%9E%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%9C%B0%E5%9D%80%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E6%A0%88%E7%A9%BA%E9%97%B4%E4%B8%8A%E5%8D%A0%E9%A2%86%E7%9A%84%EF%BC%8C%E4%BB%85%E6%98%AF%E5%8F%98%E9%87%8F%3Ccode%3Ea%3C/code%3E%E7%9A%84%E6%8C%87%E9%92%88%E3%80%82%E5%AE%9E%E9%99%85%E7%9A%84%E6%95%B0%E7%BB%84%E8%A2%AB%E5%88%86%E9%85%8D%E5%9C%A8%E5%A0%86%E4%B8%8A%E3%80%82%E5%AE%9E%E9%99%85%E4%B8%8A%3Ccode%3EBox::new%3C/code%3E%E5%87%BD%E6%95%B0%E5%B0%86%E6%95%B0%E7%BB%84%E4%B8%B4%E6%97%B6%E6%8C%82%E5%9C%A8%E6%A0%88%E4%B8%8A%EF%BC%8C%E4%B8%80%E6%97%A6%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E5%8D%B3%E5%AF%B9%E5%85%B6%E8%BF%9B%E8%A1%8C%E5%9B%9E%E6%94%B6%E3%80%82%E8%BF%99%E6%A0%B7%E4%B8%80%E6%9D%A5%EF%BC%8Cstack%E5%B0%B1%E4%B8%8A%E5%8F%AF%E4%BB%A5%E5%AE%B9%E7%BA%B3%E4%B8%80%E4%B8%AA%E7%99%BE%E4%B8%87%E5%AD%97%E8%8A%82%E7%9A%84%E6%95%B0%E7%BB%84%E5%AE%9E%E4%BE%8B%E4%BA%86%E3%80%82%3C/p%3E%3Ch2%20id=%22Heap-Management%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Heap-Management%22%3E%C2%B6%3C/a%3EHeap%20Management%3C/h2%3E%3Cp%3E%E8%AE%A9%E6%88%91%E4%BB%AC%E7%9C%8B%E7%9C%8B%E5%A0%86%E5%86%85%E5%AD%98%E5%A6%82%E4%BD%95%E7%AE%A1%E7%90%86%E7%9A%84%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E4%B8%80%E6%AE%B5%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%A7%8B%EF%BC%8C%E5%AE%83%E7%9A%84%E5%A0%86%E5%87%A0%E4%B9%8E%E4%B8%BA%E7%A9%BA(%E6%88%96%E9%9D%9E%E5%B8%B8%E5%B0%8F)%E3%80%82%3C/p%3E%3Cp%3E%E4%BB%BB%E4%BD%95%E6%97%B6%E5%88%BB%EF%BC%8C%E5%A0%86%E4%B8%8A%E7%9A%84%E6%AF%8F%E4%B8%AA%E5%AD%97%E8%8A%82%E5%8F%AF%E8%83%BD%E6%9C%89%E4%B8%A4%E7%A7%8D%E7%8A%B6%E6%80%81%EF%BC%9A%E2%80%9C%E9%A9%BB%E7%95%99%EF%BC%8Creserved%E2%80%9D(%E5%8F%88%E5%90%8D%EF%BC%8C%E2%80%9Cused%E2%80%9D)%EF%BC%8C%E2%80%9C%E9%87%8A%E6%94%BE%EF%BC%8Cfree%E2%80%9D(%E5%8F%88%E5%90%8D%EF%BC%8C%E2%80%9Cunused%E2%80%9D)%3C/p%3E%3Cp%3E%E5%BD%93%E7%A8%8B%E5%BA%8F%E9%9C%80%E8%A6%81%E5%9C%A8%E5%A0%86%E5%88%86%E9%85%8D%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%EF%BC%8C%E9%A6%96%E5%85%88%E4%BC%9A%E6%90%9C%E7%B4%A2%E5%A0%86%E8%87%B3%E5%B0%91%E4%B8%8E%E8%A6%81%E5%88%86%E9%85%8D%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%A4%A7%E5%B0%8F%E7%9B%B8%E5%90%8C%E7%9A%84%E7%A9%BA%E9%97%B2%E5%AD%97%E8%8A%82%E5%BA%8F%E5%88%97%E3%80%82%E5%A6%82%E6%9E%9C%E6%9C%89%E8%BF%99%E6%A0%B7%E4%B8%80%E4%B8%AA%E5%AD%97%E8%8A%82%E5%BA%8F%E5%88%97%EF%BC%8C%E7%A8%8B%E5%BA%8F%E5%AD%98%E5%82%A8%E4%B8%8E%E8%AF%A5%E5%AF%B9%E8%B1%A1%E5%A4%A7%E5%B0%8F%E7%9B%B8%E5%90%8C%E7%9A%84%E4%B8%80%E4%B8%AA%E5%AD%97%E5%BA%8F%E5%88%97%E3%80%82%E7%9B%B8%E5%8F%8D%EF%BC%8C%E5%A6%82%E6%9E%9C%E5%A0%86%E6%B2%A1%E6%9C%89%E8%B6%B3%E5%A4%9F%E7%9A%84%E5%BA%8F%E5%88%97%EF%BC%8C%E4%BC%9A%E5%90%91%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AF%B7%E6%B1%82%E6%89%A9%E5%B1%95%E5%A0%86%E7%9A%84%E5%A4%A7%E5%B0%8F%EF%BC%8C%E8%BF%99%E6%A0%B7%E4%B8%80%E6%9D%A5%E5%AF%B9%E8%B1%A1%E5%B0%B1%E7%BB%99%E5%88%86%E9%85%8D%E5%A5%BD%E4%BA%86%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E5%A0%86%E4%B8%AD%E7%9A%84%E4%B8%80%E4%B8%AA%E5%88%86%E9%85%8D%E7%9A%84%E5%AF%B9%E8%B1%A1%E4%B8%8D%E5%86%8D%E8%A2%AB%E9%9C%80%E8%A6%81%EF%BC%8C%E5%AE%83%E5%8F%AF%E4%BB%A5%E6%98%BE%E5%BC%8F%E5%9C%B0%E5%9B%9E%E6%94%B6%EF%BC%8C%E8%BF%94%E5%9B%9E%E6%89%80%E9%87%8A%E6%94%BE%E7%9A%84%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E3%80%82%3C/p%3E%3Cp%3E%E6%B3%A8%E6%84%8F%EF%BC%8C%E9%80%9A%E5%B8%B8%E4%B8%80%E4%B8%AA%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%A0%86%E5%A4%A7%E5%B0%8F%E4%B8%8D%E4%BC%9A%E7%BC%A9%E5%87%8F%EF%BC%8C%E8%BF%99%E6%98%AF%E7%94%B1%E4%BA%8E%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%86%85%E5%AD%98%E9%A1%B5%E6%9C%BA%E5%88%B6%E5%86%B3%E5%AE%9A%E7%9A%84%E3%80%82%3C/p%3E%3Cp%3E%E5%A0%86%E7%AE%A1%E7%90%86%E7%9A%84%E4%B8%80%E4%B8%AA%E4%B8%A5%E9%87%8D%E9%97%AE%E9%A2%98%E6%98%AF%E5%8F%AF%E8%83%BD%E6%9C%89%E7%A2%8E%E7%89%87(fragment)%E3%80%82%E5%A6%82%E6%9E%9C%E4%B8%80%E4%B8%AA%3Ccode%3Ef64%3C/code%3E%E7%B1%BB%E5%9E%8B%E5%80%BC%E4%B8%BA%E7%99%BE%E4%B8%87%EF%BC%8C%E8%A2%AB%E5%88%86%E9%85%8D%E5%9C%A8%E4%B8%80%E4%B8%AA%E5%A0%86%E4%B8%AD%EF%BC%8C%E9%82%A3%E4%B9%88%E8%BF%99%E4%B8%AA%E5%A0%86%E5%BF%85%E9%A1%BB%E8%87%B3%E5%B0%91%E5%A4%A7%E4%BA%8E8MB%E3%80%82%E5%A6%82%E6%9E%9C%E5%86%85%E5%AD%98%E5%81%B6%E6%95%B0%E4%BD%8D%E7%9A%84%E5%AF%B9%E8%B1%A1%E4%BB%8E%E5%A0%86%E4%B8%AD%E5%9B%9E%E6%94%B6%EF%BC%8C%E4%BE%BF%E6%9C%89%E4%B8%80%E5%8D%8A%E7%99%BE%E4%B8%87%E7%9A%84%E9%87%8A%E6%94%BE%E7%A9%BA%E9%97%B4%EF%BC%8C%E5%B0%86%E8%BF%914MB%EF%BC%8C%E4%BA%A4%E9%94%99%E6%9C%89%E4%B8%80%E5%8D%8A%E7%99%BE%E4%B8%87%E7%9A%84%E5%AD%98%E5%82%A8%E7%A9%BA%E9%97%B4%E3%80%82%E6%9C%89%E8%AE%B8%E5%A4%9A%E7%A9%BA%E9%97%B2%E7%9A%84%E7%A9%BA%E9%97%B4%EF%BC%8C%E5%A6%82%E6%9E%9C%E9%9C%80%E8%A6%81%E5%88%86%E9%85%8D%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E5%AD%97%E8%8A%82%E5%A4%A7%E4%BA%8E9MB%EF%BC%8C%E8%BF%99%E4%BA%9B%E7%A9%BA%E9%97%B4%E4%B8%8D%E5%A4%9F%E7%94%A8%EF%BC%8C%E4%BD%A0%E9%9C%80%E8%A6%81%E5%86%8D%E4%B8%80%E6%AC%A1%E6%89%A9%E5%A4%A7%E5%A0%86%E7%A9%BA%E9%97%B4%E3%80%82%3C/p%3E%3Cp%3E%E5%8F%A6%E5%A4%96%EF%BC%8C%E5%9C%A8%E5%A0%86%E5%86%85%E5%AD%98%E6%90%9C%E7%B4%A2%E4%B8%80%E4%B8%AA%E8%B6%B3%E5%A4%9F%E5%A4%A7%E7%A9%BA%E9%97%B4%E7%9A%84%E5%B9%BC%E7%A8%9A%E7%AE%97%E6%B3%95%E4%BC%9A%E5%BE%88%E6%B5%AA%E8%B4%B9%E3%80%82%E6%9C%89%E8%B6%B3%E5%A4%9F%E8%81%AA%E6%98%8E%E7%9A%84%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95%E5%8F%AF%E4%BB%A5%E6%8F%90%E5%8D%87%E5%A0%86%E5%88%86%E9%85%8D%E7%9A%84%E6%80%A7%E8%83%BD%EF%BC%8C%E4%BD%86%E4%BC%9A%E5%AF%BC%E8%87%B4%E5%A0%86%E5%9B%9E%E6%94%B6%E6%9B%B4%E8%80%97%E8%B4%B9%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E6%A0%88%E5%88%86%E9%85%8D%E6%80%BB%E6%98%AF%E6%AF%94%E5%A0%86%E5%88%86%E9%85%8D%E9%AB%98%E6%95%88%E7%9A%84%E5%A4%9A%EF%BC%8C%E4%B8%8D%E8%AE%BA%E6%98%AF%E6%97%B6%E9%97%B4%E6%95%88%E7%8E%87%E8%BF%98%E6%98%AF%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E4%B8%8A%E3%80%82%E5%A0%86%E5%88%86%E9%85%8D%E4%BB%85%E5%BD%93%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E5%9B%9E%E6%94%B6%E6%97%B6%EF%BC%8C%E8%BF%99%E7%A7%8D%E8%A1%8C%E4%B8%BA%E5%92%8C%E6%A0%88%E7%B1%BB%E4%BC%BC%E5%9C%B0%E6%83%85%E5%86%B5%E4%B8%8B%EF%BC%8C%E6%89%8D%E6%8E%A5%E8%BF%91%E6%A0%88%E7%9A%84%E6%95%88%E7%8E%87%E3%80%82%E5%BD%93%E7%84%B6%EF%BC%8C%E8%BF%99%E7%A7%8D%E9%9C%80%E6%B1%82%E5%9C%A8%E7%A8%8B%E5%BA%8F%E6%9D%A5%E8%AF%B4%E4%B8%8D%E5%85%81%E8%AE%B8%E8%BF%99%E7%A7%8D%E5%88%86%E9%85%8D%E6%A8%A1%E5%BC%8F%E3%80%82%3C/p%3E%3Ch2%20id=%22The-Behavior-of-Box%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#The-Behavior-of-Box%22%3E%C2%B6%3C/a%3EThe%20Behavior%20of%20Box%3C/h2%3E%3Cp%3E%E5%A6%82%E6%88%91%E4%BB%AC%E6%89%80%E8%AF%B4%EF%BC%8C%E5%AF%B9%E4%BA%8E%E4%BB%BB%E4%BD%95%E7%B1%BB%E5%9E%8B%E7%9A%84%3Ccode%3EBox&amp;lt;T&amp;gt;%3C/code%3E%E5%8F%98%E9%87%8F%EF%BC%8C%E5%8F%AA%E8%A6%81%E5%8C%85%E5%90%AB%E8%AF%A5%E5%8F%98%E9%87%8F%E7%9A%84%E5%87%BD%E6%95%B0%E8%A2%AB%E8%B0%83%E7%94%A8%EF%BC%8C%E4%B8%80%E4%B8%AA%E6%8C%87%E9%92%88%E4%BC%9A%E8%A2%AB%E6%8C%87%E6%B4%BE%E5%9C%A8%E6%A0%88%E4%B8%8A%E3%80%82%E7%9B%B8%E5%8F%8D%EF%BC%8C%E5%A0%86%E5%88%86%E9%85%8D%E5%87%BA%E7%8E%B0%E5%9C%A8%E4%BB%85%E5%BD%93%3Ccode%3EBox::new%3C/code%3E%E8%A2%AB%E8%B0%83%E7%94%A8%E6%97%B6%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%3Ccode%3EBox&amp;lt;T&amp;gt;%3C/code%3E%E7%9A%84%E5%88%86%E9%85%8D%E4%BC%9A%E5%87%BA%E7%8E%B0%E5%9C%A8%E4%B8%A4%E4%B8%AA%E5%9C%B0%E6%96%B9%EF%BC%9A%E4%B8%80%E6%98%AF%E6%8C%87%E9%92%88%EF%BC%8C%E4%BA%8C%E6%98%AF%E5%85%B6%E5%BC%95%E7%94%A8%E5%AF%B9%E8%B1%A1%E3%80%82%3C/p%3E%3Cp%3E%E7%B1%BB%E4%BC%BC%E5%9C%B0%EF%BC%8C%E5%86%85%E5%AD%98%E5%9B%9E%E6%94%B6%E4%B9%9F%E5%87%BA%E7%8E%B0%E5%9C%A8%E4%B8%A4%E4%B8%AA%E5%9C%B0%E6%96%B9%E3%80%82%E4%B8%80%E6%98%AF%E5%8C%85%E5%90%AB%E8%AF%A5%E5%8F%98%E9%87%8F%E7%9A%84%E5%87%BD%E6%95%B0%E4%B8%AD%E6%AD%A2%EF%BC%8C%E6%A0%88%E4%B8%8A%E7%9A%84%E6%8C%87%E9%92%88%E5%9B%9E%E6%94%B6%EF%BC%9B%E4%BA%8C%E6%98%AF%E5%A0%86%E7%A9%BA%E9%97%B4%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%9B%9E%E6%94%B6%EF%BC%8C%E5%A0%86%E7%9A%84%E5%9B%9E%E6%94%B6%E5%8F%AF%E8%83%BD%E4%BC%9A%E6%AF%94%E6%A0%88%E6%8F%90%E5%89%8D%E5%BE%88%E5%A4%9A%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E(p:%20&amp;amp;%3Cspan%20class=%22type%22%3Ef64%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3EBox%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E(*p);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eb%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3EBox%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E([%3Cspan%20class=%22number%22%3E1%3C/span%3E,%20%3Cspan%20class=%22number%22%3E2%3C/span%3E,%20%3Cspan%20class=%22number%22%3E3%3C/span%3E]);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20*a,%20*b);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ec%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3EBox%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E(%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20a,%20c);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(&amp;amp;%3Cspan%20class=%22number%22%3E3.4%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C%3Ccode%3E3.4%20[1,%202,%203]%203.4%20true%3C/code%3E%E2%80%9D%3C/p%3E%3Cp%3E%E5%BD%93%3Ccode%3Emain%3C/code%3E%E5%87%BD%E6%95%B0%E8%A2%AB%E8%B0%83%E7%94%A8%EF%BC%8C%E7%B1%BB%E5%9E%8B%E4%B8%BA%3Ccode%3Ef64%3C/code%3E%E7%9A%84%E5%80%BC3.4%EF%BC%8C%E8%A2%AB%E5%88%86%E9%85%8D%E5%9C%A8%E6%A0%88%EF%BC%8C%E5%B9%B6%E4%B8%94%E4%B8%8D%E5%85%B3%E8%81%94%E4%BB%BB%E4%BD%95%E5%8F%98%E9%87%8F%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E5%87%BD%E6%95%B0%3Ccode%3Ef%3C/code%3E%E8%A2%AB%E8%B0%83%E7%94%A8%EF%BC%8C%E6%A0%88%E7%A9%BA%E9%97%B4%E6%8C%87%E6%B4%BE%E4%BA%864%E4%B8%AA%E6%8C%87%E9%92%88%EF%BC%8C%E4%B8%80%E4%B8%AA%E6%98%AF%E5%8F%82%E6%95%B0%3Ccode%3Ep%3C/code%3E%EF%BC%8C%E5%8F%A6%E5%A4%96%E4%B8%89%E4%B8%AA%E6%98%AF%E5%8F%98%E9%87%8F%3Ccode%3Ea%3C/code%3E%EF%BC%8C%3Ccode%3Eb%3C/code%3E%E5%92%8C%3Ccode%3Ec%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E5%87%BD%E6%95%B0%E7%AC%AC%E4%B8%80%E6%9D%A1%E8%AF%AD%E5%8F%A5%E8%A2%AB%E6%89%A7%E8%A1%8C%EF%BC%8C%E4%B8%80%E4%B8%AA%3Ccode%3Ef64%3C/code%3E%E7%9A%84%E5%AF%B9%E8%B1%A1%E8%A2%AB%E6%8C%87%E6%B4%BE%E5%9C%A8%E5%A0%86%E4%B8%8A%EF%BC%8C%E5%AE%83%E7%9A%84%E5%80%BC%E8%A2%AB%E8%A1%A8%E8%BE%BE%E5%BC%8F%3Ccode%3E*p%3C/code%3E%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B8%BA3.4%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E5%87%BD%E6%95%B0%E7%AC%AC%E4%BA%8C%E6%9D%A1%E8%AF%AD%E5%8F%A5%E8%A2%AB%E6%89%A7%E8%A1%8C%EF%BC%8C%E4%B8%80%E4%B8%AA%E6%9C%89%E4%B8%89%E4%B8%AA%E5%80%BC%EF%BC%8C%E7%B1%BB%E5%9E%8B%E4%B8%BA%3Ccode%3Ei32%3C/code%3E%E7%9A%84%E6%95%B0%E7%BB%84%E8%A2%AB%E5%88%9D%E5%A7%8B%E5%8C%96%E5%B9%B6%E6%8C%87%E6%B4%BE%E5%9C%A8%E5%A0%86%E7%A9%BA%E9%97%B4%EF%BC%8C%E5%AE%83%E5%9C%A8%E5%A0%86%E4%B8%8A%E7%9A%84%E5%9C%B0%E5%9D%80%E8%A2%AB%E7%94%A8%E4%BA%8E%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8F%98%E9%87%8F%3Ccode%3Eb%3C/code%3E%E3%80%82%E7%AC%AC%E4%B8%89%E6%9D%A1%E8%AF%AD%E5%8F%A5%E6%89%93%E5%8D%B0%E4%BA%86%3Ccode%3Ea%3C/code%3E%E5%92%8C%3Ccode%3Eb%3C/code%3E%E5%BC%95%E7%94%A8%E5%80%BC%E3%80%82%E5%8F%98%E9%87%8F%3Ccode%3Ec%3C/code%3E%E4%B8%8D%E8%83%BD%E5%9C%A8%E8%BF%99%E9%87%8C%E6%89%93%E5%8D%B0%EF%BC%8C%E5%9B%A0%E4%B8%BA%E8%BF%98%E6%B2%A1%E6%9C%89%E5%88%9D%E5%A7%8B%E5%8C%96%E3%80%82%E6%8E%A5%E7%9D%80%EF%BC%8C%3Ccode%3Eb%3C/code%3E%E7%9A%84%E8%8C%83%E5%9B%B4%E7%BB%93%E6%9D%9F%EF%BC%8C%E5%9B%A0%E6%AD%A4%3Ccode%3Eb%3C/code%3E%E5%BC%95%E7%94%A8%E7%9A%84%E6%95%B0%E7%BB%84%E5%9C%B0%E5%9D%80%E4%BB%8E%E5%A0%86%E7%A9%BA%E9%97%B4%E9%87%8A%E6%94%BE%EF%BC%8C%E4%BD%9C%E4%B8%BA%E5%85%B6%E5%AE%83%E6%8C%87%E6%B4%BE%E4%BD%BF%E7%94%A8%E3%80%82%3C/p%3E%3Cp%3E%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%8A%A8%E4%BD%9C%E6%AF%94%E8%BE%83%E9%87%8D%E8%A6%81%E3%80%82%E5%BD%93%3Ccode%3Eb%3C/code%3E%E9%80%80%E5%87%BA%E5%AE%83%E7%9A%84%E4%BD%9C%E7%94%A8%E8%8C%83%E5%9B%B4%EF%BC%8C%E5%AE%83%E4%B8%8D%E5%86%8D%E5%8F%AF%E7%94%A8%EF%BC%9B%E8%87%AA%E7%84%B6%E5%9C%B0%EF%BC%8C%E5%AF%B9%E5%BA%94%E5%A0%86%E4%B8%8A%E7%9A%84%E5%BC%95%E7%94%A8%E8%A2%AB%E9%87%8A%E6%94%BE%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E5%87%BD%E6%95%B0%E7%9A%84%E7%AC%AC%E5%9B%9B%E4%B8%AA%E8%AF%AD%E5%8F%A5%E8%A2%AB%E6%89%A7%E8%A1%8C%EF%BC%8C%E4%B8%80%E4%B8%AA%E5%B8%83%E5%B0%94%E5%9E%8B%E5%8F%98%E9%87%8F%E8%A2%AB%E5%88%9D%E5%A7%8B%E5%8C%96%E5%B9%B6%E6%8C%87%E6%B4%BE%E5%9C%A8%E5%A0%86%E7%A9%BA%E9%97%B4%EF%BC%8C%E5%AE%83%E5%9C%A8%E5%A0%86%E4%B8%8A%E7%9A%84%E5%9C%B0%E5%9D%80%E8%A2%AB%E7%94%A8%E4%BA%8E%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8F%98%E9%87%8F%3Ccode%3Ec%3C/code%3E%E3%80%82%E5%AE%83%E5%8F%AF%E8%83%BD%E4%BC%9A%E9%87%8D%E5%90%88%E5%9C%A8%E5%85%88%E5%89%8D%E6%95%B0%E7%BB%84%E9%87%8A%E6%94%BE%E7%9A%84%E7%A9%BA%E5%9C%B0%E5%9D%80%E4%B8%8A%E3%80%82%E7%AC%AC%E4%BA%94%E6%9D%A1%E8%AF%AD%E5%8F%A5%E6%89%93%E5%8D%B0%E8%BE%93%E5%87%BA%3Ccode%3Ea%3C/code%3E%E5%92%8C%3Ccode%3Ec%3C/code%3E%E7%9A%84%E5%BC%95%E7%94%A8%E5%80%BC%E3%80%82%E5%90%8C%E6%A0%B7%E5%AF%B9%E4%BA%8Ebox%E6%9D%A5%E8%AF%B4%EF%BC%8C%E7%B1%BB%E4%BC%BC%E4%BA%8E%E7%AE%80%E5%8D%95%E5%BC%95%E7%94%A8%EF%BC%8C%E6%98%9F%E5%8F%B7%E6%98%AF%E5%8F%AF%E9%80%89%E7%9A%84%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%9C%81%E7%95%A5%E3%80%82%E5%8F%98%E9%87%8F%3Ccode%3Eb%3C/code%3E%E4%B8%8D%E8%83%BD%E5%9C%A8%E8%BF%99%E9%87%8C%E6%89%93%E5%8D%B0%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E4%B8%8D%E5%8F%AF%E8%A7%81%E3%80%82%3Ccode%3Ea%3C/code%3E%E5%92%8C%3Ccode%3Ec%3C/code%3E%E7%9A%84%E8%8C%83%E5%9B%B4%E7%BB%93%E6%9D%9F%E5%90%8E%EF%BC%8C%E5%AF%B9%E5%BA%94%E5%AE%83%E4%BB%AC%E5%9C%A8%E5%A0%86%E4%B8%8A%E7%9A%84%E5%BC%95%E7%94%A8%E7%AB%8B%E5%8D%B3%E8%A2%AB%E9%87%8A%E6%94%BE%E3%80%82%E5%90%8C%E6%97%B6%E5%87%BD%E6%95%B0%E7%BB%93%E6%9D%9F%EF%BC%8C4%E4%B8%AA%E6%8C%87%E9%92%88%E4%B9%9F%E4%BB%8E%E6%A0%88%E7%A9%BA%E9%97%B4%E9%87%8A%E6%94%BE%E3%80%82%3C/p%3E%3Cp%3E%E6%9C%80%E5%90%8E%EF%BC%8C%3Ccode%3Emain%3C/code%3E%E5%87%BD%E6%95%B0%E7%BB%93%E6%9D%9F%EF%BC%8C%E6%9C%AA%E5%91%BD%E5%90%8D%E7%9A%843.4%E5%80%BC%E5%AF%B9%E8%B1%A1%E4%BB%8E%E6%A0%88%E7%A9%BA%E9%97%B4%E9%87%8A%E6%94%BE%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E9%87%8C%E8%BF%99%E6%A0%B7%E5%81%9A%E7%9C%8B%E4%BC%BC%E6%AF%AB%E6%97%A0%E6%84%8F%E4%B9%89%EF%BC%8C%E4%BD%86%E5%80%BC%E5%BE%97%E7%9A%84%E6%98%AF%EF%BC%8C%E5%A6%82%E6%9E%9C%E5%87%A0%E4%B8%AA%E5%8F%98%E9%87%8F%E9%83%BD%E5%A3%B0%E6%98%8E%E5%9C%A8%E5%90%8C%E4%B8%80%E4%B8%AA%E8%8C%83%E5%9B%B4(scope)%EF%BC%8C%E5%AE%83%E4%BB%AC%E4%BC%9A%E6%8C%89%E7%85%A7%E5%A3%B0%E6%98%8E%E7%9A%84%E7%9B%B8%E5%8F%8D%E9%A1%BA%E5%BA%8F%E9%80%80%E5%87%BA%E8%8C%83%E5%9B%B4%E3%80%82%E5%9C%A8%E6%88%91%E4%BB%AC%E7%9A%84%E4%BE%8B%E5%AD%90%E4%B8%AD%EF%BC%8C%3Ccode%3Ea%3C/code%3E%E5%9C%A8%3Ccode%3Ec%3C/code%3E%E4%B9%8B%E5%89%8D%EF%BC%8C%E5%9B%A0%E6%AD%A4%3Ccode%3Ea%3C/code%3E%E4%BC%9A%E5%9C%A8%3Ccode%3Ec%3C/code%3E%E4%B9%8B%E5%90%8E%E9%80%80%E5%87%BA%E3%80%82%E8%BF%99%E5%AF%BC%E8%87%B4%E4%BA%86%E5%A0%86%E7%A9%BA%E9%97%B4%E4%B8%8A%3Ccode%3Ea%3C/code%3E%E7%9A%84%E5%BC%95%E7%94%A8%E7%9A%84%E9%87%8A%E6%94%BE%EF%BC%8C%E4%BC%9A%E5%8F%91%E7%94%9F%E5%9C%A8%3Ccode%3Ec%3C/code%3E%E5%BC%95%E7%94%A8%E9%87%8A%E6%94%BE%E4%B9%8B%E5%90%8E%E3%80%82%E8%BF%99%E6%A0%B7%E5%81%9A%E7%9A%84%E5%A5%BD%E5%A4%84%E6%98%AF%EF%BC%8C%E5%A0%86%E7%9A%84%E6%95%88%E7%8E%87%EF%BC%8C%E7%AD%89%E5%90%8C%E4%BA%8E%E6%A0%88%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%A0%86%E9%A1%B6%E7%9A%84%E5%9C%B0%E5%9D%80%E6%80%BB%E6%98%AF%E5%85%88%E8%A2%AB%E9%87%8A%E6%94%BE%E6%8E%89%E3%80%82%3C/p%3E%3Cp%3E%E6%B3%A8%E6%84%8F%E8%BF%99%E9%87%8C%E6%B2%A1%E6%9C%89%E5%9B%9E%E6%94%B6%E5%87%BD%E6%95%B0%E7%9A%84%E8%B0%83%E7%94%A8%E3%80%82%E5%AE%9E%E9%99%85%E4%B8%8ARust%E8%AF%AD%E8%A8%80%E5%92%8C%E5%AE%83%E7%9A%84%E6%A0%87%E5%87%86%E5%BA%93%E6%B2%A1%E6%9C%89%E4%BB%BB%E4%BD%95%E9%87%8A%E6%94%BE%E7%A9%BA%E9%97%B4%E3%80%81%E5%9B%9E%E6%94%B6%E5%86%85%E5%AD%98%E7%9A%84%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E3%80%82%E8%BF%99%E4%B8%BB%E8%A6%81%E4%B8%BA%E4%BA%86%E9%98%B2%E6%AD%A2%E5%BF%98%E8%AE%B0%E8%B0%83%E7%94%A8%E5%AE%83%E4%BB%AC%E3%80%82%3C/p%3E%3Ch2%20id=%22Similarity-with-C-and-C%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Similarity-with-C-and-C%22%3E%C2%B6%3C/a%3ESimilarity%20with%20C%20and%20C++%3C/h2%3E%3Cp%3E%E5%9C%A8C%E5%92%8CC%3Cins%3E%E4%B8%AD%E4%BD%A0%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%E5%A0%86%E7%A9%BA%E9%97%B4%E3%80%82%E5%9C%A8C%E8%AF%AD%E8%A8%80%EF%BC%8C%E4%BD%A0%E5%8F%AF%E4%BB%A5%E7%94%A8%3Ccode%3Emalloc%3C/code%3E%E3%80%81%3Ccode%3Ecalloc%3C/code%3E%E5%92%8C%3Ccode%3Erealloc%3C/code%3E%E5%87%BD%E6%95%B0%E5%9C%A8%E5%A0%86%E7%A9%BA%E9%97%B4%E6%8C%87%E6%B4%BE%E4%B8%80%E4%B8%AAbuffer%EF%BC%8C%E4%BB%A5%E5%8F%8A%E7%94%A8%3Ccode%3Efree%3C/code%3E%E5%87%BD%E6%95%B0%E9%87%8A%E6%94%BE%E6%8C%87%E6%B4%BE%E7%9A%84buffer%E3%80%82%E5%8F%A6%E5%A4%96%EF%BC%8C%E5%9C%A8C%3C/ins%3E%E8%AF%AD%E8%A8%80%EF%BC%8C%E5%9C%A8%E5%A0%86%E7%A9%BA%E9%97%B4%E5%8F%AF%E4%BB%A5%E5%88%86%E5%88%AB%E7%94%A8%3Ccode%3Enew%3C/code%3E%E5%92%8C%3Ccode%3Enew[]%3C/code%3E%E7%BB%99%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E6%88%96%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%E5%AF%B9%E8%B1%A1%E8%BF%9B%E8%A1%8C%E5%88%86%E9%85%8D%E3%80%82%E4%BB%A5%E5%8F%8A%E5%88%86%E5%88%AB%3Ccode%3Edelete%3C/code%3E%E5%92%8C%3Ccode%3Edelete[]%3C/code%3E%E5%AF%B9%E4%BA%8E%3Ccode%3Enew%3C/code%3E%E5%92%8C%3Ccode%3Enew[]%3C/code%3E%E7%9A%84%E6%93%8D%E4%BD%9C%E8%BF%9B%E8%A1%8C%E5%9B%9E%E6%94%B6%E3%80%82%3C/p%3E%3Cp%3E%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8CRust%E7%9A%84%3Ccode%3EBox&amp;lt;T&amp;gt;%3C/code%3E%E6%B3%9B%E5%9E%8B%E7%BB%93%E6%9E%84%E7%B1%BB%E5%9E%8B%EF%BC%8C%E8%B7%9F%E4%B8%8A%E9%9D%A2%E5%A0%86%E5%88%86%E9%85%8D%E6%96%B9%E5%BC%8F%E6%9C%89%E5%BE%88%E5%A4%A7%E5%87%BA%E5%85%A5%E3%80%82%E8%87%AA2011%E5%B9%B4%EF%BC%8C%E6%A0%87%E5%87%86C++%E5%87%BA%E7%8E%B0%E4%BA%86%E4%B8%80%E4%B8%AA%E5%92%8C%3Ccode%3EBox&amp;lt;T&amp;gt;%3C/code%3E%E5%8D%81%E5%88%86%E7%B1%BB%E4%BC%BC%E5%9C%B0%E7%B1%BB%E5%9E%8B%EF%BC%8C%3Ccode%3Eunique_ptr&amp;lt;T&amp;gt;%3C/code%3E%E7%B1%BB%E6%A8%A1%E6%9D%BF%E3%80%82%E5%B0%B1%E6%98%AF%E6%89%80%E8%B0%93%E7%9A%84%E2%80%9C%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88(smart%20pointer)%E2%80%9D%EF%BC%8C%E5%AE%83%E5%92%8C%3Ccode%3EBox&amp;lt;T&amp;gt;%3C/code%3E%E7%B1%BB%E4%BC%BC%EF%BC%8C%E5%9C%A8%E5%A0%86%E7%A9%BA%E9%97%B4%E5%88%86%E9%85%8D%E5%AF%B9%E8%B1%A1%EF%BC%8C%E9%80%80%E5%87%BA%E8%8C%83%E5%9B%B4%E5%90%8E%E5%9B%9E%E6%94%B6%E3%80%82%3C/p%3E%3Ch2%20id=%22Boxing-and-Unboxing%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Boxing-and-Unboxing%22%3E%C2%B6%3C/a%3EBoxing%20and%20Unboxing%3C/h2%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%AF%B9%E4%BA%8E%E7%BB%99%E5%AE%9A%E6%B3%9B%E5%9E%8B%E7%B1%BB%E5%9E%8B%3Ccode%3ET%3C/code%3E%EF%BC%8C%3Ccode%3EBox&amp;lt;T&amp;gt;%3C/code%3E%E5%92%8C%3Ccode%3E&amp;amp;T%3C/code%3E%E9%83%BD%E6%98%AF%E4%B8%80%E7%B1%BB%E5%BC%95%E7%94%A8%E3%80%82%E8%AE%A9%E6%88%91%E4%BB%AC%E7%9C%8B%E5%AE%83%E4%BB%AC%E5%A6%82%E4%BD%95%E4%BA%A4%E4%BA%92%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E7%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea_box%3C/span%3E:%20%3Cspan%20class=%22type%22%3EBox%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E&amp;gt;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ea_ref%3C/span%3E:%20&amp;amp;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20=%20&amp;amp;a;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;;&amp;quot;%3C/span%3E,%20a,%20*a_ref);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ea_box%20=%20%3Cspan%20class=%22type%22%3EBox%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E(a%20+%20%3Cspan%20class=%22number%22%3E2%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ea_ref%20=%20&amp;amp;*a_box;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20a,%20*a_ref,%20*a_box);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E8%BE%93%E5%87%BA%EF%BC%9A%E2%80%9C7%207;%207%209%209%20%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E6%A0%88%E7%A9%BA%E9%97%B4%E5%8C%85%E5%90%AB%E4%B8%89%E4%B8%AA%E5%AF%B9%E8%B1%A1%EF%BC%9A%E6%95%B0%E5%80%BC7%EF%BC%8C%E4%B8%80%E4%B8%AA%E7%94%B1%E5%8F%98%E9%87%8F%3Ccode%3Ea%3C/code%3E%E8%A1%A8%E7%A4%BA%EF%BC%9B%E4%BB%A5%E5%8F%8A%E5%8F%A6%E5%A4%96%E4%B8%A4%E4%B8%AA%E6%8C%87%E9%92%88%EF%BC%8C%E7%94%B1%3Ccode%3Ea_box%3C/code%3E%E5%92%8C%3Ccode%3Ea_ref%3C/code%3E%E5%8F%98%E9%87%8F%E8%A1%A8%E7%A4%BA%E3%80%82%E6%8C%87%E9%92%88%E7%9A%84%E5%A3%B0%E6%98%8E%E5%9C%A8%E7%AC%AC%E4%BA%8C%E8%A1%8C%EF%BC%8C%3Ccode%3Ea_box%3C/code%3E%E7%9A%84%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8F%91%E7%94%9F%E5%9C%A8%E7%AC%AC%E4%BA%94%E8%A1%8C%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E9%87%8C%E7%9A%84%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F%E5%B8%A6%E4%B8%8A%E7%B1%BB%E5%9E%8B%E6%A0%87%E6%B3%A8%EF%BC%8C%E7%94%B1%E4%BA%8E%E5%8F%AF%E4%BB%A5%E7%94%B1%E7%B1%BB%E5%9E%8B%E6%8E%A8%E6%96%AD%E5%BE%97%E5%87%BA%EF%BC%8C%E8%BF%99%E9%87%8C%E5%8F%AF%E4%BB%A5%E7%9C%81%E7%95%A5%E4%B8%8D%E5%86%99%E3%80%82%E7%84%B6%E8%80%8C%EF%BC%8C%E5%AE%83%E5%B1%95%E7%A4%BA%E4%BA%86%3Ccode%3Ea_box%3C/code%3E%E6%98%AF%E4%B8%80%E4%B8%AA%E2%80%9C%E6%99%BA%E8%83%BD(smart)%E2%80%9D%E6%8C%87%E9%92%88%EF%BC%8C%3Ccode%3Ea_ref%3C/code%3E%E6%98%AF%E4%B8%80%E4%B8%AA%E2%80%9C%E5%9E%83%E5%9C%BE(dumb)%E2%80%9D%E6%8C%87%E9%92%88%E3%80%82%E6%84%8F%E5%91%B3%E7%9D%80%EF%BC%8C%3Ccode%3Ea_box%3C/code%3E%E4%BC%9A%E7%85%A7%E6%96%99%E5%85%B6%E5%BC%95%E7%94%A8%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%88%86%E9%85%8D%E5%92%8C%E5%9B%9E%E6%94%B6%EF%BC%8C%E8%80%8C%3Ccode%3Ea_ref%3C/code%3E%E5%88%99%E4%B8%8D%E4%BC%9A%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E9%87%8C%E6%9C%89%E4%B8%A4%E5%A4%84%3Ccode%3Eprint%3C/code%3E%E5%AE%8F%E8%B0%83%E7%94%A8%EF%BC%8C%E6%98%9F%E5%8F%B7(asterisk)%E5%8F%AF%E4%BB%A5%E7%9C%81%E7%95%A5%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E7%AC%AC%E4%BA%94%E5%92%8C%E7%AC%AC%E5%85%AD%E8%A1%8C%EF%BC%8C%E4%B8%A4%E4%B8%AA%E6%8C%87%E9%92%88%E8%A2%AB%E6%8C%87%E6%B4%BE%E4%BA%86%E4%B8%80%E4%B8%AA%E5%80%BC%E3%80%82%E5%AF%B9%E4%BA%8E%3Ccode%3Ea_box%3C/code%3E%EF%BC%8C%E5%AE%83%E6%98%AF%E4%B8%80%E4%B8%AA%E5%88%9D%E5%A7%8B%E5%8C%96%EF%BC%8C%E4%B8%8D%E9%9C%80%E8%A6%81%E4%BD%9Cmutable%EF%BC%9B%E7%9B%B8%E5%8F%8D%EF%BC%8C%3Ccode%3Ea_ref%3C/code%3E%E5%B7%B2%E7%BB%8F%E5%88%9D%E5%A7%8B%E5%8C%96%EF%BC%8C%E9%9C%80%E8%A6%81%E5%B8%A6%3Ccode%3Emut%3C/code%3E%E8%BF%9B%E8%A1%8C%E5%80%BC%E5%86%8D%E5%88%86%E9%85%8D%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%B8%89%E8%A1%8C%E4%BB%85%E6%98%AF%E5%B0%86%3Ccode%3Ea_ref%3C/code%3E%E5%8F%98%E9%87%8F%E7%9A%84%E5%80%BC%E8%AE%BE%E7%BD%AE%E4%B8%BA%3Ccode%3Ea%3C/code%3E%E5%8F%98%E9%87%8F%E7%9A%84%E5%9C%B0%E5%9D%80%E3%80%82%E7%AC%AC%E4%BA%94%E8%A1%8C%E6%9C%89%E7%82%B9%E5%A4%8D%E6%9D%82%EF%BC%8C%E5%AE%83%E5%88%86%E9%85%8D%E4%BA%86%E4%B8%80%E4%B8%AA%3Ccode%3Ei32%3C/code%3E%E5%AF%B9%E8%B1%A1%E5%9C%A8%E5%A0%86%E4%B8%8A%EF%BC%8C%E7%94%A8%E8%A1%A8%E8%BE%BE%E5%BC%8F%3Ccode%3Ea%20+%202%3C/code%3E%E5%88%9D%E5%A7%8B%E5%8C%96%E8%BF%99%E4%B8%AA%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%9C%A8%E8%AE%BE%E7%BD%AE%3Ccode%3Ea_box%3C/code%3E%E5%8F%98%E9%87%8F%E5%80%BC%E4%B8%BA%E8%AF%A5%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%9C%B0%E5%9D%80%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E7%AC%AC%E5%85%AD%E8%A1%8C%EF%BC%8C%3Ccode%3Ea_box%3C/code%3E%E6%98%AF%E4%B8%80%E4%B8%AA%E6%8C%87%E9%92%88%EF%BC%8C%E5%AE%83%E6%98%AF%3Ccode%3Ea_ref%3C/code%3E%E5%8F%98%E9%87%8F%E7%9A%84%E4%B8%80%E4%B8%AA%E6%8B%B7%E8%B4%9D%EF%BC%9B%E6%8D%A2%E5%8F%A5%E8%AF%9D%E8%AF%B4%EF%BC%8C%E5%9E%83%E5%9C%BE%E6%8C%87%E9%92%88%E6%8C%87%E5%90%91%E4%BA%86%E5%92%8C%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88%E7%9B%B8%E5%90%8C%E7%9A%84%E5%AF%B9%E8%B1%A1%E4%B8%8A%E3%80%82%E5%B0%BD%E7%AE%A1%E5%A7%94%E6%B4%BE%E4%B8%8D%E8%83%BD%E7%AE%80%E5%8C%96%E4%B8%BA%3Ccode%3Ea_ref%20=%20a_box;%3C/code%3E%EF%BC%8C%E5%9B%A0%E4%B8%BA%E4%B8%A4%E4%B8%AA%E5%8F%98%E9%87%8F%E6%9C%89%E4%B8%8D%E5%90%8C%E7%9A%84%E7%B1%BB%E5%9E%8B%EF%BC%8C%E5%8D%B3%E4%BD%BF%E6%98%BE%E5%BC%8F%E5%9C%B0%3Ccode%3Ea_ref%20=%20a_box%20as%20&amp;amp;i32%3C/code%3E%E4%B9%9F%E6%98%AF%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%E3%80%82%E7%9B%B8%E5%8F%8D%EF%BC%8C%E4%BD%BF%E7%94%A8%3Ccode%3E*%3C/code%3E%E5%8F%B7%E7%9A%84%E5%8F%8D%E5%BC%95%E7%94%A8%EF%BC%8C%E7%84%B6%E5%90%8E%E5%86%8D%E7%94%A8%3Ccode%3E&amp;amp;%3C/code%3E%E5%85%81%E8%AE%B8%E5%B0%86%E4%B8%80%E4%B8%AA%3Ccode%3EBox%3C/code%3E%E8%BD%AC%E5%8C%96%E4%B8%BA%E4%B8%80%E4%B8%AA%E5%BC%95%E7%94%A8%EF%BC%8C%E6%88%96%E6%9B%B4%E5%A5%BD%E7%9A%84%E8%AF%B4%E6%B3%95%E6%98%AF%EF%BC%8CBox%E5%85%81%E8%AE%B8%E6%88%91%E4%BB%AC%E8%8E%B7%E5%8F%96Box%E5%AF%B9%E8%B1%A1%E6%89%80%E5%BC%95%E7%94%A8%E7%9A%84%E5%9C%B0%E5%9D%80%E3%80%82%3C/p%3E%3Cp%3E%E8%A6%81%E6%B3%A8%E6%84%8F%EF%BC%9A%3Ccode%3Ea_box%20=%20&amp;amp;*a_ref;%3C/code%3E%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E8%BD%AC%E6%8D%A2%E4%BB%8D%E7%84%B6%E6%98%AF%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%E3%80%82%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E8%A1%A8%E8%BE%BE%E5%BC%8F%3Ccode%3E&amp;amp;*a_ref%3C/code%3E%E4%BB%8D%E7%84%B6%E6%98%AF%E7%B1%BB%E5%9E%8B%3Ccode%3E&amp;amp;i32%3C/code%3E%EF%BC%8C%E5%AE%83%E4%B8%8D%E8%83%BD%E6%8C%87%E6%B4%BE%E7%BB%99%E4%B8%80%E4%B8%AA%E7%B1%BB%E5%9E%8B%3Ccode%3EBox&amp;lt;i32&amp;gt;%3C/code%3E%E7%9A%84%E5%8F%98%E9%87%8F%E3%80%82%3C/p%3E%3Cp%3E%E6%9C%80%E5%90%8E%EF%BC%8C%E5%9C%A8%E7%A8%8B%E5%BA%8F%E7%9A%84%E7%BB%93%E5%B0%BE%EF%BC%8C%E9%A6%96%E5%85%88%E6%98%AF%3Ccode%3Ea_ref%3C/code%3E%E5%9C%A8%E5%85%B6%E8%8C%83%E5%9B%B4(scope)%E9%80%80%E5%87%BA%EF%BC%8C%E4%B8%8D%E5%81%9A%E4%BB%BB%E4%BD%95%E5%A4%84%E7%90%86%EF%BC%9B%E7%84%B6%E5%90%8E%3Ccode%3Ea_box%3C/code%3E%E5%86%8D%E4%BB%8E%E5%AE%83%E7%9A%84%E8%8C%83%E5%9B%B4%E9%80%80%E5%87%BA%EF%BC%8C%E5%B0%86%E5%85%B6%E5%9C%A8%E5%A0%86%E4%B8%8A%E7%9A%84%E5%BC%95%E7%94%A8%E5%AF%B9%E8%B1%A1%E8%BF%9B%E8%A1%8C%E5%9B%9E%E6%94%B6%EF%BC%9B%E7%84%B6%E5%90%8E%3Ccode%3Ea%3C/code%3E%E9%80%80%E5%87%BA%E5%85%B6%E8%8C%83%E5%9B%B4%EF%BC%8C%E4%B8%8D%E5%81%9A%E4%BB%BB%E4%BD%95%E5%A4%84%E7%90%86%EF%BC%9B%E6%8E%A5%E7%9D%80%E4%B8%89%E4%B8%AA%E5%AF%B9%E8%B1%A1%E4%BB%8E%E6%A0%88%E4%B8%8A%E5%9B%9E%E6%94%B6%E9%87%8A%E6%94%BE%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E7%A8%8B%E5%BA%8F%E6%98%AF%E7%B1%BB%E4%BC%BC%E5%9C%B0%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E7%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ea_box%3C/span%3E:%20%3Cspan%20class=%22type%22%3EBox%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E&amp;gt;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea_ref%3C/span%3E:%20&amp;amp;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20=%20&amp;amp;a;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;;&amp;quot;%3C/span%3E,%20a,%20a_ref);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ea_box%20=%20%3Cspan%20class=%22type%22%3EBox%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E(a%20+%20%3Cspan%20class=%22number%22%3E2%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;;&amp;quot;%3C/span%3E,%20a,%20a_ref,%20a_box);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ea_box%20=%20%3Cspan%20class=%22type%22%3EBox%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3Enew%3C/span%3E(*a_ref);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20a,%20a_ref,%20a_box);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C%3Ccode%3E7%207;%207%207%209;%207%207%207%3C/code%3E%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E9%87%8C%E7%9A%84%3Ccode%3Ea_box%3C/code%3E%E6%98%AF%E5%8F%AF%E5%8F%98%E7%9A%84%EF%BC%8C%3Ccode%3Ea_ref%3C/code%3E%E6%98%AF%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%9A%84%E3%80%82%3C/p%3E%3Cp%3E%E5%80%92%E6%95%B0%E7%AC%AC%E4%BA%8C%E6%9D%A1%E8%AF%AD%E5%8F%A5%E9%87%8D%E6%96%B0%E6%8C%87%E6%B4%BE%E4%BA%86box%E3%80%82%E6%A6%82%E5%BF%B5%E4%B8%8A%EF%BC%8C%E5%A0%86%E4%B8%8A%E7%9A%84%E5%9B%9E%E6%94%B6%EF%BC%8C%E7%B4%A7%E8%B7%9F%E7%9D%80%E7%9B%B8%E5%90%8C%E7%B1%BB%E5%9E%8B%E5%AF%B9%E8%B1%A1%E7%9A%84%E4%B8%80%E6%AC%A1%E5%88%86%E9%85%8D%EF%BC%8C%E5%8F%AA%E6%98%AF%E5%80%BC%E4%B8%8D%E5%90%8C%EF%BC%8C%E8%A1%8C%E4%B8%BA%E7%B1%BB%E4%BC%BC%E4%BA%8E%E6%A0%88top%E7%9A%84%E5%A4%84%E7%90%86%E3%80%82%3C/p%3E%3Ch2%20id=%22Register-Allocation%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Register-Allocation%22%3E%C2%B6%3C/a%3ERegister%20Allocation%3C/h2%3E%3Cp%3E%E5%9C%A8%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80(assembly%20language)%EF%BC%8C%E6%9C%89%E6%97%B6%E4%B9%9F%E5%8C%85%E6%8B%ACC%E8%AF%AD%E8%A8%80%EF%BC%8C%E4%BC%9A%E7%94%A8%E5%88%B0%E2%80%9C%E5%AF%84%E5%AD%98%E5%99%A8%E5%88%86%E9%85%8D(processor%20register%20allocation)%E2%80%9D%E7%9A%84%E6%A6%82%E5%BF%B5%E3%80%82%E5%9C%A8Rust%E4%B8%AD%E6%B2%A1%E6%9C%89%E8%BF%99%E4%B8%AA%E6%A6%82%E5%BF%B5%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E7%BA%A6%E6%9D%9F%E4%BA%8E%E5%85%B7%E4%BD%93%E7%9A%84%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%E6%9E%B6%E6%9E%84%E3%80%82%E7%84%B6%E8%80%8C%EF%BC%8C%E4%BB%A3%E7%A0%81%E4%BC%98%E5%8C%96%E5%99%A8%E5%8F%AF%E4%BB%A5%E5%B0%86%E6%A0%88%E5%88%86%E9%85%8D%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%9C%B0%E5%9D%80%EF%BC%8C%E8%BD%AC%E7%A7%BB%E5%88%B0%E5%AF%84%E5%AD%98%E5%99%A8%EF%BC%8C%E5%8F%AA%E8%A6%81%E7%A8%8B%E5%BA%8F%E5%BE%97%E5%87%BA%E7%9A%84%E7%BB%93%E6%9E%9C%E7%AD%89%E4%BB%B7%E5%8D%B3%E5%8F%AF%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E6%BA%90%E7%A0%81%E5%B1%82%E9%9D%A2%E4%B8%8A%E5%87%BA%E7%8E%B0%E7%9A%84%E6%98%AF%E6%A0%88%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%88%86%E9%85%8D%EF%BC%8C%E5%9C%A8%E6%9C%BA%E5%99%A8%E7%A0%81%E5%B1%82%E9%9D%A2%E4%B8%8A%E5%8F%AF%E8%83%BD%E6%98%AF%E5%AF%B9%E8%B1%A1%E5%9C%A8%E5%AF%84%E5%AD%98%E5%99%A8%E7%9A%84%E5%88%86%E9%85%8D%E3%80%82%E8%BF%99%E5%BD%93%E7%84%B6%E4%BE%9D%E8%B5%96%E4%BA%8E%E7%9B%AE%E6%A0%87%E7%9A%84%E6%9E%B6%E6%9E%84%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AF%84%E5%AD%98%E5%99%A8%E8%B6%8A%E5%A4%9A%EF%BC%8C%E6%8C%87%E6%B4%BE%E5%88%B0%E5%AF%84%E5%AD%98%E4%B8%8A%E7%9A%84%E5%8F%98%E9%87%8F%E4%B9%9F%E5%B0%B1%E8%B6%8A%E5%A4%9A%E3%80%82%3C/p%3E%3Cp%3E%E5%AF%84%E5%AD%98%E5%99%A8%E5%88%86%E9%85%8D%E9%80%9A%E5%B8%B8%E8%B7%9F%E5%BC%80%E5%8F%91%E8%80%85%E6%97%A0%E7%93%9C%E8%91%9B%E3%80%82%E4%BD%86%E5%A6%82%E6%9E%9C%E4%BD%BF%E7%94%A8%E6%BA%90%E7%A0%81%E7%BA%A7%E8%B0%83%E8%AF%95%E9%AB%98%E5%BA%A6%E4%BC%98%E5%8C%96%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%86%85%E5%AD%98%E6%97%B6%EF%BC%8C%E4%BD%A0%E4%BC%9A%E5%8F%91%E7%8E%B0%E5%AF%84%E5%AD%98%E5%99%A8%E5%88%86%E9%85%8D%E7%9A%84%E5%8F%98%E9%87%8F%E4%B8%8D%E8%A7%81%E4%BA%86%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%BD%93%E8%B0%83%E8%AF%95%E6%97%B6%EF%BC%8C%E4%BD%A0%E5%BA%94%E8%AF%A5%E5%91%8A%E7%9F%A5%E7%BC%96%E8%AF%91%E5%99%A8%E7%94%9F%E6%88%90%E9%9D%9E%E4%BC%98%E5%8C%96%E7%9A%84(non-optimized)%E6%89%A7%E8%A1%8C%E4%BB%A3%E7%A0%81%EF%BC%8C%E9%99%A4%E9%9D%9E%E4%BD%A0%E6%83%B3%E7%9B%B4%E6%8E%A5%E8%B0%83%E8%AF%95%E6%9C%BA%E5%99%A8%E7%A0%81%E3%80%82%3C/p%3E" type="image"/>
    
    
    <category term="learning" scheme="https://galudisu.info/categories/learning/"/>
    
    
    <category term="rust" scheme="https://galudisu.info/tags/rust/"/>
    
  </entry>
  
  <entry>
    <title>rust基础入门[10] - Defining Generic Functions and Structs</title>
    <link href="https://galudisu.info/2023/01/10/rust/beginning/chapter10_Defining%20Generic%20Functions%20and%20Structs/"/>
    <id>https://galudisu.info/2023/01/10/rust/beginning/chapter10_Defining%20Generic%20Functions%20and%20Structs/</id>
    <published>2023-01-10T07:50:46.000Z</published>
    <updated>2025-04-27T11:59:08.282Z</updated>
    
    <content type="html"><![CDATA[<p>本章覆盖有：</p><ul><li>如何定义单独的函数，使得调用者可以处理不同的数据类型</li><li>泛型函数如何使用类型推导来避免指定具体类型</li><li>如何在struct、tuple-struct、enum实现各种泛型类型</li><li>如何使用两个常见的枚举类型，Option和Result</li><li>标准函数对Option和Result的处理</li></ul><span id="more"></span><h2 id="Need-of-Generic-Functions"><a class="header-anchor" href="#Need-of-Generic-Functions">¶</a>Need of Generic Functions</h2><p>Rust提供一个静态类型检查，所以定义函数的参数必须是确切的类型，例如<code>fn square_root(x: f32) -&gt; f32</code>，调用时必须传递一个确切的参数，例如<code>square_root(45.2f32)</code>，或显示转换为它所需要的参数<code>square_root(45.2f64 as f32)</code>。你不能传递不同的类型。</p><p>这不论是写代码、还是调用代码都带来了不方便。甚至于Rust有很多不同的整型类型，当写一个函数，每次都要处理选择哪一种类型。例如，当你用<code>i16</code>类型作为参数，但每次都传递了<code>i32</code>类型，这要求我们重新定义我们的函数。</p><p>另外，函数会被作为模块在其它地方调用，这也不能满足每个使用者。</p><h2 id="Defining-and-Using-Generic-Functions"><a class="header-anchor" href="#Defining-and-Using-Generic-Functions">¶</a>Defining and Using Generic Functions</h2><p>最笨的办法是编写泛型函数：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Library code</span></span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>&lt;T&gt;(ch: <span class="type">char</span>, num1: T, num2: T) <span class="punctuation">-&gt;</span> T &#123;</span><br><span class="line">    <span class="keyword">if</span> ch == <span class="string">&#x27;a&#x27;</span> &#123; num1 &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123; num2 &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="variable">a</span>: <span class="type">i16</span> = f::&lt;<span class="type">i16</span>&gt;(<span class="string">&#x27;a&#x27;</span>, <span class="number">37</span>, <span class="number">41</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">b</span>: <span class="type">f64</span> = f::&lt;<span class="type">f64</span>&gt;(<span class="string">&#x27;b&#x27;</span>, <span class="number">37.2</span>, <span class="number">41.1</span>);</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>, a, b);</span><br></pre></td></tr></table></figure><p>泛型参数类型定义在函数名后面，由尖括号囊括，它就是函数的类型参数声明。它表述声明的不是一个具体函数，而是一个泛型函数，该函数的泛型参数类型，仅在编译期确定。</p><p>参数<code>T</code>的定义范围仅限于函数定义内。实际上仅会出现在3个地方，函数签名，以及函数语句体内部调用，不会在其它地方出现。</p><p>泛型函数的调用，需要带上类型参数，类型参数就是具体的类型替换这个<code>T</code>即可。如这里的<code>f::&lt;i16&gt;</code>、<code>f::&lt;f64&gt;</code>。</p><p>C语言没有泛型类型的概念，但C++有：它使用了函数模板。</p><h2 id="Inferring-the-Parametric-Types"><a class="header-anchor" href="#Inferring-the-Parametric-Types">¶</a>Inferring the Parametric Types</h2><p>上面的代码可以进一步简化，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Library code</span></span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>&lt;T&gt;(ch: <span class="type">char</span>, num1: T, num2: T) <span class="punctuation">-&gt;</span> T &#123;</span><br><span class="line">    <span class="keyword">if</span> ch == <span class="string">&#x27;a&#x27;</span> &#123; num1 &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123; num2 &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="variable">a</span>: <span class="type">i16</span> = <span class="title function_ invoke__">f</span>(<span class="string">&#x27;a&#x27;</span>, <span class="number">37</span>, <span class="number">41</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">b</span>: <span class="type">f64</span> = <span class="title function_ invoke__">f</span>(<span class="string">&#x27;b&#x27;</span>, <span class="number">37.2</span>, <span class="number">41.1</span>);</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>, a, b);</span><br></pre></td></tr></table></figure><p>这里把<code>::&lt;i16&gt;</code>和<code>::&lt;f64&gt;</code>移除了，以及得到等价的结果。实际上，编译器在解析一个泛型函数的调用时，使用了参数的类型来确定类型。</p><p>说白了，参数化类型(parametric type)是由泛型函数调用的表达式推断(inferred)出来的。</p><p>当然，被使用的类型必须是一致的：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>&lt;T&gt;(a: T, _b: T) <span class="punctuation">-&gt;</span> T &#123; a &#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_a</span> = <span class="title function_ invoke__">f</span>(<span class="number">12u8</span>, <span class="number">13u8</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_b</span> = <span class="title function_ invoke__">f</span>(<span class="number">12i64</span>, <span class="number">13i64</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_c</span> = <span class="title function_ invoke__">f</span>(<span class="number">12i16</span>, <span class="number">13u16</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_d</span>: <span class="type">i32</span> = <span class="title function_ invoke__">f</span>(<span class="number">12i16</span>, <span class="number">13i16</span>);</span><br></pre></td></tr></table></figure><p>最后一个出现编译错误，虽然参数传递了相同的类型，但函数返回的类型不匹配变量声明。</p><p>如果有几个不同的类型需要参数化，你可以指定泛型函数的多个类型参数。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>&lt;Param1, Param2&gt;(_a: Param1, _b: Param2) &#123;&#125;</span><br><span class="line"><span class="title function_ invoke__">f</span>(<span class="string">&#x27;a&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line"><span class="title function_ invoke__">f</span>(<span class="number">12.56</span>, <span class="string">&quot;Hello&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">f</span>((<span class="number">3</span>, <span class="string">&#x27;a&#x27;</span>), [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]);</span><br></pre></td></tr></table></figure><h2 id="Defining-and-Using-Generic-Structs"><a class="header-anchor" href="#Defining-and-Using-Generic-Structs">¶</a>Defining and Using Generic Structs</h2><p>参数化类型也适用于声明泛型结构体和泛型元组-结构体(tuple-struct)：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">S</span>&lt;T1, T2&gt; &#123;</span><br><span class="line">c: <span class="type">char</span>,</span><br><span class="line">n1: T1,</span><br><span class="line">n2: T1,</span><br><span class="line">n3: T2,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_s</span> = S &#123; c: <span class="string">&#x27;a&#x27;</span>, n1: <span class="number">34</span>, n2: <span class="number">782</span>, n3: <span class="number">0.02</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">SE</span>&lt;T1, T2&gt; (<span class="type">char</span>, T1, T1, T2);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_se</span> = <span class="title function_ invoke__">SE</span> (<span class="string">&#x27;a&#x27;</span>, <span class="number">34</span>, <span class="number">782</span>, <span class="number">0.02</span>);</span><br></pre></td></tr></table></figure><p>结构体和元组-结构体的类型参数声明，和泛型函数的声明一样，都是在名称后面带上类型参数声明。</p><p>当然也可以显式指定类型参数的具体类型：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">S</span>&lt;T1, T2&gt; &#123;</span><br><span class="line">c: <span class="type">char</span>,</span><br><span class="line">n1: T1,</span><br><span class="line">n2: T1,</span><br><span class="line">n3: T2,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_s</span> = S::&lt;<span class="type">u16</span>, <span class="type">f32</span>&gt; &#123; c: <span class="string">&#x27;a&#x27;</span>, n1: <span class="number">34</span>, n2: <span class="number">782</span>, n3: <span class="number">0.02</span> &#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">SE</span>&lt;T1, T2&gt; (<span class="type">char</span>, T1, T1, T2);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_se</span> = SE::&lt;<span class="type">u16</span>, <span class="type">f32</span>&gt; (<span class="string">&#x27;a&#x27;</span>, <span class="number">34</span>, <span class="number">782</span>, <span class="number">0.02</span>);</span><br></pre></td></tr></table></figure><p>C语言没有泛型结构体，但C++提供了：类模板和结构模板。</p><h2 id="Genericity-Mechanics"><a class="header-anchor" href="#Genericity-Mechanics">¶</a>Genericity Mechanics</h2><p>要理解泛化的内部机制，应该先看编译器这个角色。实际上，概念上来说，泛型代码的编译出现在几个阶段。</p><p>让我们跟随编译机制的基本概念，提供一下代码：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">swap</span>&lt;T1, T2&gt;(a: T1, b: T2) <span class="punctuation">-&gt;</span> (T2, T1) &#123; (b, a) &#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">x</span> = <span class="title function_ invoke__">swap</span>(<span class="number">3i16</span>, <span class="number">4u16</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">y</span> = <span class="title function_ invoke__">swap</span>(<span class="number">5f32</span>, <span class="literal">true</span>);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125; &#123;:?&#125;&quot;</span>, x, y);</span><br></pre></td></tr></table></figure><p>第一阶段，源码被浏览，每次编译器查找一个泛型函数声明(这里的是<code>swap</code>函数)，编译器加载该函数的数据结构，检查泛型代码有没有语法错误。</p><p>第二阶段，源码再次被浏览，编译器统计泛型函数的调用次数，并加载该函数的结构关联关系——泛型声明的内部响应和使用进行关联，这阶段在类型检查和响应合法的前提下进行。</p><p>在这两个阶段下，编译器获得了一个泛型函数<code>swap</code>，一个<code>main</code>函数，以及<code>swap</code>函数的引用。</p><p>第三阶段，所有泛型函数的调用被读取(这里的例子，swap调用了两次)。每次调用，确定一个具体的响应类型的定义。这个具体类型可能在调用的地方显式获取，又或者有参数的表达式推断出来。例如这里例子，第一处调用swap，参数<code>T1</code>关联的类型是<code>i16</code>，<code>T2</code>关联的类型是<code>u16</code>；以此类推…</p><p>确定了具体泛型参数类型后，一个确定类型版本的函数被生成。每个泛型函数的调用，都会替换到具体生成的函数上。</p><p>例如，内部生成的Rust代码为：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">swap_i16_u16</span>(a: <span class="type">i16</span>, b: <span class="type">u16</span>) <span class="punctuation">-&gt;</span> (<span class="type">u16</span>, <span class="type">i16</span>) &#123; (b, a) &#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">swap_f32_bool</span>(a: <span class="type">f32</span>, b: <span class="type">bool</span>) <span class="punctuation">-&gt;</span> (<span class="type">bool</span>, <span class="type">f32</span>) &#123; (b, a) &#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">x</span> = <span class="title function_ invoke__">swap_i16_u16</span>(<span class="number">3i16</span>, <span class="number">4u16</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">y</span> = <span class="title function_ invoke__">swap_f32_bool</span>(<span class="number">5f32</span>, <span class="literal">true</span>);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125; &#123;:?&#125;&quot;</span>, x, y);</span><br></pre></td></tr></table></figure><p>可以看到，调用了两处，就生成了两个具体的函数。</p><p>第四阶段，是编译这些生成的代码。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">swap</span>&lt;T1, T2&gt;(a: T1, b: T2) <span class="punctuation">-&gt;</span> (T2, T1) &#123; (b, a) &#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">x</span> = <span class="title function_ invoke__">swap</span>(<span class="string">&#x27;A&#x27;</span>, <span class="number">4.5</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">y</span> = <span class="title function_ invoke__">swap</span>(<span class="string">&#x27;g&#x27;</span>, -<span class="number">6</span>.);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125; &#123;:?&#125;&quot;</span>, x, y);</span><br></pre></td></tr></table></figure><p>如果调用的参数类型一致，仅会生成一个版本，因为所有调用的参数类型都相同。</p><p>上面会生成，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">swap_char_f64</span>(a: <span class="type">char</span>, b: <span class="type">f64</span>) <span class="punctuation">-&gt;</span> (<span class="type">f64</span>, <span class="type">char</span>) &#123; (b, a) &#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">x</span> = <span class="title function_ invoke__">swap_char_f64</span>(<span class="string">&#x27;A&#x27;</span>, <span class="number">4.5</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">y</span> = <span class="title function_ invoke__">swap_char_f64</span>(<span class="string">&#x27;g&#x27;</span>, -<span class="number">6</span>.);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125; &#123;:?&#125;&quot;</span>, x, y);</span><br></pre></td></tr></table></figure><p>上面得出，一段程序，会生成几个具体版本的机器代码：</p><ul><li>对于编译非泛型代码，这种多阶段编译会有几分慢。</li><li>生成的代码针对每个特定的调用进行了高度优化，因此不需要对类型转换或决策，运行时的性能都是优化的。</li><li>每次调用使用不同的数据类型时，会产生大量的机器码。这会导致一个现象，“代码膨胀(code bloat)”，面对这个事实，为了优化性能，最好不要在单一进程使用过多不同的类型，具体代码使用具体的类型，这回给CPU缓存带来负担。</li></ul><p>对于泛型结构体和泛型元组-结构体也一样原理。</p><h2 id="Generic-Arrays-and-Vectors"><a class="header-anchor" href="#Generic-Arrays-and-Vectors">¶</a>Generic Arrays and Vectors</h2><p>关于array和vector不是新的事物。最开始的章节已经介绍了泛型类型。</p><p>实际上，array是Rust语言的一部分，vector作为结构体定义在Rust标准库。</p><h2 id="Generic-Enums"><a class="header-anchor" href="#Generic-Enums">¶</a>Generic Enums</h2><p>在Rust中，enum也可以泛化。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> <span class="title class_">Result1</span>&lt;SuccessCode, FailureCode&gt; &#123;</span><br><span class="line"><span class="title function_ invoke__">Success</span>(SuccessCode),</span><br><span class="line"><span class="title function_ invoke__">Failure</span>(FailureCode, <span class="type">char</span>),</span><br><span class="line">Uncertainty,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">_res</span> = Result1::Success::&lt;<span class="type">u32</span>,<span class="type">u16</span>&gt;(<span class="number">12u32</span>);</span><br><span class="line">_res = Result1::Uncertainty;</span><br><span class="line">_res = Result1::<span class="title function_ invoke__">Failure</span>(<span class="number">0u16</span>, <span class="string">&#x27;d&#x27;</span>);</span><br></pre></td></tr></table></figure><p>上面代码是合法的。下面代码在最后一行发生编译错误，因为第一个参数Failure的类型是<code>u32</code>，但根据初始化，它实际上应该是<code>u16</code></p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> <span class="title class_">Result1</span>&lt;SuccessCode, FailureCode&gt; &#123;</span><br><span class="line">    <span class="title function_ invoke__">Success</span>(SuccessCode),</span><br><span class="line">    <span class="title function_ invoke__">Failure</span>(FailureCode, <span class="type">char</span>),</span><br><span class="line">    Uncertainty,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">_res</span> = Result1::Success::&lt;<span class="type">u32</span>,<span class="type">u16</span>&gt;(<span class="number">12u32</span>);</span><br><span class="line">_res = Result1::Uncertainty;</span><br><span class="line">_res = Result1::<span class="title function_ invoke__">Failure</span>(<span class="number">0u32</span>, <span class="string">&#x27;d&#x27;</span>);</span><br></pre></td></tr></table></figure><p>泛型枚举在Rust标准库中被大量用到。</p><p>Rust标准库中enum最常被用于解决下面常见问题。如果一个函数可以失败(<code>fail</code>)，失败时应该做什么？</p><p>例如，当vector包含条目，函数<code>pop</code>移除vector最后一个条目，并返回被删除的记录。若vector是空的，表达式<code>vec![0;0].pop()</code>应该怎样处理？</p><p>某些语言不定义这种行为，让其报错或导致一个不可预测的结果。Rust尽可能避免这种未定义的行为。</p><p>某些语言抛出一个异常，由闭合块或当前函数的调用方处理，或报错误。Rust中不适用异常这一概念。</p><p>某些语言会返回一个指定的<code>null</code>值。但vector可以包含几乎所有类型，这些类型没有<code>null</code>值。</p><p>下面是Rust的解决办法：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">v</span> = <span class="built_in">vec!</span>[<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>];</span><br><span class="line"><span class="keyword">for</span> <span class="variable">_</span> <span class="keyword">in</span> <span class="number">0</span>..<span class="number">5</span> &#123;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">item</span>: <span class="type">Option</span>&lt;<span class="type">i32</span>&gt; = v.<span class="title function_ invoke__">pop</span>();</span><br><span class="line"><span class="keyword">match</span> item &#123;</span><br><span class="line"><span class="title function_ invoke__">Some</span>(number) =&gt; <span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;, &quot;</span>, number),</span><br><span class="line"><span class="literal">None</span> =&gt; <span class="built_in">print!</span>(<span class="string">&quot;#, &quot;</span>),</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果将输出：“33, 22, 11, #, #, ”。</p><p><code>pop</code>函数作用于<code>Vec&lt;T&gt;</code>类型对象，并返回一个<code>Option&lt;T&gt;</code>类型的值。</p><p>该泛型类型被定义在Rust的标准库中：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> <span class="title class_">Option</span>&lt;T&gt; &#123;</span><br><span class="line"><span class="title function_ invoke__">Some</span>(T),</span><br><span class="line"><span class="literal">None</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>它是一个optional的T类型，表示有，或者无。</p><h2 id="Error-Handling"><a class="header-anchor" href="#Error-Handling">¶</a>Error Handling</h2><p>Rust标准库也定义了一个泛型枚举来处理函数不能返回正确类型的情况：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">divide</span>(numerator: <span class="type">f64</span>, denominator: <span class="type">f64</span>) <span class="punctuation">-&gt;</span> <span class="type">Result</span>&lt;<span class="type">f64</span>, <span class="type">String</span>&gt; &#123;</span><br><span class="line"><span class="keyword">if</span> denominator == <span class="number">0</span>. &#123;</span><br><span class="line"><span class="title function_ invoke__">Err</span>(<span class="built_in">format!</span>(<span class="string">&quot;Divide by zero&quot;</span>))</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="title function_ invoke__">Ok</span>(nmerator / denominator)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;, &#123;:?&#125;&quot;</span>, <span class="title function_ invoke__">divide</span>(<span class="number">8</span>., <span class="number">2</span>.), <span class="title function_ invoke__">divide</span>(<span class="number">8</span>., <span class="number">0</span>.));</span><br></pre></td></tr></table></figure><p>这回输出 <code>Ok(4), Err(&quot;Divide by zero&quot;)</code>。</p><p><code>Result</code>类型和<code>Option</code>类型类似，其中<code>Option</code>表示有或无，<code>Result</code>表述了一种异常情况。</p><p>它在标准库的定义为：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> <span class="title class_">Result</span>&lt;T, E&gt; &#123;</span><br><span class="line"><span class="title function_ invoke__">Ok</span>(T),</span><br><span class="line"><span class="title function_ invoke__">Err</span>(E),</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们使用了debug输出结果信息，在生产环境不建议这样做，可以改为下面这种形式：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">divide</span>(numerator: <span class="type">f64</span>, denominator: <span class="type">f64</span>) <span class="punctuation">-&gt;</span> <span class="type">Result</span>&lt;<span class="type">f64</span>, <span class="type">String</span>&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> denominator == <span class="number">0</span>. &#123;</span><br><span class="line">        <span class="title function_ invoke__">Err</span>(<span class="built_in">format!</span>(<span class="string">&quot;Divide by zero&quot;</span>))</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_ invoke__">Ok</span>(numerator / denominator)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">show_divide</span>(num: <span class="type">f64</span>, den: <span class="type">f64</span>) &#123;</span><br><span class="line">    <span class="keyword">match</span> <span class="title function_ invoke__">divide</span>(num, den) &#123;</span><br><span class="line">        <span class="title function_ invoke__">Ok</span>(val) =&gt; <span class="built_in">println!</span>(<span class="string">&quot;&#123;&#125; / &#123;&#125; = &#123;&#125;&quot;</span>, num, den, val),</span><br><span class="line">        <span class="title function_ invoke__">Err</span>(msg) =&gt; <span class="built_in">println!</span>(<span class="string">&quot;Cannot divide &#123;&#125; by &#123;&#125;: &#123;&#125;&quot;</span>, num, den, msg),</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">show_divide</span>(<span class="number">8</span>., <span class="number">2</span>.);</span><br><span class="line"><span class="title function_ invoke__">show_divide</span>(<span class="number">8</span>., <span class="number">0</span>.);</span><br></pre></td></tr></table></figure><p>结果将输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">8 / 2 = 4</span><br><span class="line">Cannot divide 8 by 0: Divide by zero</span><br></pre></td></tr></table></figure><h2 id="Enum-Standard-Utility-Functions"><a class="header-anchor" href="#Enum-Standard-Utility-Functions">¶</a>Enum Standard Utility Functions</h2><p><code>Option</code>和<code>Result</code>标准泛型类型以一种灵活、高效的方式，允许我们捕获real-world code出现的所有情况；然而，使用<code>match</code>语句来获取结果有点不方便。</p><p>因此，标准库包含一些工具类函数，以方便<code>Option</code>和<code>Result</code>类型的使用。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">divide</span>(numerator: <span class="type">f64</span>, denominator: <span class="type">f64</span>) <span class="punctuation">-&gt;</span> <span class="type">Result</span>&lt;<span class="type">f64</span>, <span class="type">String</span>&gt; &#123;</span><br><span class="line"><span class="keyword">if</span> denominator == <span class="number">0</span>. &#123;</span><br><span class="line"><span class="title function_ invoke__">Err</span>(<span class="built_in">format!</span>(<span class="string">&quot;Divide by zero&quot;</span>))</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="title function_ invoke__">Ok</span>(numerator / denominator)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">r1</span> = <span class="title function_ invoke__">divide</span>(<span class="number">8</span>., <span class="number">2</span>.);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">r2</span> = <span class="title function_ invoke__">divide</span>(<span class="number">8</span>., <span class="number">0</span>.);</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>, r1.<span class="title function_ invoke__">is_ok</span>(), r2.<span class="title function_ invoke__">is_ok</span>());</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>, r1.<span class="title function_ invoke__">is_err</span>(), r2.<span class="title function_ invoke__">is_err</span>());</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, r1.<span class="title function_ invoke__">unwrap</span>());</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, r2.<span class="title function_ invoke__">unwrap</span>());</span><br></pre></td></tr></table></figure><p>程序首先输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">true false</span><br><span class="line">false true</span><br><span class="line">4</span><br></pre></td></tr></table></figure><p>然后给出一个panic信息：“thread ‘main’ panicked at ‘called <code>Result::unwrap()</code> on an <code>Err</code> value: “Divide by zero”’”。</p><p><code>is_ok</code>函数返回<code>true</code>如果变式为Ok，<code>is_err</code>返回<code>true</code>如果变式为Err。<code>is_err()</code>等价于<code>! is_ok()</code>。</p><p>当作用于一个Ok变式，<code>unwrap</code>函数返回<code>Ok</code>变式的值，否则出现panics。该函数的意思是“我知道在一个Ok变式中可以wrap这个值，因此我只想获取这个容器的值，摈除它的转换；若不是Ok变式，会出现一个不可覆盖的错误，因此我会立即终止该程序”。该代码编译没有出错，运行时会出现panic错误。</p><p>对于<code>Option</code>枚举也有<code>unwrap</code>函数，要输出一个Vec的所有制，你可以：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">v</span> = <span class="built_in">vec!</span>[<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>];</span><br><span class="line"><span class="keyword">for</span> <span class="variable">_</span> <span class="keyword">in</span> <span class="number">0</span>..v.<span class="title function_ invoke__">len</span>() &#123;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;, &quot;</span>, v.<span class="title function_ invoke__">pop</span>().<span class="title function_ invoke__">unwrap</span>())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果会输出：“33, 22, 11,”。<code>unwrap</code>的调用会获取<code>Ok</code>内部的值。我们避免了在一个空vector调用<code>pop()</code>；否则，<code>pop()</code>返回一个<code>None</code>，<code>unwrap()</code>会出现panick。</p><p><code>unwrap</code>函数常被用于<code>quick-and-dirty</code>Rust程序中，即错误不要求处理的情况。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本章覆盖有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如何定义单独的函数，使得调用者可以处理不同的数据类型&lt;/li&gt;
&lt;li&gt;泛型函数如何使用类型推导来避免指定具体类型&lt;/li&gt;
&lt;li&gt;如何在struct、tuple-struct、enum实现各种泛型类型&lt;/li&gt;
&lt;li&gt;如何使用两个常见的枚举类型，Option和Result&lt;/li&gt;
&lt;li&gt;标准函数对Option和Result的处理&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    <content src="https://galudisu.info/%3Cp%3E%E6%9C%AC%E7%AB%A0%E8%A6%86%E7%9B%96%E6%9C%89%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E5%A6%82%E4%BD%95%E5%AE%9A%E4%B9%89%E5%8D%95%E7%8B%AC%E7%9A%84%E5%87%BD%E6%95%B0%EF%BC%8C%E4%BD%BF%E5%BE%97%E8%B0%83%E7%94%A8%E8%80%85%E5%8F%AF%E4%BB%A5%E5%A4%84%E7%90%86%E4%B8%8D%E5%90%8C%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%3C/li%3E%3Cli%3E%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC%E6%9D%A5%E9%81%BF%E5%85%8D%E6%8C%87%E5%AE%9A%E5%85%B7%E4%BD%93%E7%B1%BB%E5%9E%8B%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E5%9C%A8struct%E3%80%81tuple-struct%E3%80%81enum%E5%AE%9E%E7%8E%B0%E5%90%84%E7%A7%8D%E6%B3%9B%E5%9E%8B%E7%B1%BB%E5%9E%8B%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E4%B8%A4%E4%B8%AA%E5%B8%B8%E8%A7%81%E7%9A%84%E6%9E%9A%E4%B8%BE%E7%B1%BB%E5%9E%8B%EF%BC%8COption%E5%92%8CResult%3C/li%3E%3Cli%3E%E6%A0%87%E5%87%86%E5%87%BD%E6%95%B0%E5%AF%B9Option%E5%92%8CResult%E7%9A%84%E5%A4%84%E7%90%86%3C/li%3E%3C/ul%3E%3Cspan%20id=%22more%22%3E%3C/span%3E%3Ch2%20id=%22Need-of-Generic-Functions%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Need-of-Generic-Functions%22%3E%C2%B6%3C/a%3ENeed%20of%20Generic%20Functions%3C/h2%3E%3Cp%3ERust%E6%8F%90%E4%BE%9B%E4%B8%80%E4%B8%AA%E9%9D%99%E6%80%81%E7%B1%BB%E5%9E%8B%E6%A3%80%E6%9F%A5%EF%BC%8C%E6%89%80%E4%BB%A5%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0%E7%9A%84%E5%8F%82%E6%95%B0%E5%BF%85%E9%A1%BB%E6%98%AF%E7%A1%AE%E5%88%87%E7%9A%84%E7%B1%BB%E5%9E%8B%EF%BC%8C%E4%BE%8B%E5%A6%82%3Ccode%3Efn%20square_root(x:%20f32)%20-&amp;gt;%20f32%3C/code%3E%EF%BC%8C%E8%B0%83%E7%94%A8%E6%97%B6%E5%BF%85%E9%A1%BB%E4%BC%A0%E9%80%92%E4%B8%80%E4%B8%AA%E7%A1%AE%E5%88%87%E7%9A%84%E5%8F%82%E6%95%B0%EF%BC%8C%E4%BE%8B%E5%A6%82%3Ccode%3Esquare_root(45.2f32)%3C/code%3E%EF%BC%8C%E6%88%96%E6%98%BE%E7%A4%BA%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%AE%83%E6%89%80%E9%9C%80%E8%A6%81%E7%9A%84%E5%8F%82%E6%95%B0%3Ccode%3Esquare_root(45.2f64%20as%20f32)%3C/code%3E%E3%80%82%E4%BD%A0%E4%B8%8D%E8%83%BD%E4%BC%A0%E9%80%92%E4%B8%8D%E5%90%8C%E7%9A%84%E7%B1%BB%E5%9E%8B%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E4%B8%8D%E8%AE%BA%E6%98%AF%E5%86%99%E4%BB%A3%E7%A0%81%E3%80%81%E8%BF%98%E6%98%AF%E8%B0%83%E7%94%A8%E4%BB%A3%E7%A0%81%E9%83%BD%E5%B8%A6%E6%9D%A5%E4%BA%86%E4%B8%8D%E6%96%B9%E4%BE%BF%E3%80%82%E7%94%9A%E8%87%B3%E4%BA%8ERust%E6%9C%89%E5%BE%88%E5%A4%9A%E4%B8%8D%E5%90%8C%E7%9A%84%E6%95%B4%E5%9E%8B%E7%B1%BB%E5%9E%8B%EF%BC%8C%E5%BD%93%E5%86%99%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%EF%BC%8C%E6%AF%8F%E6%AC%A1%E9%83%BD%E8%A6%81%E5%A4%84%E7%90%86%E9%80%89%E6%8B%A9%E5%93%AA%E4%B8%80%E7%A7%8D%E7%B1%BB%E5%9E%8B%E3%80%82%E4%BE%8B%E5%A6%82%EF%BC%8C%E5%BD%93%E4%BD%A0%E7%94%A8%3Ccode%3Ei16%3C/code%3E%E7%B1%BB%E5%9E%8B%E4%BD%9C%E4%B8%BA%E5%8F%82%E6%95%B0%EF%BC%8C%E4%BD%86%E6%AF%8F%E6%AC%A1%E9%83%BD%E4%BC%A0%E9%80%92%E4%BA%86%3Ccode%3Ei32%3C/code%3E%E7%B1%BB%E5%9E%8B%EF%BC%8C%E8%BF%99%E8%A6%81%E6%B1%82%E6%88%91%E4%BB%AC%E9%87%8D%E6%96%B0%E5%AE%9A%E4%B9%89%E6%88%91%E4%BB%AC%E7%9A%84%E5%87%BD%E6%95%B0%E3%80%82%3C/p%3E%3Cp%3E%E5%8F%A6%E5%A4%96%EF%BC%8C%E5%87%BD%E6%95%B0%E4%BC%9A%E8%A2%AB%E4%BD%9C%E4%B8%BA%E6%A8%A1%E5%9D%97%E5%9C%A8%E5%85%B6%E5%AE%83%E5%9C%B0%E6%96%B9%E8%B0%83%E7%94%A8%EF%BC%8C%E8%BF%99%E4%B9%9F%E4%B8%8D%E8%83%BD%E6%BB%A1%E8%B6%B3%E6%AF%8F%E4%B8%AA%E4%BD%BF%E7%94%A8%E8%80%85%E3%80%82%3C/p%3E%3Ch2%20id=%22Defining-and-Using-Generic-Functions%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Defining-and-Using-Generic-Functions%22%3E%C2%B6%3C/a%3EDefining%20and%20Using%20Generic%20Functions%3C/h2%3E%3Cp%3E%E6%9C%80%E7%AC%A8%E7%9A%84%E5%8A%9E%E6%B3%95%E6%98%AF%E7%BC%96%E5%86%99%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20Library%20code%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E&amp;lt;T&amp;gt;(ch:%20%3Cspan%20class=%22type%22%3Echar%3C/span%3E,%20num1:%20T,%20num2:%20T)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20T%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20ch%20==%20%3Cspan%20class=%22string%22%3E&amp;#x27;a&amp;#x27;%3C/span%3E%20&amp;#123;%20num1%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20&amp;#123;%20num2%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea%3C/span%3E:%20%3Cspan%20class=%22type%22%3Ei16%3C/span%3E%20=%20f::&amp;lt;%3Cspan%20class=%22type%22%3Ei16%3C/span%3E&amp;gt;(%3Cspan%20class=%22string%22%3E&amp;#x27;a&amp;#x27;%3C/span%3E,%20%3Cspan%20class=%22number%22%3E37%3C/span%3E,%20%3Cspan%20class=%22number%22%3E41%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eb%3C/span%3E:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E%20=%20f::&amp;lt;%3Cspan%20class=%22type%22%3Ef64%3C/span%3E&amp;gt;(%3Cspan%20class=%22string%22%3E&amp;#x27;b&amp;#x27;%3C/span%3E,%20%3Cspan%20class=%22number%22%3E37.2%3C/span%3E,%20%3Cspan%20class=%22number%22%3E41.1%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20a,%20b);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%B3%9B%E5%9E%8B%E5%8F%82%E6%95%B0%E7%B1%BB%E5%9E%8B%E5%AE%9A%E4%B9%89%E5%9C%A8%E5%87%BD%E6%95%B0%E5%90%8D%E5%90%8E%E9%9D%A2%EF%BC%8C%E7%94%B1%E5%B0%96%E6%8B%AC%E5%8F%B7%E5%9B%8A%E6%8B%AC%EF%BC%8C%E5%AE%83%E5%B0%B1%E6%98%AF%E5%87%BD%E6%95%B0%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%8F%82%E6%95%B0%E5%A3%B0%E6%98%8E%E3%80%82%E5%AE%83%E8%A1%A8%E8%BF%B0%E5%A3%B0%E6%98%8E%E7%9A%84%E4%B8%8D%E6%98%AF%E4%B8%80%E4%B8%AA%E5%85%B7%E4%BD%93%E5%87%BD%E6%95%B0%EF%BC%8C%E8%80%8C%E6%98%AF%E4%B8%80%E4%B8%AA%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%EF%BC%8C%E8%AF%A5%E5%87%BD%E6%95%B0%E7%9A%84%E6%B3%9B%E5%9E%8B%E5%8F%82%E6%95%B0%E7%B1%BB%E5%9E%8B%EF%BC%8C%E4%BB%85%E5%9C%A8%E7%BC%96%E8%AF%91%E6%9C%9F%E7%A1%AE%E5%AE%9A%E3%80%82%3C/p%3E%3Cp%3E%E5%8F%82%E6%95%B0%3Ccode%3ET%3C/code%3E%E7%9A%84%E5%AE%9A%E4%B9%89%E8%8C%83%E5%9B%B4%E4%BB%85%E9%99%90%E4%BA%8E%E5%87%BD%E6%95%B0%E5%AE%9A%E4%B9%89%E5%86%85%E3%80%82%E5%AE%9E%E9%99%85%E4%B8%8A%E4%BB%85%E4%BC%9A%E5%87%BA%E7%8E%B0%E5%9C%A83%E4%B8%AA%E5%9C%B0%E6%96%B9%EF%BC%8C%E5%87%BD%E6%95%B0%E7%AD%BE%E5%90%8D%EF%BC%8C%E4%BB%A5%E5%8F%8A%E5%87%BD%E6%95%B0%E8%AF%AD%E5%8F%A5%E4%BD%93%E5%86%85%E9%83%A8%E8%B0%83%E7%94%A8%EF%BC%8C%E4%B8%8D%E4%BC%9A%E5%9C%A8%E5%85%B6%E5%AE%83%E5%9C%B0%E6%96%B9%E5%87%BA%E7%8E%B0%E3%80%82%3C/p%3E%3Cp%3E%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%E7%9A%84%E8%B0%83%E7%94%A8%EF%BC%8C%E9%9C%80%E8%A6%81%E5%B8%A6%E4%B8%8A%E7%B1%BB%E5%9E%8B%E5%8F%82%E6%95%B0%EF%BC%8C%E7%B1%BB%E5%9E%8B%E5%8F%82%E6%95%B0%E5%B0%B1%E6%98%AF%E5%85%B7%E4%BD%93%E7%9A%84%E7%B1%BB%E5%9E%8B%E6%9B%BF%E6%8D%A2%E8%BF%99%E4%B8%AA%3Ccode%3ET%3C/code%3E%E5%8D%B3%E5%8F%AF%E3%80%82%E5%A6%82%E8%BF%99%E9%87%8C%E7%9A%84%3Ccode%3Ef::&amp;lt;i16&amp;gt;%3C/code%3E%E3%80%81%3Ccode%3Ef::&amp;lt;f64&amp;gt;%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3EC%E8%AF%AD%E8%A8%80%E6%B2%A1%E6%9C%89%E6%B3%9B%E5%9E%8B%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%A6%82%E5%BF%B5%EF%BC%8C%E4%BD%86C++%E6%9C%89%EF%BC%9A%E5%AE%83%E4%BD%BF%E7%94%A8%E4%BA%86%E5%87%BD%E6%95%B0%E6%A8%A1%E6%9D%BF%E3%80%82%3C/p%3E%3Ch2%20id=%22Inferring-the-Parametric-Types%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Inferring-the-Parametric-Types%22%3E%C2%B6%3C/a%3EInferring%20the%20Parametric%20Types%3C/h2%3E%3Cp%3E%E4%B8%8A%E9%9D%A2%E7%9A%84%E4%BB%A3%E7%A0%81%E5%8F%AF%E4%BB%A5%E8%BF%9B%E4%B8%80%E6%AD%A5%E7%AE%80%E5%8C%96%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20Library%20code%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E&amp;lt;T&amp;gt;(ch:%20%3Cspan%20class=%22type%22%3Echar%3C/span%3E,%20num1:%20T,%20num2:%20T)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20T%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20ch%20==%20%3Cspan%20class=%22string%22%3E&amp;#x27;a&amp;#x27;%3C/span%3E%20&amp;#123;%20num1%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20&amp;#123;%20num2%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea%3C/span%3E:%20%3Cspan%20class=%22type%22%3Ei16%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;#x27;a&amp;#x27;%3C/span%3E,%20%3Cspan%20class=%22number%22%3E37%3C/span%3E,%20%3Cspan%20class=%22number%22%3E41%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eb%3C/span%3E:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;#x27;b&amp;#x27;%3C/span%3E,%20%3Cspan%20class=%22number%22%3E37.2%3C/span%3E,%20%3Cspan%20class=%22number%22%3E41.1%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20a,%20b);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E9%87%8C%E6%8A%8A%3Ccode%3E::&amp;lt;i16&amp;gt;%3C/code%3E%E5%92%8C%3Ccode%3E::&amp;lt;f64&amp;gt;%3C/code%3E%E7%A7%BB%E9%99%A4%E4%BA%86%EF%BC%8C%E4%BB%A5%E5%8F%8A%E5%BE%97%E5%88%B0%E7%AD%89%E4%BB%B7%E7%9A%84%E7%BB%93%E6%9E%9C%E3%80%82%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E7%BC%96%E8%AF%91%E5%99%A8%E5%9C%A8%E8%A7%A3%E6%9E%90%E4%B8%80%E4%B8%AA%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%E7%9A%84%E8%B0%83%E7%94%A8%E6%97%B6%EF%BC%8C%E4%BD%BF%E7%94%A8%E4%BA%86%E5%8F%82%E6%95%B0%E7%9A%84%E7%B1%BB%E5%9E%8B%E6%9D%A5%E7%A1%AE%E5%AE%9A%E7%B1%BB%E5%9E%8B%E3%80%82%3C/p%3E%3Cp%3E%E8%AF%B4%E7%99%BD%E4%BA%86%EF%BC%8C%E5%8F%82%E6%95%B0%E5%8C%96%E7%B1%BB%E5%9E%8B(parametric%20type)%E6%98%AF%E7%94%B1%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E7%9A%84%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%8E%A8%E6%96%AD(inferred)%E5%87%BA%E6%9D%A5%E7%9A%84%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E7%84%B6%EF%BC%8C%E8%A2%AB%E4%BD%BF%E7%94%A8%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%BF%85%E9%A1%BB%E6%98%AF%E4%B8%80%E8%87%B4%E7%9A%84%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E&amp;lt;T&amp;gt;(a:%20T,%20_b:%20T)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20T%20&amp;#123;%20a%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_a%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(%3Cspan%20class=%22number%22%3E12u8%3C/span%3E,%20%3Cspan%20class=%22number%22%3E13u8%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_b%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(%3Cspan%20class=%22number%22%3E12i64%3C/span%3E,%20%3Cspan%20class=%22number%22%3E13i64%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_c%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(%3Cspan%20class=%22number%22%3E12i16%3C/span%3E,%20%3Cspan%20class=%22number%22%3E13u16%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_d%3C/span%3E:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(%3Cspan%20class=%22number%22%3E12i16%3C/span%3E,%20%3Cspan%20class=%22number%22%3E13i16%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%87%BA%E7%8E%B0%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%EF%BC%8C%E8%99%BD%E7%84%B6%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E4%BA%86%E7%9B%B8%E5%90%8C%E7%9A%84%E7%B1%BB%E5%9E%8B%EF%BC%8C%E4%BD%86%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E7%9A%84%E7%B1%BB%E5%9E%8B%E4%B8%8D%E5%8C%B9%E9%85%8D%E5%8F%98%E9%87%8F%E5%A3%B0%E6%98%8E%E3%80%82%3C/p%3E%3Cp%3E%E5%A6%82%E6%9E%9C%E6%9C%89%E5%87%A0%E4%B8%AA%E4%B8%8D%E5%90%8C%E7%9A%84%E7%B1%BB%E5%9E%8B%E9%9C%80%E8%A6%81%E5%8F%82%E6%95%B0%E5%8C%96%EF%BC%8C%E4%BD%A0%E5%8F%AF%E4%BB%A5%E6%8C%87%E5%AE%9A%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%E7%9A%84%E5%A4%9A%E4%B8%AA%E7%B1%BB%E5%9E%8B%E5%8F%82%E6%95%B0%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E&amp;lt;Param1,%20Param2&amp;gt;(_a:%20Param1,%20_b:%20Param2)%20&amp;#123;&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;#x27;a&amp;#x27;%3C/span%3E,%20%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(%3Cspan%20class=%22number%22%3E12.56%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;quot;Hello&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E((%3Cspan%20class=%22number%22%3E3%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;a&amp;#x27;%3C/span%3E),%20[%3Cspan%20class=%22number%22%3E5%3C/span%3E,%20%3Cspan%20class=%22number%22%3E6%3C/span%3E,%20%3Cspan%20class=%22number%22%3E7%3C/span%3E]);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Ch2%20id=%22Defining-and-Using-Generic-Structs%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Defining-and-Using-Generic-Structs%22%3E%C2%B6%3C/a%3EDefining%20and%20Using%20Generic%20Structs%3C/h2%3E%3Cp%3E%E5%8F%82%E6%95%B0%E5%8C%96%E7%B1%BB%E5%9E%8B%E4%B9%9F%E9%80%82%E7%94%A8%E4%BA%8E%E5%A3%B0%E6%98%8E%E6%B3%9B%E5%9E%8B%E7%BB%93%E6%9E%84%E4%BD%93%E5%92%8C%E6%B3%9B%E5%9E%8B%E5%85%83%E7%BB%84-%E7%BB%93%E6%9E%84%E4%BD%93(tuple-struct)%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E&amp;lt;T1,%20T2&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ec:%20%3Cspan%20class=%22type%22%3Echar%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3En1:%20T1,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3En2:%20T1,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3En3:%20T2,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_s%3C/span%3E%20=%20S%20&amp;#123;%20c:%20%3Cspan%20class=%22string%22%3E&amp;#x27;a&amp;#x27;%3C/span%3E,%20n1:%20%3Cspan%20class=%22number%22%3E34%3C/span%3E,%20n2:%20%3Cspan%20class=%22number%22%3E782%3C/span%3E,%20n3:%20%3Cspan%20class=%22number%22%3E0.02%3C/span%3E%20&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ESE%3C/span%3E&amp;lt;T1,%20T2&amp;gt;%20(%3Cspan%20class=%22type%22%3Echar%3C/span%3E,%20T1,%20T1,%20T2);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_se%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3ESE%3C/span%3E%20(%3Cspan%20class=%22string%22%3E&amp;#x27;a&amp;#x27;%3C/span%3E,%20%3Cspan%20class=%22number%22%3E34%3C/span%3E,%20%3Cspan%20class=%22number%22%3E782%3C/span%3E,%20%3Cspan%20class=%22number%22%3E0.02%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%84%E4%BD%93%E5%92%8C%E5%85%83%E7%BB%84-%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%8F%82%E6%95%B0%E5%A3%B0%E6%98%8E%EF%BC%8C%E5%92%8C%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%E7%9A%84%E5%A3%B0%E6%98%8E%E4%B8%80%E6%A0%B7%EF%BC%8C%E9%83%BD%E6%98%AF%E5%9C%A8%E5%90%8D%E7%A7%B0%E5%90%8E%E9%9D%A2%E5%B8%A6%E4%B8%8A%E7%B1%BB%E5%9E%8B%E5%8F%82%E6%95%B0%E5%A3%B0%E6%98%8E%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E7%84%B6%E4%B9%9F%E5%8F%AF%E4%BB%A5%E6%98%BE%E5%BC%8F%E6%8C%87%E5%AE%9A%E7%B1%BB%E5%9E%8B%E5%8F%82%E6%95%B0%E7%9A%84%E5%85%B7%E4%BD%93%E7%B1%BB%E5%9E%8B%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E&amp;lt;T1,%20T2&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ec:%20%3Cspan%20class=%22type%22%3Echar%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3En1:%20T1,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3En2:%20T1,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3En3:%20T2,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_s%3C/span%3E%20=%20S::&amp;lt;%3Cspan%20class=%22type%22%3Eu16%3C/span%3E,%20%3Cspan%20class=%22type%22%3Ef32%3C/span%3E&amp;gt;%20&amp;#123;%20c:%20%3Cspan%20class=%22string%22%3E&amp;#x27;a&amp;#x27;%3C/span%3E,%20n1:%20%3Cspan%20class=%22number%22%3E34%3C/span%3E,%20n2:%20%3Cspan%20class=%22number%22%3E782%3C/span%3E,%20n3:%20%3Cspan%20class=%22number%22%3E0.02%3C/span%3E%20&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ESE%3C/span%3E&amp;lt;T1,%20T2&amp;gt;%20(%3Cspan%20class=%22type%22%3Echar%3C/span%3E,%20T1,%20T1,%20T2);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_se%3C/span%3E%20=%20SE::&amp;lt;%3Cspan%20class=%22type%22%3Eu16%3C/span%3E,%20%3Cspan%20class=%22type%22%3Ef32%3C/span%3E&amp;gt;%20(%3Cspan%20class=%22string%22%3E&amp;#x27;a&amp;#x27;%3C/span%3E,%20%3Cspan%20class=%22number%22%3E34%3C/span%3E,%20%3Cspan%20class=%22number%22%3E782%3C/span%3E,%20%3Cspan%20class=%22number%22%3E0.02%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3EC%E8%AF%AD%E8%A8%80%E6%B2%A1%E6%9C%89%E6%B3%9B%E5%9E%8B%E7%BB%93%E6%9E%84%E4%BD%93%EF%BC%8C%E4%BD%86C++%E6%8F%90%E4%BE%9B%E4%BA%86%EF%BC%9A%E7%B1%BB%E6%A8%A1%E6%9D%BF%E5%92%8C%E7%BB%93%E6%9E%84%E6%A8%A1%E6%9D%BF%E3%80%82%3C/p%3E%3Ch2%20id=%22Genericity-Mechanics%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Genericity-Mechanics%22%3E%C2%B6%3C/a%3EGenericity%20Mechanics%3C/h2%3E%3Cp%3E%E8%A6%81%E7%90%86%E8%A7%A3%E6%B3%9B%E5%8C%96%E7%9A%84%E5%86%85%E9%83%A8%E6%9C%BA%E5%88%B6%EF%BC%8C%E5%BA%94%E8%AF%A5%E5%85%88%E7%9C%8B%E7%BC%96%E8%AF%91%E5%99%A8%E8%BF%99%E4%B8%AA%E8%A7%92%E8%89%B2%E3%80%82%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E6%A6%82%E5%BF%B5%E4%B8%8A%E6%9D%A5%E8%AF%B4%EF%BC%8C%E6%B3%9B%E5%9E%8B%E4%BB%A3%E7%A0%81%E7%9A%84%E7%BC%96%E8%AF%91%E5%87%BA%E7%8E%B0%E5%9C%A8%E5%87%A0%E4%B8%AA%E9%98%B6%E6%AE%B5%E3%80%82%3C/p%3E%3Cp%3E%E8%AE%A9%E6%88%91%E4%BB%AC%E8%B7%9F%E9%9A%8F%E7%BC%96%E8%AF%91%E6%9C%BA%E5%88%B6%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%EF%BC%8C%E6%8F%90%E4%BE%9B%E4%B8%80%E4%B8%8B%E4%BB%A3%E7%A0%81%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eswap%3C/span%3E&amp;lt;T1,%20T2&amp;gt;(a:%20T1,%20b:%20T2)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20(T2,%20T1)%20&amp;#123;%20(b,%20a)%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ex%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eswap%3C/span%3E(%3Cspan%20class=%22number%22%3E3i16%3C/span%3E,%20%3Cspan%20class=%22number%22%3E4u16%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ey%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eswap%3C/span%3E(%3Cspan%20class=%22number%22%3E5f32%3C/span%3E,%20%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;%20&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20x,%20y);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5%EF%BC%8C%E6%BA%90%E7%A0%81%E8%A2%AB%E6%B5%8F%E8%A7%88%EF%BC%8C%E6%AF%8F%E6%AC%A1%E7%BC%96%E8%AF%91%E5%99%A8%E6%9F%A5%E6%89%BE%E4%B8%80%E4%B8%AA%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%E5%A3%B0%E6%98%8E(%E8%BF%99%E9%87%8C%E7%9A%84%E6%98%AF%3Ccode%3Eswap%3C/code%3E%E5%87%BD%E6%95%B0)%EF%BC%8C%E7%BC%96%E8%AF%91%E5%99%A8%E5%8A%A0%E8%BD%BD%E8%AF%A5%E5%87%BD%E6%95%B0%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%EF%BC%8C%E6%A3%80%E6%9F%A5%E6%B3%9B%E5%9E%8B%E4%BB%A3%E7%A0%81%E6%9C%89%E6%B2%A1%E6%9C%89%E8%AF%AD%E6%B3%95%E9%94%99%E8%AF%AF%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5%EF%BC%8C%E6%BA%90%E7%A0%81%E5%86%8D%E6%AC%A1%E8%A2%AB%E6%B5%8F%E8%A7%88%EF%BC%8C%E7%BC%96%E8%AF%91%E5%99%A8%E7%BB%9F%E8%AE%A1%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%E7%9A%84%E8%B0%83%E7%94%A8%E6%AC%A1%E6%95%B0%EF%BC%8C%E5%B9%B6%E5%8A%A0%E8%BD%BD%E8%AF%A5%E5%87%BD%E6%95%B0%E7%9A%84%E7%BB%93%E6%9E%84%E5%85%B3%E8%81%94%E5%85%B3%E7%B3%BB%E2%80%94%E2%80%94%E6%B3%9B%E5%9E%8B%E5%A3%B0%E6%98%8E%E7%9A%84%E5%86%85%E9%83%A8%E5%93%8D%E5%BA%94%E5%92%8C%E4%BD%BF%E7%94%A8%E8%BF%9B%E8%A1%8C%E5%85%B3%E8%81%94%EF%BC%8C%E8%BF%99%E9%98%B6%E6%AE%B5%E5%9C%A8%E7%B1%BB%E5%9E%8B%E6%A3%80%E6%9F%A5%E5%92%8C%E5%93%8D%E5%BA%94%E5%90%88%E6%B3%95%E7%9A%84%E5%89%8D%E6%8F%90%E4%B8%8B%E8%BF%9B%E8%A1%8C%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E8%BF%99%E4%B8%A4%E4%B8%AA%E9%98%B6%E6%AE%B5%E4%B8%8B%EF%BC%8C%E7%BC%96%E8%AF%91%E5%99%A8%E8%8E%B7%E5%BE%97%E4%BA%86%E4%B8%80%E4%B8%AA%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%3Ccode%3Eswap%3C/code%3E%EF%BC%8C%E4%B8%80%E4%B8%AA%3Ccode%3Emain%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E4%BB%A5%E5%8F%8A%3Ccode%3Eswap%3C/code%3E%E5%87%BD%E6%95%B0%E7%9A%84%E5%BC%95%E7%94%A8%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E4%B8%89%E9%98%B6%E6%AE%B5%EF%BC%8C%E6%89%80%E6%9C%89%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%E7%9A%84%E8%B0%83%E7%94%A8%E8%A2%AB%E8%AF%BB%E5%8F%96(%E8%BF%99%E9%87%8C%E7%9A%84%E4%BE%8B%E5%AD%90%EF%BC%8Cswap%E8%B0%83%E7%94%A8%E4%BA%86%E4%B8%A4%E6%AC%A1)%E3%80%82%E6%AF%8F%E6%AC%A1%E8%B0%83%E7%94%A8%EF%BC%8C%E7%A1%AE%E5%AE%9A%E4%B8%80%E4%B8%AA%E5%85%B7%E4%BD%93%E7%9A%84%E5%93%8D%E5%BA%94%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%AE%9A%E4%B9%89%E3%80%82%E8%BF%99%E4%B8%AA%E5%85%B7%E4%BD%93%E7%B1%BB%E5%9E%8B%E5%8F%AF%E8%83%BD%E5%9C%A8%E8%B0%83%E7%94%A8%E7%9A%84%E5%9C%B0%E6%96%B9%E6%98%BE%E5%BC%8F%E8%8E%B7%E5%8F%96%EF%BC%8C%E5%8F%88%E6%88%96%E8%80%85%E6%9C%89%E5%8F%82%E6%95%B0%E7%9A%84%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%8E%A8%E6%96%AD%E5%87%BA%E6%9D%A5%E3%80%82%E4%BE%8B%E5%A6%82%E8%BF%99%E9%87%8C%E4%BE%8B%E5%AD%90%EF%BC%8C%E7%AC%AC%E4%B8%80%E5%A4%84%E8%B0%83%E7%94%A8swap%EF%BC%8C%E5%8F%82%E6%95%B0%3Ccode%3ET1%3C/code%3E%E5%85%B3%E8%81%94%E7%9A%84%E7%B1%BB%E5%9E%8B%E6%98%AF%3Ccode%3Ei16%3C/code%3E%EF%BC%8C%3Ccode%3ET2%3C/code%3E%E5%85%B3%E8%81%94%E7%9A%84%E7%B1%BB%E5%9E%8B%E6%98%AF%3Ccode%3Eu16%3C/code%3E%EF%BC%9B%E4%BB%A5%E6%AD%A4%E7%B1%BB%E6%8E%A8%E2%80%A6%3C/p%3E%3Cp%3E%E7%A1%AE%E5%AE%9A%E4%BA%86%E5%85%B7%E4%BD%93%E6%B3%9B%E5%9E%8B%E5%8F%82%E6%95%B0%E7%B1%BB%E5%9E%8B%E5%90%8E%EF%BC%8C%E4%B8%80%E4%B8%AA%E7%A1%AE%E5%AE%9A%E7%B1%BB%E5%9E%8B%E7%89%88%E6%9C%AC%E7%9A%84%E5%87%BD%E6%95%B0%E8%A2%AB%E7%94%9F%E6%88%90%E3%80%82%E6%AF%8F%E4%B8%AA%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%E7%9A%84%E8%B0%83%E7%94%A8%EF%BC%8C%E9%83%BD%E4%BC%9A%E6%9B%BF%E6%8D%A2%E5%88%B0%E5%85%B7%E4%BD%93%E7%94%9F%E6%88%90%E7%9A%84%E5%87%BD%E6%95%B0%E4%B8%8A%E3%80%82%3C/p%3E%3Cp%3E%E4%BE%8B%E5%A6%82%EF%BC%8C%E5%86%85%E9%83%A8%E7%94%9F%E6%88%90%E7%9A%84Rust%E4%BB%A3%E7%A0%81%E4%B8%BA%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eswap_i16_u16%3C/span%3E(a:%20%3Cspan%20class=%22type%22%3Ei16%3C/span%3E,%20b:%20%3Cspan%20class=%22type%22%3Eu16%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20(%3Cspan%20class=%22type%22%3Eu16%3C/span%3E,%20%3Cspan%20class=%22type%22%3Ei16%3C/span%3E)%20&amp;#123;%20(b,%20a)%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eswap_f32_bool%3C/span%3E(a:%20%3Cspan%20class=%22type%22%3Ef32%3C/span%3E,%20b:%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20(%3Cspan%20class=%22type%22%3Ebool%3C/span%3E,%20%3Cspan%20class=%22type%22%3Ef32%3C/span%3E)%20&amp;#123;%20(b,%20a)%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ex%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eswap_i16_u16%3C/span%3E(%3Cspan%20class=%22number%22%3E3i16%3C/span%3E,%20%3Cspan%20class=%22number%22%3E4u16%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ey%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eswap_f32_bool%3C/span%3E(%3Cspan%20class=%22number%22%3E5f32%3C/span%3E,%20%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;%20&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20x,%20y);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%EF%BC%8C%E8%B0%83%E7%94%A8%E4%BA%86%E4%B8%A4%E5%A4%84%EF%BC%8C%E5%B0%B1%E7%94%9F%E6%88%90%E4%BA%86%E4%B8%A4%E4%B8%AA%E5%85%B7%E4%BD%93%E7%9A%84%E5%87%BD%E6%95%B0%E3%80%82%3C/p%3E%3Cp%3E%E7%AC%AC%E5%9B%9B%E9%98%B6%E6%AE%B5%EF%BC%8C%E6%98%AF%E7%BC%96%E8%AF%91%E8%BF%99%E4%BA%9B%E7%94%9F%E6%88%90%E7%9A%84%E4%BB%A3%E7%A0%81%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eswap%3C/span%3E&amp;lt;T1,%20T2&amp;gt;(a:%20T1,%20b:%20T2)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20(T2,%20T1)%20&amp;#123;%20(b,%20a)%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ex%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eswap%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;#x27;A&amp;#x27;%3C/span%3E,%20%3Cspan%20class=%22number%22%3E4.5%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ey%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eswap%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;#x27;g&amp;#x27;%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E6%3C/span%3E.);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;%20&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20x,%20y);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%A6%82%E6%9E%9C%E8%B0%83%E7%94%A8%E7%9A%84%E5%8F%82%E6%95%B0%E7%B1%BB%E5%9E%8B%E4%B8%80%E8%87%B4%EF%BC%8C%E4%BB%85%E4%BC%9A%E7%94%9F%E6%88%90%E4%B8%80%E4%B8%AA%E7%89%88%E6%9C%AC%EF%BC%8C%E5%9B%A0%E4%B8%BA%E6%89%80%E6%9C%89%E8%B0%83%E7%94%A8%E7%9A%84%E5%8F%82%E6%95%B0%E7%B1%BB%E5%9E%8B%E9%83%BD%E7%9B%B8%E5%90%8C%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8A%E9%9D%A2%E4%BC%9A%E7%94%9F%E6%88%90%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eswap_char_f64%3C/span%3E(a:%20%3Cspan%20class=%22type%22%3Echar%3C/span%3E,%20b:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20(%3Cspan%20class=%22type%22%3Ef64%3C/span%3E,%20%3Cspan%20class=%22type%22%3Echar%3C/span%3E)%20&amp;#123;%20(b,%20a)%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ex%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eswap_char_f64%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;#x27;A&amp;#x27;%3C/span%3E,%20%3Cspan%20class=%22number%22%3E4.5%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ey%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eswap_char_f64%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;#x27;g&amp;#x27;%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E6%3C/span%3E.);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;%20&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20x,%20y);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%B8%8A%E9%9D%A2%E5%BE%97%E5%87%BA%EF%BC%8C%E4%B8%80%E6%AE%B5%E7%A8%8B%E5%BA%8F%EF%BC%8C%E4%BC%9A%E7%94%9F%E6%88%90%E5%87%A0%E4%B8%AA%E5%85%B7%E4%BD%93%E7%89%88%E6%9C%AC%E7%9A%84%E6%9C%BA%E5%99%A8%E4%BB%A3%E7%A0%81%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E5%AF%B9%E4%BA%8E%E7%BC%96%E8%AF%91%E9%9D%9E%E6%B3%9B%E5%9E%8B%E4%BB%A3%E7%A0%81%EF%BC%8C%E8%BF%99%E7%A7%8D%E5%A4%9A%E9%98%B6%E6%AE%B5%E7%BC%96%E8%AF%91%E4%BC%9A%E6%9C%89%E5%87%A0%E5%88%86%E6%85%A2%E3%80%82%3C/li%3E%3Cli%3E%E7%94%9F%E6%88%90%E7%9A%84%E4%BB%A3%E7%A0%81%E9%92%88%E5%AF%B9%E6%AF%8F%E4%B8%AA%E7%89%B9%E5%AE%9A%E7%9A%84%E8%B0%83%E7%94%A8%E8%BF%9B%E8%A1%8C%E4%BA%86%E9%AB%98%E5%BA%A6%E4%BC%98%E5%8C%96%EF%BC%8C%E5%9B%A0%E6%AD%A4%E4%B8%8D%E9%9C%80%E8%A6%81%E5%AF%B9%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%E6%88%96%E5%86%B3%E7%AD%96%EF%BC%8C%E8%BF%90%E8%A1%8C%E6%97%B6%E7%9A%84%E6%80%A7%E8%83%BD%E9%83%BD%E6%98%AF%E4%BC%98%E5%8C%96%E7%9A%84%E3%80%82%3C/li%3E%3Cli%3E%E6%AF%8F%E6%AC%A1%E8%B0%83%E7%94%A8%E4%BD%BF%E7%94%A8%E4%B8%8D%E5%90%8C%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E6%97%B6%EF%BC%8C%E4%BC%9A%E4%BA%A7%E7%94%9F%E5%A4%A7%E9%87%8F%E7%9A%84%E6%9C%BA%E5%99%A8%E7%A0%81%E3%80%82%E8%BF%99%E4%BC%9A%E5%AF%BC%E8%87%B4%E4%B8%80%E4%B8%AA%E7%8E%B0%E8%B1%A1%EF%BC%8C%E2%80%9C%E4%BB%A3%E7%A0%81%E8%86%A8%E8%83%80(code%20bloat)%E2%80%9D%EF%BC%8C%E9%9D%A2%E5%AF%B9%E8%BF%99%E4%B8%AA%E4%BA%8B%E5%AE%9E%EF%BC%8C%E4%B8%BA%E4%BA%86%E4%BC%98%E5%8C%96%E6%80%A7%E8%83%BD%EF%BC%8C%E6%9C%80%E5%A5%BD%E4%B8%8D%E8%A6%81%E5%9C%A8%E5%8D%95%E4%B8%80%E8%BF%9B%E7%A8%8B%E4%BD%BF%E7%94%A8%E8%BF%87%E5%A4%9A%E4%B8%8D%E5%90%8C%E7%9A%84%E7%B1%BB%E5%9E%8B%EF%BC%8C%E5%85%B7%E4%BD%93%E4%BB%A3%E7%A0%81%E4%BD%BF%E7%94%A8%E5%85%B7%E4%BD%93%E7%9A%84%E7%B1%BB%E5%9E%8B%EF%BC%8C%E8%BF%99%E5%9B%9E%E7%BB%99CPU%E7%BC%93%E5%AD%98%E5%B8%A6%E6%9D%A5%E8%B4%9F%E6%8B%85%E3%80%82%3C/li%3E%3C/ul%3E%3Cp%3E%E5%AF%B9%E4%BA%8E%E6%B3%9B%E5%9E%8B%E7%BB%93%E6%9E%84%E4%BD%93%E5%92%8C%E6%B3%9B%E5%9E%8B%E5%85%83%E7%BB%84-%E7%BB%93%E6%9E%84%E4%BD%93%E4%B9%9F%E4%B8%80%E6%A0%B7%E5%8E%9F%E7%90%86%E3%80%82%3C/p%3E%3Ch2%20id=%22Generic-Arrays-and-Vectors%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Generic-Arrays-and-Vectors%22%3E%C2%B6%3C/a%3EGeneric%20Arrays%20and%20Vectors%3C/h2%3E%3Cp%3E%E5%85%B3%E4%BA%8Earray%E5%92%8Cvector%E4%B8%8D%E6%98%AF%E6%96%B0%E7%9A%84%E4%BA%8B%E7%89%A9%E3%80%82%E6%9C%80%E5%BC%80%E5%A7%8B%E7%9A%84%E7%AB%A0%E8%8A%82%E5%B7%B2%E7%BB%8F%E4%BB%8B%E7%BB%8D%E4%BA%86%E6%B3%9B%E5%9E%8B%E7%B1%BB%E5%9E%8B%E3%80%82%3C/p%3E%3Cp%3E%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8Carray%E6%98%AFRust%E8%AF%AD%E8%A8%80%E7%9A%84%E4%B8%80%E9%83%A8%E5%88%86%EF%BC%8Cvector%E4%BD%9C%E4%B8%BA%E7%BB%93%E6%9E%84%E4%BD%93%E5%AE%9A%E4%B9%89%E5%9C%A8Rust%E6%A0%87%E5%87%86%E5%BA%93%E3%80%82%3C/p%3E%3Ch2%20id=%22Generic-Enums%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Generic-Enums%22%3E%C2%B6%3C/a%3EGeneric%20Enums%3C/h2%3E%3Cp%3E%E5%9C%A8Rust%E4%B8%AD%EF%BC%8Cenum%E4%B9%9F%E5%8F%AF%E4%BB%A5%E6%B3%9B%E5%8C%96%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eenum%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EResult1%3C/span%3E&amp;lt;SuccessCode,%20FailureCode&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3ESuccess%3C/span%3E(SuccessCode),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3EFailure%3C/span%3E(FailureCode,%20%3Cspan%20class=%22type%22%3Echar%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EUncertainty,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3E_res%3C/span%3E%20=%20Result1::Success::&amp;lt;%3Cspan%20class=%22type%22%3Eu32%3C/span%3E,%3Cspan%20class=%22type%22%3Eu16%3C/span%3E&amp;gt;(%3Cspan%20class=%22number%22%3E12u32%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_res%20=%20Result1::Uncertainty;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_res%20=%20Result1::%3Cspan%20class=%22title%20function_%20invoke__%22%3EFailure%3C/span%3E(%3Cspan%20class=%22number%22%3E0u16%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;d&amp;#x27;%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%B8%8A%E9%9D%A2%E4%BB%A3%E7%A0%81%E6%98%AF%E5%90%88%E6%B3%95%E7%9A%84%E3%80%82%E4%B8%8B%E9%9D%A2%E4%BB%A3%E7%A0%81%E5%9C%A8%E6%9C%80%E5%90%8E%E4%B8%80%E8%A1%8C%E5%8F%91%E7%94%9F%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%EF%BC%8C%E5%9B%A0%E4%B8%BA%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8F%82%E6%95%B0Failure%E7%9A%84%E7%B1%BB%E5%9E%8B%E6%98%AF%3Ccode%3Eu32%3C/code%3E%EF%BC%8C%E4%BD%86%E6%A0%B9%E6%8D%AE%E5%88%9D%E5%A7%8B%E5%8C%96%EF%BC%8C%E5%AE%83%E5%AE%9E%E9%99%85%E4%B8%8A%E5%BA%94%E8%AF%A5%E6%98%AF%3Ccode%3Eu16%3C/code%3E%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eenum%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EResult1%3C/span%3E&amp;lt;SuccessCode,%20FailureCode&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22title%20function_%20invoke__%22%3ESuccess%3C/span%3E(SuccessCode),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22title%20function_%20invoke__%22%3EFailure%3C/span%3E(FailureCode,%20%3Cspan%20class=%22type%22%3Echar%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20Uncertainty,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3E_res%3C/span%3E%20=%20Result1::Success::&amp;lt;%3Cspan%20class=%22type%22%3Eu32%3C/span%3E,%3Cspan%20class=%22type%22%3Eu16%3C/span%3E&amp;gt;(%3Cspan%20class=%22number%22%3E12u32%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_res%20=%20Result1::Uncertainty;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_res%20=%20Result1::%3Cspan%20class=%22title%20function_%20invoke__%22%3EFailure%3C/span%3E(%3Cspan%20class=%22number%22%3E0u32%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;d&amp;#x27;%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%B3%9B%E5%9E%8B%E6%9E%9A%E4%B8%BE%E5%9C%A8Rust%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%AD%E8%A2%AB%E5%A4%A7%E9%87%8F%E7%94%A8%E5%88%B0%E3%80%82%3C/p%3E%3Cp%3ERust%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%ADenum%E6%9C%80%E5%B8%B8%E8%A2%AB%E7%94%A8%E4%BA%8E%E8%A7%A3%E5%86%B3%E4%B8%8B%E9%9D%A2%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E3%80%82%E5%A6%82%E6%9E%9C%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E5%8F%AF%E4%BB%A5%E5%A4%B1%E8%B4%A5(%3Ccode%3Efail%3C/code%3E)%EF%BC%8C%E5%A4%B1%E8%B4%A5%E6%97%B6%E5%BA%94%E8%AF%A5%E5%81%9A%E4%BB%80%E4%B9%88%EF%BC%9F%3C/p%3E%3Cp%3E%E4%BE%8B%E5%A6%82%EF%BC%8C%E5%BD%93vector%E5%8C%85%E5%90%AB%E6%9D%A1%E7%9B%AE%EF%BC%8C%E5%87%BD%E6%95%B0%3Ccode%3Epop%3C/code%3E%E7%A7%BB%E9%99%A4vector%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E6%9D%A1%E7%9B%AE%EF%BC%8C%E5%B9%B6%E8%BF%94%E5%9B%9E%E8%A2%AB%E5%88%A0%E9%99%A4%E7%9A%84%E8%AE%B0%E5%BD%95%E3%80%82%E8%8B%A5vector%E6%98%AF%E7%A9%BA%E7%9A%84%EF%BC%8C%E8%A1%A8%E8%BE%BE%E5%BC%8F%3Ccode%3Evec![0;0].pop()%3C/code%3E%E5%BA%94%E8%AF%A5%E6%80%8E%E6%A0%B7%E5%A4%84%E7%90%86%EF%BC%9F%3C/p%3E%3Cp%3E%E6%9F%90%E4%BA%9B%E8%AF%AD%E8%A8%80%E4%B8%8D%E5%AE%9A%E4%B9%89%E8%BF%99%E7%A7%8D%E8%A1%8C%E4%B8%BA%EF%BC%8C%E8%AE%A9%E5%85%B6%E6%8A%A5%E9%94%99%E6%88%96%E5%AF%BC%E8%87%B4%E4%B8%80%E4%B8%AA%E4%B8%8D%E5%8F%AF%E9%A2%84%E6%B5%8B%E7%9A%84%E7%BB%93%E6%9E%9C%E3%80%82Rust%E5%B0%BD%E5%8F%AF%E8%83%BD%E9%81%BF%E5%85%8D%E8%BF%99%E7%A7%8D%E6%9C%AA%E5%AE%9A%E4%B9%89%E7%9A%84%E8%A1%8C%E4%B8%BA%E3%80%82%3C/p%3E%3Cp%3E%E6%9F%90%E4%BA%9B%E8%AF%AD%E8%A8%80%E6%8A%9B%E5%87%BA%E4%B8%80%E4%B8%AA%E5%BC%82%E5%B8%B8%EF%BC%8C%E7%94%B1%E9%97%AD%E5%90%88%E5%9D%97%E6%88%96%E5%BD%93%E5%89%8D%E5%87%BD%E6%95%B0%E7%9A%84%E8%B0%83%E7%94%A8%E6%96%B9%E5%A4%84%E7%90%86%EF%BC%8C%E6%88%96%E6%8A%A5%E9%94%99%E8%AF%AF%E3%80%82Rust%E4%B8%AD%E4%B8%8D%E9%80%82%E7%94%A8%E5%BC%82%E5%B8%B8%E8%BF%99%E4%B8%80%E6%A6%82%E5%BF%B5%E3%80%82%3C/p%3E%3Cp%3E%E6%9F%90%E4%BA%9B%E8%AF%AD%E8%A8%80%E4%BC%9A%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%E6%8C%87%E5%AE%9A%E7%9A%84%3Ccode%3Enull%3C/code%3E%E5%80%BC%E3%80%82%E4%BD%86vector%E5%8F%AF%E4%BB%A5%E5%8C%85%E5%90%AB%E5%87%A0%E4%B9%8E%E6%89%80%E6%9C%89%E7%B1%BB%E5%9E%8B%EF%BC%8C%E8%BF%99%E4%BA%9B%E7%B1%BB%E5%9E%8B%E6%B2%A1%E6%9C%89%3Ccode%3Enull%3C/code%3E%E5%80%BC%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E6%98%AFRust%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ev%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22number%22%3E11%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E,%20%3Cspan%20class=%22number%22%3E33%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..%3Cspan%20class=%22number%22%3E5%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eitem%3C/span%3E:%20%3Cspan%20class=%22type%22%3EOption%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Ei32%3C/span%3E&amp;gt;%20=%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epop%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ematch%3C/span%3E%20item%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3ESome%3C/span%3E(number)%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;,%20&amp;quot;%3C/span%3E,%20number),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22literal%22%3ENone%3C/span%3E%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;#,%20&amp;quot;%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E8%BE%93%E5%87%BA%EF%BC%9A%E2%80%9C33,%2022,%2011,%20#,%20#,%20%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%3Ccode%3Epop%3C/code%3E%E5%87%BD%E6%95%B0%E4%BD%9C%E7%94%A8%E4%BA%8E%3Ccode%3EVec&amp;lt;T&amp;gt;%3C/code%3E%E7%B1%BB%E5%9E%8B%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%B9%B6%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%3Ccode%3EOption&amp;lt;T&amp;gt;%3C/code%3E%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%80%BC%E3%80%82%3C/p%3E%3Cp%3E%E8%AF%A5%E6%B3%9B%E5%9E%8B%E7%B1%BB%E5%9E%8B%E8%A2%AB%E5%AE%9A%E4%B9%89%E5%9C%A8Rust%E7%9A%84%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%AD%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eenum%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EOption%3C/span%3E&amp;lt;T&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3ESome%3C/span%3E(T),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22literal%22%3ENone%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%AE%83%E6%98%AF%E4%B8%80%E4%B8%AAoptional%E7%9A%84T%E7%B1%BB%E5%9E%8B%EF%BC%8C%E8%A1%A8%E7%A4%BA%E6%9C%89%EF%BC%8C%E6%88%96%E8%80%85%E6%97%A0%E3%80%82%3C/p%3E%3Ch2%20id=%22Error-Handling%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Error-Handling%22%3E%C2%B6%3C/a%3EError%20Handling%3C/h2%3E%3Cp%3ERust%E6%A0%87%E5%87%86%E5%BA%93%E4%B9%9F%E5%AE%9A%E4%B9%89%E4%BA%86%E4%B8%80%E4%B8%AA%E6%B3%9B%E5%9E%8B%E6%9E%9A%E4%B8%BE%E6%9D%A5%E5%A4%84%E7%90%86%E5%87%BD%E6%95%B0%E4%B8%8D%E8%83%BD%E8%BF%94%E5%9B%9E%E6%AD%A3%E7%A1%AE%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%83%85%E5%86%B5%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edivide%3C/span%3E(numerator:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E,%20denominator:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3EResult%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Ef64%3C/span%3E,%20%3Cspan%20class=%22type%22%3EString%3C/span%3E&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20denominator%20==%20%3Cspan%20class=%22number%22%3E0%3C/span%3E.%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3EErr%3C/span%3E(%3Cspan%20class=%22built_in%22%3Eformat!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Divide%20by%20zero&amp;quot;%3C/span%3E))%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%20%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3EOk%3C/span%3E(nmerator%20/%20denominator)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;,%20&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Edivide%3C/span%3E(%3Cspan%20class=%22number%22%3E8%3C/span%3E.,%20%3Cspan%20class=%22number%22%3E2%3C/span%3E.),%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Edivide%3C/span%3E(%3Cspan%20class=%22number%22%3E8%3C/span%3E.,%20%3Cspan%20class=%22number%22%3E0%3C/span%3E.));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E5%9B%9E%E8%BE%93%E5%87%BA%20%3Ccode%3EOk(4),%20Err(&amp;quot;Divide%20by%20zero&amp;quot;)%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%3Ccode%3EResult%3C/code%3E%E7%B1%BB%E5%9E%8B%E5%92%8C%3Ccode%3EOption%3C/code%3E%E7%B1%BB%E5%9E%8B%E7%B1%BB%E4%BC%BC%EF%BC%8C%E5%85%B6%E4%B8%AD%3Ccode%3EOption%3C/code%3E%E8%A1%A8%E7%A4%BA%E6%9C%89%E6%88%96%E6%97%A0%EF%BC%8C%3Ccode%3EResult%3C/code%3E%E8%A1%A8%E8%BF%B0%E4%BA%86%E4%B8%80%E7%A7%8D%E5%BC%82%E5%B8%B8%E6%83%85%E5%86%B5%E3%80%82%3C/p%3E%3Cp%3E%E5%AE%83%E5%9C%A8%E6%A0%87%E5%87%86%E5%BA%93%E7%9A%84%E5%AE%9A%E4%B9%89%E4%B8%BA%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eenum%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EResult%3C/span%3E&amp;lt;T,%20E&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3EOk%3C/span%3E(T),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3EErr%3C/span%3E(E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%88%91%E4%BB%AC%E4%BD%BF%E7%94%A8%E4%BA%86debug%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C%E4%BF%A1%E6%81%AF%EF%BC%8C%E5%9C%A8%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E4%B8%8D%E5%BB%BA%E8%AE%AE%E8%BF%99%E6%A0%B7%E5%81%9A%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%94%B9%E4%B8%BA%E4%B8%8B%E9%9D%A2%E8%BF%99%E7%A7%8D%E5%BD%A2%E5%BC%8F%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edivide%3C/span%3E(numerator:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E,%20denominator:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3EResult%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Ef64%3C/span%3E,%20%3Cspan%20class=%22type%22%3EString%3C/span%3E&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20denominator%20==%20%3Cspan%20class=%22number%22%3E0%3C/span%3E.%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22title%20function_%20invoke__%22%3EErr%3C/span%3E(%3Cspan%20class=%22built_in%22%3Eformat!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Divide%20by%20zero&amp;quot;%3C/span%3E))%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;#125;%20%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22title%20function_%20invoke__%22%3EOk%3C/span%3E(numerator%20/%20denominator)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eshow_divide%3C/span%3E(num:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E,%20den:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Ematch%3C/span%3E%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Edivide%3C/span%3E(num,%20den)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22title%20function_%20invoke__%22%3EOk%3C/span%3E(val)%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20/%20&amp;#123;&amp;#125;%20=%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20num,%20den,%20val),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22title%20function_%20invoke__%22%3EErr%3C/span%3E(msg)%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Cannot%20divide%20&amp;#123;&amp;#125;%20by%20&amp;#123;&amp;#125;:%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20num,%20den,%20msg),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Eshow_divide%3C/span%3E(%3Cspan%20class=%22number%22%3E8%3C/span%3E.,%20%3Cspan%20class=%22number%22%3E2%3C/span%3E.);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Eshow_divide%3C/span%3E(%3Cspan%20class=%22number%22%3E8%3C/span%3E.,%20%3Cspan%20class=%22number%22%3E0%3C/span%3E.);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E8%BE%93%E5%87%BA%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20plaintext%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E8%20/%202%20=%204%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ECannot%20divide%208%20by%200:%20Divide%20by%20zero%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Ch2%20id=%22Enum-Standard-Utility-Functions%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Enum-Standard-Utility-Functions%22%3E%C2%B6%3C/a%3EEnum%20Standard%20Utility%20Functions%3C/h2%3E%3Cp%3E%3Ccode%3EOption%3C/code%3E%E5%92%8C%3Ccode%3EResult%3C/code%3E%E6%A0%87%E5%87%86%E6%B3%9B%E5%9E%8B%E7%B1%BB%E5%9E%8B%E4%BB%A5%E4%B8%80%E7%A7%8D%E7%81%B5%E6%B4%BB%E3%80%81%E9%AB%98%E6%95%88%E7%9A%84%E6%96%B9%E5%BC%8F%EF%BC%8C%E5%85%81%E8%AE%B8%E6%88%91%E4%BB%AC%E6%8D%95%E8%8E%B7real-world%20code%E5%87%BA%E7%8E%B0%E7%9A%84%E6%89%80%E6%9C%89%E6%83%85%E5%86%B5%EF%BC%9B%E7%84%B6%E8%80%8C%EF%BC%8C%E4%BD%BF%E7%94%A8%3Ccode%3Ematch%3C/code%3E%E8%AF%AD%E5%8F%A5%E6%9D%A5%E8%8E%B7%E5%8F%96%E7%BB%93%E6%9E%9C%E6%9C%89%E7%82%B9%E4%B8%8D%E6%96%B9%E4%BE%BF%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E6%A0%87%E5%87%86%E5%BA%93%E5%8C%85%E5%90%AB%E4%B8%80%E4%BA%9B%E5%B7%A5%E5%85%B7%E7%B1%BB%E5%87%BD%E6%95%B0%EF%BC%8C%E4%BB%A5%E6%96%B9%E4%BE%BF%3Ccode%3EOption%3C/code%3E%E5%92%8C%3Ccode%3EResult%3C/code%3E%E7%B1%BB%E5%9E%8B%E7%9A%84%E4%BD%BF%E7%94%A8%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edivide%3C/span%3E(numerator:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E,%20denominator:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3EResult%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Ef64%3C/span%3E,%20%3Cspan%20class=%22type%22%3EString%3C/span%3E&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20denominator%20==%20%3Cspan%20class=%22number%22%3E0%3C/span%3E.%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3EErr%3C/span%3E(%3Cspan%20class=%22built_in%22%3Eformat!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Divide%20by%20zero&amp;quot;%3C/span%3E))%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%20%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3EOk%3C/span%3E(numerator%20/%20denominator)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Er1%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Edivide%3C/span%3E(%3Cspan%20class=%22number%22%3E8%3C/span%3E.,%20%3Cspan%20class=%22number%22%3E2%3C/span%3E.);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Er2%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Edivide%3C/span%3E(%3Cspan%20class=%22number%22%3E8%3C/span%3E.,%20%3Cspan%20class=%22number%22%3E0%3C/span%3E.);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20r1.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eis_ok%3C/span%3E(),%20r2.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eis_ok%3C/span%3E());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20r1.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eis_err%3C/span%3E(),%20r2.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eis_err%3C/span%3E());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20r1.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E());%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20r2.%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E());%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%A8%8B%E5%BA%8F%E9%A6%96%E5%85%88%E8%BE%93%E5%87%BA%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20plaintext%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3Etrue%20false%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Efalse%20true%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%84%B6%E5%90%8E%E7%BB%99%E5%87%BA%E4%B8%80%E4%B8%AApanic%E4%BF%A1%E6%81%AF%EF%BC%9A%E2%80%9Cthread%20%E2%80%98main%E2%80%99%20panicked%20at%20%E2%80%98called%20%3Ccode%3EResult::unwrap()%3C/code%3E%20on%20an%20%3Ccode%3EErr%3C/code%3E%20value:%20%E2%80%9CDivide%20by%20zero%E2%80%9D%E2%80%99%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%3Ccode%3Eis_ok%3C/code%3E%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%3Ccode%3Etrue%3C/code%3E%E5%A6%82%E6%9E%9C%E5%8F%98%E5%BC%8F%E4%B8%BAOk%EF%BC%8C%3Ccode%3Eis_err%3C/code%3E%E8%BF%94%E5%9B%9E%3Ccode%3Etrue%3C/code%3E%E5%A6%82%E6%9E%9C%E5%8F%98%E5%BC%8F%E4%B8%BAErr%E3%80%82%3Ccode%3Eis_err()%3C/code%3E%E7%AD%89%E4%BB%B7%E4%BA%8E%3Ccode%3E!%20is_ok()%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E4%BD%9C%E7%94%A8%E4%BA%8E%E4%B8%80%E4%B8%AAOk%E5%8F%98%E5%BC%8F%EF%BC%8C%3Ccode%3Eunwrap%3C/code%3E%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%3Ccode%3EOk%3C/code%3E%E5%8F%98%E5%BC%8F%E7%9A%84%E5%80%BC%EF%BC%8C%E5%90%A6%E5%88%99%E5%87%BA%E7%8E%B0panics%E3%80%82%E8%AF%A5%E5%87%BD%E6%95%B0%E7%9A%84%E6%84%8F%E6%80%9D%E6%98%AF%E2%80%9C%E6%88%91%E7%9F%A5%E9%81%93%E5%9C%A8%E4%B8%80%E4%B8%AAOk%E5%8F%98%E5%BC%8F%E4%B8%AD%E5%8F%AF%E4%BB%A5wrap%E8%BF%99%E4%B8%AA%E5%80%BC%EF%BC%8C%E5%9B%A0%E6%AD%A4%E6%88%91%E5%8F%AA%E6%83%B3%E8%8E%B7%E5%8F%96%E8%BF%99%E4%B8%AA%E5%AE%B9%E5%99%A8%E7%9A%84%E5%80%BC%EF%BC%8C%E6%91%88%E9%99%A4%E5%AE%83%E7%9A%84%E8%BD%AC%E6%8D%A2%EF%BC%9B%E8%8B%A5%E4%B8%8D%E6%98%AFOk%E5%8F%98%E5%BC%8F%EF%BC%8C%E4%BC%9A%E5%87%BA%E7%8E%B0%E4%B8%80%E4%B8%AA%E4%B8%8D%E5%8F%AF%E8%A6%86%E7%9B%96%E7%9A%84%E9%94%99%E8%AF%AF%EF%BC%8C%E5%9B%A0%E6%AD%A4%E6%88%91%E4%BC%9A%E7%AB%8B%E5%8D%B3%E7%BB%88%E6%AD%A2%E8%AF%A5%E7%A8%8B%E5%BA%8F%E2%80%9D%E3%80%82%E8%AF%A5%E4%BB%A3%E7%A0%81%E7%BC%96%E8%AF%91%E6%B2%A1%E6%9C%89%E5%87%BA%E9%94%99%EF%BC%8C%E8%BF%90%E8%A1%8C%E6%97%B6%E4%BC%9A%E5%87%BA%E7%8E%B0panic%E9%94%99%E8%AF%AF%E3%80%82%3C/p%3E%3Cp%3E%E5%AF%B9%E4%BA%8E%3Ccode%3EOption%3C/code%3E%E6%9E%9A%E4%B8%BE%E4%B9%9F%E6%9C%89%3Ccode%3Eunwrap%3C/code%3E%E5%87%BD%E6%95%B0%EF%BC%8C%E8%A6%81%E8%BE%93%E5%87%BA%E4%B8%80%E4%B8%AAVec%E7%9A%84%E6%89%80%E6%9C%89%E5%88%B6%EF%BC%8C%E4%BD%A0%E5%8F%AF%E4%BB%A5%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ev%3C/span%3E%20=%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22number%22%3E11%3C/span%3E,%20%3Cspan%20class=%22number%22%3E22%3C/span%3E,%20%3Cspan%20class=%22number%22%3E33%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Elen%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;,%20&amp;quot;%3C/span%3E,%20v.%3Cspan%20class=%22title%20function_%20invoke__%22%3Epop%3C/span%3E().%3Cspan%20class=%22title%20function_%20invoke__%22%3Eunwrap%3C/span%3E())%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E4%BC%9A%E8%BE%93%E5%87%BA%EF%BC%9A%E2%80%9C33,%2022,%2011,%E2%80%9D%E3%80%82%3Ccode%3Eunwrap%3C/code%3E%E7%9A%84%E8%B0%83%E7%94%A8%E4%BC%9A%E8%8E%B7%E5%8F%96%3Ccode%3EOk%3C/code%3E%E5%86%85%E9%83%A8%E7%9A%84%E5%80%BC%E3%80%82%E6%88%91%E4%BB%AC%E9%81%BF%E5%85%8D%E4%BA%86%E5%9C%A8%E4%B8%80%E4%B8%AA%E7%A9%BAvector%E8%B0%83%E7%94%A8%3Ccode%3Epop()%3C/code%3E%EF%BC%9B%E5%90%A6%E5%88%99%EF%BC%8C%3Ccode%3Epop()%3C/code%3E%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%3Ccode%3ENone%3C/code%3E%EF%BC%8C%3Ccode%3Eunwrap()%3C/code%3E%E4%BC%9A%E5%87%BA%E7%8E%B0panick%E3%80%82%3C/p%3E%3Cp%3E%3Ccode%3Eunwrap%3C/code%3E%E5%87%BD%E6%95%B0%E5%B8%B8%E8%A2%AB%E7%94%A8%E4%BA%8E%3Ccode%3Equick-and-dirty%3C/code%3ERust%E7%A8%8B%E5%BA%8F%E4%B8%AD%EF%BC%8C%E5%8D%B3%E9%94%99%E8%AF%AF%E4%B8%8D%E8%A6%81%E6%B1%82%E5%A4%84%E7%90%86%E7%9A%84%E6%83%85%E5%86%B5%E3%80%82%3C/p%3E" type="image"/>
    
    
    <category term="learning" scheme="https://galudisu.info/categories/learning/"/>
    
    
    <category term="rust" scheme="https://galudisu.info/tags/rust/"/>
    
  </entry>
  
  <entry>
    <title>rust基础入门[09] - Defining Functions</title>
    <link href="https://galudisu.info/2023/01/09/rust/beginning/chapter09_Defining%20Functions/"/>
    <id>https://galudisu.info/2023/01/09/rust/beginning/chapter09_Defining%20Functions/</id>
    <published>2023-01-09T07:50:46.000Z</published>
    <updated>2025-04-27T11:59:08.282Z</updated>
    
    <content type="html"><![CDATA[<p>本章覆盖有：</p><ul><li>如何定义程序/函数,如何调用</li><li>同名函数</li><li>函数的参数如何传递，by-value还是by-reference</li><li>函数的返回值</li><li>如何提前退出一个函数</li><li>对象的引用如何控制</li></ul><span id="more"></span><h2 id="Defining-and-Invoking-a-Function"><a class="header-anchor" href="#Defining-and-Invoking-a-Function">¶</a>Defining and Invoking a Function</h2><p>函数的定义比较简单，以<code>fn</code>关键字开头，函数名+参数+块。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">foo</span>() &#123;</span><br><span class="line">    <span class="comment">// your code here</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个块是函数的“body”，对这个body的处理称为函数署名“signature”。</p><p>同大多数语言一样，main方法/函数式程序的入口，它由机器码调用。</p><p>和C有点不同的是，函数的定义，可以在其它函数的body内直接定义。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">f1</span>() &#123; <span class="built_in">print!</span>(<span class="string">&quot;1&quot;</span>); &#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">main</span>() &#123;</span><br><span class="line">    <span class="title function_ invoke__">f1</span>();</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">f2</span>() &#123; <span class="built_in">print!</span>(<span class="string">&quot;2&quot;</span>); &#125;</span><br><span class="line">    <span class="title function_ invoke__">f2</span>(); <span class="title function_ invoke__">f1</span>(); <span class="title function_ invoke__">f2</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意，块定义的函数作用范围仅在其块内。</p><h2 id="Functions-Defined-After-Their-Use"><a class="header-anchor" href="#Functions-Defined-After-Their-Use">¶</a>Functions Defined After Their Use</h2><p>下面代码是不合法的：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">a</span> = <span class="number">3</span>;</span><br></pre></td></tr></table></figure><p>因为变量在定义前被调用了；对于函数，只要在作用范围内，顺序不受影响，下面是有效的：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">f</span>();</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>() &#123;&#125;;</span><br></pre></td></tr></table></figure><h2 id="Functions-Shadowing-Other-Functions"><a class="header-anchor" href="#Functions-Shadowing-Other-Functions">¶</a>Functions Shadowing Other Functions</h2><p>前面说过，变量声明如果同名，变量会被投影。但是函数却不能这样：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>() &#123;&#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>() &#123;&#125;</span><br></pre></td></tr></table></figure><p>这样写会有编译错误：“the name <code>f</code> is defined multiple times”。</p><p>只有在不同的块里面，才可以定义多个同名的函数：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">f</span>() &#123; <span class="built_in">print!</span>(<span class="string">&quot;a&quot;</span>); &#125;</span><br><span class="line">    <span class="title function_ invoke__">f</span>(); <span class="title function_ invoke__">f</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">f</span>() &#123; <span class="built_in">print!</span>(<span class="string">&quot;b&quot;</span>); &#125;</span><br><span class="line">    <span class="title function_ invoke__">f</span>(); <span class="title function_ invoke__">f</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果将输出：“aab”。</p><p>并且不能再语句块外部调用：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">f</span>() &#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">f</span>();</span><br></pre></td></tr></table></figure><p>编译器会抱怨：“cannot find function <code>f</code> in this scope”。</p><p>最后，函数投影，仅能投影语句块外部定义的。下面是完整例子：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>() &#123; <span class="built_in">print!</span>(<span class="string">&quot;1&quot;</span>); &#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">main</span>() &#123;</span><br><span class="line">    <span class="title function_ invoke__">f</span>(); <span class="comment">// Prints 2</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title function_ invoke__">fn</span>(); <span class="comment">// Prints 3</span></span><br><span class="line">        <span class="keyword">fn</span> <span class="title function_">f</span>() &#123; <span class="built_in">print!</span>(<span class="string">&quot;3&quot;</span>); &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">f</span>(); <span class="comment">// Prints 2</span></span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">f</span>() &#123; <span class="built_in">print!</span>(<span class="string">&quot;2&quot;</span>); &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实际上，按照编译器的思路，当调用<code>fn()</code>时，会先找临近的块作用范围，如果有，则调用最近路径上的函数。如果没有，则往下一个节点寻找(类似于树的深度搜索)。</p><h2 id="Passing-Arguments-to-a-Function"><a class="header-anchor" href="#Passing-Arguments-to-a-Function">¶</a>Passing Arguments to a Function</h2><p>可以将参数传递给函数，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">print_sum</span>(addend1: <span class="type">f64</span>, addend2: <span class="type">f64</span>) &#123;</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;&#125; + &#123;&#125; = &#123;&#125;&quot;</span>, addend1, addend2, addend1 + andend2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">print_sum</span>(<span class="number">3</span>., <span class="number">5</span>.);</span><br><span class="line"><span class="title function_ invoke__">print_sum</span>(<span class="number">3.2</span>, <span class="number">5.1</span>);</span><br></pre></td></tr></table></figure><p>3 + 5 = 8<br>3.2 + 5.1 = 8.3</p><p>现在先来理解下圆括号(parentheses)的用法！在一个函数定义，闭合着参数定义列表；该闭合参数在函数调用时传递。</p><p>函数参数的定义和变量的定义类似。</p><p>因此，下面代码会被解析：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">addend1</span>: <span class="type">f64</span> = <span class="number">3</span>.; <span class="keyword">let</span> <span class="variable">addend2</span>: <span class="type">f64</span> = <span class="number">5</span>.;</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;&#125; + &#123;&#125; = &#123;&#125;&quot;</span>, addend1, addend2,</span><br><span class="line">addend1 + addend2);</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">addend1</span>: <span class="type">f64</span> = <span class="number">3.2</span>; <span class="keyword">let</span> <span class="variable">addend2</span>: <span class="type">f64</span> = <span class="number">5.1</span>;</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;&#125; + &#123;&#125; = &#123;&#125;&quot;</span>, addend1, addend2,</span><br><span class="line">addend1 + addend2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数参数定义和变量定义的主要不同是，函数参数的定义，类型是必须的，它不能依赖于类型推断。</p><p>类型推断总是被用于编译器检查，确保接收的参数是实际参数的声明类型。正是这样，下面代码</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>(a: <span class="type">i16</span>) &#123;&#125;</span><br><span class="line"><span class="title function_ invoke__">f</span>(<span class="number">3</span>.);</span><br><span class="line"><span class="title function_ invoke__">f</span>(<span class="number">3u16</span>);</span><br><span class="line"><span class="title function_ invoke__">f</span>(<span class="number">3i16</span>);</span><br><span class="line"><span class="title function_ invoke__">f</span>(<span class="number">3</span>);</span><br></pre></td></tr></table></figure><p>会发生错误，因为浮点类型不能传递给一个整型参数；第二个函数调用也一样，u16类型的值不能传递给一个i16的参数。</p><p>最后两个函数调用是运行的。实际上，第三处调用传递了正确的参数类型；第四处调用，它被类型推断，传递了unconstrained integer类型。</p><h2 id="Passing-Arguments-by-Value"><a class="header-anchor" href="#Passing-Arguments-by-Value">¶</a>Passing Arguments by Value</h2><p>注意参数不是简单传递对象的新名，它不是别名；实际上他们是对象的拷贝。该拷贝在函数调用时被创建，函数结束并return给调用者时拷贝被销毁。下面例子阐明这个概念：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">print_double</span>(<span class="keyword">mut</span> x: <span class="type">f64</span>) &#123;</span><br><span class="line">x *= <span class="number">2</span>.;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">x</span> = <span class="number">4</span>.;</span><br><span class="line"><span class="title function_ invoke__">print_double</span>(x);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot; &#123;&#125;&quot;</span>, x);</span><br></pre></td></tr></table></figure><p>结果输出：“8 4”。<br>变量名“x”被声明并初始化，然后传递给函数“print_double”，该函数包含一个参数“x”，函数执行正确后返回给调用者。</p><p>实际上，不是 <strong>变量</strong> 传递给函数，二是变量的 <strong>值</strong> 。它称为 <strong>值传递</strong> ，和C语言类似。变量“x”的值被用于初始化一个新变量，这个新变量为函数的参数。新的变量被修改，并在函数体内打印，最后由函数结束销毁。该函数的调用者的变量并没有发生改变。</p><p>注意这里的函数签名“print_double”，在参数“x”前有关键字“<code>mut</code>”。它允许函数体内第一条语句；至此，该语句仅改变函数参数的值，函数外部的变量并没有发生改变，所以外部的“x”不需要用<code>mut</code>关键字修饰。</p><h2 id="Returning-a-Value-from-a-Function"><a class="header-anchor" href="#Returning-a-Value-from-a-Function">¶</a>Returning a Value from a Function</h2><p>函数若要给调用者返回一个结果：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">double</span>(x: <span class="type">f64</span>) <span class="punctuation">-&gt;</span> <span class="type">f64</span> &#123; x * <span class="number">2</span>. &#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, <span class="title function_ invoke__">double</span>(<span class="number">17.3</span>));</span><br></pre></td></tr></table></figure><p>返回值实际上是函数体自身。因为函数体是个块，所以它的值就是最后一个表达式的值，否则就是一个空tuple ()。</p><p>函数的返回类型，在C语言写在函数名前面，在Rust则写在后面，并由符号“<code>-&gt;</code>”隔离。</p><p>如果没有指定返回类型，默认是空tuple，即前面说的“()”：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">f1</span>(x: <span class="type">i32</span>) &#123;&#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">f2</span>(x: <span class="type">i32</span>) <span class="punctuation">-&gt;</span> () &#123;&#125;</span><br></pre></td></tr></table></figure><p>函数体的类型，必须与函数签名指定的类型相同，或者无符号类型可以约束的类型。因此下面代码是合法的：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">f1</span>() <span class="punctuation">-&gt;</span> <span class="type">i32</span> &#123; <span class="number">4.5</span>; <span class="string">&quot;abc&quot;</span>; <span class="number">73i32</span> &#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">f2</span>() <span class="punctuation">-&gt;</span> <span class="type">i32</span> &#123; <span class="number">4.5</span>; <span class="string">&quot;abc&quot;</span>; <span class="number">73</span> &#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">f3</span>() <span class="punctuation">-&gt;</span> <span class="type">i32</span> &#123; <span class="number">4.5</span>; <span class="string">&quot;abc&quot;</span>; <span class="number">73</span> + <span class="number">100</span> &#125;</span><br></pre></td></tr></table></figure><p>下面代码不合法：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">f1</span>() <span class="punctuation">-&gt;</span> <span class="type">i32</span> &#123; <span class="number">4.5</span>; <span class="string">&quot;abc&quot;</span>; <span class="literal">false</span> &#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">f2</span>() <span class="punctuation">-&gt;</span> <span class="type">i32</span> &#123; <span class="number">4.5</span>; <span class="string">&quot;abc&quot;</span>; () &#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">f3</span>() <span class="punctuation">-&gt;</span> <span class="type">i32</span> &#123; <span class="number">4.5</span>; <span class="string">&quot;abc&quot;</span>; &#123;&#125; &#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">f4</span>() <span class="punctuation">-&gt;</span> <span class="type">i32</span> &#123; <span class="number">4.5</span>; <span class="string">&quot;abc&quot;</span>; &#125;</span><br></pre></td></tr></table></figure><h2 id="Early-Exit"><a class="header-anchor" href="#Early-Exit">¶</a>Early Exit</h2><p>要让一个函数从某条中间语句结束，可以使用<code>return</code>关键字返回，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>(x: <span class="type">f64</span>) <span class="punctuation">-&gt;</span> <span class="type">f64</span> &#123;</span><br><span class="line"><span class="keyword">if</span> x &lt;= <span class="number">0</span>. &#123; <span class="keyword">return</span> <span class="number">0</span>.; &#125;</span><br><span class="line">x + <span class="number">3</span>.</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>, <span class="title function_ invoke__">f</span>(<span class="number">1</span>.), <span class="title function_ invoke__">f</span>(-<span class="number">1</span>.));</span><br></pre></td></tr></table></figure><p><code>return</code>关键字和C语言类似，不同的是最后一个语句可以不写。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>(x: <span class="type">f64</span>) <span class="punctuation">-&gt;</span> <span class="type">f64</span> &#123;</span><br><span class="line"><span class="keyword">if</span> x &lt;= <span class="number">0</span>. &#123; <span class="keyword">return</span> <span class="number">0</span>.; &#125;</span><br><span class="line"><span class="keyword">return</span> x + <span class="number">3</span>.;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>, <span class="title function_ invoke__">f</span>(<span class="number">1</span>.), <span class="title function_ invoke__">f</span>(-<span class="number">1</span>.));</span><br></pre></td></tr></table></figure><p>上面的写法不是严谨的，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>(x: <span class="type">f64</span>) <span class="punctuation">-&gt;</span> <span class="type">f64</span> &#123;</span><br><span class="line"><span class="keyword">if</span> x &lt;= <span class="number">0</span>. &#123; <span class="number">0</span>. &#125;</span><br><span class="line"><span class="keyword">else</span> &#123; x + <span class="number">3</span>. &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>, <span class="title function_ invoke__">f</span>(<span class="number">1</span>.), <span class="title function_ invoke__">f</span>(-<span class="number">1</span>.));</span><br></pre></td></tr></table></figure><p>如果函数签名指定的是空tuple，可以有多种写法：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>(x: <span class="type">i32</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> x &lt;= <span class="number">0</span> &#123; <span class="keyword">return</span>; &#125;</span><br><span class="line"><span class="keyword">if</span> x == <span class="number">4</span> &#123; <span class="title function_ invoke__">return</span> (); &#125;</span><br><span class="line"><span class="keyword">if</span> x == <span class="number">7</span> &#123; <span class="keyword">return</span> &#123;&#125;; &#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">f</span>(<span class="number">5</span>);</span><br></pre></td></tr></table></figure><p>任何函数调用可被看做一个有效语句：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>() <span class="punctuation">-&gt;</span> <span class="type">i32</span> &#123; <span class="number">3</span> &#125;</span><br><span class="line"><span class="title function_ invoke__">f</span>();</span><br></pre></td></tr></table></figure><p>这里，返回值被忽略并立即销毁。</p><p>相反，如果返回值被使用，如下，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">f</span>() <span class="punctuation">-&gt;</span> <span class="type">i32</span> &#123; <span class="number">3</span> &#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">_a</span>: <span class="type">i32</span> = <span class="title function_ invoke__">f</span>();</span><br></pre></td></tr></table></figure><p>它必须是一个正确的类型。</p><h2 id="Returning-Several-Values"><a class="header-anchor" href="#Returning-Several-Values">¶</a>Returning Several Values</h2><p>可以使用tuple返回多个值：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">divide</span>(dividend: <span class="type">i32</span>, divisor: <span class="type">i32</span>) <span class="punctuation">-&gt;</span> (<span class="type">i32</span>, <span class="type">i32</span>) &#123;</span><br><span class="line">(dividend / divisor, dividend % divisor)</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, <span class="title function_ invoke__">divide</span>(<span class="number">50</span>, <span class="number">11</span>));</span><br></pre></td></tr></table></figure><p>结果输出“(4, 6)”</p><p>或者你可以返回一个enum, struct, tuple struct, array, vector：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> <span class="title class_">E</span> &#123; E1, E2 &#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">S</span> &#123; a: <span class="type">i32</span>, b: <span class="type">bool</span> &#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">TS</span> (<span class="type">f64</span>, <span class="type">char</span>);</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">f1</span>() <span class="punctuation">-&gt;</span> E &#123; E::E2 &#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">f2</span>() <span class="punctuation">-&gt;</span> S &#123; S &#123; a: <span class="number">49</span>, b: <span class="literal">true</span> &#125; &#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">f3</span>() <span class="punctuation">-&gt;</span> TS &#123; <span class="title function_ invoke__">TS</span> (<span class="number">4.7</span>, <span class="string">&#x27;w&#x27;</span>) &#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">f4</span>() <span class="punctuation">-&gt;</span> [<span class="type">i16</span>; <span class="number">4</span>] &#123; [<span class="number">7</span>, -<span class="number">2</span>, <span class="number">0</span>, <span class="number">19</span>] &#125;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">f5</span>() <span class="punctuation">-&gt;</span> <span class="type">Vec</span>&lt;<span class="type">i64</span>&gt; &#123; <span class="built_in">vec!</span>[<span class="number">12000</span>] &#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, <span class="keyword">match</span> <span class="title function_ invoke__">f1</span>() &#123; E::E1 =&gt; <span class="number">1</span>, _ =&gt; -<span class="number">1</span> &#125;);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, <span class="title function_ invoke__">f2</span>().a);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, <span class="title function_ invoke__">f3</span>().<span class="number">0</span>);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, <span class="title function_ invoke__">f4</span>()[<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, <span class="title function_ invoke__">f5</span>()[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure><p>结果输出“&quot;-1 49 4.7 7 12000”。</p><p>下面解析下。</p><p>函数<code>f1</code>调用返回一个枚举E2，并用于匹配E1，没有匹配，返回默认值-1。<br>函数<code>f2</code>调用返回一个结构对象，并访问该结构的field。<br>函数<code>f3</code>调用返回一个tuple-struct，通过数字identifiered访问field。<br>函数<code>f4</code>调用返回一个数组，并获取数组下标的值。<br>函数<code>f4</code>调用返回一个向量，并获取向量下标的值。</p><h2 id="How-to-Change-a-Variable-of-the-Caller"><a class="header-anchor" href="#How-to-Change-a-Variable-of-the-Caller">¶</a>How to Change a Variable of the Caller</h2><p>假设我们要对数组作平方处理：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">arr</span> = [<span class="number">5</span>, -<span class="number">4</span>, <span class="number">9</span>, <span class="number">0</span>, -<span class="number">7</span>, -<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">0</span>..<span class="number">10</span> &#123;</span><br><span class="line"><span class="keyword">if</span> arr[i] &lt; <span class="number">0</span> &#123; arr[i] *= <span class="number">2</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, arr);</span><br></pre></td></tr></table></figure><p>现在要将其封装成一个函数：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">double_negatives</span>(<span class="keyword">mut</span> a: [<span class="type">i32</span>; <span class="number">10</span>]) &#123;</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">0</span>..<span class="number">10</span> &#123;</span><br><span class="line"><span class="keyword">if</span> a[i] &lt; <span class="number">0</span> &#123; a[i] *= <span class="number">2</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">arr</span> = [<span class="number">5</span>, -<span class="number">4</span>, <span class="number">9</span>, <span class="number">0</span>, -<span class="number">7</span>, -<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">1</span>];</span><br><span class="line"><span class="title function_ invoke__">double_negatives</span>(arr);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, arr);</span><br></pre></td></tr></table></figure><p>结果仅输出“[5, -4, 9, 0, -7, -1, 3, 5, 3, 1].”。并没有达到预期。</p><p>前面说个，函数的参数是变量的一个拷贝，因此没有办法直接修改外部变量。你可以：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">double_negatives</span>(<span class="keyword">mut</span> a: [<span class="type">i32</span>; <span class="number">10</span>]) <span class="punctuation">-&gt;</span> [<span class="type">i32</span>; <span class="number">10</span>] &#123;</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">0</span>..<span class="number">10</span> &#123;</span><br><span class="line"><span class="keyword">if</span> a[i] &lt; <span class="number">0</span> &#123; a[i] *= <span class="number">2</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line">a</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">arr</span> = [<span class="number">5</span>, -<span class="number">4</span>, <span class="number">9</span>, <span class="number">0</span>, -<span class="number">7</span>, -<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">1</span>];</span><br><span class="line">arr = <span class="title function_ invoke__">double_negatives</span>(arr);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, arr);</span><br></pre></td></tr></table></figure><p>这种方法有点遗憾：数据被拷贝了两次，第一次发生在函数调用上，第二次发生在覆盖赋值上。这种拷贝会造成额外的计算消耗，并且可以避免的。</p><h2 id="Passing-Arguments-by-Reference"><a class="header-anchor" href="#Passing-Arguments-by-Reference">¶</a>Passing Arguments by Reference</h2><p>函数可以传递被传参数的地址，这个方式称为引用传递，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">double_negatives</span>(a: &amp;<span class="keyword">mut</span> [<span class="type">i32</span>; <span class="number">10</span>]) &#123;</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">0</span>..<span class="number">10</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (*a)[i] &lt; <span class="number">0</span> &#123; (*a)[i] *= <span class="number">2</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">arr</span> = [<span class="number">5</span>, -<span class="number">4</span>, <span class="number">9</span>, <span class="number">0</span>, -<span class="number">7</span>, -<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">1</span>];</span><br><span class="line"><span class="title function_ invoke__">double_negatives</span>(&amp;<span class="keyword">mut</span> arr);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;:?&#125;&quot;</span>, arr);</span><br></pre></td></tr></table></figure><p>该代码没有发生数据拷贝的现象。</p><p>这种方式称为引用传递(by reference)。它的语法和C语言的类似。</p><p>这里出现了符号“<code>&amp;</code>”和“<code>*</code>”，在Rust中表示的意义和C语言一样。符号“<code>&amp;</code>”表示“<code>对象的(内存)地址...</code>”，符号“<code>*</code>”表示“<code>(内存)地址的对象...</code>”。</p><p>函数<code>double_negatives</code>的参数类型是<code>&amp;mut [i32; 10]</code>，在类型前面带一个<code>&amp;</code>符号，指明它是类型对象的地址(也叫指针、引用)。因此，<code>a</code>在这里表示的是“长度为10的32位整型数组的地址(指针、引用)”。</p><p>在函数体内，我们并不关心这个地址(指针、引用)，而是这个内存地址的对象，所以我们需要用<code>*</code>访问该对象。通常，给定一个引用<code>a</code>，表达式<code>*a</code>标识为该对象的引用。</p><p>函数方法内的第二行，<code>*a</code>标识为内存地址之上的对象，这个对象就是数组，因此可以用下标访问。</p><p>围绕表达式<code>*a</code>的圆括号是必须的，因为方括号优先于星号，所以<code>*a[i]</code>会被当做<code>*(a[i])</code>处理，并且这里会发生编译错误。</p><p>使用这类参数，函数<code>double_negatives</code>仅接收一个数组的地址，因此可以对该数组进行读写操作。</p><p>声明该函数后，要调用该函数。数组必须声明以及初始化为可变(mutable)，因为它内部会发生改变。</p><p>注意，调用函数需要显式带上<code>mut</code>关键字一并传递。</p><p>实际上，该函数可以简化成下面等价的版本：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">double_negatives</span>(a: &amp;<span class="keyword">mut</span> [<span class="type">i32</span>; <span class="number">10</span>]) &#123;</span><br><span class="line"><span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">0</span>..<span class="number">10</span> &#123;</span><br><span class="line"><span class="keyword">if</span> a[i] &lt; <span class="number">0</span> &#123; a[i] *= <span class="number">2</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们删除了两个星号，以及圆括号，</p><p>我们说过这里的<code>a</code>不是一个数组，而是数组的地址，那么这里的<code>a[i]</code>表达式应该不合法才对。目前Rust对这类地址作了如下简化：</p><p>每当一个引用被不正确使用，即它是一个非引用值时，Rust会假装前面有一个星号(asterisk)。也就是Rust对其进行了反向引用(dereference)，所以这里把内存地址(指针、引用)替代为引用自身。</p><p>由此产生的语法就是C<ins>的引用，Rust的不同之处在于，星号(asterisk)可以写、可以省略，但C</ins>必须在指针前面写，必须不能在引用前面写。</p><h2 id="Using-References"><a class="header-anchor" href="#Using-References">¶</a>Using References</h2><p>引用主要用于函数参数上，但也可能用在其他地方：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">a</span> = <span class="number">15</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">ref_a</span> = &amp;a;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125; &#123;&#125;&quot;</span>, a, *ref_a, ref_a);</span><br></pre></td></tr></table></figure><p>结果输出：“15 15 15”。</p><p>前面阐述过，<code>ref_a</code>是一个内存地址，<code>*ref_a</code>标识为该内存地址上的对象引用，最后一个语句，编译器尝试直接输出<code>ref_a</code>时，会反向获取该引用的对象，并输出结果。</p><p>使用引用，你可以做一些技巧性的事情：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">a</span> = &amp;&amp;&amp;<span class="number">7</span>;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125;&quot;</span>, ***a, **a, *a, a);</span><br></pre></td></tr></table></figure><p>这里的<code>a</code>就变成了7的引用的引用的引用… 所以输出结果就变成了引用的引用的引用的对象… 但这里你不能再加多星号(asterisk)，否则会发生编译错误，因为反向引用只发生了3层。</p><p>最后一个表达式是隐式的、顺序性的、重复了上面几个步骤。</p><p>什么情况下星号才能被省略，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">main</span>() &#123; <span class="title function_ invoke__">a</span>(); <span class="title function_ invoke__">b</span>(); <span class="title function_ invoke__">c</span>(); <span class="title function_ invoke__">d</span>(); &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">a</span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">v</span> = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">x</span> = &amp;v;</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;a &#123;&#125;&quot;</span>, *x);</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;a &#123;&#125;&quot;</span>, <span class="number">1</span> + *x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">b</span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">v</span> = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">x</span> = &amp;v;</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;b &#123;&#125;&quot;</span>, x);</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;b &#123;&#125;&quot;</span>, <span class="number">1</span> + x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">c</span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">v</span> = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">x</span> = &amp;<span class="keyword">mut</span> v;</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;c &#123;&#125;&quot;</span>, *x);</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;c &#123;&#125;&quot;</span>, <span class="number">1</span> + *x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">d</span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">v</span> = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">x</span> = &amp;<span class="keyword">mut</span> v;</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;d &#123;&#125;&quot;</span>, x);</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;d &#123;&#125;&quot;</span>, <span class="number">1</span> + x); <span class="comment">// error</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后一个会出错：<code>the trait bound \</code>_: std::ops::Add&lt;&amp;mut _&gt;` is not satisfied [E0277]`。</p><p>这是因为对于<code>Add</code>trait的操作，内部实现了<code>i32 + &amp;32</code>(<code>&amp;i32 + &amp;i32</code>)的处理，但是，对于immutable reference没有扩展有<code>&amp;&amp;i32</code> 或 <code>&amp;mut i32</code>的实现。</p><h2 id="Mutablility-of-References"><a class="header-anchor" href="#Mutablility-of-References">¶</a>Mutablility of References</h2><p>如何在reference上使用mut关键字：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">a</span>: <span class="type">i32</span> = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">b</span>: <span class="type">i32</span> = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">p</span>: &amp;<span class="keyword">mut</span> <span class="type">i32</span> = &amp;<span class="keyword">mut</span> a;<span class="comment">// line 3</span></span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, *p);</span><br><span class="line">*p += <span class="number">1</span>;<span class="comment">// line 5</span></span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, *p);</span><br><span class="line">p = &amp;<span class="keyword">mut</span> b;<span class="comment">// line 7</span></span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, *p);</span><br><span class="line">*p += <span class="number">1</span>;<span class="comment">// line 9</span></span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125; &quot;</span>, *p);</span><br></pre></td></tr></table></figure><p>结果输出为：“10 11 20 21”。</p><p>注意第5行和第9行，<code>*p</code>是mutable的。所以<code>p</code>的类型不能是<code>&amp;i32</code>，必须是<code>&amp;mut i32</code>。这里的<code>p</code>有很多处<code>mut</code>，表示了不同的意义：第一个<code>mut</code>表示<code>p</code>是一个可变的变量，可以被修改，第二个<code>mut</code>作为了它的类型，表示它的引用类型可以修改。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本章覆盖有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如何定义程序/函数,如何调用&lt;/li&gt;
&lt;li&gt;同名函数&lt;/li&gt;
&lt;li&gt;函数的参数如何传递，by-value还是by-reference&lt;/li&gt;
&lt;li&gt;函数的返回值&lt;/li&gt;
&lt;li&gt;如何提前退出一个函数&lt;/li&gt;
&lt;li&gt;对象的引用如何控制&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    <content src="https://galudisu.info/%3Cp%3E%E6%9C%AC%E7%AB%A0%E8%A6%86%E7%9B%96%E6%9C%89%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E5%A6%82%E4%BD%95%E5%AE%9A%E4%B9%89%E7%A8%8B%E5%BA%8F/%E5%87%BD%E6%95%B0,%E5%A6%82%E4%BD%95%E8%B0%83%E7%94%A8%3C/li%3E%3Cli%3E%E5%90%8C%E5%90%8D%E5%87%BD%E6%95%B0%3C/li%3E%3Cli%3E%E5%87%BD%E6%95%B0%E7%9A%84%E5%8F%82%E6%95%B0%E5%A6%82%E4%BD%95%E4%BC%A0%E9%80%92%EF%BC%8Cby-value%E8%BF%98%E6%98%AFby-reference%3C/li%3E%3Cli%3E%E5%87%BD%E6%95%B0%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E6%8F%90%E5%89%8D%E9%80%80%E5%87%BA%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%3C/li%3E%3Cli%3E%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%BC%95%E7%94%A8%E5%A6%82%E4%BD%95%E6%8E%A7%E5%88%B6%3C/li%3E%3C/ul%3E%3Cspan%20id=%22more%22%3E%3C/span%3E%3Ch2%20id=%22Defining-and-Invoking-a-Function%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Defining-and-Invoking-a-Function%22%3E%C2%B6%3C/a%3EDefining%20and%20Invoking%20a%20Function%3C/h2%3E%3Cp%3E%E5%87%BD%E6%95%B0%E7%9A%84%E5%AE%9A%E4%B9%89%E6%AF%94%E8%BE%83%E7%AE%80%E5%8D%95%EF%BC%8C%E4%BB%A5%3Ccode%3Efn%3C/code%3E%E5%85%B3%E9%94%AE%E5%AD%97%E5%BC%80%E5%A4%B4%EF%BC%8C%E5%87%BD%E6%95%B0%E5%90%8D+%E5%8F%82%E6%95%B0+%E5%9D%97%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Efoo%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22comment%22%3E/%20your%20code%20here%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E4%B8%AA%E5%9D%97%E6%98%AF%E5%87%BD%E6%95%B0%E7%9A%84%E2%80%9Cbody%E2%80%9D%EF%BC%8C%E5%AF%B9%E8%BF%99%E4%B8%AAbody%E7%9A%84%E5%A4%84%E7%90%86%E7%A7%B0%E4%B8%BA%E5%87%BD%E6%95%B0%E7%BD%B2%E5%90%8D%E2%80%9Csignature%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%90%8C%E5%A4%A7%E5%A4%9A%E6%95%B0%E8%AF%AD%E8%A8%80%E4%B8%80%E6%A0%B7%EF%BC%8Cmain%E6%96%B9%E6%B3%95/%E5%87%BD%E6%95%B0%E5%BC%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%85%A5%E5%8F%A3%EF%BC%8C%E5%AE%83%E7%94%B1%E6%9C%BA%E5%99%A8%E7%A0%81%E8%B0%83%E7%94%A8%E3%80%82%3C/p%3E%3Cp%3E%E5%92%8CC%E6%9C%89%E7%82%B9%E4%B8%8D%E5%90%8C%E7%9A%84%E6%98%AF%EF%BC%8C%E5%87%BD%E6%95%B0%E7%9A%84%E5%AE%9A%E4%B9%89%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%9C%A8%E5%85%B6%E5%AE%83%E5%87%BD%E6%95%B0%E7%9A%84body%E5%86%85%E7%9B%B4%E6%8E%A5%E5%AE%9A%E4%B9%89%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef1%3C/span%3E()%20&amp;#123;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;1&amp;quot;%3C/span%3E);%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Emain%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef1%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef2%3C/span%3E()%20&amp;#123;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;2&amp;quot;%3C/span%3E);%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef2%3C/span%3E();%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef1%3C/span%3E();%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef2%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%B3%A8%E6%84%8F%EF%BC%8C%E5%9D%97%E5%AE%9A%E4%B9%89%E7%9A%84%E5%87%BD%E6%95%B0%E4%BD%9C%E7%94%A8%E8%8C%83%E5%9B%B4%E4%BB%85%E5%9C%A8%E5%85%B6%E5%9D%97%E5%86%85%E3%80%82%3C/p%3E%3Ch2%20id=%22Functions-Defined-After-Their-Use%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Functions-Defined-After-Their-Use%22%3E%C2%B6%3C/a%3EFunctions%20Defined%20After%20Their%20Use%3C/h2%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E4%BB%A3%E7%A0%81%E6%98%AF%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3Ea;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E3%3C/span%3E;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%9B%A0%E4%B8%BA%E5%8F%98%E9%87%8F%E5%9C%A8%E5%AE%9A%E4%B9%89%E5%89%8D%E8%A2%AB%E8%B0%83%E7%94%A8%E4%BA%86%EF%BC%9B%E5%AF%B9%E4%BA%8E%E5%87%BD%E6%95%B0%EF%BC%8C%E5%8F%AA%E8%A6%81%E5%9C%A8%E4%BD%9C%E7%94%A8%E8%8C%83%E5%9B%B4%E5%86%85%EF%BC%8C%E9%A1%BA%E5%BA%8F%E4%B8%8D%E5%8F%97%E5%BD%B1%E5%93%8D%EF%BC%8C%E4%B8%8B%E9%9D%A2%E6%98%AF%E6%9C%89%E6%95%88%E7%9A%84%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E()%20&amp;#123;&amp;#125;;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Ch2%20id=%22Functions-Shadowing-Other-Functions%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Functions-Shadowing-Other-Functions%22%3E%C2%B6%3C/a%3EFunctions%20Shadowing%20Other%20Functions%3C/h2%3E%3Cp%3E%E5%89%8D%E9%9D%A2%E8%AF%B4%E8%BF%87%EF%BC%8C%E5%8F%98%E9%87%8F%E5%A3%B0%E6%98%8E%E5%A6%82%E6%9E%9C%E5%90%8C%E5%90%8D%EF%BC%8C%E5%8F%98%E9%87%8F%E4%BC%9A%E8%A2%AB%E6%8A%95%E5%BD%B1%E3%80%82%E4%BD%86%E6%98%AF%E5%87%BD%E6%95%B0%E5%8D%B4%E4%B8%8D%E8%83%BD%E8%BF%99%E6%A0%B7%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E()%20&amp;#123;&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E()%20&amp;#123;&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E6%A0%B7%E5%86%99%E4%BC%9A%E6%9C%89%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%EF%BC%9A%E2%80%9Cthe%20name%20%3Ccode%3Ef%3C/code%3E%20is%20defined%20multiple%20times%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%8F%AA%E6%9C%89%E5%9C%A8%E4%B8%8D%E5%90%8C%E7%9A%84%E5%9D%97%E9%87%8C%E9%9D%A2%EF%BC%8C%E6%89%8D%E5%8F%AF%E4%BB%A5%E5%AE%9A%E4%B9%89%E5%A4%9A%E4%B8%AA%E5%90%8C%E5%90%8D%E7%9A%84%E5%87%BD%E6%95%B0%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E()%20&amp;#123;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;a&amp;quot;%3C/span%3E);%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E();%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E()%20&amp;#123;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;b&amp;quot;%3C/span%3E);%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E();%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E();%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E8%BE%93%E5%87%BA%EF%BC%9A%E2%80%9Caab%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%B9%B6%E4%B8%94%E4%B8%8D%E8%83%BD%E5%86%8D%E8%AF%AD%E5%8F%A5%E5%9D%97%E5%A4%96%E9%83%A8%E8%B0%83%E7%94%A8%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E()%20&amp;#123;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E();%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BC%96%E8%AF%91%E5%99%A8%E4%BC%9A%E6%8A%B1%E6%80%A8%EF%BC%9A%E2%80%9Ccannot%20find%20function%20%3Ccode%3Ef%3C/code%3E%20in%20this%20scope%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E6%9C%80%E5%90%8E%EF%BC%8C%E5%87%BD%E6%95%B0%E6%8A%95%E5%BD%B1%EF%BC%8C%E4%BB%85%E8%83%BD%E6%8A%95%E5%BD%B1%E8%AF%AD%E5%8F%A5%E5%9D%97%E5%A4%96%E9%83%A8%E5%AE%9A%E4%B9%89%E7%9A%84%E3%80%82%E4%B8%8B%E9%9D%A2%E6%98%AF%E5%AE%8C%E6%95%B4%E4%BE%8B%E5%AD%90%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E()%20&amp;#123;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;1&amp;quot;%3C/span%3E);%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Emain%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E();%20%3Cspan%20class=%22comment%22%3E/%20Prints%202%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Efn%3C/span%3E();%20%3Cspan%20class=%22comment%22%3E/%20Prints%203%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E()%20&amp;#123;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;3&amp;quot;%3C/span%3E);%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E();%20%3Cspan%20class=%22comment%22%3E/%20Prints%202%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E()%20&amp;#123;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;2&amp;quot;%3C/span%3E);%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E6%8C%89%E7%85%A7%E7%BC%96%E8%AF%91%E5%99%A8%E7%9A%84%E6%80%9D%E8%B7%AF%EF%BC%8C%E5%BD%93%E8%B0%83%E7%94%A8%3Ccode%3Efn()%3C/code%3E%E6%97%B6%EF%BC%8C%E4%BC%9A%E5%85%88%E6%89%BE%E4%B8%B4%E8%BF%91%E7%9A%84%E5%9D%97%E4%BD%9C%E7%94%A8%E8%8C%83%E5%9B%B4%EF%BC%8C%E5%A6%82%E6%9E%9C%E6%9C%89%EF%BC%8C%E5%88%99%E8%B0%83%E7%94%A8%E6%9C%80%E8%BF%91%E8%B7%AF%E5%BE%84%E4%B8%8A%E7%9A%84%E5%87%BD%E6%95%B0%E3%80%82%E5%A6%82%E6%9E%9C%E6%B2%A1%E6%9C%89%EF%BC%8C%E5%88%99%E5%BE%80%E4%B8%8B%E4%B8%80%E4%B8%AA%E8%8A%82%E7%82%B9%E5%AF%BB%E6%89%BE(%E7%B1%BB%E4%BC%BC%E4%BA%8E%E6%A0%91%E7%9A%84%E6%B7%B1%E5%BA%A6%E6%90%9C%E7%B4%A2)%E3%80%82%3C/p%3E%3Ch2%20id=%22Passing-Arguments-to-a-Function%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Passing-Arguments-to-a-Function%22%3E%C2%B6%3C/a%3EPassing%20Arguments%20to%20a%20Function%3C/h2%3E%3Cp%3E%E5%8F%AF%E4%BB%A5%E5%B0%86%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E7%BB%99%E5%87%BD%E6%95%B0%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eprint_sum%3C/span%3E(addend1:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E,%20addend2:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20+%20&amp;#123;&amp;#125;%20=%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20addend1,%20addend2,%20addend1%20+%20andend2);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Eprint_sum%3C/span%3E(%3Cspan%20class=%22number%22%3E3%3C/span%3E.,%20%3Cspan%20class=%22number%22%3E5%3C/span%3E.);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Eprint_sum%3C/span%3E(%3Cspan%20class=%22number%22%3E3.2%3C/span%3E,%20%3Cspan%20class=%22number%22%3E5.1%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E3%20+%205%20=%208%3Cbr%3E3.2%20+%205.1%20=%208.3%3C/p%3E%3Cp%3E%E7%8E%B0%E5%9C%A8%E5%85%88%E6%9D%A5%E7%90%86%E8%A7%A3%E4%B8%8B%E5%9C%86%E6%8B%AC%E5%8F%B7(parentheses)%E7%9A%84%E7%94%A8%E6%B3%95%EF%BC%81%E5%9C%A8%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E5%AE%9A%E4%B9%89%EF%BC%8C%E9%97%AD%E5%90%88%E7%9D%80%E5%8F%82%E6%95%B0%E5%AE%9A%E4%B9%89%E5%88%97%E8%A1%A8%EF%BC%9B%E8%AF%A5%E9%97%AD%E5%90%88%E5%8F%82%E6%95%B0%E5%9C%A8%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E6%97%B6%E4%BC%A0%E9%80%92%E3%80%82%3C/p%3E%3Cp%3E%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E7%9A%84%E5%AE%9A%E4%B9%89%E5%92%8C%E5%8F%98%E9%87%8F%E7%9A%84%E5%AE%9A%E4%B9%89%E7%B1%BB%E4%BC%BC%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E4%B8%8B%E9%9D%A2%E4%BB%A3%E7%A0%81%E4%BC%9A%E8%A2%AB%E8%A7%A3%E6%9E%90%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eaddend1%3C/span%3E:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E3%3C/span%3E.;%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eaddend2%3C/span%3E:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E5%3C/span%3E.;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20+%20&amp;#123;&amp;#125;%20=%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20addend1,%20addend2,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eaddend1%20+%20addend2);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eaddend1%3C/span%3E:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E3.2%3C/span%3E;%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eaddend2%3C/span%3E:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E5.1%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20+%20&amp;#123;&amp;#125;%20=%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20addend1,%20addend2,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eaddend1%20+%20addend2);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E5%AE%9A%E4%B9%89%E5%92%8C%E5%8F%98%E9%87%8F%E5%AE%9A%E4%B9%89%E7%9A%84%E4%B8%BB%E8%A6%81%E4%B8%8D%E5%90%8C%E6%98%AF%EF%BC%8C%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E7%9A%84%E5%AE%9A%E4%B9%89%EF%BC%8C%E7%B1%BB%E5%9E%8B%E6%98%AF%E5%BF%85%E9%A1%BB%E7%9A%84%EF%BC%8C%E5%AE%83%E4%B8%8D%E8%83%BD%E4%BE%9D%E8%B5%96%E4%BA%8E%E7%B1%BB%E5%9E%8B%E6%8E%A8%E6%96%AD%E3%80%82%3C/p%3E%3Cp%3E%E7%B1%BB%E5%9E%8B%E6%8E%A8%E6%96%AD%E6%80%BB%E6%98%AF%E8%A2%AB%E7%94%A8%E4%BA%8E%E7%BC%96%E8%AF%91%E5%99%A8%E6%A3%80%E6%9F%A5%EF%BC%8C%E7%A1%AE%E4%BF%9D%E6%8E%A5%E6%94%B6%E7%9A%84%E5%8F%82%E6%95%B0%E6%98%AF%E5%AE%9E%E9%99%85%E5%8F%82%E6%95%B0%E7%9A%84%E5%A3%B0%E6%98%8E%E7%B1%BB%E5%9E%8B%E3%80%82%E6%AD%A3%E6%98%AF%E8%BF%99%E6%A0%B7%EF%BC%8C%E4%B8%8B%E9%9D%A2%E4%BB%A3%E7%A0%81%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E(a:%20%3Cspan%20class=%22type%22%3Ei16%3C/span%3E)%20&amp;#123;&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(%3Cspan%20class=%22number%22%3E3%3C/span%3E.);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(%3Cspan%20class=%22number%22%3E3u16%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(%3Cspan%20class=%22number%22%3E3i16%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(%3Cspan%20class=%22number%22%3E3%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%BC%9A%E5%8F%91%E7%94%9F%E9%94%99%E8%AF%AF%EF%BC%8C%E5%9B%A0%E4%B8%BA%E6%B5%AE%E7%82%B9%E7%B1%BB%E5%9E%8B%E4%B8%8D%E8%83%BD%E4%BC%A0%E9%80%92%E7%BB%99%E4%B8%80%E4%B8%AA%E6%95%B4%E5%9E%8B%E5%8F%82%E6%95%B0%EF%BC%9B%E7%AC%AC%E4%BA%8C%E4%B8%AA%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E4%B9%9F%E4%B8%80%E6%A0%B7%EF%BC%8Cu16%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%80%BC%E4%B8%8D%E8%83%BD%E4%BC%A0%E9%80%92%E7%BB%99%E4%B8%80%E4%B8%AAi16%E7%9A%84%E5%8F%82%E6%95%B0%E3%80%82%3C/p%3E%3Cp%3E%E6%9C%80%E5%90%8E%E4%B8%A4%E4%B8%AA%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E6%98%AF%E8%BF%90%E8%A1%8C%E7%9A%84%E3%80%82%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E7%AC%AC%E4%B8%89%E5%A4%84%E8%B0%83%E7%94%A8%E4%BC%A0%E9%80%92%E4%BA%86%E6%AD%A3%E7%A1%AE%E7%9A%84%E5%8F%82%E6%95%B0%E7%B1%BB%E5%9E%8B%EF%BC%9B%E7%AC%AC%E5%9B%9B%E5%A4%84%E8%B0%83%E7%94%A8%EF%BC%8C%E5%AE%83%E8%A2%AB%E7%B1%BB%E5%9E%8B%E6%8E%A8%E6%96%AD%EF%BC%8C%E4%BC%A0%E9%80%92%E4%BA%86unconstrained%20integer%E7%B1%BB%E5%9E%8B%E3%80%82%3C/p%3E%3Ch2%20id=%22Passing-Arguments-by-Value%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Passing-Arguments-by-Value%22%3E%C2%B6%3C/a%3EPassing%20Arguments%20by%20Value%3C/h2%3E%3Cp%3E%E6%B3%A8%E6%84%8F%E5%8F%82%E6%95%B0%E4%B8%8D%E6%98%AF%E7%AE%80%E5%8D%95%E4%BC%A0%E9%80%92%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%96%B0%E5%90%8D%EF%BC%8C%E5%AE%83%E4%B8%8D%E6%98%AF%E5%88%AB%E5%90%8D%EF%BC%9B%E5%AE%9E%E9%99%85%E4%B8%8A%E4%BB%96%E4%BB%AC%E6%98%AF%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%8B%B7%E8%B4%9D%E3%80%82%E8%AF%A5%E6%8B%B7%E8%B4%9D%E5%9C%A8%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E6%97%B6%E8%A2%AB%E5%88%9B%E5%BB%BA%EF%BC%8C%E5%87%BD%E6%95%B0%E7%BB%93%E6%9D%9F%E5%B9%B6return%E7%BB%99%E8%B0%83%E7%94%A8%E8%80%85%E6%97%B6%E6%8B%B7%E8%B4%9D%E8%A2%AB%E9%94%80%E6%AF%81%E3%80%82%E4%B8%8B%E9%9D%A2%E4%BE%8B%E5%AD%90%E9%98%90%E6%98%8E%E8%BF%99%E4%B8%AA%E6%A6%82%E5%BF%B5%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eprint_double%3C/span%3E(%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20x:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ex%20*=%20%3Cspan%20class=%22number%22%3E2%3C/span%3E.;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20x);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ex%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E4%3C/span%3E.;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Eprint_double%3C/span%3E(x);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20x);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E8%BE%93%E5%87%BA%EF%BC%9A%E2%80%9C8%204%E2%80%9D%E3%80%82%3Cbr%3E%E5%8F%98%E9%87%8F%E5%90%8D%E2%80%9Cx%E2%80%9D%E8%A2%AB%E5%A3%B0%E6%98%8E%E5%B9%B6%E5%88%9D%E5%A7%8B%E5%8C%96%EF%BC%8C%E7%84%B6%E5%90%8E%E4%BC%A0%E9%80%92%E7%BB%99%E5%87%BD%E6%95%B0%E2%80%9Cprint_double%E2%80%9D%EF%BC%8C%E8%AF%A5%E5%87%BD%E6%95%B0%E5%8C%85%E5%90%AB%E4%B8%80%E4%B8%AA%E5%8F%82%E6%95%B0%E2%80%9Cx%E2%80%9D%EF%BC%8C%E5%87%BD%E6%95%B0%E6%89%A7%E8%A1%8C%E6%AD%A3%E7%A1%AE%E5%90%8E%E8%BF%94%E5%9B%9E%E7%BB%99%E8%B0%83%E7%94%A8%E8%80%85%E3%80%82%3C/p%3E%3Cp%3E%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E4%B8%8D%E6%98%AF%20%3Cstrong%3E%E5%8F%98%E9%87%8F%3C/strong%3E%20%E4%BC%A0%E9%80%92%E7%BB%99%E5%87%BD%E6%95%B0%EF%BC%8C%E4%BA%8C%E6%98%AF%E5%8F%98%E9%87%8F%E7%9A%84%20%3Cstrong%3E%E5%80%BC%3C/strong%3E%20%E3%80%82%E5%AE%83%E7%A7%B0%E4%B8%BA%20%3Cstrong%3E%E5%80%BC%E4%BC%A0%E9%80%92%3C/strong%3E%20%EF%BC%8C%E5%92%8CC%E8%AF%AD%E8%A8%80%E7%B1%BB%E4%BC%BC%E3%80%82%E5%8F%98%E9%87%8F%E2%80%9Cx%E2%80%9D%E7%9A%84%E5%80%BC%E8%A2%AB%E7%94%A8%E4%BA%8E%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B8%80%E4%B8%AA%E6%96%B0%E5%8F%98%E9%87%8F%EF%BC%8C%E8%BF%99%E4%B8%AA%E6%96%B0%E5%8F%98%E9%87%8F%E4%B8%BA%E5%87%BD%E6%95%B0%E7%9A%84%E5%8F%82%E6%95%B0%E3%80%82%E6%96%B0%E7%9A%84%E5%8F%98%E9%87%8F%E8%A2%AB%E4%BF%AE%E6%94%B9%EF%BC%8C%E5%B9%B6%E5%9C%A8%E5%87%BD%E6%95%B0%E4%BD%93%E5%86%85%E6%89%93%E5%8D%B0%EF%BC%8C%E6%9C%80%E5%90%8E%E7%94%B1%E5%87%BD%E6%95%B0%E7%BB%93%E6%9D%9F%E9%94%80%E6%AF%81%E3%80%82%E8%AF%A5%E5%87%BD%E6%95%B0%E7%9A%84%E8%B0%83%E7%94%A8%E8%80%85%E7%9A%84%E5%8F%98%E9%87%8F%E5%B9%B6%E6%B2%A1%E6%9C%89%E5%8F%91%E7%94%9F%E6%94%B9%E5%8F%98%E3%80%82%3C/p%3E%3Cp%3E%E6%B3%A8%E6%84%8F%E8%BF%99%E9%87%8C%E7%9A%84%E5%87%BD%E6%95%B0%E7%AD%BE%E5%90%8D%E2%80%9Cprint_double%E2%80%9D%EF%BC%8C%E5%9C%A8%E5%8F%82%E6%95%B0%E2%80%9Cx%E2%80%9D%E5%89%8D%E6%9C%89%E5%85%B3%E9%94%AE%E5%AD%97%E2%80%9C%3Ccode%3Emut%3C/code%3E%E2%80%9D%E3%80%82%E5%AE%83%E5%85%81%E8%AE%B8%E5%87%BD%E6%95%B0%E4%BD%93%E5%86%85%E7%AC%AC%E4%B8%80%E6%9D%A1%E8%AF%AD%E5%8F%A5%EF%BC%9B%E8%87%B3%E6%AD%A4%EF%BC%8C%E8%AF%A5%E8%AF%AD%E5%8F%A5%E4%BB%85%E6%94%B9%E5%8F%98%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E7%9A%84%E5%80%BC%EF%BC%8C%E5%87%BD%E6%95%B0%E5%A4%96%E9%83%A8%E7%9A%84%E5%8F%98%E9%87%8F%E5%B9%B6%E6%B2%A1%E6%9C%89%E5%8F%91%E7%94%9F%E6%94%B9%E5%8F%98%EF%BC%8C%E6%89%80%E4%BB%A5%E5%A4%96%E9%83%A8%E7%9A%84%E2%80%9Cx%E2%80%9D%E4%B8%8D%E9%9C%80%E8%A6%81%E7%94%A8%3Ccode%3Emut%3C/code%3E%E5%85%B3%E9%94%AE%E5%AD%97%E4%BF%AE%E9%A5%B0%E3%80%82%3C/p%3E%3Ch2%20id=%22Returning-a-Value-from-a-Function%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Returning-a-Value-from-a-Function%22%3E%C2%B6%3C/a%3EReturning%20a%20Value%20from%20a%20Function%3C/h2%3E%3Cp%3E%E5%87%BD%E6%95%B0%E8%8B%A5%E8%A6%81%E7%BB%99%E8%B0%83%E7%94%A8%E8%80%85%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%E7%BB%93%E6%9E%9C%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edouble%3C/span%3E(x:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E%20&amp;#123;%20x%20*%20%3Cspan%20class=%22number%22%3E2%3C/span%3E.%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Edouble%3C/span%3E(%3Cspan%20class=%22number%22%3E17.3%3C/span%3E));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%94%E5%9B%9E%E5%80%BC%E5%AE%9E%E9%99%85%E4%B8%8A%E6%98%AF%E5%87%BD%E6%95%B0%E4%BD%93%E8%87%AA%E8%BA%AB%E3%80%82%E5%9B%A0%E4%B8%BA%E5%87%BD%E6%95%B0%E4%BD%93%E6%98%AF%E4%B8%AA%E5%9D%97%EF%BC%8C%E6%89%80%E4%BB%A5%E5%AE%83%E7%9A%84%E5%80%BC%E5%B0%B1%E6%98%AF%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%80%BC%EF%BC%8C%E5%90%A6%E5%88%99%E5%B0%B1%E6%98%AF%E4%B8%80%E4%B8%AA%E7%A9%BAtuple%20()%E3%80%82%3C/p%3E%3Cp%3E%E5%87%BD%E6%95%B0%E7%9A%84%E8%BF%94%E5%9B%9E%E7%B1%BB%E5%9E%8B%EF%BC%8C%E5%9C%A8C%E8%AF%AD%E8%A8%80%E5%86%99%E5%9C%A8%E5%87%BD%E6%95%B0%E5%90%8D%E5%89%8D%E9%9D%A2%EF%BC%8C%E5%9C%A8Rust%E5%88%99%E5%86%99%E5%9C%A8%E5%90%8E%E9%9D%A2%EF%BC%8C%E5%B9%B6%E7%94%B1%E7%AC%A6%E5%8F%B7%E2%80%9C%3Ccode%3E-&amp;gt;%3C/code%3E%E2%80%9D%E9%9A%94%E7%A6%BB%E3%80%82%3C/p%3E%3Cp%3E%E5%A6%82%E6%9E%9C%E6%B2%A1%E6%9C%89%E6%8C%87%E5%AE%9A%E8%BF%94%E5%9B%9E%E7%B1%BB%E5%9E%8B%EF%BC%8C%E9%BB%98%E8%AE%A4%E6%98%AF%E7%A9%BAtuple%EF%BC%8C%E5%8D%B3%E5%89%8D%E9%9D%A2%E8%AF%B4%E7%9A%84%E2%80%9C()%E2%80%9D%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef1%3C/span%3E(x:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20&amp;#123;&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef2%3C/span%3E(x:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20()%20&amp;#123;&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%87%BD%E6%95%B0%E4%BD%93%E7%9A%84%E7%B1%BB%E5%9E%8B%EF%BC%8C%E5%BF%85%E9%A1%BB%E4%B8%8E%E5%87%BD%E6%95%B0%E7%AD%BE%E5%90%8D%E6%8C%87%E5%AE%9A%E7%9A%84%E7%B1%BB%E5%9E%8B%E7%9B%B8%E5%90%8C%EF%BC%8C%E6%88%96%E8%80%85%E6%97%A0%E7%AC%A6%E5%8F%B7%E7%B1%BB%E5%9E%8B%E5%8F%AF%E4%BB%A5%E7%BA%A6%E6%9D%9F%E7%9A%84%E7%B1%BB%E5%9E%8B%E3%80%82%E5%9B%A0%E6%AD%A4%E4%B8%8B%E9%9D%A2%E4%BB%A3%E7%A0%81%E6%98%AF%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef1%3C/span%3E()%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22number%22%3E4.5%3C/span%3E;%20%3Cspan%20class=%22string%22%3E&amp;quot;abc&amp;quot;%3C/span%3E;%20%3Cspan%20class=%22number%22%3E73i32%3C/span%3E%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef2%3C/span%3E()%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22number%22%3E4.5%3C/span%3E;%20%3Cspan%20class=%22string%22%3E&amp;quot;abc&amp;quot;%3C/span%3E;%20%3Cspan%20class=%22number%22%3E73%3C/span%3E%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef3%3C/span%3E()%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22number%22%3E4.5%3C/span%3E;%20%3Cspan%20class=%22string%22%3E&amp;quot;abc&amp;quot;%3C/span%3E;%20%3Cspan%20class=%22number%22%3E73%3C/span%3E%20+%20%3Cspan%20class=%22number%22%3E100%3C/span%3E%20&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E4%BB%A3%E7%A0%81%E4%B8%8D%E5%90%88%E6%B3%95%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef1%3C/span%3E()%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22number%22%3E4.5%3C/span%3E;%20%3Cspan%20class=%22string%22%3E&amp;quot;abc&amp;quot;%3C/span%3E;%20%3Cspan%20class=%22literal%22%3Efalse%3C/span%3E%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef2%3C/span%3E()%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22number%22%3E4.5%3C/span%3E;%20%3Cspan%20class=%22string%22%3E&amp;quot;abc&amp;quot;%3C/span%3E;%20()%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef3%3C/span%3E()%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22number%22%3E4.5%3C/span%3E;%20%3Cspan%20class=%22string%22%3E&amp;quot;abc&amp;quot;%3C/span%3E;%20&amp;#123;&amp;#125;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef4%3C/span%3E()%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22number%22%3E4.5%3C/span%3E;%20%3Cspan%20class=%22string%22%3E&amp;quot;abc&amp;quot;%3C/span%3E;%20&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Ch2%20id=%22Early-Exit%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Early-Exit%22%3E%C2%B6%3C/a%3EEarly%20Exit%3C/h2%3E%3Cp%3E%E8%A6%81%E8%AE%A9%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E4%BB%8E%E6%9F%90%E6%9D%A1%E4%B8%AD%E9%97%B4%E8%AF%AD%E5%8F%A5%E7%BB%93%E6%9D%9F%EF%BC%8C%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%3Ccode%3Ereturn%3C/code%3E%E5%85%B3%E9%94%AE%E5%AD%97%E8%BF%94%E5%9B%9E%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E(x:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20x%20&amp;lt;=%20%3Cspan%20class=%22number%22%3E0%3C/span%3E.%20&amp;#123;%20%3Cspan%20class=%22keyword%22%3Ereturn%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E.;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ex%20+%20%3Cspan%20class=%22number%22%3E3%3C/span%3E.%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(%3Cspan%20class=%22number%22%3E1%3C/span%3E.),%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(-%3Cspan%20class=%22number%22%3E1%3C/span%3E.));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%3Ccode%3Ereturn%3C/code%3E%E5%85%B3%E9%94%AE%E5%AD%97%E5%92%8CC%E8%AF%AD%E8%A8%80%E7%B1%BB%E4%BC%BC%EF%BC%8C%E4%B8%8D%E5%90%8C%E7%9A%84%E6%98%AF%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E8%AF%AD%E5%8F%A5%E5%8F%AF%E4%BB%A5%E4%B8%8D%E5%86%99%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E(x:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20x%20&amp;lt;=%20%3Cspan%20class=%22number%22%3E0%3C/span%3E.%20&amp;#123;%20%3Cspan%20class=%22keyword%22%3Ereturn%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E.;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ereturn%3C/span%3E%20x%20+%20%3Cspan%20class=%22number%22%3E3%3C/span%3E.;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(%3Cspan%20class=%22number%22%3E1%3C/span%3E.),%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(-%3Cspan%20class=%22number%22%3E1%3C/span%3E.));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%B8%8A%E9%9D%A2%E7%9A%84%E5%86%99%E6%B3%95%E4%B8%8D%E6%98%AF%E4%B8%A5%E8%B0%A8%E7%9A%84%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E(x:%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20x%20&amp;lt;=%20%3Cspan%20class=%22number%22%3E0%3C/span%3E.%20&amp;#123;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E.%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20&amp;#123;%20x%20+%20%3Cspan%20class=%22number%22%3E3%3C/span%3E.%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(%3Cspan%20class=%22number%22%3E1%3C/span%3E.),%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(-%3Cspan%20class=%22number%22%3E1%3C/span%3E.));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%A6%82%E6%9E%9C%E5%87%BD%E6%95%B0%E7%AD%BE%E5%90%8D%E6%8C%87%E5%AE%9A%E7%9A%84%E6%98%AF%E7%A9%BAtuple%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%9C%89%E5%A4%9A%E7%A7%8D%E5%86%99%E6%B3%95%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E(x:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20x%20&amp;lt;=%20%3Cspan%20class=%22number%22%3E0%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22keyword%22%3Ereturn%3C/span%3E;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20x%20==%20%3Cspan%20class=%22number%22%3E4%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ereturn%3C/span%3E%20();%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20x%20==%20%3Cspan%20class=%22number%22%3E7%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22keyword%22%3Ereturn%3C/span%3E%20&amp;#123;&amp;#125;;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20x);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E(%3Cspan%20class=%22number%22%3E5%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%BB%BB%E4%BD%95%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E5%8F%AF%E8%A2%AB%E7%9C%8B%E5%81%9A%E4%B8%80%E4%B8%AA%E6%9C%89%E6%95%88%E8%AF%AD%E5%8F%A5%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E()%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22number%22%3E3%3C/span%3E%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E();%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E9%87%8C%EF%BC%8C%E8%BF%94%E5%9B%9E%E5%80%BC%E8%A2%AB%E5%BF%BD%E7%95%A5%E5%B9%B6%E7%AB%8B%E5%8D%B3%E9%94%80%E6%AF%81%E3%80%82%3C/p%3E%3Cp%3E%E7%9B%B8%E5%8F%8D%EF%BC%8C%E5%A6%82%E6%9E%9C%E8%BF%94%E5%9B%9E%E5%80%BC%E8%A2%AB%E4%BD%BF%E7%94%A8%EF%BC%8C%E5%A6%82%E4%B8%8B%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef%3C/span%3E()%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20&amp;#123;%20%3Cspan%20class=%22number%22%3E3%3C/span%3E%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3E_a%3C/span%3E:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef%3C/span%3E();%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%AE%83%E5%BF%85%E9%A1%BB%E6%98%AF%E4%B8%80%E4%B8%AA%E6%AD%A3%E7%A1%AE%E7%9A%84%E7%B1%BB%E5%9E%8B%E3%80%82%3C/p%3E%3Ch2%20id=%22Returning-Several-Values%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Returning-Several-Values%22%3E%C2%B6%3C/a%3EReturning%20Several%20Values%3C/h2%3E%3Cp%3E%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8tuple%E8%BF%94%E5%9B%9E%E5%A4%9A%E4%B8%AA%E5%80%BC%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edivide%3C/span%3E(dividend:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%20divisor:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20(%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E(dividend%20/%20divisor,%20dividend%20%%20divisor)%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Edivide%3C/span%3E(%3Cspan%20class=%22number%22%3E50%3C/span%3E,%20%3Cspan%20class=%22number%22%3E11%3C/span%3E));%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E8%BE%93%E5%87%BA%E2%80%9C(4,%206)%E2%80%9D%3C/p%3E%3Cp%3E%E6%88%96%E8%80%85%E4%BD%A0%E5%8F%AF%E4%BB%A5%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AAenum,%20struct,%20tuple%20struct,%20array,%20vector%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eenum%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EE%3C/span%3E%20&amp;#123;%20E1,%20E2%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ES%3C/span%3E%20&amp;#123;%20a:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%20b:%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ETS%3C/span%3E%20(%3Cspan%20class=%22type%22%3Ef64%3C/span%3E,%20%3Cspan%20class=%22type%22%3Echar%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef1%3C/span%3E()%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20E%20&amp;#123;%20E::E2%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef2%3C/span%3E()%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20S%20&amp;#123;%20S%20&amp;#123;%20a:%20%3Cspan%20class=%22number%22%3E49%3C/span%3E,%20b:%20%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E%20&amp;#125;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef3%3C/span%3E()%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20TS%20&amp;#123;%20%3Cspan%20class=%22title%20function_%20invoke__%22%3ETS%3C/span%3E%20(%3Cspan%20class=%22number%22%3E4.7%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;w&amp;#x27;%3C/span%3E)%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef4%3C/span%3E()%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20[%3Cspan%20class=%22type%22%3Ei16%3C/span%3E;%20%3Cspan%20class=%22number%22%3E4%3C/span%3E]%20&amp;#123;%20[%3Cspan%20class=%22number%22%3E7%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E2%3C/span%3E,%20%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20%3Cspan%20class=%22number%22%3E19%3C/span%3E]%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ef5%3C/span%3E()%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20%3Cspan%20class=%22type%22%3EVec%3C/span%3E&amp;lt;%3Cspan%20class=%22type%22%3Ei64%3C/span%3E&amp;gt;%20&amp;#123;%20%3Cspan%20class=%22built_in%22%3Evec!%3C/span%3E[%3Cspan%20class=%22number%22%3E12000%3C/span%3E]%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22keyword%22%3Ematch%3C/span%3E%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef1%3C/span%3E()%20&amp;#123;%20E::E1%20=&amp;gt;%20%3Cspan%20class=%22number%22%3E1%3C/span%3E,%20_%20=&amp;gt;%20-%3Cspan%20class=%22number%22%3E1%3C/span%3E%20&amp;#125;);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef2%3C/span%3E().a);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef3%3C/span%3E().%3Cspan%20class=%22number%22%3E0%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef4%3C/span%3E()[%3Cspan%20class=%22number%22%3E0%3C/span%3E]);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ef5%3C/span%3E()[%3Cspan%20class=%22number%22%3E0%3C/span%3E]);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E8%BE%93%E5%87%BA%E2%80%9C&amp;quot;-1%2049%204.7%207%2012000%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E8%A7%A3%E6%9E%90%E4%B8%8B%E3%80%82%3C/p%3E%3Cp%3E%E5%87%BD%E6%95%B0%3Ccode%3Ef1%3C/code%3E%E8%B0%83%E7%94%A8%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%E6%9E%9A%E4%B8%BEE2%EF%BC%8C%E5%B9%B6%E7%94%A8%E4%BA%8E%E5%8C%B9%E9%85%8DE1%EF%BC%8C%E6%B2%A1%E6%9C%89%E5%8C%B9%E9%85%8D%EF%BC%8C%E8%BF%94%E5%9B%9E%E9%BB%98%E8%AE%A4%E5%80%BC-1%E3%80%82%3Cbr%3E%E5%87%BD%E6%95%B0%3Ccode%3Ef2%3C/code%3E%E8%B0%83%E7%94%A8%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%E7%BB%93%E6%9E%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%B9%B6%E8%AE%BF%E9%97%AE%E8%AF%A5%E7%BB%93%E6%9E%84%E7%9A%84field%E3%80%82%3Cbr%3E%E5%87%BD%E6%95%B0%3Ccode%3Ef3%3C/code%3E%E8%B0%83%E7%94%A8%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AAtuple-struct%EF%BC%8C%E9%80%9A%E8%BF%87%E6%95%B0%E5%AD%97identifiered%E8%AE%BF%E9%97%AEfield%E3%80%82%3Cbr%3E%E5%87%BD%E6%95%B0%3Ccode%3Ef4%3C/code%3E%E8%B0%83%E7%94%A8%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%EF%BC%8C%E5%B9%B6%E8%8E%B7%E5%8F%96%E6%95%B0%E7%BB%84%E4%B8%8B%E6%A0%87%E7%9A%84%E5%80%BC%E3%80%82%3Cbr%3E%E5%87%BD%E6%95%B0%3Ccode%3Ef4%3C/code%3E%E8%B0%83%E7%94%A8%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%E5%90%91%E9%87%8F%EF%BC%8C%E5%B9%B6%E8%8E%B7%E5%8F%96%E5%90%91%E9%87%8F%E4%B8%8B%E6%A0%87%E7%9A%84%E5%80%BC%E3%80%82%3C/p%3E%3Ch2%20id=%22How-to-Change-a-Variable-of-the-Caller%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#How-to-Change-a-Variable-of-the-Caller%22%3E%C2%B6%3C/a%3EHow%20to%20Change%20a%20Variable%20of%20the%20Caller%3C/h2%3E%3Cp%3E%E5%81%87%E8%AE%BE%E6%88%91%E4%BB%AC%E8%A6%81%E5%AF%B9%E6%95%B0%E7%BB%84%E4%BD%9C%E5%B9%B3%E6%96%B9%E5%A4%84%E7%90%86%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E5%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E4%3C/span%3E,%20%3Cspan%20class=%22number%22%3E9%3C/span%3E,%20%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E7%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E1%3C/span%3E,%20%3Cspan%20class=%22number%22%3E3%3C/span%3E,%20%3Cspan%20class=%22number%22%3E5%3C/span%3E,%20%3Cspan%20class=%22number%22%3E3%3C/span%3E,%20%3Cspan%20class=%22number%22%3E1%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..%3Cspan%20class=%22number%22%3E10%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20arr[i]%20&amp;lt;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E%20&amp;#123;%20arr[i]%20*=%20%3Cspan%20class=%22number%22%3E2%3C/span%3E;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20arr);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%8E%B0%E5%9C%A8%E8%A6%81%E5%B0%86%E5%85%B6%E5%B0%81%E8%A3%85%E6%88%90%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edouble_negatives%3C/span%3E(%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20a:%20[%3Cspan%20class=%22type%22%3Ei32%3C/span%3E;%20%3Cspan%20class=%22number%22%3E10%3C/span%3E])%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..%3Cspan%20class=%22number%22%3E10%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20a[i]%20&amp;lt;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E%20&amp;#123;%20a[i]%20*=%20%3Cspan%20class=%22number%22%3E2%3C/span%3E;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E5%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E4%3C/span%3E,%20%3Cspan%20class=%22number%22%3E9%3C/span%3E,%20%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E7%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E1%3C/span%3E,%20%3Cspan%20class=%22number%22%3E3%3C/span%3E,%20%3Cspan%20class=%22number%22%3E5%3C/span%3E,%20%3Cspan%20class=%22number%22%3E3%3C/span%3E,%20%3Cspan%20class=%22number%22%3E1%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Edouble_negatives%3C/span%3E(arr);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20arr);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E4%BB%85%E8%BE%93%E5%87%BA%E2%80%9C[5,%20-4,%209,%200,%20-7,%20-1,%203,%205,%203,%201].%E2%80%9D%E3%80%82%E5%B9%B6%E6%B2%A1%E6%9C%89%E8%BE%BE%E5%88%B0%E9%A2%84%E6%9C%9F%E3%80%82%3C/p%3E%3Cp%3E%E5%89%8D%E9%9D%A2%E8%AF%B4%E4%B8%AA%EF%BC%8C%E5%87%BD%E6%95%B0%E7%9A%84%E5%8F%82%E6%95%B0%E6%98%AF%E5%8F%98%E9%87%8F%E7%9A%84%E4%B8%80%E4%B8%AA%E6%8B%B7%E8%B4%9D%EF%BC%8C%E5%9B%A0%E6%AD%A4%E6%B2%A1%E6%9C%89%E5%8A%9E%E6%B3%95%E7%9B%B4%E6%8E%A5%E4%BF%AE%E6%94%B9%E5%A4%96%E9%83%A8%E5%8F%98%E9%87%8F%E3%80%82%E4%BD%A0%E5%8F%AF%E4%BB%A5%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edouble_negatives%3C/span%3E(%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20a:%20[%3Cspan%20class=%22type%22%3Ei32%3C/span%3E;%20%3Cspan%20class=%22number%22%3E10%3C/span%3E])%20%3Cspan%20class=%22punctuation%22%3E-&amp;gt;%3C/span%3E%20[%3Cspan%20class=%22type%22%3Ei32%3C/span%3E;%20%3Cspan%20class=%22number%22%3E10%3C/span%3E]%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..%3Cspan%20class=%22number%22%3E10%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20a[i]%20&amp;lt;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E%20&amp;#123;%20a[i]%20*=%20%3Cspan%20class=%22number%22%3E2%3C/span%3E;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ea%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E5%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E4%3C/span%3E,%20%3Cspan%20class=%22number%22%3E9%3C/span%3E,%20%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E7%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E1%3C/span%3E,%20%3Cspan%20class=%22number%22%3E3%3C/span%3E,%20%3Cspan%20class=%22number%22%3E5%3C/span%3E,%20%3Cspan%20class=%22number%22%3E3%3C/span%3E,%20%3Cspan%20class=%22number%22%3E1%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Earr%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Edouble_negatives%3C/span%3E(arr);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20arr);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E7%A7%8D%E6%96%B9%E6%B3%95%E6%9C%89%E7%82%B9%E9%81%97%E6%86%BE%EF%BC%9A%E6%95%B0%E6%8D%AE%E8%A2%AB%E6%8B%B7%E8%B4%9D%E4%BA%86%E4%B8%A4%E6%AC%A1%EF%BC%8C%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%8F%91%E7%94%9F%E5%9C%A8%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E4%B8%8A%EF%BC%8C%E7%AC%AC%E4%BA%8C%E6%AC%A1%E5%8F%91%E7%94%9F%E5%9C%A8%E8%A6%86%E7%9B%96%E8%B5%8B%E5%80%BC%E4%B8%8A%E3%80%82%E8%BF%99%E7%A7%8D%E6%8B%B7%E8%B4%9D%E4%BC%9A%E9%80%A0%E6%88%90%E9%A2%9D%E5%A4%96%E7%9A%84%E8%AE%A1%E7%AE%97%E6%B6%88%E8%80%97%EF%BC%8C%E5%B9%B6%E4%B8%94%E5%8F%AF%E4%BB%A5%E9%81%BF%E5%85%8D%E7%9A%84%E3%80%82%3C/p%3E%3Ch2%20id=%22Passing-Arguments-by-Reference%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Passing-Arguments-by-Reference%22%3E%C2%B6%3C/a%3EPassing%20Arguments%20by%20Reference%3C/h2%3E%3Cp%3E%E5%87%BD%E6%95%B0%E5%8F%AF%E4%BB%A5%E4%BC%A0%E9%80%92%E8%A2%AB%E4%BC%A0%E5%8F%82%E6%95%B0%E7%9A%84%E5%9C%B0%E5%9D%80%EF%BC%8C%E8%BF%99%E4%B8%AA%E6%96%B9%E5%BC%8F%E7%A7%B0%E4%B8%BA%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edouble_negatives%3C/span%3E(a:%20&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20[%3Cspan%20class=%22type%22%3Ei32%3C/span%3E;%20%3Cspan%20class=%22number%22%3E10%3C/span%3E])%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..%3Cspan%20class=%22number%22%3E10%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20(*a)[i]%20&amp;lt;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E%20&amp;#123;%20(*a)[i]%20*=%20%3Cspan%20class=%22number%22%3E2%3C/span%3E;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Earr%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E5%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E4%3C/span%3E,%20%3Cspan%20class=%22number%22%3E9%3C/span%3E,%20%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E7%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E1%3C/span%3E,%20%3Cspan%20class=%22number%22%3E3%3C/span%3E,%20%3Cspan%20class=%22number%22%3E5%3C/span%3E,%20%3Cspan%20class=%22number%22%3E3%3C/span%3E,%20%3Cspan%20class=%22number%22%3E1%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3Edouble_negatives%3C/span%3E(&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20arr);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;:?&amp;#125;&amp;quot;%3C/span%3E,%20arr);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%AF%A5%E4%BB%A3%E7%A0%81%E6%B2%A1%E6%9C%89%E5%8F%91%E7%94%9F%E6%95%B0%E6%8D%AE%E6%8B%B7%E8%B4%9D%E7%9A%84%E7%8E%B0%E8%B1%A1%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E7%A7%8D%E6%96%B9%E5%BC%8F%E7%A7%B0%E4%B8%BA%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92(by%20reference)%E3%80%82%E5%AE%83%E7%9A%84%E8%AF%AD%E6%B3%95%E5%92%8CC%E8%AF%AD%E8%A8%80%E7%9A%84%E7%B1%BB%E4%BC%BC%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E9%87%8C%E5%87%BA%E7%8E%B0%E4%BA%86%E7%AC%A6%E5%8F%B7%E2%80%9C%3Ccode%3E&amp;amp;%3C/code%3E%E2%80%9D%E5%92%8C%E2%80%9C%3Ccode%3E*%3C/code%3E%E2%80%9D%EF%BC%8C%E5%9C%A8Rust%E4%B8%AD%E8%A1%A8%E7%A4%BA%E7%9A%84%E6%84%8F%E4%B9%89%E5%92%8CC%E8%AF%AD%E8%A8%80%E4%B8%80%E6%A0%B7%E3%80%82%E7%AC%A6%E5%8F%B7%E2%80%9C%3Ccode%3E&amp;amp;%3C/code%3E%E2%80%9D%E8%A1%A8%E7%A4%BA%E2%80%9C%3Ccode%3E%E5%AF%B9%E8%B1%A1%E7%9A%84(%E5%86%85%E5%AD%98)%E5%9C%B0%E5%9D%80...%3C/code%3E%E2%80%9D%EF%BC%8C%E7%AC%A6%E5%8F%B7%E2%80%9C%3Ccode%3E*%3C/code%3E%E2%80%9D%E8%A1%A8%E7%A4%BA%E2%80%9C%3Ccode%3E(%E5%86%85%E5%AD%98)%E5%9C%B0%E5%9D%80%E7%9A%84%E5%AF%B9%E8%B1%A1...%3C/code%3E%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%87%BD%E6%95%B0%3Ccode%3Edouble_negatives%3C/code%3E%E7%9A%84%E5%8F%82%E6%95%B0%E7%B1%BB%E5%9E%8B%E6%98%AF%3Ccode%3E&amp;amp;mut%20[i32;%2010]%3C/code%3E%EF%BC%8C%E5%9C%A8%E7%B1%BB%E5%9E%8B%E5%89%8D%E9%9D%A2%E5%B8%A6%E4%B8%80%E4%B8%AA%3Ccode%3E&amp;amp;%3C/code%3E%E7%AC%A6%E5%8F%B7%EF%BC%8C%E6%8C%87%E6%98%8E%E5%AE%83%E6%98%AF%E7%B1%BB%E5%9E%8B%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%9C%B0%E5%9D%80(%E4%B9%9F%E5%8F%AB%E6%8C%87%E9%92%88%E3%80%81%E5%BC%95%E7%94%A8)%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%3Ccode%3Ea%3C/code%3E%E5%9C%A8%E8%BF%99%E9%87%8C%E8%A1%A8%E7%A4%BA%E7%9A%84%E6%98%AF%E2%80%9C%E9%95%BF%E5%BA%A6%E4%B8%BA10%E7%9A%8432%E4%BD%8D%E6%95%B4%E5%9E%8B%E6%95%B0%E7%BB%84%E7%9A%84%E5%9C%B0%E5%9D%80(%E6%8C%87%E9%92%88%E3%80%81%E5%BC%95%E7%94%A8)%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%9C%A8%E5%87%BD%E6%95%B0%E4%BD%93%E5%86%85%EF%BC%8C%E6%88%91%E4%BB%AC%E5%B9%B6%E4%B8%8D%E5%85%B3%E5%BF%83%E8%BF%99%E4%B8%AA%E5%9C%B0%E5%9D%80(%E6%8C%87%E9%92%88%E3%80%81%E5%BC%95%E7%94%A8)%EF%BC%8C%E8%80%8C%E6%98%AF%E8%BF%99%E4%B8%AA%E5%86%85%E5%AD%98%E5%9C%B0%E5%9D%80%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E6%89%80%E4%BB%A5%E6%88%91%E4%BB%AC%E9%9C%80%E8%A6%81%E7%94%A8%3Ccode%3E*%3C/code%3E%E8%AE%BF%E9%97%AE%E8%AF%A5%E5%AF%B9%E8%B1%A1%E3%80%82%E9%80%9A%E5%B8%B8%EF%BC%8C%E7%BB%99%E5%AE%9A%E4%B8%80%E4%B8%AA%E5%BC%95%E7%94%A8%3Ccode%3Ea%3C/code%3E%EF%BC%8C%E8%A1%A8%E8%BE%BE%E5%BC%8F%3Ccode%3E*a%3C/code%3E%E6%A0%87%E8%AF%86%E4%B8%BA%E8%AF%A5%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%BC%95%E7%94%A8%E3%80%82%3C/p%3E%3Cp%3E%E5%87%BD%E6%95%B0%E6%96%B9%E6%B3%95%E5%86%85%E7%9A%84%E7%AC%AC%E4%BA%8C%E8%A1%8C%EF%BC%8C%3Ccode%3E*a%3C/code%3E%E6%A0%87%E8%AF%86%E4%B8%BA%E5%86%85%E5%AD%98%E5%9C%B0%E5%9D%80%E4%B9%8B%E4%B8%8A%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E8%BF%99%E4%B8%AA%E5%AF%B9%E8%B1%A1%E5%B0%B1%E6%98%AF%E6%95%B0%E7%BB%84%EF%BC%8C%E5%9B%A0%E6%AD%A4%E5%8F%AF%E4%BB%A5%E7%94%A8%E4%B8%8B%E6%A0%87%E8%AE%BF%E9%97%AE%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%B4%E7%BB%95%E8%A1%A8%E8%BE%BE%E5%BC%8F%3Ccode%3E*a%3C/code%3E%E7%9A%84%E5%9C%86%E6%8B%AC%E5%8F%B7%E6%98%AF%E5%BF%85%E9%A1%BB%E7%9A%84%EF%BC%8C%E5%9B%A0%E4%B8%BA%E6%96%B9%E6%8B%AC%E5%8F%B7%E4%BC%98%E5%85%88%E4%BA%8E%E6%98%9F%E5%8F%B7%EF%BC%8C%E6%89%80%E4%BB%A5%3Ccode%3E*a[i]%3C/code%3E%E4%BC%9A%E8%A2%AB%E5%BD%93%E5%81%9A%3Ccode%3E*(a[i])%3C/code%3E%E5%A4%84%E7%90%86%EF%BC%8C%E5%B9%B6%E4%B8%94%E8%BF%99%E9%87%8C%E4%BC%9A%E5%8F%91%E7%94%9F%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%E3%80%82%3C/p%3E%3Cp%3E%E4%BD%BF%E7%94%A8%E8%BF%99%E7%B1%BB%E5%8F%82%E6%95%B0%EF%BC%8C%E5%87%BD%E6%95%B0%3Ccode%3Edouble_negatives%3C/code%3E%E4%BB%85%E6%8E%A5%E6%94%B6%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E5%9C%B0%E5%9D%80%EF%BC%8C%E5%9B%A0%E6%AD%A4%E5%8F%AF%E4%BB%A5%E5%AF%B9%E8%AF%A5%E6%95%B0%E7%BB%84%E8%BF%9B%E8%A1%8C%E8%AF%BB%E5%86%99%E6%93%8D%E4%BD%9C%E3%80%82%3C/p%3E%3Cp%3E%E5%A3%B0%E6%98%8E%E8%AF%A5%E5%87%BD%E6%95%B0%E5%90%8E%EF%BC%8C%E8%A6%81%E8%B0%83%E7%94%A8%E8%AF%A5%E5%87%BD%E6%95%B0%E3%80%82%E6%95%B0%E7%BB%84%E5%BF%85%E9%A1%BB%E5%A3%B0%E6%98%8E%E4%BB%A5%E5%8F%8A%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B8%BA%E5%8F%AF%E5%8F%98(mutable)%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E5%86%85%E9%83%A8%E4%BC%9A%E5%8F%91%E7%94%9F%E6%94%B9%E5%8F%98%E3%80%82%3C/p%3E%3Cp%3E%E6%B3%A8%E6%84%8F%EF%BC%8C%E8%B0%83%E7%94%A8%E5%87%BD%E6%95%B0%E9%9C%80%E8%A6%81%E6%98%BE%E5%BC%8F%E5%B8%A6%E4%B8%8A%3Ccode%3Emut%3C/code%3E%E5%85%B3%E9%94%AE%E5%AD%97%E4%B8%80%E5%B9%B6%E4%BC%A0%E9%80%92%E3%80%82%3C/p%3E%3Cp%3E%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E8%AF%A5%E5%87%BD%E6%95%B0%E5%8F%AF%E4%BB%A5%E7%AE%80%E5%8C%96%E6%88%90%E4%B8%8B%E9%9D%A2%E7%AD%89%E4%BB%B7%E7%9A%84%E7%89%88%E6%9C%AC%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Edouble_negatives%3C/span%3E(a:%20&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20[%3Cspan%20class=%22type%22%3Ei32%3C/span%3E;%20%3Cspan%20class=%22number%22%3E10%3C/span%3E])%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E..%3Cspan%20class=%22number%22%3E10%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20a[i]%20&amp;lt;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E%20&amp;#123;%20a[i]%20*=%20%3Cspan%20class=%22number%22%3E2%3C/span%3E;%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%88%91%E4%BB%AC%E5%88%A0%E9%99%A4%E4%BA%86%E4%B8%A4%E4%B8%AA%E6%98%9F%E5%8F%B7%EF%BC%8C%E4%BB%A5%E5%8F%8A%E5%9C%86%E6%8B%AC%E5%8F%B7%EF%BC%8C%3C/p%3E%3Cp%3E%E6%88%91%E4%BB%AC%E8%AF%B4%E8%BF%87%E8%BF%99%E9%87%8C%E7%9A%84%3Ccode%3Ea%3C/code%3E%E4%B8%8D%E6%98%AF%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%EF%BC%8C%E8%80%8C%E6%98%AF%E6%95%B0%E7%BB%84%E7%9A%84%E5%9C%B0%E5%9D%80%EF%BC%8C%E9%82%A3%E4%B9%88%E8%BF%99%E9%87%8C%E7%9A%84%3Ccode%3Ea[i]%3C/code%3E%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%BA%94%E8%AF%A5%E4%B8%8D%E5%90%88%E6%B3%95%E6%89%8D%E5%AF%B9%E3%80%82%E7%9B%AE%E5%89%8DRust%E5%AF%B9%E8%BF%99%E7%B1%BB%E5%9C%B0%E5%9D%80%E4%BD%9C%E4%BA%86%E5%A6%82%E4%B8%8B%E7%AE%80%E5%8C%96%EF%BC%9A%3C/p%3E%3Cp%3E%E6%AF%8F%E5%BD%93%E4%B8%80%E4%B8%AA%E5%BC%95%E7%94%A8%E8%A2%AB%E4%B8%8D%E6%AD%A3%E7%A1%AE%E4%BD%BF%E7%94%A8%EF%BC%8C%E5%8D%B3%E5%AE%83%E6%98%AF%E4%B8%80%E4%B8%AA%E9%9D%9E%E5%BC%95%E7%94%A8%E5%80%BC%E6%97%B6%EF%BC%8CRust%E4%BC%9A%E5%81%87%E8%A3%85%E5%89%8D%E9%9D%A2%E6%9C%89%E4%B8%80%E4%B8%AA%E6%98%9F%E5%8F%B7(asterisk)%E3%80%82%E4%B9%9F%E5%B0%B1%E6%98%AFRust%E5%AF%B9%E5%85%B6%E8%BF%9B%E8%A1%8C%E4%BA%86%E5%8F%8D%E5%90%91%E5%BC%95%E7%94%A8(dereference)%EF%BC%8C%E6%89%80%E4%BB%A5%E8%BF%99%E9%87%8C%E6%8A%8A%E5%86%85%E5%AD%98%E5%9C%B0%E5%9D%80(%E6%8C%87%E9%92%88%E3%80%81%E5%BC%95%E7%94%A8)%E6%9B%BF%E4%BB%A3%E4%B8%BA%E5%BC%95%E7%94%A8%E8%87%AA%E8%BA%AB%E3%80%82%3C/p%3E%3Cp%3E%E7%94%B1%E6%AD%A4%E4%BA%A7%E7%94%9F%E7%9A%84%E8%AF%AD%E6%B3%95%E5%B0%B1%E6%98%AFC%3Cins%3E%E7%9A%84%E5%BC%95%E7%94%A8%EF%BC%8CRust%E7%9A%84%E4%B8%8D%E5%90%8C%E4%B9%8B%E5%A4%84%E5%9C%A8%E4%BA%8E%EF%BC%8C%E6%98%9F%E5%8F%B7(asterisk)%E5%8F%AF%E4%BB%A5%E5%86%99%E3%80%81%E5%8F%AF%E4%BB%A5%E7%9C%81%E7%95%A5%EF%BC%8C%E4%BD%86C%3C/ins%3E%E5%BF%85%E9%A1%BB%E5%9C%A8%E6%8C%87%E9%92%88%E5%89%8D%E9%9D%A2%E5%86%99%EF%BC%8C%E5%BF%85%E9%A1%BB%E4%B8%8D%E8%83%BD%E5%9C%A8%E5%BC%95%E7%94%A8%E5%89%8D%E9%9D%A2%E5%86%99%E3%80%82%3C/p%3E%3Ch2%20id=%22Using-References%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Using-References%22%3E%C2%B6%3C/a%3EUsing%20References%3C/h2%3E%3Cp%3E%E5%BC%95%E7%94%A8%E4%B8%BB%E8%A6%81%E7%94%A8%E4%BA%8E%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E4%B8%8A%EF%BC%8C%E4%BD%86%E4%B9%9F%E5%8F%AF%E8%83%BD%E7%94%A8%E5%9C%A8%E5%85%B6%E4%BB%96%E5%9C%B0%E6%96%B9%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E15%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eref_a%3C/span%3E%20=%20&amp;amp;a;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20a,%20*ref_a,%20ref_a);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E8%BE%93%E5%87%BA%EF%BC%9A%E2%80%9C15%2015%2015%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%89%8D%E9%9D%A2%E9%98%90%E8%BF%B0%E8%BF%87%EF%BC%8C%3Ccode%3Eref_a%3C/code%3E%E6%98%AF%E4%B8%80%E4%B8%AA%E5%86%85%E5%AD%98%E5%9C%B0%E5%9D%80%EF%BC%8C%3Ccode%3E*ref_a%3C/code%3E%E6%A0%87%E8%AF%86%E4%B8%BA%E8%AF%A5%E5%86%85%E5%AD%98%E5%9C%B0%E5%9D%80%E4%B8%8A%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%BC%95%E7%94%A8%EF%BC%8C%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E8%AF%AD%E5%8F%A5%EF%BC%8C%E7%BC%96%E8%AF%91%E5%99%A8%E5%B0%9D%E8%AF%95%E7%9B%B4%E6%8E%A5%E8%BE%93%E5%87%BA%3Ccode%3Eref_a%3C/code%3E%E6%97%B6%EF%BC%8C%E4%BC%9A%E5%8F%8D%E5%90%91%E8%8E%B7%E5%8F%96%E8%AF%A5%E5%BC%95%E7%94%A8%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%B9%B6%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C%E3%80%82%3C/p%3E%3Cp%3E%E4%BD%BF%E7%94%A8%E5%BC%95%E7%94%A8%EF%BC%8C%E4%BD%A0%E5%8F%AF%E4%BB%A5%E5%81%9A%E4%B8%80%E4%BA%9B%E6%8A%80%E5%B7%A7%E6%80%A7%E7%9A%84%E4%BA%8B%E6%83%85%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20&amp;amp;&amp;amp;&amp;amp;%3Cspan%20class=%22number%22%3E7%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20***a,%20**a,%20*a,%20a);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E9%87%8C%E7%9A%84%3Ccode%3Ea%3C/code%3E%E5%B0%B1%E5%8F%98%E6%88%90%E4%BA%867%E7%9A%84%E5%BC%95%E7%94%A8%E7%9A%84%E5%BC%95%E7%94%A8%E7%9A%84%E5%BC%95%E7%94%A8%E2%80%A6%20%E6%89%80%E4%BB%A5%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C%E5%B0%B1%E5%8F%98%E6%88%90%E4%BA%86%E5%BC%95%E7%94%A8%E7%9A%84%E5%BC%95%E7%94%A8%E7%9A%84%E5%BC%95%E7%94%A8%E7%9A%84%E5%AF%B9%E8%B1%A1%E2%80%A6%20%E4%BD%86%E8%BF%99%E9%87%8C%E4%BD%A0%E4%B8%8D%E8%83%BD%E5%86%8D%E5%8A%A0%E5%A4%9A%E6%98%9F%E5%8F%B7(asterisk)%EF%BC%8C%E5%90%A6%E5%88%99%E4%BC%9A%E5%8F%91%E7%94%9F%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%8F%8D%E5%90%91%E5%BC%95%E7%94%A8%E5%8F%AA%E5%8F%91%E7%94%9F%E4%BA%863%E5%B1%82%E3%80%82%3C/p%3E%3Cp%3E%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%98%AF%E9%9A%90%E5%BC%8F%E7%9A%84%E3%80%81%E9%A1%BA%E5%BA%8F%E6%80%A7%E7%9A%84%E3%80%81%E9%87%8D%E5%A4%8D%E4%BA%86%E4%B8%8A%E9%9D%A2%E5%87%A0%E4%B8%AA%E6%AD%A5%E9%AA%A4%E3%80%82%3C/p%3E%3Cp%3E%E4%BB%80%E4%B9%88%E6%83%85%E5%86%B5%E4%B8%8B%E6%98%9F%E5%8F%B7%E6%89%8D%E8%83%BD%E8%A2%AB%E7%9C%81%E7%95%A5%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E19%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E20%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E21%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E22%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E23%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E24%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E25%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E26%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E27%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E28%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E29%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Emain%3C/span%3E()%20&amp;#123;%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ea%3C/span%3E();%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eb%3C/span%3E();%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ec%3C/span%3E();%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Ed%3C/span%3E();%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ea%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ev%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E1%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ex%3C/span%3E%20=%20&amp;amp;v;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;a%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20*x);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;a%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22number%22%3E1%3C/span%3E%20+%20*x);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Eb%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ev%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E1%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ex%3C/span%3E%20=%20&amp;amp;v;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;b%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20x);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;b%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22number%22%3E1%3C/span%3E%20+%20x);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ec%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ev%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E1%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ex%3C/span%3E%20=%20&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20v;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;c%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20*x);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;c%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22number%22%3E1%3C/span%3E%20+%20*x);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efn%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Ed%3C/span%3E()%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ev%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E1%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ex%3C/span%3E%20=%20&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20v;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;d%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20x);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;d%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22number%22%3E1%3C/span%3E%20+%20x);%20%3Cspan%20class=%22comment%22%3E/%20error%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E4%BC%9A%E5%87%BA%E9%94%99%EF%BC%9A%3Ccode%3Ethe%20trait%20bound%20&#92;%3C/code%3E_:%20std::ops::Add&amp;lt;&amp;amp;mut%20_&amp;gt;%60%20is%20not%20satisfied%20[E0277]%60%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E6%98%AF%E5%9B%A0%E4%B8%BA%E5%AF%B9%E4%BA%8E%3Ccode%3EAdd%3C/code%3Etrait%E7%9A%84%E6%93%8D%E4%BD%9C%EF%BC%8C%E5%86%85%E9%83%A8%E5%AE%9E%E7%8E%B0%E4%BA%86%3Ccode%3Ei32%20+%20&amp;amp;32%3C/code%3E(%3Ccode%3E&amp;amp;i32%20+%20&amp;amp;i32%3C/code%3E)%E7%9A%84%E5%A4%84%E7%90%86%EF%BC%8C%E4%BD%86%E6%98%AF%EF%BC%8C%E5%AF%B9%E4%BA%8Eimmutable%20reference%E6%B2%A1%E6%9C%89%E6%89%A9%E5%B1%95%E6%9C%89%3Ccode%3E&amp;amp;&amp;amp;i32%3C/code%3E%20%E6%88%96%20%3Ccode%3E&amp;amp;mut%20i32%3C/code%3E%E7%9A%84%E5%AE%9E%E7%8E%B0%E3%80%82%3C/p%3E%3Ch2%20id=%22Mutablility-of-References%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Mutablility-of-References%22%3E%C2%B6%3C/a%3EMutablility%20of%20References%3C/h2%3E%3Cp%3E%E5%A6%82%E4%BD%95%E5%9C%A8reference%E4%B8%8A%E4%BD%BF%E7%94%A8mut%E5%85%B3%E9%94%AE%E5%AD%97%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ea%3C/span%3E:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E10%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Eb%3C/span%3E:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E20%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Ep%3C/span%3E:%20&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20=%20&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20a;%3Cspan%20class=%22comment%22%3E/%20line%203%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20*p);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E*p%20+=%20%3Cspan%20class=%22number%22%3E1%3C/span%3E;%3Cspan%20class=%22comment%22%3E/%20line%205%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20*p);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ep%20=%20&amp;amp;%3Cspan%20class=%22keyword%22%3Emut%3C/span%3E%20b;%3Cspan%20class=%22comment%22%3E/%20line%207%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20*p);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E*p%20+=%20%3Cspan%20class=%22number%22%3E1%3C/span%3E;%3Cspan%20class=%22comment%22%3E/%20line%209%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20&amp;quot;%3C/span%3E,%20*p);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E8%BE%93%E5%87%BA%E4%B8%BA%EF%BC%9A%E2%80%9C10%2011%2020%2021%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E6%B3%A8%E6%84%8F%E7%AC%AC5%E8%A1%8C%E5%92%8C%E7%AC%AC9%E8%A1%8C%EF%BC%8C%3Ccode%3E*p%3C/code%3E%E6%98%AFmutable%E7%9A%84%E3%80%82%E6%89%80%E4%BB%A5%3Ccode%3Ep%3C/code%3E%E7%9A%84%E7%B1%BB%E5%9E%8B%E4%B8%8D%E8%83%BD%E6%98%AF%3Ccode%3E&amp;amp;i32%3C/code%3E%EF%BC%8C%E5%BF%85%E9%A1%BB%E6%98%AF%3Ccode%3E&amp;amp;mut%20i32%3C/code%3E%E3%80%82%E8%BF%99%E9%87%8C%E7%9A%84%3Ccode%3Ep%3C/code%3E%E6%9C%89%E5%BE%88%E5%A4%9A%E5%A4%84%3Ccode%3Emut%3C/code%3E%EF%BC%8C%E8%A1%A8%E7%A4%BA%E4%BA%86%E4%B8%8D%E5%90%8C%E7%9A%84%E6%84%8F%E4%B9%89%EF%BC%9A%E7%AC%AC%E4%B8%80%E4%B8%AA%3Ccode%3Emut%3C/code%3E%E8%A1%A8%E7%A4%BA%3Ccode%3Ep%3C/code%3E%E6%98%AF%E4%B8%80%E4%B8%AA%E5%8F%AF%E5%8F%98%E7%9A%84%E5%8F%98%E9%87%8F%EF%BC%8C%E5%8F%AF%E4%BB%A5%E8%A2%AB%E4%BF%AE%E6%94%B9%EF%BC%8C%E7%AC%AC%E4%BA%8C%E4%B8%AA%3Ccode%3Emut%3C/code%3E%E4%BD%9C%E4%B8%BA%E4%BA%86%E5%AE%83%E7%9A%84%E7%B1%BB%E5%9E%8B%EF%BC%8C%E8%A1%A8%E7%A4%BA%E5%AE%83%E7%9A%84%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B%E5%8F%AF%E4%BB%A5%E4%BF%AE%E6%94%B9%E3%80%82%3C/p%3E" type="image"/>
    
    
    <category term="learning" scheme="https://galudisu.info/categories/learning/"/>
    
    
    <category term="rust" scheme="https://galudisu.info/tags/rust/"/>
    
  </entry>
  
  <entry>
    <title>rust基础入门[08] - Using Heterogeneous Data Structures</title>
    <link href="https://galudisu.info/2023/01/08/rust/beginning/chapter08_Using%20Heterogeneous%20Data%20Structures/"/>
    <id>https://galudisu.info/2023/01/08/rust/beginning/chapter08_Using%20Heterogeneous%20Data%20Structures/</id>
    <published>2023-01-08T07:50:46.000Z</published>
    <updated>2025-04-27T11:59:08.282Z</updated>
    
    <content type="html"><![CDATA[<p>本章覆盖有：</p><p>异构数据结构(Heterogeneous Data Structures, 也叫复合数据结构)，就是不同类型的组合，包括有，</p><ul><li>Tuples</li><li>Structs</li><li>Tuple-Structs</li></ul><span id="more"></span><p>用于不同类型的分组对象。本章最后，会介绍一些代码风格的规约。</p><h2 id="The-Tuples"><a class="header-anchor" href="#The-Tuples">¶</a>The Tuples</h2><p>数组和向量可以包含多个条目元素，每个条目必须是相同类型。如果你希望一个对象存储不同类型的几个子对象，可以如下实现：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">data</span> = (<span class="number">10000000</span>, <span class="number">183.19</span>, <span class="string">&#x27;Q&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">copy_of_data</span> = data;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;, &#123;&#125;, &#123;&#125;&quot;</span>, data.<span class="number">0</span>, copy_of_data.<span class="number">1</span>, data.<span class="number">2</span>);</span><br></pre></td></tr></table></figure><p>结果将打印：“10000000, 183.19, Q”。</p><p>“data”是一个组合对象，由三个对象组成。这三个对象有不同类型：整型、浮点型、字符。</p><p>这类对象称为：<code>tuple</code>。</p><p>tuple的声明和array类似。唯一不同是tuple用的是小括号，数组用的是方括号。</p><p>tuple的条目称为字段(field)。</p><p>tuple的类型可以显式指明：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">data</span>: (<span class="type">i32</span>, <span class="type">f64</span>, <span class="type">char</span>) = (<span class="number">10000000</span>, <span class="number">183.19</span>, <span class="string">&#x27;Q&#x27;</span>);</span><br></pre></td></tr></table></figure><p>你可以用点符号(dot-notation)访问tuple的field的值。</p><p>类似地，tuple可以是mutable的：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">data</span> = (<span class="number">10000000</span>, <span class="number">183.19</span>, <span class="string">&#x27;Q&#x27;</span>);</span><br><span class="line">data.<span class="number">0</span> = -<span class="number">5</span>;</span><br><span class="line">data.<span class="number">2</span> = <span class="string">&#x27;x&#x27;</span>;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;, &#123;&#125;, &#123;&#125;&quot;</span>, data.<span class="number">0</span>, data.<span class="number">1</span>, data.<span class="number">2</span>);</span><br></pre></td></tr></table></figure><p>输出为：“-5, 183.19, x”。</p><p>类似于数组，tuple可以有任意个字段(field)。如果一个field都没有，这个tuple的类型是“()”。</p><p>前面已经介绍过“empty tuples”。下面解析下：</p><p>一个不同的地方是，tuples不同通过变量下标进行访问：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">array</span> = [<span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="variable">tuple</span> = (<span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">i</span> = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, array[i]);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, tuple.i);</span><br></pre></td></tr></table></figure><p>最后一行是不合法的，因为不能在运行时确定tuple的field的值。即使用const来标识也不行，因为tuple.i表述的是它的field，语法上认为<code>&lt;expr&gt;.&lt;integer&gt;</code>，解析器会认为取其field，实际上可看做是一个方法调用，主要是为了语义上的一致性。</p><blockquote><p>为什么Rust这样定义：<br>实际上，可以参考<a href="https://github.com/AndrewScull/rust/blob/1cc8b6ec664f30b43f75551e95299d943c8a4e6a/src/libcore/tuple.rs">源码</a>得知，tuple在宏中，满足<code>&lt;expr&gt;.&lt;integer&gt;</code>，后面的数字被看做identifier处理了。<br>可以参考<a href="https://github.com/rust-lang/rfcs/blob/master/text/0184-tuple-accessors.md">rfc</a>这样设计的原因。</p></blockquote><h2 id="The-Structs"><a class="header-anchor" href="#The-Structs">¶</a>The Structs</h2><p>Tuple在条目较少时比较好用。当字段过多了，会带来一些障碍：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">data</span> = (<span class="number">10</span>, <span class="string">&#x27;x&#x27;</span>, <span class="number">12</span>, <span class="number">183.19</span>, <span class="string">&#x27;Q&#x27;</span>, <span class="literal">false</span>, -<span class="number">9</span>);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, data.<span class="number">2</span> + data.<span class="number">6</span>);</span><br></pre></td></tr></table></figure><p>上述代码，并不能一眼看出输出结果是3。另外，任何tuple字段是按顺序定义的，当类型足够多时，会变得难于阅读：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">data1</span> = (<span class="number">10</span>, <span class="string">&#x27;x&#x27;</span>, <span class="number">12</span>, <span class="number">183.19</span>, <span class="string">&#x27;Q&#x27;</span>, <span class="literal">false</span>, -<span class="number">9</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">data2</span>: (<span class="type">u16</span>, <span class="type">char</span>, <span class="type">i16</span>, <span class="type">f64</span>, <span class="type">bool</span>, <span class="type">char</span>, <span class="type">i16</span>);</span><br><span class="line">data2 = data1;</span><br></pre></td></tr></table></figure><p>另外，对于tuple来说，添加或删除一个filed，data.2就可能偏移到data.3。这样处理也很麻烦。</p><p>因此，Rust给出了一个有具体类型的结构，相当于C语言的构造体：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">SomeData</span> &#123;</span><br><span class="line">integer: <span class="type">i32</span>,</span><br><span class="line">fractional: <span class="type">f32</span>,</span><br><span class="line">character: <span class="type">char</span>,</span><br><span class="line">five_bytes: [<span class="type">u8</span>; <span class="number">5</span>],</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">data</span> = SomeData &#123;</span><br><span class="line">integer: <span class="number">10_000_000</span>,</span><br><span class="line">fractional: <span class="number">183.19</span>,</span><br><span class="line">character: <span class="string">&#x27;Q&#x27;</span>,</span><br><span class="line">five_bytes: [<span class="number">9</span>, <span class="number">0</span>, <span class="number">250</span>, <span class="number">60</span>, <span class="number">200</span>],</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;, &#123;&#125;, &#123;&#125;, &#123;&#125;&quot;</span>,</span><br><span class="line">data.five_bytes[<span class="number">3</span>], data.integer,</span><br><span class="line">data.fractional, data.character);</span><br></pre></td></tr></table></figure><p>结果打印：60， 10000000， 183.19， Q。</p><p>Rust中的结构体，是有<code>struct</code>关键字声明的一个block，它声明了一个“SomeData”类型。任何该类型的对象，都有且仅有固定的字段，以及每个字段的类型也是固定的。</p><p>要声明一个该类型的变量“data”，以及初始化这个类型对象。直接用“name”带上对应字段即可。</p><p>要访问struct-object的值，用法和tuple一样，用dot-notation访问。</p><p>上述代码类似于C语言：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">SomeData</span> &#123;</span></span><br><span class="line"><span class="type">int</span> integer;</span><br><span class="line"><span class="type">float</span> fractional;</span><br><span class="line"><span class="type">char</span> character;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> five_bytes[<span class="number">5</span>];</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">SomeData</span> <span class="title">data</span> =</span> &#123;</span><br><span class="line"><span class="number">10000000</span>,</span><br><span class="line"><span class="number">183.19</span>,</span><br><span class="line"><span class="string">&#x27;Q&#x27;</span>,</span><br><span class="line">&#123;<span class="number">9</span>, <span class="number">0</span>, <span class="number">250</span>, <span class="number">60</span>, <span class="number">200</span>&#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d, %d, %g, %c&quot;</span>,</span><br><span class="line">data.five_bytes[<span class="number">3</span>], data.integer,</span><br><span class="line">data.fractional, data.character);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面和C语言的写法进行对比下。</p><p>C中字段用分号隔开，Rust中用逗号，</p><p>Rust中，字段带有类型，放在后面；C放在前面，</p><p>C的字段类型可以简写，“int a, b;”；但是在Rust中，每个字段都要指定类型“a: i32, b: i32”。</p><p>C中，初始化很简单，类似于Rust的tuple；但是Rust的结构体初始化，必须指定字段名。</p><p>不论C还是Rust，都是点标记符(dot-notation)调用。</p><p>如果声明的是一个可变(mutable)变量，同样可以用点标记符(dot-notation)变更字段的值。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">SomeData</span> &#123;</span><br><span class="line">integer: <span class="type">i32</span>,</span><br><span class="line">fractional: <span class="type">f32</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">data</span> = SomeData &#123;</span><br><span class="line">integer: <span class="number">10</span>,</span><br><span class="line">fractional: <span class="number">183.19</span>,</span><br><span class="line">&#125;;</span><br><span class="line">data.fractional = <span class="number">8.2</span>;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;， &#123;&#125;&quot;</span>, data.fractional, data.integer);</span><br></pre></td></tr></table></figure><p>结果将输出：“8.2，10”。</p><p>和tuple一样，strcut也可以是空。</p><h2 id="The-Tuple-Structs"><a class="header-anchor" href="#The-Tuple-Structs">¶</a>The Tuple-Structs</h2><p>到目前为止，有两类结构化的容器：</p><ul><li>tuple，类型没有名称，不能提前声明，字段没有名称；</li><li>struct，类型有名称，必须提前声明，字段有名称。</li></ul><p>另外还需要一种结构：类型有名称，需要提前声明，但字段没有名称。这种基于tuple和struct形式的结构体。称为：“<code>tuple-structs</code>”。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">SomeData</span> (</span><br><span class="line"><span class="type">i32</span>,</span><br><span class="line"><span class="type">f32</span>,</span><br><span class="line"><span class="type">char</span>,</span><br><span class="line">[<span class="type">u8</span>; <span class="number">5</span>],</span><br><span class="line">);</span><br><span class="line"><span class="keyword">let</span> <span class="variable">data</span> = <span class="title function_ invoke__">SomeData</span> (</span><br><span class="line"><span class="number">10_000_000</span>,</span><br><span class="line"><span class="number">183.19</span>,</span><br><span class="line"><span class="string">&#x27;Q&#x27;</span>,</span><br><span class="line">[<span class="number">9</span>, <span class="number">0</span>, <span class="number">250</span>, <span class="number">60</span>, <span class="number">200</span>],</span><br><span class="line">);</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;, &#123;&#125;, &#123;&#125;, &#123;&#125;&quot;</span>, </span><br><span class="line">data.<span class="number">2</span>, data.<span class="number">0</span>, data.<span class="number">1</span>, data.<span class="number">3</span>[<span class="number">2</span>]);</span><br></pre></td></tr></table></figure><p>这种结构感觉很别扭，因为是用圆括号作语句块，并且没有指定字段的名称，初始化像struct，访问字段方式像tuple。</p><p>区别于tuple和struct，<code>tuple-structs</code>这种结构不能为空。</p><p>实际应用中，tuple-struct并不常用。</p><h2 id="Lexical-Convertions"><a class="header-anchor" href="#Lexical-Convertions">¶</a>Lexical Convertions</h2><p>到目前为止，我们认识了一部分Rust结构体(不是全部！)，接下来要阐述一些词法规则。这些规则是如此根深蒂固，甚至于违反这些规则会令编译器抛出警告。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> MAXIMUM_POWER: <span class="type">u16</span> = <span class="number">600</span>;</span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">VehicleKind</span> &#123;</span><br><span class="line">Motorcycle,</span><br><span class="line">Car,</span><br><span class="line">Truck,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">VehicleData</span> &#123;</span><br><span class="line">kind: VehicleKind,</span><br><span class="line">registration_year: <span class="type">u16</span>,</span><br><span class="line">registration_month: <span class="type">u8</span>,</span><br><span class="line">power: <span class="type">u16</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">vehicle</span> = VehicleData &#123;</span><br><span class="line">kind: VehicleKind::Car,</span><br><span class="line">registration_year: <span class="number">2003</span>,</span><br><span class="line">registration_month: <span class="number">11</span>,</span><br><span class="line">power: <span class="number">120</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">if</span> vehicle.power &gt; MAXIMUM_POWER &#123;</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;Too powerful&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述例子阐述了一些规则要求：</p><ul><li>常理的名称要大些，并且用下划线划分词组。</li><li>类型的名称由应用代码或标准库定义，枚举变量的名称由一组关联词汇粘合，要求命名首字母大写。</li><li>其它(诸如关键字<code>let</code>、原生类型<code>u8</code>)名称则由小写字母，下划线划分词组。</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;本章覆盖有：&lt;/p&gt;
&lt;p&gt;异构数据结构(Heterogeneous Data Structures, 也叫复合数据结构)，就是不同类型的组合，包括有，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tuples&lt;/li&gt;
&lt;li&gt;Structs&lt;/li&gt;
&lt;li&gt;Tuple-Structs&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    <content src="https://galudisu.info/%3Cp%3E%E6%9C%AC%E7%AB%A0%E8%A6%86%E7%9B%96%E6%9C%89%EF%BC%9A%3C/p%3E%3Cp%3E%E5%BC%82%E6%9E%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84(Heterogeneous%20Data%20Structures,%20%E4%B9%9F%E5%8F%AB%E5%A4%8D%E5%90%88%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84)%EF%BC%8C%E5%B0%B1%E6%98%AF%E4%B8%8D%E5%90%8C%E7%B1%BB%E5%9E%8B%E7%9A%84%E7%BB%84%E5%90%88%EF%BC%8C%E5%8C%85%E6%8B%AC%E6%9C%89%EF%BC%8C%3C/p%3E%3Cul%3E%3Cli%3ETuples%3C/li%3E%3Cli%3EStructs%3C/li%3E%3Cli%3ETuple-Structs%3C/li%3E%3C/ul%3E%3Cspan%20id=%22more%22%3E%3C/span%3E%3Cp%3E%E7%94%A8%E4%BA%8E%E4%B8%8D%E5%90%8C%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%88%86%E7%BB%84%E5%AF%B9%E8%B1%A1%E3%80%82%E6%9C%AC%E7%AB%A0%E6%9C%80%E5%90%8E%EF%BC%8C%E4%BC%9A%E4%BB%8B%E7%BB%8D%E4%B8%80%E4%BA%9B%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E7%9A%84%E8%A7%84%E7%BA%A6%E3%80%82%3C/p%3E%3Ch2%20id=%22The-Tuples%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#The-Tuples%22%3E%C2%B6%3C/a%3EThe%20Tuples%3C/h2%3E%3Cp%3E%E6%95%B0%E7%BB%84%E5%92%8C%E5%90%91%E9%87%8F%E5%8F%AF%E4%BB%A5%E5%8C%85%E5%90%AB%E5%A4%9A%E4%B8%AA%E6%9D%A1%E7%9B%AE%E5%85%83%E7%B4%A0%EF%BC%8C%E6%AF%8F%E4%B8%AA%E6%9D%A1%E7%9B%AE%E5%BF%85%E9%A1%BB%E6%98%AF%E7%9B%B8%E5%90%8C%E7%B1%BB%E5%9E%8B%E3%80%82%E5%A6%82%E6%9E%9C%E4%BD%A0%E5%B8%8C%E6%9C%9B%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E4%B8%8D%E5%90%8C%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%87%A0%E4%B8%AA%E5%AD%90%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%A6%82%E4%B8%8B%E5%AE%9E%E7%8E%B0%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Edata%3C/span%3E%20=%20(%3Cspan%20class=%22number%22%3E10000000%3C/span%3E,%20%3Cspan%20class=%22number%22%3E183.19%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;Q&amp;#x27;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ecopy_of_data%3C/span%3E%20=%20data;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;,%20&amp;#123;&amp;#125;,%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20data.%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20copy_of_data.%3Cspan%20class=%22number%22%3E1%3C/span%3E,%20data.%3Cspan%20class=%22number%22%3E2%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E6%89%93%E5%8D%B0%EF%BC%9A%E2%80%9C10000000,%20183.19,%20Q%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E2%80%9Cdata%E2%80%9D%E6%98%AF%E4%B8%80%E4%B8%AA%E7%BB%84%E5%90%88%E5%AF%B9%E8%B1%A1%EF%BC%8C%E7%94%B1%E4%B8%89%E4%B8%AA%E5%AF%B9%E8%B1%A1%E7%BB%84%E6%88%90%E3%80%82%E8%BF%99%E4%B8%89%E4%B8%AA%E5%AF%B9%E8%B1%A1%E6%9C%89%E4%B8%8D%E5%90%8C%E7%B1%BB%E5%9E%8B%EF%BC%9A%E6%95%B4%E5%9E%8B%E3%80%81%E6%B5%AE%E7%82%B9%E5%9E%8B%E3%80%81%E5%AD%97%E7%AC%A6%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E7%B1%BB%E5%AF%B9%E8%B1%A1%E7%A7%B0%E4%B8%BA%EF%BC%9A%3Ccode%3Etuple%3C/code%3E%E3%80%82%3C/p%3E%3Cp%3Etuple%E7%9A%84%E5%A3%B0%E6%98%8E%E5%92%8Carray%E7%B1%BB%E4%BC%BC%E3%80%82%E5%94%AF%E4%B8%80%E4%B8%8D%E5%90%8C%E6%98%AFtuple%E7%94%A8%E7%9A%84%E6%98%AF%E5%B0%8F%E6%8B%AC%E5%8F%B7%EF%BC%8C%E6%95%B0%E7%BB%84%E7%94%A8%E7%9A%84%E6%98%AF%E6%96%B9%E6%8B%AC%E5%8F%B7%E3%80%82%3C/p%3E%3Cp%3Etuple%E7%9A%84%E6%9D%A1%E7%9B%AE%E7%A7%B0%E4%B8%BA%E5%AD%97%E6%AE%B5(field)%E3%80%82%3C/p%3E%3Cp%3Etuple%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%8F%AF%E4%BB%A5%E6%98%BE%E5%BC%8F%E6%8C%87%E6%98%8E%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Edata%3C/span%3E:%20(%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E,%20%3Cspan%20class=%22type%22%3Echar%3C/span%3E)%20=%20(%3Cspan%20class=%22number%22%3E10000000%3C/span%3E,%20%3Cspan%20class=%22number%22%3E183.19%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;Q&amp;#x27;%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%BD%A0%E5%8F%AF%E4%BB%A5%E7%94%A8%E7%82%B9%E7%AC%A6%E5%8F%B7(dot-notation)%E8%AE%BF%E9%97%AEtuple%E7%9A%84field%E7%9A%84%E5%80%BC%E3%80%82%3C/p%3E%3Cp%3E%E7%B1%BB%E4%BC%BC%E5%9C%B0%EF%BC%8Ctuple%E5%8F%AF%E4%BB%A5%E6%98%AFmutable%E7%9A%84%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Edata%3C/span%3E%20=%20(%3Cspan%20class=%22number%22%3E10000000%3C/span%3E,%20%3Cspan%20class=%22number%22%3E183.19%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;Q&amp;#x27;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Edata.%3Cspan%20class=%22number%22%3E0%3C/span%3E%20=%20-%3Cspan%20class=%22number%22%3E5%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Edata.%3Cspan%20class=%22number%22%3E2%3C/span%3E%20=%20%3Cspan%20class=%22string%22%3E&amp;#x27;x&amp;#x27;%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;,%20&amp;#123;&amp;#125;,%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20data.%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20data.%3Cspan%20class=%22number%22%3E1%3C/span%3E,%20data.%3Cspan%20class=%22number%22%3E2%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BE%93%E5%87%BA%E4%B8%BA%EF%BC%9A%E2%80%9C-5,%20183.19,%20x%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E7%B1%BB%E4%BC%BC%E4%BA%8E%E6%95%B0%E7%BB%84%EF%BC%8Ctuple%E5%8F%AF%E4%BB%A5%E6%9C%89%E4%BB%BB%E6%84%8F%E4%B8%AA%E5%AD%97%E6%AE%B5(field)%E3%80%82%E5%A6%82%E6%9E%9C%E4%B8%80%E4%B8%AAfield%E9%83%BD%E6%B2%A1%E6%9C%89%EF%BC%8C%E8%BF%99%E4%B8%AAtuple%E7%9A%84%E7%B1%BB%E5%9E%8B%E6%98%AF%E2%80%9C()%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%89%8D%E9%9D%A2%E5%B7%B2%E7%BB%8F%E4%BB%8B%E7%BB%8D%E8%BF%87%E2%80%9Cempty%20tuples%E2%80%9D%E3%80%82%E4%B8%8B%E9%9D%A2%E8%A7%A3%E6%9E%90%E4%B8%8B%EF%BC%9A%3C/p%3E%3Cp%3E%E4%B8%80%E4%B8%AA%E4%B8%8D%E5%90%8C%E7%9A%84%E5%9C%B0%E6%96%B9%E6%98%AF%EF%BC%8Ctuples%E4%B8%8D%E5%90%8C%E9%80%9A%E8%BF%87%E5%8F%98%E9%87%8F%E4%B8%8B%E6%A0%87%E8%BF%9B%E8%A1%8C%E8%AE%BF%E9%97%AE%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Earray%3C/span%3E%20=%20[%3Cspan%20class=%22number%22%3E12%3C/span%3E,%20%3Cspan%20class=%22number%22%3E13%3C/span%3E,%20%3Cspan%20class=%22number%22%3E14%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Etuple%3C/span%3E%20=%20(%3Cspan%20class=%22number%22%3E12%3C/span%3E,%20%3Cspan%20class=%22number%22%3E13%3C/span%3E,%20%3Cspan%20class=%22number%22%3E14%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ei%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E0%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20array[i]);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20tuple.i);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%9C%80%E5%90%8E%E4%B8%80%E8%A1%8C%E6%98%AF%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%8C%E5%9B%A0%E4%B8%BA%E4%B8%8D%E8%83%BD%E5%9C%A8%E8%BF%90%E8%A1%8C%E6%97%B6%E7%A1%AE%E5%AE%9Atuple%E7%9A%84field%E7%9A%84%E5%80%BC%E3%80%82%E5%8D%B3%E4%BD%BF%E7%94%A8const%E6%9D%A5%E6%A0%87%E8%AF%86%E4%B9%9F%E4%B8%8D%E8%A1%8C%EF%BC%8C%E5%9B%A0%E4%B8%BAtuple.i%E8%A1%A8%E8%BF%B0%E7%9A%84%E6%98%AF%E5%AE%83%E7%9A%84field%EF%BC%8C%E8%AF%AD%E6%B3%95%E4%B8%8A%E8%AE%A4%E4%B8%BA%3Ccode%3E&amp;lt;expr&amp;gt;.&amp;lt;integer&amp;gt;%3C/code%3E%EF%BC%8C%E8%A7%A3%E6%9E%90%E5%99%A8%E4%BC%9A%E8%AE%A4%E4%B8%BA%E5%8F%96%E5%85%B6field%EF%BC%8C%E5%AE%9E%E9%99%85%E4%B8%8A%E5%8F%AF%E7%9C%8B%E5%81%9A%E6%98%AF%E4%B8%80%E4%B8%AA%E6%96%B9%E6%B3%95%E8%B0%83%E7%94%A8%EF%BC%8C%E4%B8%BB%E8%A6%81%E6%98%AF%E4%B8%BA%E4%BA%86%E8%AF%AD%E4%B9%89%E4%B8%8A%E7%9A%84%E4%B8%80%E8%87%B4%E6%80%A7%E3%80%82%3C/p%3E%3Cblockquote%3E%3Cp%3E%E4%B8%BA%E4%BB%80%E4%B9%88Rust%E8%BF%99%E6%A0%B7%E5%AE%9A%E4%B9%89%EF%BC%9A%3Cbr%3E%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%8F%82%E8%80%83%3Ca%20href=%22https:/github.com/AndrewScull/rust/blob/1cc8b6ec664f30b43f75551e95299d943c8a4e6a/src/libcore/tuple.rs%22%3E%E6%BA%90%E7%A0%81%3C/a%3E%E5%BE%97%E7%9F%A5%EF%BC%8Ctuple%E5%9C%A8%E5%AE%8F%E4%B8%AD%EF%BC%8C%E6%BB%A1%E8%B6%B3%3Ccode%3E&amp;lt;expr&amp;gt;.&amp;lt;integer&amp;gt;%3C/code%3E%EF%BC%8C%E5%90%8E%E9%9D%A2%E7%9A%84%E6%95%B0%E5%AD%97%E8%A2%AB%E7%9C%8B%E5%81%9Aidentifier%E5%A4%84%E7%90%86%E4%BA%86%E3%80%82%3Cbr%3E%E5%8F%AF%E4%BB%A5%E5%8F%82%E8%80%83%3Ca%20href=%22https:/github.com/rust-lang/rfcs/blob/master/text/0184-tuple-accessors.md%22%3Erfc%3C/a%3E%E8%BF%99%E6%A0%B7%E8%AE%BE%E8%AE%A1%E7%9A%84%E5%8E%9F%E5%9B%A0%E3%80%82%3C/p%3E%3C/blockquote%3E%3Ch2%20id=%22The-Structs%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#The-Structs%22%3E%C2%B6%3C/a%3EThe%20Structs%3C/h2%3E%3Cp%3ETuple%E5%9C%A8%E6%9D%A1%E7%9B%AE%E8%BE%83%E5%B0%91%E6%97%B6%E6%AF%94%E8%BE%83%E5%A5%BD%E7%94%A8%E3%80%82%E5%BD%93%E5%AD%97%E6%AE%B5%E8%BF%87%E5%A4%9A%E4%BA%86%EF%BC%8C%E4%BC%9A%E5%B8%A6%E6%9D%A5%E4%B8%80%E4%BA%9B%E9%9A%9C%E7%A2%8D%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Edata%3C/span%3E%20=%20(%3Cspan%20class=%22number%22%3E10%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;x&amp;#x27;%3C/span%3E,%20%3Cspan%20class=%22number%22%3E12%3C/span%3E,%20%3Cspan%20class=%22number%22%3E183.19%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;Q&amp;#x27;%3C/span%3E,%20%3Cspan%20class=%22literal%22%3Efalse%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E9%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20data.%3Cspan%20class=%22number%22%3E2%3C/span%3E%20+%20data.%3Cspan%20class=%22number%22%3E6%3C/span%3E);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%B8%8A%E8%BF%B0%E4%BB%A3%E7%A0%81%EF%BC%8C%E5%B9%B6%E4%B8%8D%E8%83%BD%E4%B8%80%E7%9C%BC%E7%9C%8B%E5%87%BA%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C%E6%98%AF3%E3%80%82%E5%8F%A6%E5%A4%96%EF%BC%8C%E4%BB%BB%E4%BD%95tuple%E5%AD%97%E6%AE%B5%E6%98%AF%E6%8C%89%E9%A1%BA%E5%BA%8F%E5%AE%9A%E4%B9%89%E7%9A%84%EF%BC%8C%E5%BD%93%E7%B1%BB%E5%9E%8B%E8%B6%B3%E5%A4%9F%E5%A4%9A%E6%97%B6%EF%BC%8C%E4%BC%9A%E5%8F%98%E5%BE%97%E9%9A%BE%E4%BA%8E%E9%98%85%E8%AF%BB%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Edata1%3C/span%3E%20=%20(%3Cspan%20class=%22number%22%3E10%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;x&amp;#x27;%3C/span%3E,%20%3Cspan%20class=%22number%22%3E12%3C/span%3E,%20%3Cspan%20class=%22number%22%3E183.19%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;Q&amp;#x27;%3C/span%3E,%20%3Cspan%20class=%22literal%22%3Efalse%3C/span%3E,%20-%3Cspan%20class=%22number%22%3E9%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Edata2%3C/span%3E:%20(%3Cspan%20class=%22type%22%3Eu16%3C/span%3E,%20%3Cspan%20class=%22type%22%3Echar%3C/span%3E,%20%3Cspan%20class=%22type%22%3Ei16%3C/span%3E,%20%3Cspan%20class=%22type%22%3Ef64%3C/span%3E,%20%3Cspan%20class=%22type%22%3Ebool%3C/span%3E,%20%3Cspan%20class=%22type%22%3Echar%3C/span%3E,%20%3Cspan%20class=%22type%22%3Ei16%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Edata2%20=%20data1;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%8F%A6%E5%A4%96%EF%BC%8C%E5%AF%B9%E4%BA%8Etuple%E6%9D%A5%E8%AF%B4%EF%BC%8C%E6%B7%BB%E5%8A%A0%E6%88%96%E5%88%A0%E9%99%A4%E4%B8%80%E4%B8%AAfiled%EF%BC%8Cdata.2%E5%B0%B1%E5%8F%AF%E8%83%BD%E5%81%8F%E7%A7%BB%E5%88%B0data.3%E3%80%82%E8%BF%99%E6%A0%B7%E5%A4%84%E7%90%86%E4%B9%9F%E5%BE%88%E9%BA%BB%E7%83%A6%E3%80%82%3C/p%3E%3Cp%3E%E5%9B%A0%E6%AD%A4%EF%BC%8CRust%E7%BB%99%E5%87%BA%E4%BA%86%E4%B8%80%E4%B8%AA%E6%9C%89%E5%85%B7%E4%BD%93%E7%B1%BB%E5%9E%8B%E7%9A%84%E7%BB%93%E6%9E%84%EF%BC%8C%E7%9B%B8%E5%BD%93%E4%BA%8EC%E8%AF%AD%E8%A8%80%E7%9A%84%E6%9E%84%E9%80%A0%E4%BD%93%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ESomeData%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Einteger:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Efractional:%20%3Cspan%20class=%22type%22%3Ef32%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Echaracter:%20%3Cspan%20class=%22type%22%3Echar%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Efive_bytes:%20[%3Cspan%20class=%22type%22%3Eu8%3C/span%3E;%20%3Cspan%20class=%22number%22%3E5%3C/span%3E],%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Edata%3C/span%3E%20=%20SomeData%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Einteger:%20%3Cspan%20class=%22number%22%3E10_000_000%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Efractional:%20%3Cspan%20class=%22number%22%3E183.19%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Echaracter:%20%3Cspan%20class=%22string%22%3E&amp;#x27;Q&amp;#x27;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Efive_bytes:%20[%3Cspan%20class=%22number%22%3E9%3C/span%3E,%20%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20%3Cspan%20class=%22number%22%3E250%3C/span%3E,%20%3Cspan%20class=%22number%22%3E60%3C/span%3E,%20%3Cspan%20class=%22number%22%3E200%3C/span%3E],%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;,%20&amp;#123;&amp;#125;,%20&amp;#123;&amp;#125;,%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Edata.five_bytes[%3Cspan%20class=%22number%22%3E3%3C/span%3E],%20data.integer,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Edata.fractional,%20data.character);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E6%89%93%E5%8D%B0%EF%BC%9A60%EF%BC%8C%2010000000%EF%BC%8C%20183.19%EF%BC%8C%20Q%E3%80%82%3C/p%3E%3Cp%3ERust%E4%B8%AD%E7%9A%84%E7%BB%93%E6%9E%84%E4%BD%93%EF%BC%8C%E6%98%AF%E6%9C%89%3Ccode%3Estruct%3C/code%3E%E5%85%B3%E9%94%AE%E5%AD%97%E5%A3%B0%E6%98%8E%E7%9A%84%E4%B8%80%E4%B8%AAblock%EF%BC%8C%E5%AE%83%E5%A3%B0%E6%98%8E%E4%BA%86%E4%B8%80%E4%B8%AA%E2%80%9CSomeData%E2%80%9D%E7%B1%BB%E5%9E%8B%E3%80%82%E4%BB%BB%E4%BD%95%E8%AF%A5%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E9%83%BD%E6%9C%89%E4%B8%94%E4%BB%85%E6%9C%89%E5%9B%BA%E5%AE%9A%E7%9A%84%E5%AD%97%E6%AE%B5%EF%BC%8C%E4%BB%A5%E5%8F%8A%E6%AF%8F%E4%B8%AA%E5%AD%97%E6%AE%B5%E7%9A%84%E7%B1%BB%E5%9E%8B%E4%B9%9F%E6%98%AF%E5%9B%BA%E5%AE%9A%E7%9A%84%E3%80%82%3C/p%3E%3Cp%3E%E8%A6%81%E5%A3%B0%E6%98%8E%E4%B8%80%E4%B8%AA%E8%AF%A5%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%8F%98%E9%87%8F%E2%80%9Cdata%E2%80%9D%EF%BC%8C%E4%BB%A5%E5%8F%8A%E5%88%9D%E5%A7%8B%E5%8C%96%E8%BF%99%E4%B8%AA%E7%B1%BB%E5%9E%8B%E5%AF%B9%E8%B1%A1%E3%80%82%E7%9B%B4%E6%8E%A5%E7%94%A8%E2%80%9Cname%E2%80%9D%E5%B8%A6%E4%B8%8A%E5%AF%B9%E5%BA%94%E5%AD%97%E6%AE%B5%E5%8D%B3%E5%8F%AF%E3%80%82%3C/p%3E%3Cp%3E%E8%A6%81%E8%AE%BF%E9%97%AEstruct-object%E7%9A%84%E5%80%BC%EF%BC%8C%E7%94%A8%E6%B3%95%E5%92%8Ctuple%E4%B8%80%E6%A0%B7%EF%BC%8C%E7%94%A8dot-notation%E8%AE%BF%E9%97%AE%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8A%E8%BF%B0%E4%BB%A3%E7%A0%81%E7%B1%BB%E4%BC%BC%E4%BA%8EC%E8%AF%AD%E8%A8%80%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20c%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E19%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22meta%22%3E#%3Cspan%20class=%22keyword%22%3Einclude%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;lt;stdio.h&amp;gt;%3C/span%3E%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22type%22%3Eint%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Emain%3C/span%3E%3Cspan%20class=%22params%22%3E()%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22class%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%22%3ESomeData%3C/span%3E%20&amp;#123;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22type%22%3Eint%3C/span%3E%20integer;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22type%22%3Efloat%3C/span%3E%20fractional;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22type%22%3Echar%3C/span%3E%20character;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22type%22%3Eunsigned%3C/span%3E%20%3Cspan%20class=%22type%22%3Echar%3C/span%3E%20five_bytes[%3Cspan%20class=%22number%22%3E5%3C/span%3E];%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22class%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%22%3ESomeData%3C/span%3E%20%3Cspan%20class=%22title%22%3Edata%3C/span%3E%20=%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22number%22%3E10000000%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22number%22%3E183.19%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22string%22%3E&amp;#x27;Q&amp;#x27;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#123;%3Cspan%20class=%22number%22%3E9%3C/span%3E,%20%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20%3Cspan%20class=%22number%22%3E250%3C/span%3E,%20%3Cspan%20class=%22number%22%3E60%3C/span%3E,%20%3Cspan%20class=%22number%22%3E200%3C/span%3E&amp;#125;,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintf%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;%d,%20%d,%20%g,%20%c&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Edata.five_bytes[%3Cspan%20class=%22number%22%3E3%3C/span%3E],%20data.integer,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Edata.fractional,%20data.character);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ereturn%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E5%92%8CC%E8%AF%AD%E8%A8%80%E7%9A%84%E5%86%99%E6%B3%95%E8%BF%9B%E8%A1%8C%E5%AF%B9%E6%AF%94%E4%B8%8B%E3%80%82%3C/p%3E%3Cp%3EC%E4%B8%AD%E5%AD%97%E6%AE%B5%E7%94%A8%E5%88%86%E5%8F%B7%E9%9A%94%E5%BC%80%EF%BC%8CRust%E4%B8%AD%E7%94%A8%E9%80%97%E5%8F%B7%EF%BC%8C%3C/p%3E%3Cp%3ERust%E4%B8%AD%EF%BC%8C%E5%AD%97%E6%AE%B5%E5%B8%A6%E6%9C%89%E7%B1%BB%E5%9E%8B%EF%BC%8C%E6%94%BE%E5%9C%A8%E5%90%8E%E9%9D%A2%EF%BC%9BC%E6%94%BE%E5%9C%A8%E5%89%8D%E9%9D%A2%EF%BC%8C%3C/p%3E%3Cp%3EC%E7%9A%84%E5%AD%97%E6%AE%B5%E7%B1%BB%E5%9E%8B%E5%8F%AF%E4%BB%A5%E7%AE%80%E5%86%99%EF%BC%8C%E2%80%9Cint%20a,%20b;%E2%80%9D%EF%BC%9B%E4%BD%86%E6%98%AF%E5%9C%A8Rust%E4%B8%AD%EF%BC%8C%E6%AF%8F%E4%B8%AA%E5%AD%97%E6%AE%B5%E9%83%BD%E8%A6%81%E6%8C%87%E5%AE%9A%E7%B1%BB%E5%9E%8B%E2%80%9Ca:%20i32,%20b:%20i32%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3EC%E4%B8%AD%EF%BC%8C%E5%88%9D%E5%A7%8B%E5%8C%96%E5%BE%88%E7%AE%80%E5%8D%95%EF%BC%8C%E7%B1%BB%E4%BC%BC%E4%BA%8ERust%E7%9A%84tuple%EF%BC%9B%E4%BD%86%E6%98%AFRust%E7%9A%84%E7%BB%93%E6%9E%84%E4%BD%93%E5%88%9D%E5%A7%8B%E5%8C%96%EF%BC%8C%E5%BF%85%E9%A1%BB%E6%8C%87%E5%AE%9A%E5%AD%97%E6%AE%B5%E5%90%8D%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8D%E8%AE%BAC%E8%BF%98%E6%98%AFRust%EF%BC%8C%E9%83%BD%E6%98%AF%E7%82%B9%E6%A0%87%E8%AE%B0%E7%AC%A6(dot-notation)%E8%B0%83%E7%94%A8%E3%80%82%3C/p%3E%3Cp%3E%E5%A6%82%E6%9E%9C%E5%A3%B0%E6%98%8E%E7%9A%84%E6%98%AF%E4%B8%80%E4%B8%AA%E5%8F%AF%E5%8F%98(mutable)%E5%8F%98%E9%87%8F%EF%BC%8C%E5%90%8C%E6%A0%B7%E5%8F%AF%E4%BB%A5%E7%94%A8%E7%82%B9%E6%A0%87%E8%AE%B0%E7%AC%A6(dot-notation)%E5%8F%98%E6%9B%B4%E5%AD%97%E6%AE%B5%E7%9A%84%E5%80%BC%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ESomeData%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Einteger:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Efractional:%20%3Cspan%20class=%22type%22%3Ef32%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Edata%3C/span%3E%20=%20SomeData%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Einteger:%20%3Cspan%20class=%22number%22%3E10%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Efractional:%20%3Cspan%20class=%22number%22%3E183.19%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Edata.fractional%20=%20%3Cspan%20class=%22number%22%3E8.2%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%EF%BC%8C%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20data.fractional,%20data.integer);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E8%BE%93%E5%87%BA%EF%BC%9A%E2%80%9C8.2%EF%BC%8C10%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%92%8Ctuple%E4%B8%80%E6%A0%B7%EF%BC%8Cstrcut%E4%B9%9F%E5%8F%AF%E4%BB%A5%E6%98%AF%E7%A9%BA%E3%80%82%3C/p%3E%3Ch2%20id=%22The-Tuple-Structs%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#The-Tuple-Structs%22%3E%C2%B6%3C/a%3EThe%20Tuple-Structs%3C/h2%3E%3Cp%3E%E5%88%B0%E7%9B%AE%E5%89%8D%E4%B8%BA%E6%AD%A2%EF%BC%8C%E6%9C%89%E4%B8%A4%E7%B1%BB%E7%BB%93%E6%9E%84%E5%8C%96%E7%9A%84%E5%AE%B9%E5%99%A8%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3Etuple%EF%BC%8C%E7%B1%BB%E5%9E%8B%E6%B2%A1%E6%9C%89%E5%90%8D%E7%A7%B0%EF%BC%8C%E4%B8%8D%E8%83%BD%E6%8F%90%E5%89%8D%E5%A3%B0%E6%98%8E%EF%BC%8C%E5%AD%97%E6%AE%B5%E6%B2%A1%E6%9C%89%E5%90%8D%E7%A7%B0%EF%BC%9B%3C/li%3E%3Cli%3Estruct%EF%BC%8C%E7%B1%BB%E5%9E%8B%E6%9C%89%E5%90%8D%E7%A7%B0%EF%BC%8C%E5%BF%85%E9%A1%BB%E6%8F%90%E5%89%8D%E5%A3%B0%E6%98%8E%EF%BC%8C%E5%AD%97%E6%AE%B5%E6%9C%89%E5%90%8D%E7%A7%B0%E3%80%82%3C/li%3E%3C/ul%3E%3Cp%3E%E5%8F%A6%E5%A4%96%E8%BF%98%E9%9C%80%E8%A6%81%E4%B8%80%E7%A7%8D%E7%BB%93%E6%9E%84%EF%BC%9A%E7%B1%BB%E5%9E%8B%E6%9C%89%E5%90%8D%E7%A7%B0%EF%BC%8C%E9%9C%80%E8%A6%81%E6%8F%90%E5%89%8D%E5%A3%B0%E6%98%8E%EF%BC%8C%E4%BD%86%E5%AD%97%E6%AE%B5%E6%B2%A1%E6%9C%89%E5%90%8D%E7%A7%B0%E3%80%82%E8%BF%99%E7%A7%8D%E5%9F%BA%E4%BA%8Etuple%E5%92%8Cstruct%E5%BD%A2%E5%BC%8F%E7%9A%84%E7%BB%93%E6%9E%84%E4%BD%93%E3%80%82%E7%A7%B0%E4%B8%BA%EF%BC%9A%E2%80%9C%3Ccode%3Etuple-structs%3C/code%3E%E2%80%9D%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ESomeData%3C/span%3E%20(%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22type%22%3Ei32%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22type%22%3Ef32%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22type%22%3Echar%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E[%3Cspan%20class=%22type%22%3Eu8%3C/span%3E;%20%3Cspan%20class=%22number%22%3E5%3C/span%3E],%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Edata%3C/span%3E%20=%20%3Cspan%20class=%22title%20function_%20invoke__%22%3ESomeData%3C/span%3E%20(%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22number%22%3E10_000_000%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22number%22%3E183.19%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22string%22%3E&amp;#x27;Q&amp;#x27;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E[%3Cspan%20class=%22number%22%3E9%3C/span%3E,%20%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20%3Cspan%20class=%22number%22%3E250%3C/span%3E,%20%3Cspan%20class=%22number%22%3E60%3C/span%3E,%20%3Cspan%20class=%22number%22%3E200%3C/span%3E],%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;,%20&amp;#123;&amp;#125;,%20&amp;#123;&amp;#125;,%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Edata.%3Cspan%20class=%22number%22%3E2%3C/span%3E,%20data.%3Cspan%20class=%22number%22%3E0%3C/span%3E,%20data.%3Cspan%20class=%22number%22%3E1%3C/span%3E,%20data.%3Cspan%20class=%22number%22%3E3%3C/span%3E[%3Cspan%20class=%22number%22%3E2%3C/span%3E]);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E8%BF%99%E7%A7%8D%E7%BB%93%E6%9E%84%E6%84%9F%E8%A7%89%E5%BE%88%E5%88%AB%E6%89%AD%EF%BC%8C%E5%9B%A0%E4%B8%BA%E6%98%AF%E7%94%A8%E5%9C%86%E6%8B%AC%E5%8F%B7%E4%BD%9C%E8%AF%AD%E5%8F%A5%E5%9D%97%EF%BC%8C%E5%B9%B6%E4%B8%94%E6%B2%A1%E6%9C%89%E6%8C%87%E5%AE%9A%E5%AD%97%E6%AE%B5%E7%9A%84%E5%90%8D%E7%A7%B0%EF%BC%8C%E5%88%9D%E5%A7%8B%E5%8C%96%E5%83%8Fstruct%EF%BC%8C%E8%AE%BF%E9%97%AE%E5%AD%97%E6%AE%B5%E6%96%B9%E5%BC%8F%E5%83%8Ftuple%E3%80%82%3C/p%3E%3Cp%3E%E5%8C%BA%E5%88%AB%E4%BA%8Etuple%E5%92%8Cstruct%EF%BC%8C%3Ccode%3Etuple-structs%3C/code%3E%E8%BF%99%E7%A7%8D%E7%BB%93%E6%9E%84%E4%B8%8D%E8%83%BD%E4%B8%BA%E7%A9%BA%E3%80%82%3C/p%3E%3Cp%3E%E5%AE%9E%E9%99%85%E5%BA%94%E7%94%A8%E4%B8%AD%EF%BC%8Ctuple-struct%E5%B9%B6%E4%B8%8D%E5%B8%B8%E7%94%A8%E3%80%82%3C/p%3E%3Ch2%20id=%22Lexical-Convertions%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Lexical-Convertions%22%3E%C2%B6%3C/a%3ELexical%20Convertions%3C/h2%3E%3Cp%3E%E5%88%B0%E7%9B%AE%E5%89%8D%E4%B8%BA%E6%AD%A2%EF%BC%8C%E6%88%91%E4%BB%AC%E8%AE%A4%E8%AF%86%E4%BA%86%E4%B8%80%E9%83%A8%E5%88%86Rust%E7%BB%93%E6%9E%84%E4%BD%93(%E4%B8%8D%E6%98%AF%E5%85%A8%E9%83%A8%EF%BC%81)%EF%BC%8C%E6%8E%A5%E4%B8%8B%E6%9D%A5%E8%A6%81%E9%98%90%E8%BF%B0%E4%B8%80%E4%BA%9B%E8%AF%8D%E6%B3%95%E8%A7%84%E5%88%99%E3%80%82%E8%BF%99%E4%BA%9B%E8%A7%84%E5%88%99%E6%98%AF%E5%A6%82%E6%AD%A4%E6%A0%B9%E6%B7%B1%E8%92%82%E5%9B%BA%EF%BC%8C%E7%94%9A%E8%87%B3%E4%BA%8E%E8%BF%9D%E5%8F%8D%E8%BF%99%E4%BA%9B%E8%A7%84%E5%88%99%E4%BC%9A%E4%BB%A4%E7%BC%96%E8%AF%91%E5%99%A8%E6%8A%9B%E5%87%BA%E8%AD%A6%E5%91%8A%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E19%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E20%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E21%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Econst%3C/span%3E%20MAXIMUM_POWER:%20%3Cspan%20class=%22type%22%3Eu16%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E600%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eenum%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EVehicleKind%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EMotorcycle,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ECar,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ETruck,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EVehicleData%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ekind:%20VehicleKind,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eregistration_year:%20%3Cspan%20class=%22type%22%3Eu16%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eregistration_month:%20%3Cspan%20class=%22type%22%3Eu8%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Epower:%20%3Cspan%20class=%22type%22%3Eu16%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Evehicle%3C/span%3E%20=%20VehicleData%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Ekind:%20VehicleKind::Car,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eregistration_year:%20%3Cspan%20class=%22number%22%3E2003%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eregistration_month:%20%3Cspan%20class=%22number%22%3E11%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Epower:%20%3Cspan%20class=%22number%22%3E120%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20vehicle.power%20&amp;gt;%20MAXIMUM_POWER%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Too%20powerful&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%B8%8A%E8%BF%B0%E4%BE%8B%E5%AD%90%E9%98%90%E8%BF%B0%E4%BA%86%E4%B8%80%E4%BA%9B%E8%A7%84%E5%88%99%E8%A6%81%E6%B1%82%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E5%B8%B8%E7%90%86%E7%9A%84%E5%90%8D%E7%A7%B0%E8%A6%81%E5%A4%A7%E4%BA%9B%EF%BC%8C%E5%B9%B6%E4%B8%94%E7%94%A8%E4%B8%8B%E5%88%92%E7%BA%BF%E5%88%92%E5%88%86%E8%AF%8D%E7%BB%84%E3%80%82%3C/li%3E%3Cli%3E%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%90%8D%E7%A7%B0%E7%94%B1%E5%BA%94%E7%94%A8%E4%BB%A3%E7%A0%81%E6%88%96%E6%A0%87%E5%87%86%E5%BA%93%E5%AE%9A%E4%B9%89%EF%BC%8C%E6%9E%9A%E4%B8%BE%E5%8F%98%E9%87%8F%E7%9A%84%E5%90%8D%E7%A7%B0%E7%94%B1%E4%B8%80%E7%BB%84%E5%85%B3%E8%81%94%E8%AF%8D%E6%B1%87%E7%B2%98%E5%90%88%EF%BC%8C%E8%A6%81%E6%B1%82%E5%91%BD%E5%90%8D%E9%A6%96%E5%AD%97%E6%AF%8D%E5%A4%A7%E5%86%99%E3%80%82%3C/li%3E%3Cli%3E%E5%85%B6%E5%AE%83(%E8%AF%B8%E5%A6%82%E5%85%B3%E9%94%AE%E5%AD%97%3Ccode%3Elet%3C/code%3E%E3%80%81%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%9E%8B%3Ccode%3Eu8%3C/code%3E)%E5%90%8D%E7%A7%B0%E5%88%99%E7%94%B1%E5%B0%8F%E5%86%99%E5%AD%97%E6%AF%8D%EF%BC%8C%E4%B8%8B%E5%88%92%E7%BA%BF%E5%88%92%E5%88%86%E8%AF%8D%E7%BB%84%E3%80%82%3C/li%3E%3C/ul%3E" type="image"/>
    
    
    <category term="learning" scheme="https://galudisu.info/categories/learning/"/>
    
    
    <category term="rust" scheme="https://galudisu.info/tags/rust/"/>
    
  </entry>
  
  <entry>
    <title>rust基础入门[07] - Enumerating Cases</title>
    <link href="https://galudisu.info/2023/01/07/rust/beginning/chapter07_Enumerating%20%20Cases/"/>
    <id>https://galudisu.info/2023/01/07/rust/beginning/chapter07_Enumerating%20%20Cases/</id>
    <published>2023-01-07T07:50:46.000Z</published>
    <updated>2025-04-27T11:59:08.282Z</updated>
    
    <content type="html"><![CDATA[<p>本章覆盖有：</p><ul><li>如何从有限集定义枚举变量</li><li>如何用枚举实现组合类型</li><li>如何用<code>match</code>模式匹配处理枚举</li><li>如何用<code>match</code>处理其他数据类型，诸如整数、字符、字符串</li><li>如何用布尔值泛化<code>match</code>结构</li></ul><span id="more"></span><h2 id="Enumerations"><a class="header-anchor" href="#Enumerations">¶</a>Enumerations</h2><p>与其下面的写法：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> EUROPE: <span class="type">u8</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">const</span> ASIA: <span class="type">u8</span> = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">const</span> AFRICA: <span class="type">u8</span> = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">const</span> AMERICA: <span class="type">u8</span> = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">const</span> OCEANIA: <span class="type">u8</span> = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="variable">continent</span> = ASIA;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> continent == EUROPE &#123; <span class="built_in">print!</span>(<span class="string">&quot;E&quot;</span>); &#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> continent == ASIA &#123; <span class="built_in">print!</span>(<span class="string">&quot;As&quot;</span>); &#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> continent == AFRICA &#123; <span class="built_in">print!</span>(Af<span class="string">&quot;); &#125;</span></span><br><span class="line"><span class="string">else if continent == AMERICA &#123; print!(&quot;</span>Am<span class="string">&quot;); &#125;</span></span><br><span class="line"><span class="string">else if continent == OCEANIA &#123; print!(&quot;</span>O<span class="string">&quot;); &#125;</span></span><br></pre></td></tr></table></figure><p>不如用下面等价写法：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> <span class="title class_">Continent</span> &#123;</span><br><span class="line">Europe,</span><br><span class="line">Asia,</span><br><span class="line">Africa,</span><br><span class="line">America,</span><br><span class="line">Oceania,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="variable">contin</span> = Contient::Asia;</span><br><span class="line"></span><br><span class="line"><span class="keyword">match</span> contin &#123;</span><br><span class="line">Continent:: Europe =&gt; <span class="built_in">print!</span>(<span class="string">&quot;E&quot;</span>),</span><br><span class="line">Continent:: Asia =&gt; <span class="built_in">print!</span>(<span class="string">&quot;As&quot;</span>),</span><br><span class="line">Continent:: Africa =&gt; <span class="built_in">print!</span>(<span class="string">&quot;Af&quot;</span>),</span><br><span class="line">Continent:: America =&gt; <span class="built_in">print!</span>(<span class="string">&quot;Am&quot;</span>),</span><br><span class="line">Continent:: Oceania =&gt; <span class="built_in">print!</span>(<span class="string">&quot;O&quot;</span>),</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>enum</code>关键字后面指定了一个新的类型Continent。这种类型称为枚举(enumerative)，因为它包含一系列条目，每个条目有唯一关联数字。在这个例子中，类型Continent允许的值是Europe，Asia，Africa，America和Oceania，内部由值0u8，1u8，2u8，3u8，4u8表示。</p><p>创建了枚举类型后，就可以创建该类型的对象。例如这里的 contin 变量，类型是 Continent。</p><p>枚举对象仅有一个值，这个值称为“变量(variants)”。</p><p>注意，变量的值必须由它的类型区分，例如 Continent::Asia。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> <span class="title class_">T</span> &#123;A, B, C, D&#125;;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">n</span>: <span class="type">i32</span> = T::D;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">e</span>: T = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>第二行会发生编译错误，第二三行都提示mismatched types错误。尽管期望是<code>i32</code>的枚举值<code>main::T</code>，但枚举类型并不能隐式转换为数值类型，数值类型也不能隐式转换为枚举类型。</p><h2 id="The-match-Construct"><a class="header-anchor" href="#The-match-Construct">¶</a>The match Construct</h2><p>Rust中，match语句是基本工具。类似于C语言的switch，但在很多层面不同。</p><p>首先，match关键字不需要闭合括号。</p><p>其次，多个case，称为“手臂(arms)”，用作模式，跟随符号“=&gt;”，接着跟着一个表达式。这些手臂用逗号分隔。</p><p>不管是声明枚举类型，还是在“<code>match</code>”语句，最后一个条目的逗号可写可不写。通常的做法是，如果是每行一个item，就带上逗号；如果是整行罗列，最后一个逗号会省略：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> <span class="title class_">CardinalPoint</span> &#123; North, South, West, East &#125;;</span><br></pre></td></tr></table></figure><p>match语句的行为是。</p><p>首先，<code>match</code>后的语句先被执行，因此获取一个值，例如这里是Continent::Asia。</p><p>然后，这个值会被用于比较五个pattern的每个手臂(arm)，按照行顺序进行比较。如果匹配，右边的语句被执行，语句结束。</p><p>注意每个手臂右边的必须是一个单一表达式。</p><p>事实上，只要带上分号，任何表达式都能成为有效的语句。例如</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">a</span> = <span class="number">7.2</span>;</span><br><span class="line"><span class="number">12</span>;</span><br><span class="line"><span class="literal">true</span>;</span><br><span class="line"><span class="number">4</span> &gt; <span class="number">7</span>;</span><br><span class="line"><span class="number">5.7</span> + <span class="number">5</span>. *a;</span><br></pre></td></tr></table></figure><p>上述这些代码是有效的，只是什么也没做。</p><p>但是，有些语句并不是有效的表达式。例如，“let a = 3; ”、“fn empty() {}”，</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">match</span> contin &#123;</span><br><span class="line">Continent::Europe =&gt; <span class="keyword">let</span> <span class="variable">a</span> = <span class="number">7</span>;,</span><br><span class="line">Continent::Asia =&gt; <span class="keyword">let</span> <span class="variable">a</span> = <span class="number">7</span>,</span><br><span class="line">Continent::Africa =&gt; f <span class="title function_ invoke__">aaa</span>() &#123;&#125;,</span><br><span class="line">Continent::America =&gt; <span class="built_in">print!</span>(<span class="string">&quot;Am&quot;</span>),</span><br><span class="line">Continent::Oceania =&gt; <span class="built_in">print!</span>(<span class="string">&quot;O&quot;</span>),</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>前面三个case会报错，因为 “=&gt;”后面跟的不是有效的表达式。</p><p>若果我们要执行多个表达式，可以使用语句块方式实现：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> <span class="title class_">Continent</span> &#123;</span><br><span class="line">Europe,</span><br><span class="line">Asia,</span><br><span class="line">Africa,</span><br><span class="line">America,</span><br><span class="line">Oceania,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">contin</span> = Continent::Asia;</span><br><span class="line"><span class="keyword">match</span> contin &#123;</span><br><span class="line">Continent::Europe =&gt; &#123;</span><br><span class="line">contin = Continent::Asia;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;E&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">Continent::Asia =&gt; &#123;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">a</span> = <span class="number">7</span>;</span><br><span class="line">&#125;</span><br><span class="line">Continent::Africa =&gt; <span class="built_in">print!</span>(<span class="string">&quot;Af&quot;</span>),</span><br><span class="line">Continent::America =&gt; <span class="built_in">print!</span>(<span class="string">&quot;Am&quot;</span>),</span><br><span class="line">Continent::Oceania =&gt; <span class="built_in">print!</span>(<span class="string">&quot;O&quot;</span>),</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Relational-Operators-and-Enums"><a class="header-anchor" href="#Relational-Operators-and-Enums">¶</a>Relational Operators and Enums</h2><p>枚举不能用“==”操作符作比较。实际上，下面程序是不合法的：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> <span class="title class_">CardinalPoint</span> &#123; North, South, West, East &#125;;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">direction</span> = CardinalPoint::South;</span><br><span class="line"><span class="keyword">if</span> direction == CardinalPoint::North &#123; &#125;</span><br></pre></td></tr></table></figure><p>编译器报“binary operation <code>==</code> cannot be applied to type <code>main::CardinalPoint</code>”。因此，你应该用 match 语句。</p><p>不仅是“==”操作符，其它二进制操作符都是错误的：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> <span class="title class_">CardinalPoint</span> &#123; North, South, West, East &#125;;</span><br><span class="line"><span class="keyword">if</span> CardinalPoint::South &lt; CardinalPoint::North &#123; &#125;</span><br></pre></td></tr></table></figure><h2 id="Handling-All-the-Cases"><a class="header-anchor" href="#Handling-All-the-Cases">¶</a>Handling All the Cases</h2><p>下面代码编译出错：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> <span class="title class_">CardinalPoint</span> &#123; North, South, West, East &#125;;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">direction</span> = CardinalPoint::South;</span><br><span class="line"><span class="keyword">match</span> direction &#123;</span><br><span class="line">CardinalPoint::North =&gt; <span class="built_in">print!</span>(<span class="string">&quot;NORTH&quot;</span>),</span><br><span class="line">CardinalPoint::South =&gt; <span class="built_in">print!</span>(<span class="string">&quot;SOUTH&quot;</span>),</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>会获得一个错误“non-exhaustive patterns: <code>West</code> and <code>East</code> not covered”。编译器会抱怨说，四个枚举值，仅两个被考虑了，另外两个West和East没有考虑进去。这是由于Rust要求显式处理所有的情况。</p><p>要解决这个问题有两种做法，一是匹配所有的情况；</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> <span class="title class_">CardinalPoint</span> &#123; North, South, West, East &#125;;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">direction</span> = CardinalPoint::South;</span><br><span class="line"><span class="keyword">match</span> direction &#123;</span><br><span class="line">CardinalPoint::North =&gt; <span class="built_in">print!</span>(<span class="string">&quot;NORTH&quot;</span>),</span><br><span class="line">CardinalPoint::South =&gt; <span class="built_in">print!</span>(<span class="string">&quot;SOUTH&quot;</span>),</span><br><span class="line">CardinalPoint::East =&gt; &#123;&#125;,</span><br><span class="line">CardinalPoint::West =&gt; &#123;&#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>二是使用下划线，做默认情况处理；</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> <span class="title class_">CardinalPoint</span> &#123; North, South, West, East &#125;;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">direction</span> = CardinalPoint::South;</span><br><span class="line"><span class="keyword">match</span> direction &#123;</span><br><span class="line">CardinalPoint::North =&gt; <span class="built_in">print!</span>(<span class="string">&quot;NORTH&quot;</span>),</span><br><span class="line">CardinalPoint::South =&gt; <span class="built_in">print!</span>(<span class="string">&quot;SOUTH&quot;</span>),</span><br><span class="line">_ =&gt; &#123;&#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意，下划线语句会匹配任何值，所以要将它放在最后。</p><h2 id="Using-match-with-Numbers"><a class="header-anchor" href="#Using-match-with-Numbers">¶</a>Using match with Numbers</h2><p>match结构，除了可以用于枚举，也可以用于其他数据类型：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">match</span> <span class="string">&quot;value&quot;</span> &#123;</span><br><span class="line"><span class="string">&quot;val&quot;</span> =&gt; <span class="built_in">print!</span>(<span class="string">&quot;value &quot;</span>),</span><br><span class="line">_ =&gt; <span class="built_in">print!</span>(<span class="string">&quot;other &quot;</span>),</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">match</span> <span class="number">3</span> &#123;</span><br><span class="line"><span class="number">3</span> =&gt; <span class="built_in">print!</span>(<span class="string">&quot;three &quot;</span>),</span><br><span class="line"><span class="number">4</span> =&gt; <span class="built_in">print!</span>(<span class="string">&quot;four &quot;</span>),</span><br><span class="line"><span class="number">5</span> =&gt; <span class="built_in">print!</span>(<span class="string">&quot;five &quot;</span>),</span><br><span class="line">_ =&gt; <span class="built_in">print!</span>(<span class="string">&quot;other &quot;</span>),</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">match</span> <span class="string">&#x27;.&#x27;</span> &#123;</span><br><span class="line"><span class="string">&#x27;:&#x27;</span> =&gt; <span class="built_in">print!</span>(<span class="string">&quot;colon &quot;</span>),</span><br><span class="line"><span class="string">&#x27;.&#x27;</span> =&gt; <span class="built_in">print!</span>(<span class="string">&quot;point &quot;</span>),</span><br><span class="line">_ =&gt; <span class="built_in">print!</span>(<span class="string">&quot;other &quot;</span>),</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果将输出：“other three point”。</p><h2 id="Enumerations-with-Data"><a class="header-anchor" href="#Enumerations-with-Data">¶</a>Enumerations with Data</h2><p>Rust的枚举类型，并没有前面看到的这么简单：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> <span class="title class_">Result</span> &#123;</span><br><span class="line"><span class="title function_ invoke__">Success</span>(<span class="type">f64</span>),</span><br><span class="line"><span class="title function_ invoke__">Failure</span>(<span class="type">u16</span>, <span class="type">char</span>),</span><br><span class="line">Uncertainty,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// let outcome = Result::Success(23.67);</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">outcome</span> = <span class="type">Result</span>::<span class="title function_ invoke__">Failure</span>(<span class="number">1200</span>, <span class="string">&#x27;X&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">match</span> outcome &#123;</span><br><span class="line"><span class="type">Result</span>::<span class="title function_ invoke__">Success</span>(value) =&gt; <span class="built_in">print!</span>(<span class="string">&quot;Result: &#123;&#125;&quot;</span>, value),</span><br><span class="line"><span class="type">Result</span>::<span class="title function_ invoke__">Failure</span>(error_code, module) =&gt; <span class="built_in">print!</span>(<span class="string">&quot;Error n. &#123;&#125; in module &#123;&#125;&quot;</span>, error_code, module),</span><br><span class="line"><span class="type">Result</span>::Uncertainty =&gt; &#123;&#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果将输出：“Error n. 1200 in module X”。</p><p>若替换为注解行，结果将输出为“Result: 23.67”。</p><p>对比于C语言，Rust的枚举类型包含枚举和组合的特性。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="class"><span class="keyword">enum</span> <span class="title">eResult</span> &#123;</span></span><br><span class="line">        Success,</span><br><span class="line">        Failure,</span><br><span class="line">        Uncertainty</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sResult</span> &#123;</span></span><br><span class="line">        <span class="class"><span class="keyword">enum</span> <span class="title">eResult</span> <span class="title">r</span>;</span></span><br><span class="line">        <span class="class"><span class="keyword">union</span> &#123;</span></span><br><span class="line">            <span class="type">double</span> value;</span><br><span class="line">            <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">                <span class="type">unsigned</span> <span class="type">short</span> error_code;</span><br><span class="line">                <span class="type">char</span> module;</span><br><span class="line">            &#125; s;</span><br><span class="line">        &#125; u;</span><br><span class="line">    &#125; outcome;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">outcome.r = Success;</span></span><br><span class="line"><span class="comment">outcome.u.value = 23.67;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">outcome.r = Failure;</span><br><span class="line">outcome.u.s.error_code = <span class="number">1200</span>;</span><br><span class="line">outcome.u.s.module = <span class="string">&#x27;X&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (outcome.r) &#123;</span><br><span class="line"><span class="keyword">case</span> Success:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Result: %g&quot;</span>, outcome.u.value);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> Failure:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Error n. %d in module %c&quot;</span>,</span><br><span class="line">   outcome.u.s.error_code,</span><br><span class="line">   outcome.u.s.module);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> Uncertainty:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在“match”语句中，模式匹配的参数，例如Result::Success(value)中的value，会被看做是该scope下的变量，以及该变量的类型，由这个手臂(arm)声明。</p><p>当手臂(arm)满足case，这个变量的值就被初始化。例如value的值是23.67。并且用于手臂右边的作用范围。</p><p>如果不需要这个变量，为避免编译告警，可以：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> <span class="title class_">Result</span> &#123;</span><br><span class="line"><span class="title function_ invoke__">Success</span>(<span class="type">f64</span>),</span><br><span class="line"><span class="title function_ invoke__">Failure</span>(<span class="type">u16</span>, <span class="type">char</span>),</span><br><span class="line">Uncertainty,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="variable">outcome</span> = <span class="type">Result</span>::<span class="title function_ invoke__">Success</span>(<span class="number">23.67</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">match</span> outcome &#123;</span><br><span class="line"><span class="type">Result</span>::<span class="title function_ invoke__">Success</span>(_) =&gt; <span class="built_in">print!</span>(<span class="string">&quot;OK&quot;</span>),</span><br><span class="line"><span class="type">Result</span>::<span class="title function_ invoke__">Failure</span>(error_code, module) =&gt;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;Error n. &#123;&#125; in module &#123;&#125;&quot;</span>, error_code, module),</span><br><span class="line"><span class="type">Result</span>::Uncertainty =&gt; &#123;&#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="“match”-Expressions"><a class="header-anchor" href="#“match”-Expressions">¶</a>“match” Expressions</h2><p>类似于“if”表达式，“match”也有表达式：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> <span class="title class_">CardinalPoint</span> &#123; North, South, West, East &#125;;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">direction</span> = CardinalPoint::South;</span><br><span class="line"><span class="built_in">print!</span>(<span class="string">&quot;&#123;&#125;&quot;</span>, <span class="keyword">match</span> direction &#123;</span><br><span class="line">CardinalPoint::North =&gt; <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">CardinalPoint::South =&gt; <span class="string">&#x27;S&#x27;</span>,</span><br><span class="line">_ =&gt; <span class="string">&#x27;*&#x27;</span>,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>结果会输出：“S.”。</p><p>这里有个要求，就是手臂右边的值，必须类型是一样的。如果将第三个case改为“_ =&gt; {}”。会发生“match arms have incompatible types”。因为是一个match表达式，所以它只能有指定的一种类型。</p><h2 id="Use-of-Guards-in-match-Constructs"><a class="header-anchor" href="#Use-of-Guards-in-match-Constructs">¶</a>Use of Guards in match Constructs</h2><p>假设我们要区分整数的类别：负数、0、1、正数：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="variable">n</span> <span class="keyword">in</span> -<span class="number">2</span>..<span class="number">5</span> &#123;</span><br><span class="line"><span class="built_in">println!</span>(<span class="string">&quot;&#123;&#125; is &#123;&#125;.&quot;</span>, n, <span class="keyword">match</span> n &#123;</span><br><span class="line"><span class="number">0</span> =&gt; <span class="string">&quot;zero&quot;</span>,</span><br><span class="line"><span class="number">1</span> =&gt; <span class="string">&quot;one&quot;</span>,</span><br><span class="line">_ <span class="keyword">if</span> n &lt; <span class="number">0</span> =&gt; <span class="string">&quot;negative&quot;</span>,</span><br><span class="line">_ =&gt; <span class="string">&quot;plural&quot;</span>,</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;本章覆盖有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如何从有限集定义枚举变量&lt;/li&gt;
&lt;li&gt;如何用枚举实现组合类型&lt;/li&gt;
&lt;li&gt;如何用&lt;code&gt;match&lt;/code&gt;模式匹配处理枚举&lt;/li&gt;
&lt;li&gt;如何用&lt;code&gt;match&lt;/code&gt;处理其他数据类型，诸如整数、字符、字符串&lt;/li&gt;
&lt;li&gt;如何用布尔值泛化&lt;code&gt;match&lt;/code&gt;结构&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    <content src="https://galudisu.info/%3Cp%3E%E6%9C%AC%E7%AB%A0%E8%A6%86%E7%9B%96%E6%9C%89%EF%BC%9A%3C/p%3E%3Cul%3E%3Cli%3E%E5%A6%82%E4%BD%95%E4%BB%8E%E6%9C%89%E9%99%90%E9%9B%86%E5%AE%9A%E4%B9%89%E6%9E%9A%E4%B8%BE%E5%8F%98%E9%87%8F%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E7%94%A8%E6%9E%9A%E4%B8%BE%E5%AE%9E%E7%8E%B0%E7%BB%84%E5%90%88%E7%B1%BB%E5%9E%8B%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E7%94%A8%3Ccode%3Ematch%3C/code%3E%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D%E5%A4%84%E7%90%86%E6%9E%9A%E4%B8%BE%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E7%94%A8%3Ccode%3Ematch%3C/code%3E%E5%A4%84%E7%90%86%E5%85%B6%E4%BB%96%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%EF%BC%8C%E8%AF%B8%E5%A6%82%E6%95%B4%E6%95%B0%E3%80%81%E5%AD%97%E7%AC%A6%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%3C/li%3E%3Cli%3E%E5%A6%82%E4%BD%95%E7%94%A8%E5%B8%83%E5%B0%94%E5%80%BC%E6%B3%9B%E5%8C%96%3Ccode%3Ematch%3C/code%3E%E7%BB%93%E6%9E%84%3C/li%3E%3C/ul%3E%3Cspan%20id=%22more%22%3E%3C/span%3E%3Ch2%20id=%22Enumerations%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Enumerations%22%3E%C2%B6%3C/a%3EEnumerations%3C/h2%3E%3Cp%3E%E4%B8%8E%E5%85%B6%E4%B8%8B%E9%9D%A2%E7%9A%84%E5%86%99%E6%B3%95%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Econst%3C/span%3E%20EUROPE:%20%3Cspan%20class=%22type%22%3Eu8%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E0%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Econst%3C/span%3E%20ASIA:%20%3Cspan%20class=%22type%22%3Eu8%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E1%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Econst%3C/span%3E%20AFRICA:%20%3Cspan%20class=%22type%22%3Eu8%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E2%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Econst%3C/span%3E%20AMERICA:%20%3Cspan%20class=%22type%22%3Eu8%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E3%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Econst%3C/span%3E%20OCEANIA:%20%3Cspan%20class=%22type%22%3Eu8%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E4%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Econtinent%3C/span%3E%20=%20ASIA;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20continent%20==%20EUROPE%20&amp;#123;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;E&amp;quot;%3C/span%3E);%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20continent%20==%20ASIA%20&amp;#123;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;As&amp;quot;%3C/span%3E);%20&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eelse%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20continent%20==%20AFRICA%20&amp;#123;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(Af%3Cspan%20class=%22string%22%3E&amp;quot;);%20&amp;#125;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22string%22%3Eelse%20if%20continent%20==%20AMERICA%20&amp;#123;%20print!(&amp;quot;%3C/span%3EAm%3Cspan%20class=%22string%22%3E&amp;quot;);%20&amp;#125;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22string%22%3Eelse%20if%20continent%20==%20OCEANIA%20&amp;#123;%20print!(&amp;quot;%3C/span%3EO%3Cspan%20class=%22string%22%3E&amp;quot;);%20&amp;#125;%3C/span%3E%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%B8%8D%E5%A6%82%E7%94%A8%E4%B8%8B%E9%9D%A2%E7%AD%89%E4%BB%B7%E5%86%99%E6%B3%95%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eenum%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EContinent%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EEurope,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EAsia,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EAfrica,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EAmerica,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EOceania,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Econtin%3C/span%3E%20=%20Contient::Asia;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ematch%3C/span%3E%20contin%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EContinent::%20Europe%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;E&amp;quot;%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EContinent::%20Asia%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;As&amp;quot;%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EContinent::%20Africa%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Af&amp;quot;%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EContinent::%20America%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Am&amp;quot;%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EContinent::%20Oceania%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;O&amp;quot;%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%3Ccode%3Eenum%3C/code%3E%E5%85%B3%E9%94%AE%E5%AD%97%E5%90%8E%E9%9D%A2%E6%8C%87%E5%AE%9A%E4%BA%86%E4%B8%80%E4%B8%AA%E6%96%B0%E7%9A%84%E7%B1%BB%E5%9E%8BContinent%E3%80%82%E8%BF%99%E7%A7%8D%E7%B1%BB%E5%9E%8B%E7%A7%B0%E4%B8%BA%E6%9E%9A%E4%B8%BE(enumerative)%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E5%8C%85%E5%90%AB%E4%B8%80%E7%B3%BB%E5%88%97%E6%9D%A1%E7%9B%AE%EF%BC%8C%E6%AF%8F%E4%B8%AA%E6%9D%A1%E7%9B%AE%E6%9C%89%E5%94%AF%E4%B8%80%E5%85%B3%E8%81%94%E6%95%B0%E5%AD%97%E3%80%82%E5%9C%A8%E8%BF%99%E4%B8%AA%E4%BE%8B%E5%AD%90%E4%B8%AD%EF%BC%8C%E7%B1%BB%E5%9E%8BContinent%E5%85%81%E8%AE%B8%E7%9A%84%E5%80%BC%E6%98%AFEurope%EF%BC%8CAsia%EF%BC%8CAfrica%EF%BC%8CAmerica%E5%92%8COceania%EF%BC%8C%E5%86%85%E9%83%A8%E7%94%B1%E5%80%BC0u8%EF%BC%8C1u8%EF%BC%8C2u8%EF%BC%8C3u8%EF%BC%8C4u8%E8%A1%A8%E7%A4%BA%E3%80%82%3C/p%3E%3Cp%3E%E5%88%9B%E5%BB%BA%E4%BA%86%E6%9E%9A%E4%B8%BE%E7%B1%BB%E5%9E%8B%E5%90%8E%EF%BC%8C%E5%B0%B1%E5%8F%AF%E4%BB%A5%E5%88%9B%E5%BB%BA%E8%AF%A5%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%AF%B9%E8%B1%A1%E3%80%82%E4%BE%8B%E5%A6%82%E8%BF%99%E9%87%8C%E7%9A%84%20contin%20%E5%8F%98%E9%87%8F%EF%BC%8C%E7%B1%BB%E5%9E%8B%E6%98%AF%20Continent%E3%80%82%3C/p%3E%3Cp%3E%E6%9E%9A%E4%B8%BE%E5%AF%B9%E8%B1%A1%E4%BB%85%E6%9C%89%E4%B8%80%E4%B8%AA%E5%80%BC%EF%BC%8C%E8%BF%99%E4%B8%AA%E5%80%BC%E7%A7%B0%E4%B8%BA%E2%80%9C%E5%8F%98%E9%87%8F(variants)%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E6%B3%A8%E6%84%8F%EF%BC%8C%E5%8F%98%E9%87%8F%E7%9A%84%E5%80%BC%E5%BF%85%E9%A1%BB%E7%94%B1%E5%AE%83%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%8C%BA%E5%88%86%EF%BC%8C%E4%BE%8B%E5%A6%82%20Continent::Asia%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eenum%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ET%3C/span%3E%20&amp;#123;A,%20B,%20C,%20D&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3En%3C/span%3E:%20%3Cspan%20class=%22type%22%3Ei32%3C/span%3E%20=%20T::D;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ee%3C/span%3E:%20T%20=%20%3Cspan%20class=%22number%22%3E1%3C/span%3E;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%AC%AC%E4%BA%8C%E8%A1%8C%E4%BC%9A%E5%8F%91%E7%94%9F%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%EF%BC%8C%E7%AC%AC%E4%BA%8C%E4%B8%89%E8%A1%8C%E9%83%BD%E6%8F%90%E7%A4%BAmismatched%20types%E9%94%99%E8%AF%AF%E3%80%82%E5%B0%BD%E7%AE%A1%E6%9C%9F%E6%9C%9B%E6%98%AF%3Ccode%3Ei32%3C/code%3E%E7%9A%84%E6%9E%9A%E4%B8%BE%E5%80%BC%3Ccode%3Emain::T%3C/code%3E%EF%BC%8C%E4%BD%86%E6%9E%9A%E4%B8%BE%E7%B1%BB%E5%9E%8B%E5%B9%B6%E4%B8%8D%E8%83%BD%E9%9A%90%E5%BC%8F%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B%EF%BC%8C%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B%E4%B9%9F%E4%B8%8D%E8%83%BD%E9%9A%90%E5%BC%8F%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%9E%9A%E4%B8%BE%E7%B1%BB%E5%9E%8B%E3%80%82%3C/p%3E%3Ch2%20id=%22The-match-Construct%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#The-match-Construct%22%3E%C2%B6%3C/a%3EThe%20match%20Construct%3C/h2%3E%3Cp%3ERust%E4%B8%AD%EF%BC%8Cmatch%E8%AF%AD%E5%8F%A5%E6%98%AF%E5%9F%BA%E6%9C%AC%E5%B7%A5%E5%85%B7%E3%80%82%E7%B1%BB%E4%BC%BC%E4%BA%8EC%E8%AF%AD%E8%A8%80%E7%9A%84switch%EF%BC%8C%E4%BD%86%E5%9C%A8%E5%BE%88%E5%A4%9A%E5%B1%82%E9%9D%A2%E4%B8%8D%E5%90%8C%E3%80%82%3C/p%3E%3Cp%3E%E9%A6%96%E5%85%88%EF%BC%8Cmatch%E5%85%B3%E9%94%AE%E5%AD%97%E4%B8%8D%E9%9C%80%E8%A6%81%E9%97%AD%E5%90%88%E6%8B%AC%E5%8F%B7%E3%80%82%3C/p%3E%3Cp%3E%E5%85%B6%E6%AC%A1%EF%BC%8C%E5%A4%9A%E4%B8%AAcase%EF%BC%8C%E7%A7%B0%E4%B8%BA%E2%80%9C%E6%89%8B%E8%87%82(arms)%E2%80%9D%EF%BC%8C%E7%94%A8%E4%BD%9C%E6%A8%A1%E5%BC%8F%EF%BC%8C%E8%B7%9F%E9%9A%8F%E7%AC%A6%E5%8F%B7%E2%80%9C=&amp;gt;%E2%80%9D%EF%BC%8C%E6%8E%A5%E7%9D%80%E8%B7%9F%E7%9D%80%E4%B8%80%E4%B8%AA%E8%A1%A8%E8%BE%BE%E5%BC%8F%E3%80%82%E8%BF%99%E4%BA%9B%E6%89%8B%E8%87%82%E7%94%A8%E9%80%97%E5%8F%B7%E5%88%86%E9%9A%94%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8D%E7%AE%A1%E6%98%AF%E5%A3%B0%E6%98%8E%E6%9E%9A%E4%B8%BE%E7%B1%BB%E5%9E%8B%EF%BC%8C%E8%BF%98%E6%98%AF%E5%9C%A8%E2%80%9C%3Ccode%3Ematch%3C/code%3E%E2%80%9D%E8%AF%AD%E5%8F%A5%EF%BC%8C%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E6%9D%A1%E7%9B%AE%E7%9A%84%E9%80%97%E5%8F%B7%E5%8F%AF%E5%86%99%E5%8F%AF%E4%B8%8D%E5%86%99%E3%80%82%E9%80%9A%E5%B8%B8%E7%9A%84%E5%81%9A%E6%B3%95%E6%98%AF%EF%BC%8C%E5%A6%82%E6%9E%9C%E6%98%AF%E6%AF%8F%E8%A1%8C%E4%B8%80%E4%B8%AAitem%EF%BC%8C%E5%B0%B1%E5%B8%A6%E4%B8%8A%E9%80%97%E5%8F%B7%EF%BC%9B%E5%A6%82%E6%9E%9C%E6%98%AF%E6%95%B4%E8%A1%8C%E7%BD%97%E5%88%97%EF%BC%8C%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E9%80%97%E5%8F%B7%E4%BC%9A%E7%9C%81%E7%95%A5%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eenum%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ECardinalPoint%3C/span%3E%20&amp;#123;%20North,%20South,%20West,%20East%20&amp;#125;;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3Ematch%E8%AF%AD%E5%8F%A5%E7%9A%84%E8%A1%8C%E4%B8%BA%E6%98%AF%E3%80%82%3C/p%3E%3Cp%3E%E9%A6%96%E5%85%88%EF%BC%8C%3Ccode%3Ematch%3C/code%3E%E5%90%8E%E7%9A%84%E8%AF%AD%E5%8F%A5%E5%85%88%E8%A2%AB%E6%89%A7%E8%A1%8C%EF%BC%8C%E5%9B%A0%E6%AD%A4%E8%8E%B7%E5%8F%96%E4%B8%80%E4%B8%AA%E5%80%BC%EF%BC%8C%E4%BE%8B%E5%A6%82%E8%BF%99%E9%87%8C%E6%98%AFContinent::Asia%E3%80%82%3C/p%3E%3Cp%3E%E7%84%B6%E5%90%8E%EF%BC%8C%E8%BF%99%E4%B8%AA%E5%80%BC%E4%BC%9A%E8%A2%AB%E7%94%A8%E4%BA%8E%E6%AF%94%E8%BE%83%E4%BA%94%E4%B8%AApattern%E7%9A%84%E6%AF%8F%E4%B8%AA%E6%89%8B%E8%87%82(arm)%EF%BC%8C%E6%8C%89%E7%85%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F%E8%BF%9B%E8%A1%8C%E6%AF%94%E8%BE%83%E3%80%82%E5%A6%82%E6%9E%9C%E5%8C%B9%E9%85%8D%EF%BC%8C%E5%8F%B3%E8%BE%B9%E7%9A%84%E8%AF%AD%E5%8F%A5%E8%A2%AB%E6%89%A7%E8%A1%8C%EF%BC%8C%E8%AF%AD%E5%8F%A5%E7%BB%93%E6%9D%9F%E3%80%82%3C/p%3E%3Cp%3E%E6%B3%A8%E6%84%8F%E6%AF%8F%E4%B8%AA%E6%89%8B%E8%87%82%E5%8F%B3%E8%BE%B9%E7%9A%84%E5%BF%85%E9%A1%BB%E6%98%AF%E4%B8%80%E4%B8%AA%E5%8D%95%E4%B8%80%E8%A1%A8%E8%BE%BE%E5%BC%8F%E3%80%82%3C/p%3E%3Cp%3E%E4%BA%8B%E5%AE%9E%E4%B8%8A%EF%BC%8C%E5%8F%AA%E8%A6%81%E5%B8%A6%E4%B8%8A%E5%88%86%E5%8F%B7%EF%BC%8C%E4%BB%BB%E4%BD%95%E8%A1%A8%E8%BE%BE%E5%BC%8F%E9%83%BD%E8%83%BD%E6%88%90%E4%B8%BA%E6%9C%89%E6%95%88%E7%9A%84%E8%AF%AD%E5%8F%A5%E3%80%82%E4%BE%8B%E5%A6%82%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E7.2%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22number%22%3E12%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22literal%22%3Etrue%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22number%22%3E4%3C/span%3E%20&amp;gt;%20%3Cspan%20class=%22number%22%3E7%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22number%22%3E5.7%3C/span%3E%20+%20%3Cspan%20class=%22number%22%3E5%3C/span%3E.%20*a;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%B8%8A%E8%BF%B0%E8%BF%99%E4%BA%9B%E4%BB%A3%E7%A0%81%E6%98%AF%E6%9C%89%E6%95%88%E7%9A%84%EF%BC%8C%E5%8F%AA%E6%98%AF%E4%BB%80%E4%B9%88%E4%B9%9F%E6%B2%A1%E5%81%9A%E3%80%82%3C/p%3E%3Cp%3E%E4%BD%86%E6%98%AF%EF%BC%8C%E6%9C%89%E4%BA%9B%E8%AF%AD%E5%8F%A5%E5%B9%B6%E4%B8%8D%E6%98%AF%E6%9C%89%E6%95%88%E7%9A%84%E8%A1%A8%E8%BE%BE%E5%BC%8F%E3%80%82%E4%BE%8B%E5%A6%82%EF%BC%8C%E2%80%9Clet%20a%20=%203;%20%E2%80%9D%E3%80%81%E2%80%9Cfn%20empty()%20{}%E2%80%9D%EF%BC%8C%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ematch%3C/span%3E%20contin%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EContinent::Europe%20=&amp;gt;%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E7%3C/span%3E;,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EContinent::Asia%20=&amp;gt;%20%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E7%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EContinent::Africa%20=&amp;gt;%20f%20%3Cspan%20class=%22title%20function_%20invoke__%22%3Eaaa%3C/span%3E()%20&amp;#123;&amp;#125;,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EContinent::America%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Am&amp;quot;%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EContinent::Oceania%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;O&amp;quot;%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%89%8D%E9%9D%A2%E4%B8%89%E4%B8%AAcase%E4%BC%9A%E6%8A%A5%E9%94%99%EF%BC%8C%E5%9B%A0%E4%B8%BA%20%E2%80%9C=&amp;gt;%E2%80%9D%E5%90%8E%E9%9D%A2%E8%B7%9F%E7%9A%84%E4%B8%8D%E6%98%AF%E6%9C%89%E6%95%88%E7%9A%84%E8%A1%A8%E8%BE%BE%E5%BC%8F%E3%80%82%3C/p%3E%3Cp%3E%E8%8B%A5%E6%9E%9C%E6%88%91%E4%BB%AC%E8%A6%81%E6%89%A7%E8%A1%8C%E5%A4%9A%E4%B8%AA%E8%A1%A8%E8%BE%BE%E5%BC%8F%EF%BC%8C%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%E8%AF%AD%E5%8F%A5%E5%9D%97%E6%96%B9%E5%BC%8F%E5%AE%9E%E7%8E%B0%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E19%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E20%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eenum%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EContinent%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EEurope,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EAsia,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EAfrica,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EAmerica,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EOceania,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Emut%20%3C/span%3E%3Cspan%20class=%22variable%22%3Econtin%3C/span%3E%20=%20Continent::Asia;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ematch%3C/span%3E%20contin%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EContinent::Europe%20=&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Econtin%20=%20Continent::Asia;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;E&amp;quot;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EContinent::Asia%20=&amp;gt;%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Ea%3C/span%3E%20=%20%3Cspan%20class=%22number%22%3E7%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EContinent::Africa%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Af&amp;quot;%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EContinent::America%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Am&amp;quot;%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EContinent::Oceania%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;O&amp;quot;%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Ch2%20id=%22Relational-Operators-and-Enums%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Relational-Operators-and-Enums%22%3E%C2%B6%3C/a%3ERelational%20Operators%20and%20Enums%3C/h2%3E%3Cp%3E%E6%9E%9A%E4%B8%BE%E4%B8%8D%E8%83%BD%E7%94%A8%E2%80%9C==%E2%80%9D%E6%93%8D%E4%BD%9C%E7%AC%A6%E4%BD%9C%E6%AF%94%E8%BE%83%E3%80%82%E5%AE%9E%E9%99%85%E4%B8%8A%EF%BC%8C%E4%B8%8B%E9%9D%A2%E7%A8%8B%E5%BA%8F%E6%98%AF%E4%B8%8D%E5%90%88%E6%B3%95%E7%9A%84%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eenum%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ECardinalPoint%3C/span%3E%20&amp;#123;%20North,%20South,%20West,%20East%20&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Edirection%3C/span%3E%20=%20CardinalPoint::South;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20direction%20==%20CardinalPoint::North%20&amp;#123;%20&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BC%96%E8%AF%91%E5%99%A8%E6%8A%A5%E2%80%9Cbinary%20operation%20%3Ccode%3E==%3C/code%3E%20cannot%20be%20applied%20to%20type%20%3Ccode%3Emain::CardinalPoint%3C/code%3E%E2%80%9D%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E4%BD%A0%E5%BA%94%E8%AF%A5%E7%94%A8%20match%20%E8%AF%AD%E5%8F%A5%E3%80%82%3C/p%3E%3Cp%3E%E4%B8%8D%E4%BB%85%E6%98%AF%E2%80%9C==%E2%80%9D%E6%93%8D%E4%BD%9C%E7%AC%A6%EF%BC%8C%E5%85%B6%E5%AE%83%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%93%8D%E4%BD%9C%E7%AC%A6%E9%83%BD%E6%98%AF%E9%94%99%E8%AF%AF%E7%9A%84%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eenum%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ECardinalPoint%3C/span%3E%20&amp;#123;%20North,%20South,%20West,%20East%20&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20CardinalPoint::South%20&amp;lt;%20CardinalPoint::North%20&amp;#123;%20&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Ch2%20id=%22Handling-All-the-Cases%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Handling-All-the-Cases%22%3E%C2%B6%3C/a%3EHandling%20All%20the%20Cases%3C/h2%3E%3Cp%3E%E4%B8%8B%E9%9D%A2%E4%BB%A3%E7%A0%81%E7%BC%96%E8%AF%91%E5%87%BA%E9%94%99%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eenum%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ECardinalPoint%3C/span%3E%20&amp;#123;%20North,%20South,%20West,%20East%20&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Edirection%3C/span%3E%20=%20CardinalPoint::South;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ematch%3C/span%3E%20direction%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ECardinalPoint::North%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;NORTH&amp;quot;%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ECardinalPoint::South%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;SOUTH&amp;quot;%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%BC%9A%E8%8E%B7%E5%BE%97%E4%B8%80%E4%B8%AA%E9%94%99%E8%AF%AF%E2%80%9Cnon-exhaustive%20patterns:%20%3Ccode%3EWest%3C/code%3E%20and%20%3Ccode%3EEast%3C/code%3E%20not%20covered%E2%80%9D%E3%80%82%E7%BC%96%E8%AF%91%E5%99%A8%E4%BC%9A%E6%8A%B1%E6%80%A8%E8%AF%B4%EF%BC%8C%E5%9B%9B%E4%B8%AA%E6%9E%9A%E4%B8%BE%E5%80%BC%EF%BC%8C%E4%BB%85%E4%B8%A4%E4%B8%AA%E8%A2%AB%E8%80%83%E8%99%91%E4%BA%86%EF%BC%8C%E5%8F%A6%E5%A4%96%E4%B8%A4%E4%B8%AAWest%E5%92%8CEast%E6%B2%A1%E6%9C%89%E8%80%83%E8%99%91%E8%BF%9B%E5%8E%BB%E3%80%82%E8%BF%99%E6%98%AF%E7%94%B1%E4%BA%8ERust%E8%A6%81%E6%B1%82%E6%98%BE%E5%BC%8F%E5%A4%84%E7%90%86%E6%89%80%E6%9C%89%E7%9A%84%E6%83%85%E5%86%B5%E3%80%82%3C/p%3E%3Cp%3E%E8%A6%81%E8%A7%A3%E5%86%B3%E8%BF%99%E4%B8%AA%E9%97%AE%E9%A2%98%E6%9C%89%E4%B8%A4%E7%A7%8D%E5%81%9A%E6%B3%95%EF%BC%8C%E4%B8%80%E6%98%AF%E5%8C%B9%E9%85%8D%E6%89%80%E6%9C%89%E7%9A%84%E6%83%85%E5%86%B5%EF%BC%9B%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eenum%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ECardinalPoint%3C/span%3E%20&amp;#123;%20North,%20South,%20West,%20East%20&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Edirection%3C/span%3E%20=%20CardinalPoint::South;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ematch%3C/span%3E%20direction%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ECardinalPoint::North%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;NORTH&amp;quot;%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ECardinalPoint::South%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;SOUTH&amp;quot;%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ECardinalPoint::East%20=&amp;gt;%20&amp;#123;&amp;#125;,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ECardinalPoint::West%20=&amp;gt;%20&amp;#123;&amp;#125;,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E4%BA%8C%E6%98%AF%E4%BD%BF%E7%94%A8%E4%B8%8B%E5%88%92%E7%BA%BF%EF%BC%8C%E5%81%9A%E9%BB%98%E8%AE%A4%E6%83%85%E5%86%B5%E5%A4%84%E7%90%86%EF%BC%9B%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eenum%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ECardinalPoint%3C/span%3E%20&amp;#123;%20North,%20South,%20West,%20East%20&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Edirection%3C/span%3E%20=%20CardinalPoint::South;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ematch%3C/span%3E%20direction%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ECardinalPoint::North%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;NORTH&amp;quot;%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ECardinalPoint::South%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;SOUTH&amp;quot;%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_%20=&amp;gt;%20&amp;#123;&amp;#125;,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E6%B3%A8%E6%84%8F%EF%BC%8C%E4%B8%8B%E5%88%92%E7%BA%BF%E8%AF%AD%E5%8F%A5%E4%BC%9A%E5%8C%B9%E9%85%8D%E4%BB%BB%E4%BD%95%E5%80%BC%EF%BC%8C%E6%89%80%E4%BB%A5%E8%A6%81%E5%B0%86%E5%AE%83%E6%94%BE%E5%9C%A8%E6%9C%80%E5%90%8E%E3%80%82%3C/p%3E%3Ch2%20id=%22Using-match-with-Numbers%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Using-match-with-Numbers%22%3E%C2%B6%3C/a%3EUsing%20match%20with%20Numbers%3C/h2%3E%3Cp%3Ematch%E7%BB%93%E6%9E%84%EF%BC%8C%E9%99%A4%E4%BA%86%E5%8F%AF%E4%BB%A5%E7%94%A8%E4%BA%8E%E6%9E%9A%E4%B8%BE%EF%BC%8C%E4%B9%9F%E5%8F%AF%E4%BB%A5%E7%94%A8%E4%BA%8E%E5%85%B6%E4%BB%96%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ematch%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;quot;value&amp;quot;%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22string%22%3E&amp;quot;val&amp;quot;%3C/span%3E%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;value%20&amp;quot;%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;other%20&amp;quot;%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ematch%3C/span%3E%20%3Cspan%20class=%22number%22%3E3%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22number%22%3E3%3C/span%3E%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;three%20&amp;quot;%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22number%22%3E4%3C/span%3E%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;four%20&amp;quot;%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22number%22%3E5%3C/span%3E%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;five%20&amp;quot;%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;other%20&amp;quot;%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ematch%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;#x27;.&amp;#x27;%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22string%22%3E&amp;#x27;:&amp;#x27;%3C/span%3E%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;colon%20&amp;quot;%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22string%22%3E&amp;#x27;.&amp;#x27;%3C/span%3E%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;point%20&amp;quot;%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;other%20&amp;quot;%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E8%BE%93%E5%87%BA%EF%BC%9A%E2%80%9Cother%20three%20point%E2%80%9D%E3%80%82%3C/p%3E%3Ch2%20id=%22Enumerations-with-Data%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Enumerations-with-Data%22%3E%C2%B6%3C/a%3EEnumerations%20with%20Data%3C/h2%3E%3Cp%3ERust%E7%9A%84%E6%9E%9A%E4%B8%BE%E7%B1%BB%E5%9E%8B%EF%BC%8C%E5%B9%B6%E6%B2%A1%E6%9C%89%E5%89%8D%E9%9D%A2%E7%9C%8B%E5%88%B0%E7%9A%84%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eenum%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EResult%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3ESuccess%3C/span%3E(%3Cspan%20class=%22type%22%3Ef64%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3EFailure%3C/span%3E(%3Cspan%20class=%22type%22%3Eu16%3C/span%3E,%20%3Cspan%20class=%22type%22%3Echar%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EUncertainty,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/%20let%20outcome%20=%20Result::Success(23.67);%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eoutcome%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3EResult%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3EFailure%3C/span%3E(%3Cspan%20class=%22number%22%3E1200%3C/span%3E,%20%3Cspan%20class=%22string%22%3E&amp;#x27;X&amp;#x27;%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ematch%3C/span%3E%20outcome%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22type%22%3EResult%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3ESuccess%3C/span%3E(value)%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Result:%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20value),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22type%22%3EResult%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3EFailure%3C/span%3E(error_code,%20module)%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Error%20n.%20&amp;#123;&amp;#125;%20in%20module%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20error_code,%20module),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22type%22%3EResult%3C/span%3E::Uncertainty%20=&amp;gt;%20&amp;#123;&amp;#125;,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E5%B0%86%E8%BE%93%E5%87%BA%EF%BC%9A%E2%80%9CError%20n.%201200%20in%20module%20X%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E8%8B%A5%E6%9B%BF%E6%8D%A2%E4%B8%BA%E6%B3%A8%E8%A7%A3%E8%A1%8C%EF%BC%8C%E7%BB%93%E6%9E%9C%E5%B0%86%E8%BE%93%E5%87%BA%E4%B8%BA%E2%80%9CResult:%2023.67%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E5%AF%B9%E6%AF%94%E4%BA%8EC%E8%AF%AD%E8%A8%80%EF%BC%8CRust%E7%9A%84%E6%9E%9A%E4%B8%BE%E7%B1%BB%E5%9E%8B%E5%8C%85%E5%90%AB%E6%9E%9A%E4%B8%BE%E5%92%8C%E7%BB%84%E5%90%88%E7%9A%84%E7%89%B9%E6%80%A7%E3%80%82%3C/p%3E%3Cfigure%20class=%22highlight%20c%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E15%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E16%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E17%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E18%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E19%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E20%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E21%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E22%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E23%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E24%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E25%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E26%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E27%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E28%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E29%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E30%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E31%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E32%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E33%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E34%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E35%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E36%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E37%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E38%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E39%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E40%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22meta%22%3E#%3Cspan%20class=%22keyword%22%3Einclude%3C/span%3E%20%3Cspan%20class=%22string%22%3E&amp;lt;stdio.h&amp;gt;%3C/span%3E%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22type%22%3Eint%3C/span%3E%20%3Cspan%20class=%22title%20function_%22%3Emain%3C/span%3E%3Cspan%20class=%22params%22%3E()%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22class%22%3E%3Cspan%20class=%22keyword%22%3Eenum%3C/span%3E%20%3Cspan%20class=%22title%22%3EeResult%3C/span%3E%20&amp;#123;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20Success,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20Failure,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20Uncertainty%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%3Cspan%20class=%22class%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20%3Cspan%20class=%22title%22%3EsResult%3C/span%3E%20&amp;#123;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22class%22%3E%3Cspan%20class=%22keyword%22%3Eenum%3C/span%3E%20%3Cspan%20class=%22title%22%3EeResult%3C/span%3E%20%3Cspan%20class=%22title%22%3Er%3C/span%3E;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%3Cspan%20class=%22class%22%3E%3Cspan%20class=%22keyword%22%3Eunion%3C/span%3E%20&amp;#123;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22type%22%3Edouble%3C/span%3E%20value;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22class%22%3E%3Cspan%20class=%22keyword%22%3Estruct%3C/span%3E%20&amp;#123;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22type%22%3Eunsigned%3C/span%3E%20%3Cspan%20class=%22type%22%3Eshort%3C/span%3E%20error_code;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class=%22type%22%3Echar%3C/span%3E%20module;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20%20%20%20%20&amp;#125;%20s;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20%20%20%20%20&amp;#125;%20u;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20%20&amp;#125;%20outcome;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E/*%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3Eoutcome.r%20=%20Success;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3Eoutcome.u.value%20=%2023.67;%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22comment%22%3E*/%3C/span%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eoutcome.r%20=%20Failure;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eoutcome.u.s.error_code%20=%20%3Cspan%20class=%22number%22%3E1200%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3Eoutcome.u.s.module%20=%20%3Cspan%20class=%22string%22%3E&amp;#x27;X&amp;#x27;%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eswitch%3C/span%3E%20(outcome.r)%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ecase%3C/span%3E%20Success:%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintf%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Result:%20%g&amp;quot;%3C/span%3E,%20outcome.u.value);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ebreak%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ecase%3C/span%3E%20Failure:%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintf%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Error%20n.%20%d%20in%20module%20%c&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20outcome.u.s.error_code,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%20%20%20outcome.u.s.module);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ebreak%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ecase%3C/span%3E%20Uncertainty:%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ebreak%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ereturn%3C/span%3E%20%3Cspan%20class=%22number%22%3E0%3C/span%3E;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E5%9C%A8%E2%80%9Cmatch%E2%80%9D%E8%AF%AD%E5%8F%A5%E4%B8%AD%EF%BC%8C%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D%E7%9A%84%E5%8F%82%E6%95%B0%EF%BC%8C%E4%BE%8B%E5%A6%82Result::Success(value)%E4%B8%AD%E7%9A%84value%EF%BC%8C%E4%BC%9A%E8%A2%AB%E7%9C%8B%E5%81%9A%E6%98%AF%E8%AF%A5scope%E4%B8%8B%E7%9A%84%E5%8F%98%E9%87%8F%EF%BC%8C%E4%BB%A5%E5%8F%8A%E8%AF%A5%E5%8F%98%E9%87%8F%E7%9A%84%E7%B1%BB%E5%9E%8B%EF%BC%8C%E7%94%B1%E8%BF%99%E4%B8%AA%E6%89%8B%E8%87%82(arm)%E5%A3%B0%E6%98%8E%E3%80%82%3C/p%3E%3Cp%3E%E5%BD%93%E6%89%8B%E8%87%82(arm)%E6%BB%A1%E8%B6%B3case%EF%BC%8C%E8%BF%99%E4%B8%AA%E5%8F%98%E9%87%8F%E7%9A%84%E5%80%BC%E5%B0%B1%E8%A2%AB%E5%88%9D%E5%A7%8B%E5%8C%96%E3%80%82%E4%BE%8B%E5%A6%82value%E7%9A%84%E5%80%BC%E6%98%AF23.67%E3%80%82%E5%B9%B6%E4%B8%94%E7%94%A8%E4%BA%8E%E6%89%8B%E8%87%82%E5%8F%B3%E8%BE%B9%E7%9A%84%E4%BD%9C%E7%94%A8%E8%8C%83%E5%9B%B4%E3%80%82%3C/p%3E%3Cp%3E%E5%A6%82%E6%9E%9C%E4%B8%8D%E9%9C%80%E8%A6%81%E8%BF%99%E4%B8%AA%E5%8F%98%E9%87%8F%EF%BC%8C%E4%B8%BA%E9%81%BF%E5%85%8D%E7%BC%96%E8%AF%91%E5%91%8A%E8%AD%A6%EF%BC%8C%E5%8F%AF%E4%BB%A5%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E9%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E10%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E11%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E12%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E13%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E14%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eenum%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3EResult%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3ESuccess%3C/span%3E(%3Cspan%20class=%22type%22%3Ef64%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22title%20function_%20invoke__%22%3EFailure%3C/span%3E(%3Cspan%20class=%22type%22%3Eu16%3C/span%3E,%20%3Cspan%20class=%22type%22%3Echar%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3EUncertainty,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Eoutcome%3C/span%3E%20=%20%3Cspan%20class=%22type%22%3EResult%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3ESuccess%3C/span%3E(%3Cspan%20class=%22number%22%3E23.67%3C/span%3E);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Ematch%3C/span%3E%20outcome%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22type%22%3EResult%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3ESuccess%3C/span%3E(_)%20=&amp;gt;%20%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;OK&amp;quot;%3C/span%3E),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22type%22%3EResult%3C/span%3E::%3Cspan%20class=%22title%20function_%20invoke__%22%3EFailure%3C/span%3E(error_code,%20module)%20=&amp;gt;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;Error%20n.%20&amp;#123;&amp;#125;%20in%20module%20&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20error_code,%20module),%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22type%22%3EResult%3C/span%3E::Uncertainty%20=&amp;gt;%20&amp;#123;&amp;#125;,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Ch2%20id=%22%E2%80%9Cmatch%E2%80%9D-Expressions%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#%E2%80%9Cmatch%E2%80%9D-Expressions%22%3E%C2%B6%3C/a%3E%E2%80%9Cmatch%E2%80%9D%20Expressions%3C/h2%3E%3Cp%3E%E7%B1%BB%E4%BC%BC%E4%BA%8E%E2%80%9Cif%E2%80%9D%E8%A1%A8%E8%BE%BE%E5%BC%8F%EF%BC%8C%E2%80%9Cmatch%E2%80%9D%E4%B9%9F%E6%9C%89%E8%A1%A8%E8%BE%BE%E5%BC%8F%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Eenum%3C/span%3E%20%3Cspan%20class=%22title%20class_%22%3ECardinalPoint%3C/span%3E%20&amp;#123;%20North,%20South,%20West,%20East%20&amp;#125;;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Elet%3C/span%3E%20%3Cspan%20class=%22variable%22%3Edirection%3C/span%3E%20=%20CardinalPoint::South;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprint!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;&amp;quot;%3C/span%3E,%20%3Cspan%20class=%22keyword%22%3Ematch%3C/span%3E%20direction%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ECardinalPoint::North%20=&amp;gt;%20%3Cspan%20class=%22string%22%3E&amp;#x27;N&amp;#x27;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3ECardinalPoint::South%20=&amp;gt;%20%3Cspan%20class=%22string%22%3E&amp;#x27;S&amp;#x27;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_%20=&amp;gt;%20%3Cspan%20class=%22string%22%3E&amp;#x27;*&amp;#x27;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;);%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E%3Cp%3E%E7%BB%93%E6%9E%9C%E4%BC%9A%E8%BE%93%E5%87%BA%EF%BC%9A%E2%80%9CS.%E2%80%9D%E3%80%82%3C/p%3E%3Cp%3E%E8%BF%99%E9%87%8C%E6%9C%89%E4%B8%AA%E8%A6%81%E6%B1%82%EF%BC%8C%E5%B0%B1%E6%98%AF%E6%89%8B%E8%87%82%E5%8F%B3%E8%BE%B9%E7%9A%84%E5%80%BC%EF%BC%8C%E5%BF%85%E9%A1%BB%E7%B1%BB%E5%9E%8B%E6%98%AF%E4%B8%80%E6%A0%B7%E7%9A%84%E3%80%82%E5%A6%82%E6%9E%9C%E5%B0%86%E7%AC%AC%E4%B8%89%E4%B8%AAcase%E6%94%B9%E4%B8%BA%E2%80%9C_%20=&amp;gt;%20{}%E2%80%9D%E3%80%82%E4%BC%9A%E5%8F%91%E7%94%9F%E2%80%9Cmatch%20arms%20have%20incompatible%20types%E2%80%9D%E3%80%82%E5%9B%A0%E4%B8%BA%E6%98%AF%E4%B8%80%E4%B8%AAmatch%E8%A1%A8%E8%BE%BE%E5%BC%8F%EF%BC%8C%E6%89%80%E4%BB%A5%E5%AE%83%E5%8F%AA%E8%83%BD%E6%9C%89%E6%8C%87%E5%AE%9A%E7%9A%84%E4%B8%80%E7%A7%8D%E7%B1%BB%E5%9E%8B%E3%80%82%3C/p%3E%3Ch2%20id=%22Use-of-Guards-in-match-Constructs%22%3E%3Ca%20class=%22header-anchor%22%20href=%22#Use-of-Guards-in-match-Constructs%22%3E%C2%B6%3C/a%3EUse%20of%20Guards%20in%20match%20Constructs%3C/h2%3E%3Cp%3E%E5%81%87%E8%AE%BE%E6%88%91%E4%BB%AC%E8%A6%81%E5%8C%BA%E5%88%86%E6%95%B4%E6%95%B0%E7%9A%84%E7%B1%BB%E5%88%AB%EF%BC%9A%E8%B4%9F%E6%95%B0%E3%80%810%E3%80%811%E3%80%81%E6%AD%A3%E6%95%B0%EF%BC%9A%3C/p%3E%3Cfigure%20class=%22highlight%20rust%22%3E%3Ctable%3E%3Ctr%3E%3Ctd%20class=%22gutter%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E1%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E2%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E3%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E4%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E5%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E6%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E7%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E8%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3Ctd%20class=%22code%22%3E%3Cpre%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22keyword%22%3Efor%3C/span%3E%20%3Cspan%20class=%22variable%22%3En%3C/span%3E%20%3Cspan%20class=%22keyword%22%3Ein%3C/span%3E%20-%3Cspan%20class=%22number%22%3E2%3C/span%3E..%3Cspan%20class=%22number%22%3E5%3C/span%3E%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22built_in%22%3Eprintln!%3C/span%3E(%3Cspan%20class=%22string%22%3E&amp;quot;&amp;#123;&amp;#125;%20is%20&amp;#123;&amp;#125;.&amp;quot;%3C/span%3E,%20n,%20%3Cspan%20class=%22keyword%22%3Ematch%3C/span%3E%20n%20&amp;#123;%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22number%22%3E0%3C/span%3E%20=&amp;gt;%20%3Cspan%20class=%22string%22%3E&amp;quot;zero&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E%3Cspan%20class=%22number%22%3E1%3C/span%3E%20=&amp;gt;%20%3Cspan%20class=%22string%22%3E&amp;quot;one&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_%20%3Cspan%20class=%22keyword%22%3Eif%3C/span%3E%20n%20&amp;lt;%20%3Cspan%20class=%22number%22%3E0%3C/span%3E%20=&amp;gt;%20%3Cspan%20class=%22string%22%3E&amp;quot;negative&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E_%20=&amp;gt;%20%3Cspan%20class=%22string%22%3E&amp;quot;plural&amp;quot;%3C/span%3E,%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;);%3C/span%3E%3Cbr%3E%3Cspan%20class=%22line%22%3E&amp;#125;%3C/span%3E%3Cbr%3E%3C/pre%3E%3C/td%3E%3C/tr%3E%3C/table%3E%3C/figure%3E" type="image"/>
    
    
    <category term="learning" scheme="https://galudisu.info/categories/learning/"/>
    
    
    <category term="rust" scheme="https://galudisu.info/tags/rust/"/>
    
  </entry>
  
</feed>
