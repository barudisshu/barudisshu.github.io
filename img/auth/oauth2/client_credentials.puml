@startuml

participant "ResourceOwner\n(User)"

box "SDK / Server Provider Manager System" #LightGray
participant "Client\n(Application)"
end box

box "Internal Service(Decouple)" #LightBlue
    participant "Server\n(AuthorizationServer)"
    participant "Resource\n(AuthorizationResource)"
end box


activate "Client\n(Application)" #FFBDBD
"ResourceOwner\n(User)" -> "Client\n(Application)": Ask for Request
rnote over "Client\n(Application)"
    <color #9621a2>client_id</color>
    <color #9621a2>client_secret</color>
    [scope]

    note that aboves only store in Client peer
endrnote

"Client\n(Application)" -> "Server\n(AuthorizationServer)": **AccessToken** Request \n[carry with client_id, client_secret, scope]
deactivate "Client\n(Application)"

activate "Server\n(AuthorizationServer)" #FFBBBB
rnote over "Server\n(AuthorizationServer)"
    Needs
        //**client_id**//
        //**client_secret**//
        //**grant_type = <color #red>client_credentials</color>**//
        [//**scope**//]
endrnote

"Server\n(AuthorizationServer)" --> "Client\n(Application)": **AccessToken** Response\n[+ Option but Not Recommended Refresh Token]
deactivate "Server\n(AuthorizationServer)"

loop

"Client\n(Application)" -> "Resource\n(AuthorizationResource)": Call API with Access Token
activate "Resource\n(AuthorizationResource)" #DarkSalmon
rnote over "Resource\n(AuthorizationResource)"
    Verify
        **is legality ?**
        **is expired ?**
endrnote
"Client\n(Application)" <-- "Resource\n(AuthorizationResource)": Response With Data[<color #A209E1>**Unauthorized**</color>|<color #darkGreen>**Real wanted**</color>]
deactivate "Resource\n(AuthorizationResource)"

end

...subsequent as you wish ...

@enduml

